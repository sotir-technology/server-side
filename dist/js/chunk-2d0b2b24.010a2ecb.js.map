{"version":3,"sources":["webpack:///./src/views/components/extra-components/clipboard/Clipboard.vue?1795","webpack:///./src/views/components/extra-components/clipboard/ClipboardDirective.vue?7754","webpack:///src/views/components/extra-components/clipboard/ClipboardDirective.vue","webpack:///./src/views/components/extra-components/clipboard/ClipboardDirective.vue?bb70","webpack:///./src/views/components/extra-components/clipboard/ClipboardDirective.vue","webpack:///./src/views/components/extra-components/clipboard/ClipboardWithoutDirective.vue?98fc","webpack:///src/views/components/extra-components/clipboard/ClipboardWithoutDirective.vue","webpack:///./src/views/components/extra-components/clipboard/ClipboardWithoutDirective.vue?9507","webpack:///./src/views/components/extra-components/clipboard/ClipboardWithoutDirective.vue","webpack:///src/views/components/extra-components/clipboard/Clipboard.vue","webpack:///./src/views/components/extra-components/clipboard/Clipboard.vue?e03e","webpack:///./src/views/components/extra-components/clipboard/Clipboard.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","id","staticRenderFns","ClipboardDirectivevue_type_template_id_5c616974_render","title","subtitle","code-toggler","staticClass","model","value","callback","$$v","text","expression","directives","name","rawName","arg","_v","slot","ClipboardDirectivevue_type_template_id_5c616974_staticRenderFns","ClipboardDirectivevue_type_script_lang_js_","data","methods","onCopy","$vs","notify","color","iconPack","position","icon","onError","clipboard_ClipboardDirectivevue_type_script_lang_js_","component","Object","componentNormalizer","ClipboardDirective","ClipboardWithoutDirectivevue_type_template_id_9166cb82_render","text2","on","click","copyText","ClipboardWithoutDirectivevue_type_template_id_9166cb82_staticRenderFns","ClipboardWithoutDirectivevue_type_script_lang_js_","thisIns","$copyText","then","clipboard_ClipboardWithoutDirectivevue_type_script_lang_js_","ClipboardWithoutDirective_component","ClipboardWithoutDirective","Clipboardvue_type_script_lang_js_","components","clipboard_Clipboardvue_type_script_lang_js_","Clipboard_component","__webpack_exports__"],"mappings":"yHAAA,IAAAA,EAAA,WAA0B,IAAAC,EAAAC,KAAaC,EAAAF,EAAAG,eAA0BC,EAAAJ,EAAAK,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,OAAiBE,MAAA,CAAOC,GAAA,wBAA4B,CAAAH,EAAA,uBAAAA,EAAA,oCAC7II,EAAA,GCDIC,EAAM,WAAgB,IAAAT,EAAAC,KAAaC,EAAAF,EAAAG,eAA0BC,EAAAJ,EAAAK,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,WAAqBE,MAAA,CAAOI,MAAA,kBAAAC,SAAA,wCAAAC,eAAA,KAAgG,CAAAR,EAAA,YAAiBS,YAAA,mBAAAC,MAAA,CAAsCC,MAAAf,EAAA,KAAAgB,SAAA,SAAAC,GAA0CjB,EAAAkB,KAAAD,GAAaE,WAAA,UAAoBf,EAAA,aAAkBgB,WAAA,EAAaC,KAAA,YAAAC,QAAA,mBAAAP,MAAAf,EAAA,KAAAmB,WAAA,OAAAI,IAAA,QAA0F,CAAEF,KAAA,YAAAC,QAAA,sBAAAP,MAAAf,EAAA,OAAAmB,WAAA,SAAAI,IAAA,WAAoG,CAAEF,KAAA,YAAAC,QAAA,oBAAAP,MAAAf,EAAA,QAAAmB,WAAA,UAAAI,IAAA,WAAoG,CAAAvB,EAAAwB,GAAA,yBAAApB,EAAA,YAAiDqB,KAAA,iBAAqB,CAAAzB,EAAAwB,GAAA,6hCAA8gC,IAC5uDE,EAAe,GCgEnBC,EAAA,CACAC,KADA,WAEA,OACAV,KAAA,aAGAW,QAAA,CACAC,OADA,WAEA7B,KAAA8B,IAAAC,OAAA,CACAtB,MAAA,WACAQ,KAAA,4BACAe,MAAA,UACAC,SAAA,UACAC,SAAA,aACAC,KAAA,uBAGAC,QAXA,WAYApC,KAAA8B,IAAAC,OAAA,CACAtB,MAAA,UACAQ,KAAA,yBACAe,MAAA,SACAC,SAAA,UACAC,SAAA,aACAC,KAAA,yBCzF4aE,EAAA,cCO5aC,EAAgBC,OAAAC,EAAA,KAAAD,CACdF,EACA7B,EACAiB,GACF,EACA,KACA,KACA,MAIegB,EAAAH,UClBXI,EAAM,WAAgB,IAAA3C,EAAAC,KAAaC,EAAAF,EAAAG,eAA0BC,EAAAJ,EAAAK,MAAAD,IAAAF,EAAwB,OAAAE,EAAA,WAAqBE,MAAA,CAAOI,MAAA,oBAAAC,SAAA,gGAAAC,eAAA,KAA0J,CAAAR,EAAA,YAAiBS,YAAA,mBAAAC,MAAA,CAAsCC,MAAAf,EAAA,MAAAgB,SAAA,SAAAC,GAA2CjB,EAAA4C,MAAA3B,GAAcE,WAAA,WAAqBf,EAAA,aAAkByC,GAAA,CAAIC,MAAA9C,EAAA+C,WAAsB,CAAA/C,EAAAwB,GAAA,WAAApB,EAAA,YAAmCqB,KAAA,iBAAqB,CAAAzB,EAAAwB,GAAA,mnCAAomC,IACxlDwB,EAAe,GCwDnBC,EAAA,CACArB,KADA,WAEA,OACAgB,MAAA,+BAGAf,QAAA,CACAkB,SADA,WAEA,IAAAG,EAAAjD,KACAA,KAAAkD,UAAAlD,KAAA2C,OAAAQ,KAAA,WACAF,EAAAnB,IAAAC,OAAA,CACAtB,MAAA,WACAQ,KAAA,4BACAe,MAAA,UACAC,SAAA,UACAC,SAAA,aACAC,KAAA,uBAEA,WACAc,EAAAnB,IAAAC,OAAA,CACAtB,MAAA,UACAQ,KAAA,yBACAe,MAAA,SACAC,SAAA,UACAC,SAAA,aACAC,KAAA,2BClFmbiB,EAAA,ECO/aC,EAAYd,OAAAC,EAAA,KAAAD,CACda,EACAV,EACAK,GACF,EACA,KACA,KACA,MAIeO,EAAAD,UCGfE,EAAA,CACAC,WAAA,CACAf,qBACAa,8BCxBmaG,EAAA,ECO/ZC,EAAYnB,OAAAC,EAAA,KAAAD,CACdkB,EACA3D,EACAS,GACF,EACA,KACA,KACA,MAIeoD,EAAA,WAAAD","file":"js/chunk-2d0b2b24.010a2ecb.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"page-clipboard-demo\"}},[_c('clipboard-directive'),_c('clipboard-without-directive')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('vx-card',{attrs:{\"title\":\"Using Directive\",\"subtitle\":\"Use directive on button to copy text.\",\"code-toggler\":\"\"}},[_c('vs-input',{staticClass:\"inline-flex mb-2\",model:{value:(_vm.text),callback:function ($$v) {_vm.text=$$v},expression:\"text\"}}),_c('vs-button',{directives:[{name:\"clipboard\",rawName:\"v-clipboard:copy\",value:(_vm.text),expression:\"text\",arg:\"copy\"},{name:\"clipboard\",rawName:\"v-clipboard:success\",value:(_vm.onCopy),expression:\"onCopy\",arg:\"success\"},{name:\"clipboard\",rawName:\"v-clipboard:error\",value:(_vm.onError),expression:\"onError\",arg:\"error\"}]},[_vm._v(\"\\n\\t\\t\\tCopy!\\n\\t\\t\")]),_c('template',{slot:\"codeContainer\"},[_vm._v(\"\\n<template>\\n    <vs-input v-model=\\\"text\\\" class=\\\"inline-flex\\\" />\\n    <vs-button\\n        v-clipboard:copy=\\\"text\\\"\\n        v-clipboard:success=\\\"onCopy\\\"\\n        v-clipboard:error=\\\"onError\\\">\\n        Copy!\\n    </vs-button>\\n</template>\\n\\n<script>\\nexport default {\\n    data() {\\n        return {\\n            text: 'Copy Me!',\\n        }\\n    },\\n    methods: {\\n        onCopy() {\\n            this.$vs.notify({\\n                title: 'Success!',\\n                text: 'Text copied successfully.',\\n                color: 'success',\\n                iconPack: 'feather',\\n                position: 'top-center',\\n                icon: 'icon-check-circle'\\n            })\\n        },\\n        onError() {\\n            this.$vs.notify({\\n                title: 'Failed!',\\n                text: 'Error in copying text.',\\n                color: 'danger',\\n                iconPack: 'feather',\\n                position: 'top-center',\\n                icon: 'icon-alert-circle'\\n            })\\n        },\\n    }\\n}\\n</script>\\n\\t\\t\")])],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<!-- =========================================================================================\r\n\tFile Name: ClipboardDirective.vue\r\n\tDescription: Clipboard demo\r\n\t----------------------------------------------------------------------------------------\r\n\tItem Name: Vuesax Admin - VueJS Dashboard Admin Template\r\n\tAuthor: Pixinvent\r\n\tAuthor URL: http://www.themeforest.net/user/pixinvent\r\n========================================================================================== -->\r\n\r\n<template>\r\n\t<vx-card title=\"Using Directive\" subtitle=\"Use directive on button to copy text.\" code-toggler>\r\n\t\t<vs-input v-model=\"text\" class=\"inline-flex mb-2\" />\r\n\t\t<vs-button\r\n\t\t\tv-clipboard:copy=\"text\"\r\n\t\t\tv-clipboard:success=\"onCopy\"\r\n\t\t\tv-clipboard:error=\"onError\">\r\n\t\t\tCopy!\r\n\t\t</vs-button>\r\n\t\t<template slot=\"codeContainer\">\r\n&lt;template&gt;\r\n    &lt;vs-input v-model=&quot;text&quot; class=&quot;inline-flex&quot; /&gt;\r\n    &lt;vs-button\r\n        v-clipboard:copy=&quot;text&quot;\r\n        v-clipboard:success=&quot;onCopy&quot;\r\n        v-clipboard:error=&quot;onError&quot;&gt;\r\n        Copy!\r\n    &lt;/vs-button&gt;\r\n&lt;/template&gt;\r\n\r\n&lt;script&gt;\r\nexport default {\r\n    data() {\r\n        return {\r\n            text: 'Copy Me!',\r\n        }\r\n    },\r\n    methods: {\r\n        onCopy() {\r\n            this.$vs.notify({\r\n                title: 'Success!',\r\n                text: 'Text copied successfully.',\r\n                color: 'success',\r\n                iconPack: 'feather',\r\n                position: 'top-center',\r\n                icon: 'icon-check-circle'\r\n            })\r\n        },\r\n        onError() {\r\n            this.$vs.notify({\r\n                title: 'Failed!',\r\n                text: 'Error in copying text.',\r\n                color: 'danger',\r\n                iconPack: 'feather',\r\n                position: 'top-center',\r\n                icon: 'icon-alert-circle'\r\n            })\r\n        },\r\n    }\r\n}\r\n&lt;/script&gt;\r\n\t\t</template>\r\n\t</vx-card>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    data() {\r\n        return {\r\n            text: 'Copy Me!',\r\n        }\r\n    },\r\n    methods: {\r\n        onCopy() {\r\n            this.$vs.notify({\r\n                title: 'Success!',\r\n                text: 'Text copied successfully.',\r\n                color: 'success',\r\n                iconPack: 'feather',\r\n                position: 'top-center',\r\n                icon:'icon-check-circle'\r\n            })\r\n        },\r\n        onError() {\r\n            this.$vs.notify({\r\n                title: 'Failed!',\r\n                text: 'Error in copying text.',\r\n                color: 'danger',\r\n                iconPack: 'feather',\r\n                position: 'top-center',\r\n                icon:'icon-alert-circle'\r\n            })\r\n        },\r\n    }\r\n}\r\n</script>\r\n","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ClipboardDirective.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ClipboardDirective.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ClipboardDirective.vue?vue&type=template&id=5c616974&\"\nimport script from \"./ClipboardDirective.vue?vue&type=script&lang=js&\"\nexport * from \"./ClipboardDirective.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('vx-card',{attrs:{\"title\":\"Without directive\",\"subtitle\":\"You can copy text without a specific button. Use $copyText to copy text when event got fired.\",\"code-toggler\":\"\"}},[_c('vs-input',{staticClass:\"inline-flex mb-2\",model:{value:(_vm.text2),callback:function ($$v) {_vm.text2=$$v},expression:\"text2\"}}),_c('vs-button',{on:{\"click\":_vm.copyText}},[_vm._v(\"Copy!\")]),_c('template',{slot:\"codeContainer\"},[_vm._v(\"\\n<template>\\n    <vs-input v-model=\\\"text2\\\" class=\\\"inline-flex\\\" />\\n    <vs-button @click=\\\"copyText\\\">Copy!</vs-button>\\n</template>\\n\\n<script>\\nexport default {\\n    data() {\\n        return {\\n            text2: 'Copy Me Without Directive!',\\n        }\\n    },\\n    methods: {\\n        copyText() {\\n            const thisIns = this;\\n            this.$copyText(this.text2).then(function() {\\n                thisIns.$vs.notify({\\n                    title: 'Success!',\\n                    text: 'Text copied successfully.',\\n                    color: 'success',\\n                    iconPack: 'feather',\\n                    position: 'top-center',\\n                    icon: 'icon-check-circle'\\n                })\\n            }, function() {\\n                thisIns.$vs.notify({\\n                    title: 'Failed!',\\n                    text: 'Error in copying text.',\\n                    color: 'danger',\\n                    iconPack: 'feather',\\n                    position: 'top-center',\\n                    icon: 'icon-alert-circle'\\n                })\\n            })\\n        }\\n    }\\n}\\n</script>\\n\\t\\t\")])],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<!-- =========================================================================================\r\n\tFile Name: ClipboardWithoutDirective.vue\r\n\tDescription: Clipboard demo without directive\r\n\t----------------------------------------------------------------------------------------\r\n\tItem Name: Vuesax Admin - VueJS Dashboard Admin Template\r\n\tAuthor: Pixinvent\r\n\tAuthor URL: http://www.themeforest.net/user/pixinvent\r\n========================================================================================== -->\r\n\r\n<template>\r\n\t<vx-card title=\"Without directive\" subtitle=\"You can copy text without a specific button. Use $copyText to copy text when event got fired.\" code-toggler>\r\n\t\t<vs-input v-model=\"text2\" class=\"inline-flex mb-2\" />\r\n\t\t<vs-button @click=\"copyText\">Copy!</vs-button>\r\n\t\t<template slot=\"codeContainer\">\r\n&lt;template&gt;\r\n    &lt;vs-input v-model=&quot;text2&quot; class=&quot;inline-flex&quot; /&gt;\r\n    &lt;vs-button @click=&quot;copyText&quot;&gt;Copy!&lt;/vs-button&gt;\r\n&lt;/template&gt;\r\n\r\n&lt;script&gt;\r\nexport default {\r\n    data() {\r\n        return {\r\n            text2: 'Copy Me Without Directive!',\r\n        }\r\n    },\r\n    methods: {\r\n        copyText() {\r\n            const thisIns = this;\r\n            this.$copyText(this.text2).then(function() {\r\n                thisIns.$vs.notify({\r\n                    title: 'Success!',\r\n                    text: 'Text copied successfully.',\r\n                    color: 'success',\r\n                    iconPack: 'feather',\r\n                    position: 'top-center',\r\n                    icon: 'icon-check-circle'\r\n                })\r\n            }, function() {\r\n                thisIns.$vs.notify({\r\n                    title: 'Failed!',\r\n                    text: 'Error in copying text.',\r\n                    color: 'danger',\r\n                    iconPack: 'feather',\r\n                    position: 'top-center',\r\n                    icon: 'icon-alert-circle'\r\n                })\r\n            })\r\n        }\r\n    }\r\n}\r\n&lt;/script&gt;\r\n\t\t</template>\r\n\t</vx-card>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    data() {\r\n        return {\r\n            text2: 'Copy Me Without Directive!',\r\n        }\r\n    },\r\n    methods: {\r\n        copyText() {\r\n            const thisIns = this;\r\n            this.$copyText(this.text2).then(function() {\r\n                thisIns.$vs.notify({\r\n                    title: 'Success!',\r\n                    text: 'Text copied successfully.',\r\n                    color: 'success',\r\n                    iconPack: 'feather',\r\n                    position: 'top-center',\r\n                    icon: 'icon-check-circle'\r\n                })\r\n            }, function() {\r\n                thisIns.$vs.notify({\r\n                    title: 'Failed!',\r\n                    text: 'Error in copying text.',\r\n                    color: 'danger',\r\n                    iconPack: 'feather',\r\n                    position: 'top-center',\r\n                    icon: 'icon-alert-circle'\r\n                })\r\n            })\r\n        }\r\n    }\r\n}\r\n</script>\r\n","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ClipboardWithoutDirective.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ClipboardWithoutDirective.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ClipboardWithoutDirective.vue?vue&type=template&id=9166cb82&\"\nimport script from \"./ClipboardWithoutDirective.vue?vue&type=script&lang=js&\"\nexport * from \"./ClipboardWithoutDirective.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<!-- =========================================================================================\r\n    File Name: Clipboard.vue\r\n    Description: Clipboard demo\r\n    ----------------------------------------------------------------------------------------\r\n    Item Name: Vuesax Admin - VueJS Dashboard Admin Template\r\n      Author: Pixinvent\r\n    Author URL: http://www.themeforest.net/user/pixinvent\r\n========================================================================================== -->\r\n\r\n\r\n<template>\r\n    <div id=\"page-clipboard-demo\">\r\n        <clipboard-directive></clipboard-directive>\r\n        <clipboard-without-directive></clipboard-without-directive>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport ClipboardDirective from './ClipboardDirective.vue'\r\nimport ClipboardWithoutDirective from './ClipboardWithoutDirective.vue'\r\n\r\nexport default{\r\n    components: {\r\n        ClipboardDirective,\r\n        ClipboardWithoutDirective\r\n    }   \r\n}\r\n</script>","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Clipboard.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Clipboard.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Clipboard.vue?vue&type=template&id=bb5b36d2&\"\nimport script from \"./Clipboard.vue?vue&type=script&lang=js&\"\nexport * from \"./Clipboard.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}