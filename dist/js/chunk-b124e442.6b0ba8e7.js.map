{"version":3,"sources":["webpack:///./node_modules/es-abstract/es5.js","webpack:///./node_modules/function-bind/index.js","webpack:///./node_modules/string.prototype.trim/polyfill.js","webpack:///./node_modules/tsml/tsml.js","webpack:///./node_modules/es-abstract/helpers/isNaN.js","webpack:///./node_modules/is-callable/index.js","webpack:///./node_modules/videojs-vtt.js/lib/browser-index.js","webpack:///./node_modules/es-to-primitive/es5.js","webpack:///./node_modules/video.js/dist/video.cjs.js","webpack:///./node_modules/es-to-primitive/helpers/isPrimitive.js","webpack:///./node_modules/xtend/immutable.js","webpack:///./node_modules/string.prototype.trim/implementation.js","webpack:///./node_modules/es-abstract/helpers/sign.js","webpack:///./node_modules/parse-headers/parse-headers.js","webpack:///./node_modules/video.js/node_modules/global/window.js","webpack:///./node_modules/function-bind/implementation.js","webpack:///./node_modules/is-function/index.js","webpack:///./node_modules/safe-json-parse/tuple.js","webpack:///./node_modules/has/src/index.js","webpack:///./node_modules/videojs-vtt.js/lib/vttcue.js","webpack:///./node_modules/object-keys/implementation.js","webpack:///./node_modules/string.prototype.trim/shim.js","webpack:///./node_modules/es-abstract/helpers/mod.js","webpack:///./node_modules/global/window.js","webpack:///./node_modules/es-abstract/helpers/assertRecord.js","webpack:///./node_modules/es-abstract/helpers/isFinite.js","webpack:///./node_modules/string.prototype.trim/index.js","webpack:///./node_modules/video.js/node_modules/global/document.js","webpack:///./node_modules/for-each/index.js","webpack:///./node_modules/videojs-vtt.js/lib/vtt.js","webpack:///./node_modules/object-keys/isArguments.js","webpack:///./node_modules/object-keys/index.js","webpack:///./node_modules/vue-video-player/dist/vue-video-player.js","webpack:///./node_modules/es-abstract/GetIntrinsic.js","webpack:///./node_modules/xhr/node_modules/global/window.js","webpack:///./node_modules/xhr/index.js","webpack:///./node_modules/define-properties/index.js","webpack:///./node_modules/videojs-vtt.js/lib/vttregion.js"],"names":["GetIntrinsic","__webpack_require__","$Object","$TypeError","$String","assertRecord","$isNaN","$isFinite","sign","mod","IsCallable","toPrimitive","has","ES5","ToPrimitive","ToBoolean","value","ToNumber","ToInteger","number","this","Math","floor","abs","ToInt32","x","ToUint32","ToUint16","posInt","ToString","ToObject","CheckObjectCoercible","optMessage","SameValue","y","Type","IsPropertyDescriptor","Desc","allowed","[[Configurable]]","[[Enumerable]]","[[Get]]","[[Set]]","[[Value]]","[[Writable]]","key","isData","IsAccessor","IsAccessorDescriptor","IsDataDescriptor","IsGenericDescriptor","FromPropertyDescriptor","writable","enumerable","configurable","get","set","ToPropertyDescriptor","Obj","desc","getter","TypeError","setter","module","exports","implementation","Function","prototype","bind","zeroWidthSpace","String","trim","clean","s","replace","sa","i","arguments","length","Number","isNaN","a","fnToStr","toString","constructorRegex","isES6ClassFn","fnStr","call","test","e","tryFunctionObject","toStr","Object","fnClass","genClass","hasToStringTag","Symbol","toStringTag","strClass","window","vttjs","WebVTT","VTTCue","VTTRegion","cueShim","regionShim","nativeVTTCue","nativeVTTRegion","shim","restore","isPrimitive","isCallable","ES5internalSlots","[[DefaultValue]]","O","actualHint","methods","input","_interopDefault","ex","document","tsml","safeParseTuple","xhr","vtt","version","USER_AGENT","navigator","userAgent","webkitVersionMap","exec","appleWebkitVersion","parseFloat","pop","IS_IPAD","IS_IPHONE","IS_IPOD","IS_IOS","IOS_VERSION","match","IS_ANDROID","ANDROID_VERSION","major","minor","IS_OLD_ANDROID","IS_NATIVE_ANDROID","IS_FIREFOX","IS_EDGE","IS_CHROME","CHROME_VERSION","IS_IE8","IE_VERSION","result","IS_SAFARI","IS_ANY_SAFARI","TOUCH_ENABLED","isReal","maxTouchPoints","DocumentTouch","BACKGROUND_SIZE_SUPPORTED","createElement","style","browser","freeze","_typeof","iterator","obj","constructor","classCallCheck","instance","Constructor","inherits","subClass","superClass","create","setPrototypeOf","__proto__","possibleConstructorReturn","self","ReferenceError","taggedTemplateLiteralLoose","strings","raw","keys","object","isObject","each","fn","forEach","reduce","initial","undefined","accum","assign","target","_len","sources","Array","_key","apply","concat","source","isPlain","history","LogByTypeFactory","name","log","type","level","args","stringify","lvl","levels","lvlRegExp","RegExp","unshift","toUpperCase","push","console","info","map","isArray","JSON","join","createLogger$1","logByType","createLogger","subname","all","off","debug","warn","error","DEFAULT","hasOwnProperty","Error","filter","fname","historyItem","clear","disable","enable","_len2","_key2","_len3","_key3","_len4","_key4","computedStyle","el","prop","getComputedStyle","cs","currentStyle","_templateObject","isNonBlankString","str","throwIfWhitespace","classRegExp","className","isEl","nodeType","isInFrame","parent","createQuerier","method","selector","context","querySelector","ctx","createEl","tagName","properties","attributes","content","getOwnPropertyNames","propName","val","indexOf","setAttribute","textContent","attrName","appendContent","text","innerText","prependTo","child","firstChild","insertBefore","appendChild","hasClass","element","classToCheck","classList","contains","addClass","classToAdd","add","removeClass","classToRemove","remove","split","c","toggleClass","classToToggle","predicate","setAttributes","attrValue","removeAttribute","getAttributes","tag","knownBooleans","attrs","attrVal","getAttribute","attribute","blockTextSelection","body","focus","onselectstart","unblockTextSelection","getBoundingClientRect","parentNode","rect","k","height","width","findPosition","box","left","top","docEl","documentElement","clientLeft","scrollLeft","pageXOffset","clientTop","scrollTop","pageYOffset","round","getPointerPosition","event","position","boxW","offsetWidth","boxH","offsetHeight","boxY","boxX","pageY","pageX","changedTouches","max","min","isTextNode","emptyEl","removeChild","normalizeContent","createTextNode","node","insertContent","isSingleLeftClick","button","buttons","$","$$","Dom","_guid","newGUID","elData","elIdAttr","Date","getTime","getData","id","hasData","removeData","_cleanUpEvents","elem","data","handlers","removeEventListener","dispatcher","detachEvent","disabled","_handleMultipleEvents","types","callback","fixEvent","returnTrue","returnFalse","isPropagationStopped","old","preventDefault","srcElement","relatedTarget","fromElement","toElement","returnValue","defaultPrevented","stopPropagation","cancelBubble","stopImmediatePropagation","isImmediatePropagationStopped","clientX","doc","clientY","which","charCode","keyCode","_supportsPassive","opts","defineProperty","addEventListener","passiveEvents","on","guid","hash","handlersCopy","slice","m","n","options","passive","attachEvent","removeType","t","splice","trigger","elemData","ownerDocument","bubbles","targetData","one","func","Events","_windowLoaded","videojs$2","autoSetup","vids","getElementsByTagName","audios","divs","mediaEls","_i","_e","_i2","_e2","_i3","_e3","mediaEl","autoSetupTimeout","player","wait","vjs","setTimeout","readyState","createStyleElement","setTextContent","styleSheet","cssText","uid","bound","throttle","last","now","throttled","debounce","immediate","timeout","cancel","clearTimeout","debounced","_later","EventTarget","allowedEvents_","ael","dispatchEvent","isEvented","eventBusEl_","every","isValidEventType","validateTarget","nodeName","validateEventType","validateListener","listener","normalizeListenArgs","isTargetingSelf","shift","listen","EventedMixin","_this","_normalizeListenArgs","removeListenerOnDispose","removeRemoverOnTargetDispose","_this2","_normalizeListenArgs2","wrapper","largs","targetOrType","typeOrListener","evented","eventBusKey","StatefulMixin","state","setState","stateUpdates","changes","from","to","stateful","defaultState","handleStateChanged","toTitleCase","string","charAt","titleCaseEquals","str1","str2","mergeOptions","Component","ready","play","player_","options_","id_","name_","el_","children_","childIndex_","childNameIndex_","initChildren","reportTouchActivity","enableTouchActivity","dispose","localize","tokens","defaultValue","code","language","languages","primaryCode","primaryLang","localizedString","index","ret","contentEl","contentEl_","children","getChildById","getChild","addChild","component","componentName","componentClassName","componentClass","ComponentClass","getComponent","childNodes","refNode","childFound","compEl","parentOptions","handleAdd","playerOptions","newChild","workingChildren","Tech","some","wchild","isTech","buildCSSClass","sync","isReady_","readyQueue_","triggerReady","readyQueue","show","hide","lockShowing","unlockShowing","num","skipListeners","dimension","dimensions","widthOrHeight","pxIndex","parseInt","currentDimension","computedWidthOrHeight","getPropertyValue","rule","currentDimensions","currentWidth","currentHeight","blur","emitTapEvents","touchStart","firstTouch","tapMovementThreshold","touchTimeThreshold","couldBeTap","touches","xdiff","ydiff","touchDistance","sqrt","noTap","touchTime","reportUserActivity","report","touchHolding","clearInterval","setInterval","touchEnd","timeoutId","disposeFn","interval","_this3","intervalId","requestAnimationFrame","_this4","supportsRaf_","cancelAnimationFrame","registerComponent","ComponentToRegister","isComp","isPrototypeOf","reason","components_","Player","players","playerNames","pname","Boolean","rangeCheck","fnName","maxIndex","getRange","valueIndex","ranges","rangeIndex","createTimeRangesObj","start","end","createTimeRanges","bufferedPercent","buffered","duration","bufferedDuration","FullscreenApi","apiMap","specApi","browserApi","MediaError","message","defaultMessages","status","errorTypes","1","2","3","4","5","errNum","isPromise","then","silencePromise","trackToJson_","track","acc","cues","cue","startTime","endTime","textTracksToJson","tech","trackEls","trackObjs","tracks","trackEl","json","src","textTracks","jsonToTextTracks","addedTrack","addRemoteTextTrack","addCue","textTrackConverter","MODAL_CLASS_NAME","ESC","ModalDialog","_Component","opened_","hasBeenOpened_","hasBeenFilled_","closeable","uncloseable","role","descEl_","description","tabIndex","aria-describedby","aria-hidden","aria-label","label","previouslyActiveEl_","handleKeyPress","close","open","fillAlways","fill","wasPlaying_","paused","pauseOnOpen","pause","hadControls_","controls","conditionalFocus_","opened","conditionalBlur_","temporary","closeable_","temp","controlText","fillWith","parentEl","nextSiblingEl","nextSibling","empty","closeButton","content_","activeEl","activeElement","playerEl","handleKeyDown","focusableEls","focusableEls_","focusIndex","shiftKey","allChildren","querySelectorAll","HTMLAnchorElement","HTMLAreaElement","hasAttribute","HTMLInputElement","HTMLSelectElement","HTMLTextAreaElement","HTMLButtonElement","HTMLIFrameElement","HTMLObjectElement","HTMLEmbedElement","TrackList","_EventTarget","_ret","list","tracks_","addTrack","removeTrack","rtrack","l","getTrackById","change","addtrack","removetrack","disableOthers","enabled","AudioTrackList","_TrackList","_prop","changing_","disableOthers$1","selected","VideoTrackList","TextTrackList","nonLanguageTextTrackKind","kind","HtmlTrackElementList","trackElements","trackElements_","addTrackElement_","trackElement","getTrackElementByTrack_","trackElement_","removeTrackElement_","TextTrackCueList","setCues_","length_","oldLength","cues_","defineProp","getCueById","VideoTrackKind","alternative","captions","main","subtitles","commentary","AudioTrackKind","descriptions","main-desc","translation","TextTrackKind","chapters","metadata","TextTrackMode","hidden","showing","Track","trackProps","_loop","parseUrl","url","props","href","addToBody","host","protocol","div","innerHTML","details","location","getAbsoluteURL","getFileExtension","path","splitPathRe","pathParts","toLowerCase","isCrossOrigin","winLoc","urlInfo","srcProtocol","crossOrigin","Url","parseCues","srcContent","parser","Parser","StringDecoder","errors","oncue","onparsingerror","onflush","parse","groupCollapsed","groupEnd","flush","loadTrack","uri","cors","err","response","responseBody","loaded_","tech_","loadHandler","TextTrack","_Track","settings","srclang","mode","default_","tt","activeCues_","activeCues","changed","timeupdateHandler","newMode","ct","currentTime","active","originalCue","originalCue_","removeCue","_removeCue","cuechange","AudioTrack","newEnabled","VideoTrack","newSelected","NONE","LOADING","LOADED","ERROR","HTMLTrackElement","load","NORMAL","audio","ListClass","TrackClass","capitalName","video","getterName","privateName","REMOTE","remoteText","remoteTextEl","ALL","createTrackHelper","names","hasStarted_","featuresProgressEvents","manualProgressOn","featuresTimeupdateEvents","manualTimeUpdatesOn","nativeCaptions","nativeTextTracks","featuresNativeTextTracks","emulateTextTracks","autoRemoteTextTracks_","initTrackListeners","nativeControlsForTouch","triggerSourceset","onDurationChange","manualProgress","trackProgress","manualProgressOff","stopTrackingProgress","progressInterval","numBufferedPercent","bufferedPercent_","duration_","manualTimeUpdates","trackCurrentTime","stopTrackingCurrentTime","manualTimeUpdatesOff","currentTimeInterval","manuallyTriggered","clearTracks","removeRemoteTextTrack","cleanupAutoTextTracks","reset","error_","played","setCurrentTime","trackListChanges","addWebVttScript_","_this5","script","onload","onerror","_this6","remoteTracks","remoteTextTracks","handleAddTrack","handleRemoveTrack","updateDisplay","textTracksChanges","addTextTrack","createRemoteTextTrack","_this7","manualCleanup","htmlTrackElement","remoteTextTrackEls","getVideoPlaybackQuality","setPoster","playsinline","setPlaysinline","canPlayType","canPlaySource","srcObj","registerTech","techs_","defaultTechOrder_","getTech","videojs","featuresVolumeControl","featuresMuteControl","featuresFullscreenResize","featuresPlaybackRate","featuresSourceset","withSourceHandlers","_Tech","registerSourceHandler","handler","sourceHandlers","can","selectSourceHandler","canHandleSource","sh","deferrable","originalFn","sourceHandler_","setSource","nativeSourceHandler","disposeSourceHandler","currentSource_","handleSource","middlewares","middlewareInstances","TERMINATOR","use","middleware","next","setSourceHelper","setTech","mw","get$1","reduceRight","middlewareIterator","set$1","arg","mediate","callMethod","middlewareValue","terminated","executeRight","allowedGetters","seekable","allowedSetters","allowedMediators","mws","clearCacheForPlayer","getOrCreateFactory","mwFactory","_mws$i","mwf","mwi","lastRun","mwrest","_src","MimetypesKind","opus","ogv","mp4","mov","m4v","mkv","mp3","aac","oga","m3u8","getMimetype","ext","mimetype","findMimetype","cache_","matchingSources","filterSource","newsrc","srcobj","fixSource","MediaLoader","j","techOrder","techName","isSupported","loadTech_","ClickableComponent","tabIndex_","createControlTextEl","controlTextEl_","aria-live","controlText_","localizedText","nonIconControl","enabled_","handleClick","handleFocus","handleBlur","PosterImage","_ClickableComponent","update","fallbackImg_","poster","setSrc","backgroundImage","darkGray","lightGray","fontMap","monospace","sansSerif","serif","monospaceSansSerif","monospaceSerif","proportionalSansSerif","proportionalSerif","casual","smallcaps","constructColor","color","opacity","hex","tryUpdateStyle","TextTrackDisplay","updateDisplayHandler","toggleDisplay","preselectTrack","modes","trackList","userPref","selectedLanguage","firstDesc","firstCaptions","preferredTrack","aria-atomic","clearDisplay","processCues","descriptionsTrack","captionsSubtitlesTrack","updateForTrack","textTrackSettings","overrides","getValues","cueDiv","displayState","textOpacity","backgroundColor","backgroundOpacity","windowColor","windowOpacity","edgeStyle","textShadow","fontPercent","fontSize","bottom","fontFamily","fontVariant","LoadingSpinner","isAudio","playerType","dir","Button","BigPlayButton","_Button","mouseused_","handleMouseDown","playPromise","cb","playToggle","playFocus","CloseButton","PlayToggle","handlePlay","handlePause","handleEnded","handleSeeked","defaultImplementation","seconds","guide","h","gm","gh","Infinity","setFormatTime","customImplementation","resetFormatTime","formatTime","TimeDisplay","throttledUpdateContent","updateContent","plainName","labelText_","updateTextNode_","textNode_","formattedTime_","formatTime_","time","updateFormattedTime_","formattedTime","CurrentTimeDisplay","_TimeDisplay","scrubbing","getCache","DurationDisplay","TimeDivider","RemainingTimeDisplay","remainingTimeDisplay","remainingTime","LiveDisplay","updateShowing","Slider","bar","barName","vertical","playerEvent","handleMouseMove","handleMouseUp","aria-valuenow","aria-valuemin","aria-valuemax","progress","getPercent","percentage","toFixed","calculateDistance","stepBack","stepForward","bool","vertical_","LoadProgressBar","partEls_","bufferedEnd","percentify","percent","part","TimeTooltip","seekBarRect","seekBarPoint","tooltipRect","playerRect","seekBarPointPx","spaceLeftOfPoint","spaceRightOfPoint","right","pullTooltipBy","PlayProgressBar","rafId_","timeTooltip","MouseTimeDisplay","STEP_SECONDS","UPDATE_REFRESH_INTERVAL","SeekBar","_Slider","setEventHandlers_","updateInterval","update_","getCurrentTime_","videoWasPlaying","newTime","mouseTimeDisplay","handleAction","ProgressControl","throttledHandleMouseSeek","handleMouseSeek","seekBar","seekBarEl","FullscreenToggle","handleFullscreenChange","fullscreenEnabled","isFullscreen","exitFullscreen","requestFullscreen","checkVolumeSupport","VolumeLevel","VolumeBar","updateLastVolume_","updateARIAAttributes","checkMuted","volume","muted","ariaValue","volumeAsPercentage_","volumeBeforeDrag","lastVolume_","VolumeControl","volumeBar","throttledHandleMouseMove","orientationClass","checkMuteSupport","MuteToggle","vol","lastVolume","volumeToSet","updateIcon_","updateControlText_","soundOff","VolumePanel","inline","volumeControl","volumePanelState_","sliderActive_","sliderInactive_","muteToggle","Menu","menuButton_","menuButton","focusedChild_","addItem","unpressButton","contentElType","append","stepChild","item","haveTitle","MenuButton","buttonClass","handleSubmenuKeyPress","menu","createMenu","buttonPressed_","items","hideThreshold_","title","createItems","buildWrapperCSSClass","menuButtonClass","pressButton","TrackButton","_MenuButton","updateHandler","MenuItem","selectable","isSelected_","multiSelectable","_selected","TextTrackMenuItem","_MenuItem","changeHandler","handleTracksChange","selectedLanguageChangeHandler","handleSelectedLanguageChange","onchange","Event","createEvent","initEvent","kinds","shouldBeSelected","OffTextTrackMenuItem","_TextTrackMenuItem","default","allHidden","TextTrackButton","_TrackButton","TrackMenuItem","label_","kinds_","kind_","ChaptersTrackMenuItem","ChaptersButton","_TextTrackButton","track_","setTrack","findChaptersTrack","updateHandler_","remoteTextTrackEl","_remoteTextTrackEl","getMenuCaption","mi","DescriptionsButton","SubtitlesButton","CaptionSettingsMenuItem","CaptionsButton","SubsCapsMenuItem","SubsCapsButton","language_","AudioTrackMenuItem","audioTracks","AudioTrackButton","PlaybackRateMenuItem","rate","playbackRate","PlaybackRateMenuButton","updateVisibility","updateLabel","labelEl_","rates","playbackRates","currentRate","newRate","playbackRateSupported","Spacer","CustomControlSpacer","_Spacer","ControlBar","ErrorDisplay","_ModalDialog","LOCAL_STORAGE_KEY","COLOR_BLACK","COLOR_BLUE","COLOR_CYAN","COLOR_GREEN","COLOR_MAGENTA","COLOR_RED","COLOR_WHITE","COLOR_YELLOW","OPACITY_OPAQUE","OPACITY_SEMI","OPACITY_TRANS","selectConfigs","v","parseOptionValue","getSelectedOptionValue","selectedIndex","setSelectedOption","TextTrackSettings","endDialog","setDefaults","persistTextTrackSettings","saveSettings","config","restoreSettings","createElSelect_","legendId","selectLabelledbyIds","o","optionId","createElFgColor_","createElBgColor_","createElWinColor_","createElColors_","createElFont_","createElControls_","defaultsDescription","setValues","values","localStorage","getItem","setItem","removeItem","ttDisplay","controlBar","subsCapsBtn","subsCapsButton","ccBtn","captionsButton","ResizeManager","RESIZE_OBSERVER_AVAILABLE","ResizeObserver","loadListener_","resizeObserver_","debouncedHandler_","resizeHandler","observe","contentWindow","unobserve","disconnect","resizeObserver","sourcesetLoad","srcUrls","innerHTMLDescriptorPolyfill","cloneNode","dummy","docFrag","createDocumentFragment","Element","getDescriptor","priority","descriptor","getOwnPropertyDescriptor","getInnerHTMLDescriptor","HTMLMediaElement","firstSourceWatch","resetSourceWatch_","innerDescriptor","appendWrapper","appendFn","retval","srcDescriptorPolyfill","getSrcDescriptor","setupSourceset","resetSourceset_","srcDescriptor","oldSetAttribute","oldLoad","currentSrc","_templateObject$2","Html5","crossoriginTracks","initNetworkState_","handleLateInit_","enableSourceset","setupSourcesetHandling_","hasChildNodes","nodes","nodesLength","removeNodes","proxyNativeTracks_","restoreMetadataTracksInIOSNativePlayer_","setControls","proxyWebkitFullscreen_","disposeMediaElement","metadataTracksPreFullscreenState","takeMetadataTrackSnapshot","storedMode","restoreTrackMode","storedTrack","elTracks","techTracks","listeners","currentTarget","removeOldTracks","removeTracks","found","eventName","playerElIngest","movingMediaElementInDOM","clone","tagAttributes","techId","class","playerId","preload","settingsAttrs","attr","networkState","loadstartFired","setLoadstartFired","triggerLoadstart","eventsToTrigger","checkProgress","NaN","endFn","beginFn","webkitPresentationMode","supportsFullScreen","webkitEnterFullScreen","enterFullScreen","HAVE_METADATA","exitFullScreen","webkitExitFullScreen","resetMediaElement","videoPlaybackQuality","webkitDroppedFrameCount","webkitDecodedFrameCount","droppedVideoFrames","totalVideoFrames","performance","creationTime","timing","navigationStart","TEST_VID","canControlVolume","canMuteVolume","canControlPlaybackRate","canOverrideAttributes","noop","supportsNativeTextTracks","supportsNativeVideoTracks","videoTracks","supportsNativeAudioTracks","featuresNativeVideoTracks","featuresNativeAudioTracks","mpegurlRE","mp4RE","patchCanPlayType","unpatchCanPlayType","r","_templateObject$1","TECH_EVENTS_RETRIGGER","TECH_EVENTS_QUEUE","canplay","canplaythrough","playing","seeked","BREAKPOINT_ORDER","BREAKPOINT_CLASSES","substring","DEFAULT_BREAKPOINTS","tiny","xsmall","small","medium","large","xlarge","huge","getTagSettings","closest","isPosterFromTech_","queuedCallbacks_","userActive_","languagesToLower","name$$1","languages_","poster_","controls_","autoplay","scrubbing_","lastPlaybackRate","defaultPlaybackRate","playerOptionsCopy","plugins","middleware_","flexNotSupported_","majorVersion","userActive","listenForUserActivity_","handleFullscreenChange_","handleStageClick_","breakpoints","responsive","changingSrc_","playWaitingForReady_","playOnLoadstart_","styleEl_","playerElIngest_","divEmbed","tabindex","VIDEOJS_NO_DYNAMIC_STYLE","defaultsStyleEl","head","fill_","fluid_","fluid","aspectRatio","links","linkEl","_dimension","privDimension","updateStyleEl_","parsedVal","ratio","aspectRatio_","idClass","videoWidth","videoHeight","ratioParts","ratioMultiplier","width_","height_","_width","_height","techEl","unloadTech_","titleTechName","camelTechName","techName_","techOptions","loop","vtt.js","canOverridePoster","techCanOverridePoster","TechClass","handleTechReady_","textTracksJson_","eventObj","seeking","handleTechLoadStart_","handleTechSourceset_","handleTechWaiting_","handleTechEnded_","handleTechSeeking_","handleTechPlay_","handleTechFirstPlay_","handleTechPause_","handleTechDurationChange_","handleTechFullscreenChange_","handleTechError_","handleTechPosterChange_","handleTechTextData_","handleTechRateChange_","usingNativeControls","techGet_","addTechControlsListeners_","safety","removeTechControlsListeners_","handleTechClick_","handleTechTouchStart_","handleTechTouchMove_","handleTechTouchEnd_","handleTechTap_","techCall_","hasStarted","manualAutoplay_","previouslyMuted","promise","updateSourceCaches_","sourceElSources","sourceEls","matchingSourceEls","sourceObj","updateSourceCaches","playerSrc","currentSource","eventSrc","lastSource_","updateCache","techSrc","techGet","request","queued","handleTechCanPlay_","handleTechCanPlayThrough_","handleTechPlaying_","handleTechSeeked_","starttime","userWasActive","PromiseClass","Promise","resolve","play_","_this8","isScrubbing","percentAsDecimal","_muted","defaultMuted","_defaultMuted","isFS","isFullscreen_","fsApi","fullscreenchange","documentFullscreenChange","fullscreenElement","enterFullWindow","exitFullWindow","isFullWindow","docOrigOverflow","overflow","fullWindowOnEscKey","selectSource","_this9","techs","_ref","findFirstPassingTechSourcePair","outerArray","innerArray","tester","outerChoice","innerChoice","foundSourceAndTech","flip","b","finder","_ref2","sourceOrder","_this10","middlewareSource","src_","notSupportedMessage","_this11","sourceTech","currentSources","currentType","techAutoplay","newPoster","usingNativeControls_","errorDisplay","userActivity_","mouseInProgress","lastMoveX","lastMoveY","handleActivity","screenX","screenY","inactivityTimeout","isAudio_","_ref3","_ref3$track","toJSON","createModal","_this12","modal","updateCurrentBreakpoint_","currentBreakpoint","candidateBreakpoint","maxWidth","breakpoints_","breakpoint_","removeCurrentBreakpoint_","currentBreakpointClass","_breakpoints","responsive_","current","baseOptions","tagOptions","dataSetup","_safeParseTuple","childName","html5","flash","userLanguage","BASE_PLUGIN_NAME","PLUGIN_CACHE_KEY","pluginStorage","pluginExists","getPlugin","markPluginAsActive","triggerSetupEvent","before","createBasicPlugin","plugin","basicPluginWrapper","createPluginFactory","PluginSubClass","getEventHash","Plugin","VERSION","isBasic","p","registerPlugin","deregisterPlugin","getPlugins","getPluginVersion","usingPlugin","hasPlugin","_inherits","super_","extendFn","subClassMethods","HTMLVideoElement","normalizeId","getPlayer","hooks","hookFunction","PlayerComponent","hooks_","hook","hookOnce","original","removeHook","getPlayers","nId","_tag","_player","getAllPlayers","comp","writeable","extend","addLanguage","_mergeOptions","createTimeRange","dom","ES","leftWhitespace","rightWhitespace","S","headers","row","global","win","ERROR_MESSAGE","funcType","that","binder","boundLength","boundArgs","Empty","isFunction","alert","confirm","prompt","SafeParseTuple","reviver","autoKeyword","directionSetting","","lr","rl","alignSetting","middle","findDirectionSetting","findAlignSetting","align","cobj","isIE8","baseObj","hasBeenReset","_id","_pauseOnExit","_startTime","_endTime","_text","_region","_vertical","_snapToLines","_line","_lineAlign","_position","_positionAlign","_size","_align","setting","SyntaxError","getCueAsHTML","convertCueToDOMTree","keysShim","isArgs","isEnumerable","propertyIsEnumerable","hasDontEnumBug","hasProtoEnumBug","dontEnums","equalsConstructorPrototype","ctor","excludedKeys","$applicationCache","$console","$external","$frame","$frameElement","$frames","$innerHeight","$innerWidth","$onmozfullscreenchange","$onmozfullscreenerror","$outerHeight","$outerWidth","$pageXOffset","$pageYOffset","$parent","$scrollLeft","$scrollTop","$scrollX","$scrollY","$self","$webkitIndexedDB","$webkitStorageInfo","$window","hasAutomationEqualityBug","equalsConstructorPrototypeIfNotBuggy","isArguments","isString","theKeys","skipProto","skipConstructor","define","getPolyfill","polyfill","modulo","remain","$SyntaxError","predicates","Property Descriptor","recordType","argumentName","isFinite","boundTrim","doccy","topLevel","minDoc","forEachArray","array","receiver","len","forEachString","forEachObject","thisArg","_objCreate","F","ParsingError","errorData","parseTimeStamp","computeSeconds","f","Settings","parseOptions","keyValueDelim","groupDelim","groups","kv","parseCue","regionList","oInput","consumeTimeStamp","ts","Errors","BadTimeStamp","consumeCueSettings","region","alt","vals","vals0","integer","line","lineAlign","snapToLines","size","positionAlign","skipWhitespace","substr","BadSignature","dflt","defaultKey","ESCAPE","&amp;","&lt;","&gt;","&lrm;","&rlm;","&nbsp;","TAG_NAME","u","ruby","rt","lang","TAG_ANNOTATION","NEEDS_PARENT","parseContent","nextToken","consume","unescape1","unescape","shouldAdd","localName","annotation","rootDiv","tagStack","createProcessingInstruction","strongRTLRanges","isStrongRTLChar","currentRange","determineBidi","nodeStack","pushNodes","nextTextNode","charCodeAt","computeLinePos","textTrackList","mediaElement","count","StyleBox","CueStyleBox","styleOptions","styles","display","writingMode","unicodeBidi","applyStyles","textAlign","font","whiteSpace","direction","stylesunicodeBidi","textPos","formatStyle","move","BoxPosition","lh","offsetTop","rects","getClientRects","lineHeight","moveBoxToLinePosition","styleBox","containerBox","boxPositions","findBestPosition","axis","bestPosition","specifiedPosition","overlapsOppositeAxis","within","overlapsAny","intersectPercentage","boxPosition","linePos","step","maxPosition","initialAxis","ceil","reverse","calculatedPercentage","toCSSCompatValues","unit","toMove","overlaps","b2","boxes","container","intersectArea","reference","getSimpleBoxPosition","decode","decodeURIComponent","encodeURIComponent","cuetext","FONT_SIZE_PERCENT","FONT_STYLE","CUE_BACKGROUND_PADDING","overlay","paddedOverlay","shouldCompute","margin","decoder","buffer","TextDecoder","reportOrThrowError","collectNextLine","pos","parseRegion","xy","anchor","lines","regionAnchorX","regionAnchorY","viewportAnchorX","viewportAnchorY","scroll","onregion","parseTimestampMap","ontimestampmap","MPEGTS","LOCAL","parseHeader","stream","alreadyCollectedLine","hasSubstring","callee","origKeys","originalKeys","keysWorksWithArguments","d","__esModule","customEventName","required","events","globalOptions","progressControl","fullscreenToggle","volumeMenuButton","globalEvents","reseted","mounted","initialize","beforeDestroy","$refs","$emit","__ob__","$nextTick","watch","deep","install","videoPlayer","render","staticRenderFns","_compiled","functional","_scopeId","$vnode","ssrContext","__VUE_SSR_CONTEXT__","_registeredComponents","_ssrRegister","beforeCreate","_injectStyles","esModule","$createElement","_self","_c","staticClass","ref","generator","asyncFn","asyncGen","ThrowTypeError","hasSymbols","getProto","getPrototypeOf","generatorFunction","asyncFunction","asyncGenFunction","asyncGenIterator","TypedArray","Uint8Array","INTRINSICS","$ %Array%","$ %ArrayBuffer%","ArrayBuffer","$ %ArrayBufferPrototype%","$ %ArrayIteratorPrototype%","$ %ArrayPrototype%","$ %ArrayProto_entries%","entries","$ %ArrayProto_forEach%","$ %ArrayProto_keys%","$ %ArrayProto_values%","$ %AsyncFromSyncIteratorPrototype%","$ %AsyncFunction%","$ %AsyncFunctionPrototype%","$ %AsyncGenerator%","$ %AsyncGeneratorFunction%","$ %AsyncGeneratorPrototype%","$ %AsyncIteratorPrototype%","asyncIterator","$ %Atomics%","Atomics","$ %Boolean%","$ %BooleanPrototype%","$ %DataView%","DataView","$ %DataViewPrototype%","$ %Date%","$ %DatePrototype%","$ %decodeURI%","decodeURI","$ %decodeURIComponent%","$ %encodeURI%","encodeURI","$ %encodeURIComponent%","$ %Error%","$ %ErrorPrototype%","$ %eval%","eval","$ %EvalError%","EvalError","$ %EvalErrorPrototype%","$ %Float32Array%","Float32Array","$ %Float32ArrayPrototype%","$ %Float64Array%","Float64Array","$ %Float64ArrayPrototype%","$ %Function%","$ %FunctionPrototype%","$ %Generator%","$ %GeneratorFunction%","$ %GeneratorPrototype%","$ %Int8Array%","Int8Array","$ %Int8ArrayPrototype%","$ %Int16Array%","Int16Array","$ %Int16ArrayPrototype%","$ %Int32Array%","Int32Array","$ %Int32ArrayPrototype%","$ %isFinite%","$ %isNaN%","$ %IteratorPrototype%","$ %JSON%","$ %JSONParse%","$ %Map%","Map","$ %MapIteratorPrototype%","$ %MapPrototype%","$ %Math%","$ %Number%","$ %NumberPrototype%","$ %Object%","$ %ObjectPrototype%","$ %ObjProto_toString%","$ %ObjProto_valueOf%","valueOf","$ %parseFloat%","$ %parseInt%","$ %Promise%","$ %PromisePrototype%","$ %PromiseProto_then%","$ %Promise_all%","$ %Promise_reject%","reject","$ %Promise_resolve%","$ %Proxy%","Proxy","$ %RangeError%","RangeError","$ %RangeErrorPrototype%","$ %ReferenceError%","$ %ReferenceErrorPrototype%","$ %Reflect%","Reflect","$ %RegExp%","$ %RegExpPrototype%","$ %Set%","Set","$ %SetIteratorPrototype%","$ %SetPrototype%","$ %SharedArrayBuffer%","SharedArrayBuffer","$ %SharedArrayBufferPrototype%","$ %String%","$ %StringIteratorPrototype%","$ %StringPrototype%","$ %Symbol%","$ %SymbolPrototype%","$ %SyntaxError%","$ %SyntaxErrorPrototype%","$ %ThrowTypeError%","$ %TypedArray%","$ %TypedArrayPrototype%","$ %TypeError%","$ %TypeErrorPrototype%","$ %Uint8Array%","$ %Uint8ArrayPrototype%","$ %Uint8ClampedArray%","Uint8ClampedArray","$ %Uint8ClampedArrayPrototype%","$ %Uint16Array%","Uint16Array","$ %Uint16ArrayPrototype%","$ %Uint32Array%","Uint32Array","$ %Uint32ArrayPrototype%","$ %URIError%","URIError","$ %URIErrorPrototype%","$ %WeakMap%","WeakMap","$ %WeakMapPrototype%","$ %WeakSet%","WeakSet","$ %WeakSetPrototype%","allowMissing","parseHeaders","xtend","isEmpty","initParams","params","createXHR","_createXHR","called","readystatechange","loadFunc","getBody","responseText","getXml","isJson","errorFunc","evt","timeoutTimer","statusCode","failureResponse","aborted","useXDR","rawRequest","getAllResponseHeaders","XDomainRequest","XMLHttpRequest","onreadystatechange","onprogress","onabort","ontimeout","username","password","withCredentials","abort","setRequestHeader","responseType","beforeSend","send","responseXML","firefoxBugTakenEffect","origDefineProperty","arePropertyDescriptorsSupported","_","supportsDescriptors","defineProperties","getOwnPropertySymbols","scrollSetting","up","findScrollSetting","isValidPercentValue","_lines","_regionAnchorX","_regionAnchorY","_viewportAnchorX","_viewportAnchorY","_scroll"],"mappings":"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","file":"js/chunk-b124e442.6b0ba8e7.js","sourcesContent":["'use strict';\r\n\r\nvar GetIntrinsic = require('./GetIntrinsic');\r\n\r\nvar $Object = GetIntrinsic('%Object%');\r\nvar $TypeError = GetIntrinsic('%TypeError%');\r\nvar $String = GetIntrinsic('%String%');\r\n\r\nvar assertRecord = require('./helpers/assertRecord');\r\nvar $isNaN = require('./helpers/isNaN');\r\nvar $isFinite = require('./helpers/isFinite');\r\n\r\nvar sign = require('./helpers/sign');\r\nvar mod = require('./helpers/mod');\r\n\r\nvar IsCallable = require('is-callable');\r\nvar toPrimitive = require('es-to-primitive/es5');\r\n\r\nvar has = require('has');\r\n\r\n// https://es5.github.io/#x9\r\nvar ES5 = {\r\n\tToPrimitive: toPrimitive,\r\n\r\n\tToBoolean: function ToBoolean(value) {\r\n\t\treturn !!value;\r\n\t},\r\n\tToNumber: function ToNumber(value) {\r\n\t\treturn +value; // eslint-disable-line no-implicit-coercion\r\n\t},\r\n\tToInteger: function ToInteger(value) {\r\n\t\tvar number = this.ToNumber(value);\r\n\t\tif ($isNaN(number)) { return 0; }\r\n\t\tif (number === 0 || !$isFinite(number)) { return number; }\r\n\t\treturn sign(number) * Math.floor(Math.abs(number));\r\n\t},\r\n\tToInt32: function ToInt32(x) {\r\n\t\treturn this.ToNumber(x) >> 0;\r\n\t},\r\n\tToUint32: function ToUint32(x) {\r\n\t\treturn this.ToNumber(x) >>> 0;\r\n\t},\r\n\tToUint16: function ToUint16(value) {\r\n\t\tvar number = this.ToNumber(value);\r\n\t\tif ($isNaN(number) || number === 0 || !$isFinite(number)) { return 0; }\r\n\t\tvar posInt = sign(number) * Math.floor(Math.abs(number));\r\n\t\treturn mod(posInt, 0x10000);\r\n\t},\r\n\tToString: function ToString(value) {\r\n\t\treturn $String(value);\r\n\t},\r\n\tToObject: function ToObject(value) {\r\n\t\tthis.CheckObjectCoercible(value);\r\n\t\treturn $Object(value);\r\n\t},\r\n\tCheckObjectCoercible: function CheckObjectCoercible(value, optMessage) {\r\n\t\t/* jshint eqnull:true */\r\n\t\tif (value == null) {\r\n\t\t\tthrow new $TypeError(optMessage || 'Cannot call method on ' + value);\r\n\t\t}\r\n\t\treturn value;\r\n\t},\r\n\tIsCallable: IsCallable,\r\n\tSameValue: function SameValue(x, y) {\r\n\t\tif (x === y) { // 0 === -0, but they are not identical.\r\n\t\t\tif (x === 0) { return 1 / x === 1 / y; }\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\treturn $isNaN(x) && $isNaN(y);\r\n\t},\r\n\r\n\t// https://www.ecma-international.org/ecma-262/5.1/#sec-8\r\n\tType: function Type(x) {\r\n\t\tif (x === null) {\r\n\t\t\treturn 'Null';\r\n\t\t}\r\n\t\tif (typeof x === 'undefined') {\r\n\t\t\treturn 'Undefined';\r\n\t\t}\r\n\t\tif (typeof x === 'function' || typeof x === 'object') {\r\n\t\t\treturn 'Object';\r\n\t\t}\r\n\t\tif (typeof x === 'number') {\r\n\t\t\treturn 'Number';\r\n\t\t}\r\n\t\tif (typeof x === 'boolean') {\r\n\t\t\treturn 'Boolean';\r\n\t\t}\r\n\t\tif (typeof x === 'string') {\r\n\t\t\treturn 'String';\r\n\t\t}\r\n\t},\r\n\r\n\t// https://ecma-international.org/ecma-262/6.0/#sec-property-descriptor-specification-type\r\n\tIsPropertyDescriptor: function IsPropertyDescriptor(Desc) {\r\n\t\tif (this.Type(Desc) !== 'Object') {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tvar allowed = {\r\n\t\t\t'[[Configurable]]': true,\r\n\t\t\t'[[Enumerable]]': true,\r\n\t\t\t'[[Get]]': true,\r\n\t\t\t'[[Set]]': true,\r\n\t\t\t'[[Value]]': true,\r\n\t\t\t'[[Writable]]': true\r\n\t\t};\r\n\r\n\t\tfor (var key in Desc) { // eslint-disable-line\r\n\t\t\tif (has(Desc, key) && !allowed[key]) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvar isData = has(Desc, '[[Value]]');\r\n\t\tvar IsAccessor = has(Desc, '[[Get]]') || has(Desc, '[[Set]]');\r\n\t\tif (isData && IsAccessor) {\r\n\t\t\tthrow new $TypeError('Property Descriptors may not be both accessor and data descriptors');\r\n\t\t}\r\n\t\treturn true;\r\n\t},\r\n\r\n\t// https://ecma-international.org/ecma-262/5.1/#sec-8.10.1\r\n\tIsAccessorDescriptor: function IsAccessorDescriptor(Desc) {\r\n\t\tif (typeof Desc === 'undefined') {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tassertRecord(this, 'Property Descriptor', 'Desc', Desc);\r\n\r\n\t\tif (!has(Desc, '[[Get]]') && !has(Desc, '[[Set]]')) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t},\r\n\r\n\t// https://ecma-international.org/ecma-262/5.1/#sec-8.10.2\r\n\tIsDataDescriptor: function IsDataDescriptor(Desc) {\r\n\t\tif (typeof Desc === 'undefined') {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tassertRecord(this, 'Property Descriptor', 'Desc', Desc);\r\n\r\n\t\tif (!has(Desc, '[[Value]]') && !has(Desc, '[[Writable]]')) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t},\r\n\r\n\t// https://ecma-international.org/ecma-262/5.1/#sec-8.10.3\r\n\tIsGenericDescriptor: function IsGenericDescriptor(Desc) {\r\n\t\tif (typeof Desc === 'undefined') {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tassertRecord(this, 'Property Descriptor', 'Desc', Desc);\r\n\r\n\t\tif (!this.IsAccessorDescriptor(Desc) && !this.IsDataDescriptor(Desc)) {\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\t},\r\n\r\n\t// https://ecma-international.org/ecma-262/5.1/#sec-8.10.4\r\n\tFromPropertyDescriptor: function FromPropertyDescriptor(Desc) {\r\n\t\tif (typeof Desc === 'undefined') {\r\n\t\t\treturn Desc;\r\n\t\t}\r\n\r\n\t\tassertRecord(this, 'Property Descriptor', 'Desc', Desc);\r\n\r\n\t\tif (this.IsDataDescriptor(Desc)) {\r\n\t\t\treturn {\r\n\t\t\t\tvalue: Desc['[[Value]]'],\r\n\t\t\t\twritable: !!Desc['[[Writable]]'],\r\n\t\t\t\tenumerable: !!Desc['[[Enumerable]]'],\r\n\t\t\t\tconfigurable: !!Desc['[[Configurable]]']\r\n\t\t\t};\r\n\t\t} else if (this.IsAccessorDescriptor(Desc)) {\r\n\t\t\treturn {\r\n\t\t\t\tget: Desc['[[Get]]'],\r\n\t\t\t\tset: Desc['[[Set]]'],\r\n\t\t\t\tenumerable: !!Desc['[[Enumerable]]'],\r\n\t\t\t\tconfigurable: !!Desc['[[Configurable]]']\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\tthrow new $TypeError('FromPropertyDescriptor must be called with a fully populated Property Descriptor');\r\n\t\t}\r\n\t},\r\n\r\n\t// https://ecma-international.org/ecma-262/5.1/#sec-8.10.5\r\n\tToPropertyDescriptor: function ToPropertyDescriptor(Obj) {\r\n\t\tif (this.Type(Obj) !== 'Object') {\r\n\t\t\tthrow new $TypeError('ToPropertyDescriptor requires an object');\r\n\t\t}\r\n\r\n\t\tvar desc = {};\r\n\t\tif (has(Obj, 'enumerable')) {\r\n\t\t\tdesc['[[Enumerable]]'] = this.ToBoolean(Obj.enumerable);\r\n\t\t}\r\n\t\tif (has(Obj, 'configurable')) {\r\n\t\t\tdesc['[[Configurable]]'] = this.ToBoolean(Obj.configurable);\r\n\t\t}\r\n\t\tif (has(Obj, 'value')) {\r\n\t\t\tdesc['[[Value]]'] = Obj.value;\r\n\t\t}\r\n\t\tif (has(Obj, 'writable')) {\r\n\t\t\tdesc['[[Writable]]'] = this.ToBoolean(Obj.writable);\r\n\t\t}\r\n\t\tif (has(Obj, 'get')) {\r\n\t\t\tvar getter = Obj.get;\r\n\t\t\tif (typeof getter !== 'undefined' && !this.IsCallable(getter)) {\r\n\t\t\t\tthrow new TypeError('getter must be a function');\r\n\t\t\t}\r\n\t\t\tdesc['[[Get]]'] = getter;\r\n\t\t}\r\n\t\tif (has(Obj, 'set')) {\r\n\t\t\tvar setter = Obj.set;\r\n\t\t\tif (typeof setter !== 'undefined' && !this.IsCallable(setter)) {\r\n\t\t\t\tthrow new $TypeError('setter must be a function');\r\n\t\t\t}\r\n\t\t\tdesc['[[Set]]'] = setter;\r\n\t\t}\r\n\r\n\t\tif ((has(desc, '[[Get]]') || has(desc, '[[Set]]')) && (has(desc, '[[Value]]') || has(desc, '[[Writable]]'))) {\r\n\t\t\tthrow new $TypeError('Invalid property descriptor. Cannot both specify accessors and a value or writable attribute');\r\n\t\t}\r\n\t\treturn desc;\r\n\t}\r\n};\r\n\r\nmodule.exports = ES5;\r\n","'use strict';\r\n\r\nvar implementation = require('./implementation');\r\n\r\nmodule.exports = Function.prototype.bind || implementation;\r\n","'use strict';\r\n\r\nvar implementation = require('./implementation');\r\n\r\nvar zeroWidthSpace = '\\u200b';\r\n\r\nmodule.exports = function getPolyfill() {\r\n\tif (String.prototype.trim && zeroWidthSpace.trim() === zeroWidthSpace) {\r\n\t\treturn String.prototype.trim;\r\n\t}\r\n\treturn implementation;\r\n};\r\n","function clean (s) {\r\n  return s.replace(/\\n\\r?\\s*/g, '')\r\n}\r\n\r\n\r\nmodule.exports = function tsml (sa) {\r\n  var s = ''\r\n    , i = 0\r\n\r\n  for (; i < arguments.length; i++)\r\n    s += clean(sa[i]) + (arguments[i + 1] || '')\r\n\r\n  return s\r\n}","module.exports = Number.isNaN || function isNaN(a) {\r\n\treturn a !== a;\r\n};\r\n","'use strict';\r\n\r\nvar fnToStr = Function.prototype.toString;\r\n\r\nvar constructorRegex = /^\\s*class\\b/;\r\nvar isES6ClassFn = function isES6ClassFunction(value) {\r\n\ttry {\r\n\t\tvar fnStr = fnToStr.call(value);\r\n\t\treturn constructorRegex.test(fnStr);\r\n\t} catch (e) {\r\n\t\treturn false; // not a function\r\n\t}\r\n};\r\n\r\nvar tryFunctionObject = function tryFunctionToStr(value) {\r\n\ttry {\r\n\t\tif (isES6ClassFn(value)) { return false; }\r\n\t\tfnToStr.call(value);\r\n\t\treturn true;\r\n\t} catch (e) {\r\n\t\treturn false;\r\n\t}\r\n};\r\nvar toStr = Object.prototype.toString;\r\nvar fnClass = '[object Function]';\r\nvar genClass = '[object GeneratorFunction]';\r\nvar hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\r\n\r\nmodule.exports = function isCallable(value) {\r\n\tif (!value) { return false; }\r\n\tif (typeof value !== 'function' && typeof value !== 'object') { return false; }\r\n\tif (typeof value === 'function' && !value.prototype) { return true; }\r\n\tif (hasToStringTag) { return tryFunctionObject(value); }\r\n\tif (isES6ClassFn(value)) { return false; }\r\n\tvar strClass = toStr.call(value);\r\n\treturn strClass === fnClass || strClass === genClass;\r\n};\r\n","/**\r\n * Copyright 2013 vtt.js Contributors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n// Default exports for Node. Export the extended versions of VTTCue and\r\n// VTTRegion in Node since we likely want the capability to convert back and\r\n// forth between JSON. If we don't then it's not that big of a deal since we're\r\n// off browser.\r\n\r\nvar window = require('global/window');\r\n\r\nvar vttjs = module.exports = {\r\n  WebVTT: require(\"./vtt.js\"),\r\n  VTTCue: require(\"./vttcue.js\"),\r\n  VTTRegion: require(\"./vttregion.js\")\r\n};\r\n\r\nwindow.vttjs = vttjs;\r\nwindow.WebVTT = vttjs.WebVTT;\r\n\r\nvar cueShim = vttjs.VTTCue;\r\nvar regionShim = vttjs.VTTRegion;\r\nvar nativeVTTCue = window.VTTCue;\r\nvar nativeVTTRegion = window.VTTRegion;\r\n\r\nvttjs.shim = function() {\r\n  window.VTTCue = cueShim;\r\n  window.VTTRegion = regionShim;\r\n};\r\n\r\nvttjs.restore = function() {\r\n  window.VTTCue = nativeVTTCue;\r\n  window.VTTRegion = nativeVTTRegion;\r\n};\r\n\r\nif (!window.VTTCue) {\r\n  vttjs.shim();\r\n}\r\n","'use strict';\r\n\r\nvar toStr = Object.prototype.toString;\r\n\r\nvar isPrimitive = require('./helpers/isPrimitive');\r\n\r\nvar isCallable = require('is-callable');\r\n\r\n// http://ecma-international.org/ecma-262/5.1/#sec-8.12.8\r\nvar ES5internalSlots = {\r\n\t'[[DefaultValue]]': function (O) {\r\n\t\tvar actualHint;\r\n\t\tif (arguments.length > 1) {\r\n\t\t\tactualHint = arguments[1];\r\n\t\t} else {\r\n\t\t\tactualHint = toStr.call(O) === '[object Date]' ? String : Number;\r\n\t\t}\r\n\r\n\t\tif (actualHint === String || actualHint === Number) {\r\n\t\t\tvar methods = actualHint === String ? ['toString', 'valueOf'] : ['valueOf', 'toString'];\r\n\t\t\tvar value, i;\r\n\t\t\tfor (i = 0; i < methods.length; ++i) {\r\n\t\t\t\tif (isCallable(O[methods[i]])) {\r\n\t\t\t\t\tvalue = O[methods[i]]();\r\n\t\t\t\t\tif (isPrimitive(value)) {\r\n\t\t\t\t\t\treturn value;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthrow new TypeError('No default value');\r\n\t\t}\r\n\t\tthrow new TypeError('invalid [[DefaultValue]] hint supplied');\r\n\t}\r\n};\r\n\r\n// http://ecma-international.org/ecma-262/5.1/#sec-9.1\r\nmodule.exports = function ToPrimitive(input) {\r\n\tif (isPrimitive(input)) {\r\n\t\treturn input;\r\n\t}\r\n\tif (arguments.length > 1) {\r\n\t\treturn ES5internalSlots['[[DefaultValue]]'](input, arguments[1]);\r\n\t}\r\n\treturn ES5internalSlots['[[DefaultValue]]'](input);\r\n};\r\n","/**\r\n * @license\r\n * Video.js 6.13.0 <http://videojs.com/>\r\n * Copyright Brightcove, Inc. <https://www.brightcove.com/>\r\n * Available under Apache License Version 2.0\r\n * <https://github.com/videojs/video.js/blob/master/LICENSE>\r\n *\r\n * Includes vtt.js <https://github.com/mozilla/vtt.js>\r\n * Available under Apache License Version 2.0\r\n * <https://github.com/mozilla/vtt.js/blob/master/LICENSE>\r\n */\r\n\r\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\r\n\r\nvar window = _interopDefault(require('global/window'));\r\nvar document = _interopDefault(require('global/document'));\r\nvar tsml = _interopDefault(require('tsml'));\r\nvar safeParseTuple = _interopDefault(require('safe-json-parse/tuple'));\r\nvar xhr = _interopDefault(require('xhr'));\r\nvar vtt = _interopDefault(require('videojs-vtt.js'));\r\n\r\nvar version = \"6.13.0\";\r\n\r\n/**\r\n * @file browser.js\r\n * @module browser\r\n */\r\nvar USER_AGENT = window.navigator && window.navigator.userAgent || '';\r\nvar webkitVersionMap = /AppleWebKit\\/([\\d.]+)/i.exec(USER_AGENT);\r\nvar appleWebkitVersion = webkitVersionMap ? parseFloat(webkitVersionMap.pop()) : null;\r\n\r\n/*\r\n * Device is an iPhone\r\n *\r\n * @type {Boolean}\r\n * @constant\r\n * @private\r\n */\r\nvar IS_IPAD = /iPad/i.test(USER_AGENT);\r\n\r\n// The Facebook app's UIWebView identifies as both an iPhone and iPad, so\r\n// to identify iPhones, we need to exclude iPads.\r\n// http://artsy.github.io/blog/2012/10/18/the-perils-of-ios-user-agent-sniffing/\r\nvar IS_IPHONE = /iPhone/i.test(USER_AGENT) && !IS_IPAD;\r\nvar IS_IPOD = /iPod/i.test(USER_AGENT);\r\nvar IS_IOS = IS_IPHONE || IS_IPAD || IS_IPOD;\r\n\r\nvar IOS_VERSION = function () {\r\n  var match = USER_AGENT.match(/OS (\\d+)_/i);\r\n\r\n  if (match && match[1]) {\r\n    return match[1];\r\n  }\r\n  return null;\r\n}();\r\n\r\nvar IS_ANDROID = /Android/i.test(USER_AGENT);\r\nvar ANDROID_VERSION = function () {\r\n  // This matches Android Major.Minor.Patch versions\r\n  // ANDROID_VERSION is Major.Minor as a Number, if Minor isn't available, then only Major is returned\r\n  var match = USER_AGENT.match(/Android (\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))*/i);\r\n\r\n  if (!match) {\r\n    return null;\r\n  }\r\n\r\n  var major = match[1] && parseFloat(match[1]);\r\n  var minor = match[2] && parseFloat(match[2]);\r\n\r\n  if (major && minor) {\r\n    return parseFloat(match[1] + '.' + match[2]);\r\n  } else if (major) {\r\n    return major;\r\n  }\r\n  return null;\r\n}();\r\n\r\n// Old Android is defined as Version older than 2.3, and requiring a webkit version of the android browser\r\nvar IS_OLD_ANDROID = IS_ANDROID && /webkit/i.test(USER_AGENT) && ANDROID_VERSION < 2.3;\r\nvar IS_NATIVE_ANDROID = IS_ANDROID && ANDROID_VERSION < 5 && appleWebkitVersion < 537;\r\n\r\nvar IS_FIREFOX = /Firefox/i.test(USER_AGENT);\r\nvar IS_EDGE = /Edge/i.test(USER_AGENT);\r\nvar IS_CHROME = !IS_EDGE && (/Chrome/i.test(USER_AGENT) || /CriOS/i.test(USER_AGENT));\r\nvar CHROME_VERSION = function () {\r\n  var match = USER_AGENT.match(/(Chrome|CriOS)\\/(\\d+)/);\r\n\r\n  if (match && match[2]) {\r\n    return parseFloat(match[2]);\r\n  }\r\n  return null;\r\n}();\r\nvar IS_IE8 = /MSIE\\s8\\.0/.test(USER_AGENT);\r\nvar IE_VERSION = function () {\r\n  var result = /MSIE\\s(\\d+)\\.\\d/.exec(USER_AGENT);\r\n  var version = result && parseFloat(result[1]);\r\n\r\n  if (!version && /Trident\\/7.0/i.test(USER_AGENT) && /rv:11.0/.test(USER_AGENT)) {\r\n    // IE 11 has a different user agent string than other IE versions\r\n    version = 11.0;\r\n  }\r\n\r\n  return version;\r\n}();\r\n\r\nvar IS_SAFARI = /Safari/i.test(USER_AGENT) && !IS_CHROME && !IS_ANDROID && !IS_EDGE;\r\nvar IS_ANY_SAFARI = (IS_SAFARI || IS_IOS) && !IS_CHROME;\r\n\r\nvar TOUCH_ENABLED = isReal() && ('ontouchstart' in window || window.navigator.maxTouchPoints || window.DocumentTouch && window.document instanceof window.DocumentTouch);\r\n\r\nvar BACKGROUND_SIZE_SUPPORTED = isReal() && 'backgroundSize' in window.document.createElement('video').style;\r\n\r\nvar browser = (Object.freeze || Object)({\r\n\tIS_IPAD: IS_IPAD,\r\n\tIS_IPHONE: IS_IPHONE,\r\n\tIS_IPOD: IS_IPOD,\r\n\tIS_IOS: IS_IOS,\r\n\tIOS_VERSION: IOS_VERSION,\r\n\tIS_ANDROID: IS_ANDROID,\r\n\tANDROID_VERSION: ANDROID_VERSION,\r\n\tIS_OLD_ANDROID: IS_OLD_ANDROID,\r\n\tIS_NATIVE_ANDROID: IS_NATIVE_ANDROID,\r\n\tIS_FIREFOX: IS_FIREFOX,\r\n\tIS_EDGE: IS_EDGE,\r\n\tIS_CHROME: IS_CHROME,\r\n\tCHROME_VERSION: CHROME_VERSION,\r\n\tIS_IE8: IS_IE8,\r\n\tIE_VERSION: IE_VERSION,\r\n\tIS_SAFARI: IS_SAFARI,\r\n\tIS_ANY_SAFARI: IS_ANY_SAFARI,\r\n\tTOUCH_ENABLED: TOUCH_ENABLED,\r\n\tBACKGROUND_SIZE_SUPPORTED: BACKGROUND_SIZE_SUPPORTED\r\n});\r\n\r\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\r\n  return typeof obj;\r\n} : function (obj) {\r\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nvar classCallCheck = function (instance, Constructor) {\r\n  if (!(instance instanceof Constructor)) {\r\n    throw new TypeError(\"Cannot call a class as a function\");\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nvar inherits = function (subClass, superClass) {\r\n  if (typeof superClass !== \"function\" && superClass !== null) {\r\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\r\n  }\r\n\r\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\r\n    constructor: {\r\n      value: subClass,\r\n      enumerable: false,\r\n      writable: true,\r\n      configurable: true\r\n    }\r\n  });\r\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nvar possibleConstructorReturn = function (self, call) {\r\n  if (!self) {\r\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\r\n  }\r\n\r\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nvar taggedTemplateLiteralLoose = function (strings, raw) {\r\n  strings.raw = raw;\r\n  return strings;\r\n};\r\n\r\n/**\r\n * @file obj.js\r\n * @module obj\r\n */\r\n\r\n/**\r\n * @callback obj:EachCallback\r\n *\r\n * @param {Mixed} value\r\n *        The current key for the object that is being iterated over.\r\n *\r\n * @param {string} key\r\n *        The current key-value for object that is being iterated over\r\n */\r\n\r\n/**\r\n * @callback obj:ReduceCallback\r\n *\r\n * @param {Mixed} accum\r\n *        The value that is accumulating over the reduce loop.\r\n *\r\n * @param {Mixed} value\r\n *        The current key for the object that is being iterated over.\r\n *\r\n * @param {string} key\r\n *        The current key-value for object that is being iterated over\r\n *\r\n * @return {Mixed}\r\n *         The new accumulated value.\r\n */\r\nvar toString = Object.prototype.toString;\r\n\r\n/**\r\n * Get the keys of an Object\r\n *\r\n * @param {Object}\r\n *        The Object to get the keys from\r\n *\r\n * @return {string[]}\r\n *         An array of the keys from the object. Returns an empty array if the\r\n *         object passed in was invalid or had no keys.\r\n *\r\n * @private\r\n */\r\nvar keys = function keys(object) {\r\n  return isObject(object) ? Object.keys(object) : [];\r\n};\r\n\r\n/**\r\n * Array-like iteration for objects.\r\n *\r\n * @param {Object} object\r\n *        The object to iterate over\r\n *\r\n * @param {obj:EachCallback} fn\r\n *        The callback function which is called for each key in the object.\r\n */\r\nfunction each(object, fn) {\r\n  keys(object).forEach(function (key) {\r\n    return fn(object[key], key);\r\n  });\r\n}\r\n\r\n/**\r\n * Array-like reduce for objects.\r\n *\r\n * @param {Object} object\r\n *        The Object that you want to reduce.\r\n *\r\n * @param {Function} fn\r\n *         A callback function which is called for each key in the object. It\r\n *         receives the accumulated value and the per-iteration value and key\r\n *         as arguments.\r\n *\r\n * @param {Mixed} [initial = 0]\r\n *        Starting value\r\n *\r\n * @return {Mixed}\r\n *         The final accumulated value.\r\n */\r\nfunction reduce(object, fn) {\r\n  var initial = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\r\n\r\n  return keys(object).reduce(function (accum, key) {\r\n    return fn(accum, object[key], key);\r\n  }, initial);\r\n}\r\n\r\n/**\r\n * Object.assign-style object shallow merge/extend.\r\n *\r\n * @param  {Object} target\r\n * @param  {Object} ...sources\r\n * @return {Object}\r\n */\r\nfunction assign(target) {\r\n  for (var _len = arguments.length, sources = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\r\n    sources[_key - 1] = arguments[_key];\r\n  }\r\n\r\n  if (Object.assign) {\r\n    return Object.assign.apply(Object, [target].concat(sources));\r\n  }\r\n\r\n  sources.forEach(function (source) {\r\n    if (!source) {\r\n      return;\r\n    }\r\n\r\n    each(source, function (value, key) {\r\n      target[key] = value;\r\n    });\r\n  });\r\n\r\n  return target;\r\n}\r\n\r\n/**\r\n * Returns whether a value is an object of any kind - including DOM nodes,\r\n * arrays, regular expressions, etc. Not functions, though.\r\n *\r\n * This avoids the gotcha where using `typeof` on a `null` value\r\n * results in `'object'`.\r\n *\r\n * @param  {Object} value\r\n * @return {Boolean}\r\n */\r\nfunction isObject(value) {\r\n  return !!value && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object';\r\n}\r\n\r\n/**\r\n * Returns whether an object appears to be a \"plain\" object - that is, a\r\n * direct instance of `Object`.\r\n *\r\n * @param  {Object} value\r\n * @return {Boolean}\r\n */\r\nfunction isPlain(value) {\r\n  return isObject(value) && toString.call(value) === '[object Object]' && value.constructor === Object;\r\n}\r\n\r\n/**\r\n * @file create-logger.js\r\n * @module create-logger\r\n */\r\n// This is the private tracking variable for the logging history.\r\nvar history = [];\r\n\r\n/**\r\n * Log messages to the console and history based on the type of message\r\n *\r\n * @private\r\n * @param  {string} type\r\n *         The name of the console method to use.\r\n *\r\n * @param  {Array} args\r\n *         The arguments to be passed to the matching console method.\r\n */\r\nvar LogByTypeFactory = function LogByTypeFactory(name, log) {\r\n  return function (type, level, args, stringify) {\r\n    var lvl = log.levels[level];\r\n    var lvlRegExp = new RegExp('^(' + lvl + ')$');\r\n\r\n    if (type !== 'log') {\r\n\r\n      // Add the type to the front of the message when it's not \"log\".\r\n      args.unshift(type.toUpperCase() + ':');\r\n    }\r\n\r\n    // Add console prefix after adding to history.\r\n    args.unshift(name + ':');\r\n\r\n    // Add a clone of the args at this point to history.\r\n    if (history) {\r\n      history.push([].concat(args));\r\n    }\r\n\r\n    // If there's no console then don't try to output messages, but they will\r\n    // still be stored in history.\r\n    if (!window.console) {\r\n      return;\r\n    }\r\n\r\n    // Was setting these once outside of this function, but containing them\r\n    // in the function makes it easier to test cases where console doesn't exist\r\n    // when the module is executed.\r\n    var fn = window.console[type];\r\n\r\n    if (!fn && type === 'debug') {\r\n      // Certain browsers don't have support for console.debug. For those, we\r\n      // should default to the closest comparable log.\r\n      fn = window.console.info || window.console.log;\r\n    }\r\n\r\n    // Bail out if there's no console or if this type is not allowed by the\r\n    // current logging level.\r\n    if (!fn || !lvl || !lvlRegExp.test(type)) {\r\n      return;\r\n    }\r\n\r\n    // IEs previous to 11 log objects uselessly as \"[object Object]\"; so, JSONify\r\n    // objects and arrays for those less-capable browsers.\r\n    if (stringify) {\r\n      args = args.map(function (a) {\r\n        if (isObject(a) || Array.isArray(a)) {\r\n          try {\r\n            return JSON.stringify(a);\r\n          } catch (x) {\r\n            return String(a);\r\n          }\r\n        }\r\n\r\n        // Cast to string before joining, so we get null and undefined explicitly\r\n        // included in output (as we would in a modern console).\r\n        return String(a);\r\n      }).join(' ');\r\n    }\r\n\r\n    // Old IE versions do not allow .apply() for console methods (they are\r\n    // reported as objects rather than functions).\r\n    if (!fn.apply) {\r\n      fn(args);\r\n    } else {\r\n      fn[Array.isArray(args) ? 'apply' : 'call'](window.console, args);\r\n    }\r\n  };\r\n};\r\n\r\nfunction createLogger$1(name) {\r\n  // This is the private tracking variable for logging level.\r\n  var level = 'info';\r\n\r\n  // the curried logByType bound to the specific log and history\r\n  var logByType = void 0;\r\n\r\n  /**\r\n   * Logs plain debug messages. Similar to `console.log`.\r\n   *\r\n   * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\r\n   * of our JSDoc template, we cannot properly document this as both a function\r\n   * and a namespace, so its function signature is documented here.\r\n   *\r\n   * #### Arguments\r\n   * ##### *args\r\n   * Mixed[]\r\n   *\r\n   * Any combination of values that could be passed to `console.log()`.\r\n   *\r\n   * #### Return Value\r\n   *\r\n   * `undefined`\r\n   *\r\n   * @namespace\r\n   * @param    {Mixed[]} args\r\n   *           One or more messages or objects that should be logged.\r\n   */\r\n  var log = function log() {\r\n    var stringify = log.stringify || IE_VERSION && IE_VERSION < 11;\r\n\r\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\r\n      args[_key] = arguments[_key];\r\n    }\r\n\r\n    logByType('log', level, args, stringify);\r\n  };\r\n\r\n  // This is the logByType helper that the logging methods below use\r\n  logByType = LogByTypeFactory(name, log);\r\n\r\n  /**\r\n   * Create a new sublogger which chains the old name to the new name.\r\n   *\r\n   * For example, doing `videojs.log.createLogger('player')` and then using that logger will log the following:\r\n   * ```js\r\n   *  mylogger('foo');\r\n   *  // > VIDEOJS: player: foo\r\n   * ```\r\n   *\r\n   * @param {string} name\r\n   *        The name to add call the new logger\r\n   * @return {Object}\r\n   */\r\n  log.createLogger = function (subname) {\r\n    return createLogger$1(name + ': ' + subname);\r\n  };\r\n\r\n  /**\r\n   * Enumeration of available logging levels, where the keys are the level names\r\n   * and the values are `|`-separated strings containing logging methods allowed\r\n   * in that logging level. These strings are used to create a regular expression\r\n   * matching the function name being called.\r\n   *\r\n   * Levels provided by Video.js are:\r\n   *\r\n   * - `off`: Matches no calls. Any value that can be cast to `false` will have\r\n   *   this effect. The most restrictive.\r\n   * - `all`: Matches only Video.js-provided functions (`debug`, `log`,\r\n   *   `log.warn`, and `log.error`).\r\n   * - `debug`: Matches `log.debug`, `log`, `log.warn`, and `log.error` calls.\r\n   * - `info` (default): Matches `log`, `log.warn`, and `log.error` calls.\r\n   * - `warn`: Matches `log.warn` and `log.error` calls.\r\n   * - `error`: Matches only `log.error` calls.\r\n   *\r\n   * @type {Object}\r\n   */\r\n  log.levels = {\r\n    all: 'debug|log|warn|error',\r\n    off: '',\r\n    debug: 'debug|log|warn|error',\r\n    info: 'log|warn|error',\r\n    warn: 'warn|error',\r\n    error: 'error',\r\n    DEFAULT: level\r\n  };\r\n\r\n  /**\r\n   * Get or set the current logging level.\r\n   *\r\n   * If a string matching a key from {@link module:log.levels} is provided, acts\r\n   * as a setter.\r\n   *\r\n   * @param  {string} [lvl]\r\n   *         Pass a valid level to set a new logging level.\r\n   *\r\n   * @return {string}\r\n   *         The current logging level.\r\n   */\r\n  log.level = function (lvl) {\r\n    if (typeof lvl === 'string') {\r\n      if (!log.levels.hasOwnProperty(lvl)) {\r\n        throw new Error('\"' + lvl + '\" in not a valid log level');\r\n      }\r\n      level = lvl;\r\n    }\r\n    return level;\r\n  };\r\n\r\n  /**\r\n   * Returns an array containing everything that has been logged to the history.\r\n   *\r\n   * This array is a shallow clone of the internal history record. However, its\r\n   * contents are _not_ cloned; so, mutating objects inside this array will\r\n   * mutate them in history.\r\n   *\r\n   * @return {Array}\r\n   */\r\n  log.history = function () {\r\n    return history ? [].concat(history) : [];\r\n  };\r\n\r\n  /**\r\n   * Allows you to filter the history by the given logger name\r\n   *\r\n   * @param {string} fname\r\n   *        The name to filter by\r\n   *\r\n   * @return {Array}\r\n   *         The filtered list to return\r\n   */\r\n  log.history.filter = function (fname) {\r\n    return (history || []).filter(function (historyItem) {\r\n      // if the first item in each historyItem includes `fname`, then it's a match\r\n      return new RegExp('.*' + fname + '.*').test(historyItem[0]);\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Clears the internal history tracking, but does not prevent further history\r\n   * tracking.\r\n   */\r\n  log.history.clear = function () {\r\n    if (history) {\r\n      history.length = 0;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Disable history tracking if it is currently enabled.\r\n   */\r\n  log.history.disable = function () {\r\n    if (history !== null) {\r\n      history.length = 0;\r\n      history = null;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Enable history tracking if it is currently disabled.\r\n   */\r\n  log.history.enable = function () {\r\n    if (history === null) {\r\n      history = [];\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Logs error messages. Similar to `console.error`.\r\n   *\r\n   * @param {Mixed[]} args\r\n   *        One or more messages or objects that should be logged as an error\r\n   */\r\n  log.error = function () {\r\n    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\r\n      args[_key2] = arguments[_key2];\r\n    }\r\n\r\n    return logByType('error', level, args);\r\n  };\r\n\r\n  /**\r\n   * Logs warning messages. Similar to `console.warn`.\r\n   *\r\n   * @param {Mixed[]} args\r\n   *        One or more messages or objects that should be logged as a warning.\r\n   */\r\n  log.warn = function () {\r\n    for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\r\n      args[_key3] = arguments[_key3];\r\n    }\r\n\r\n    return logByType('warn', level, args);\r\n  };\r\n\r\n  /**\r\n   * Logs debug messages. Similar to `console.debug`, but may also act as a comparable\r\n   * log if `console.debug` is not available\r\n   *\r\n   * @param {Mixed[]} args\r\n   *        One or more messages or objects that should be logged as debug.\r\n   */\r\n  log.debug = function () {\r\n    for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\r\n      args[_key4] = arguments[_key4];\r\n    }\r\n\r\n    return logByType('debug', level, args);\r\n  };\r\n\r\n  return log;\r\n}\r\n\r\n/**\r\n * @file log.js\r\n * @module log\r\n */\r\nvar log = createLogger$1('VIDEOJS');\r\nvar createLogger = log.createLogger;\r\n\r\n/**\r\n * @file computed-style.js\r\n * @module computed-style\r\n */\r\n/**\r\n * A safe getComputedStyle with an IE8 fallback.\r\n *\r\n * This is needed because in Firefox, if the player is loaded in an iframe with\r\n * `display:none`, then `getComputedStyle` returns `null`, so, we do a null-check to\r\n * make sure  that the player doesn't break in these cases.\r\n *\r\n * @param {Element} el\r\n *        The element you want the computed style of\r\n *\r\n * @param {string} prop\r\n *        The property name you want\r\n *\r\n * @see https://bugzilla.mozilla.org/show_bug.cgi?id=548397\r\n *\r\n * @static\r\n * @const\r\n */\r\nfunction computedStyle(el, prop) {\r\n  if (!el || !prop) {\r\n    return '';\r\n  }\r\n\r\n  if (typeof window.getComputedStyle === 'function') {\r\n    var cs = window.getComputedStyle(el);\r\n\r\n    return cs ? cs[prop] : '';\r\n  }\r\n\r\n  return el.currentStyle[prop] || '';\r\n}\r\n\r\nvar _templateObject = taggedTemplateLiteralLoose(['Setting attributes in the second argument of createEl()\\n                has been deprecated. Use the third argument instead.\\n                createEl(type, properties, attributes). Attempting to set ', ' to ', '.'], ['Setting attributes in the second argument of createEl()\\n                has been deprecated. Use the third argument instead.\\n                createEl(type, properties, attributes). Attempting to set ', ' to ', '.']);\r\n\r\n/**\r\n * @file dom.js\r\n * @module dom\r\n */\r\n/**\r\n * Detect if a value is a string with any non-whitespace characters.\r\n *\r\n * @param {string} str\r\n *        The string to check\r\n *\r\n * @return {boolean}\r\n *         - True if the string is non-blank\r\n *         - False otherwise\r\n *\r\n */\r\nfunction isNonBlankString(str) {\r\n  return typeof str === 'string' && /\\S/.test(str);\r\n}\r\n\r\n/**\r\n * Throws an error if the passed string has whitespace. This is used by\r\n * class methods to be relatively consistent with the classList API.\r\n *\r\n * @param {string} str\r\n *         The string to check for whitespace.\r\n *\r\n * @throws {Error}\r\n *         Throws an error if there is whitespace in the string.\r\n *\r\n */\r\nfunction throwIfWhitespace(str) {\r\n  if (/\\s/.test(str)) {\r\n    throw new Error('class has illegal whitespace characters');\r\n  }\r\n}\r\n\r\n/**\r\n * Produce a regular expression for matching a className within an elements className.\r\n *\r\n * @param {string} className\r\n *         The className to generate the RegExp for.\r\n *\r\n * @return {RegExp}\r\n *         The RegExp that will check for a specific `className` in an elements\r\n *         className.\r\n */\r\nfunction classRegExp(className) {\r\n  return new RegExp('(^|\\\\s)' + className + '($|\\\\s)');\r\n}\r\n\r\n/**\r\n * Whether the current DOM interface appears to be real.\r\n *\r\n * @return {Boolean}\r\n */\r\nfunction isReal() {\r\n  return (\r\n\r\n    // Both document and window will never be undefined thanks to `global`.\r\n    document === window.document &&\r\n\r\n    // In IE < 9, DOM methods return \"object\" as their type, so all we can\r\n    // confidently check is that it exists.\r\n    typeof document.createElement !== 'undefined'\r\n  );\r\n}\r\n\r\n/**\r\n * Determines, via duck typing, whether or not a value is a DOM element.\r\n *\r\n * @param {Mixed} value\r\n *        The thing to check\r\n *\r\n * @return {boolean}\r\n *         - True if it is a DOM element\r\n *         - False otherwise\r\n */\r\nfunction isEl(value) {\r\n  return isObject(value) && value.nodeType === 1;\r\n}\r\n\r\n/**\r\n * Determines if the current DOM is embedded in an iframe.\r\n *\r\n * @return {boolean}\r\n *\r\n */\r\nfunction isInFrame() {\r\n\r\n  // We need a try/catch here because Safari will throw errors when attempting\r\n  // to get either `parent` or `self`\r\n  try {\r\n    return window.parent !== window.self;\r\n  } catch (x) {\r\n    return true;\r\n  }\r\n}\r\n\r\n/**\r\n * Creates functions to query the DOM using a given method.\r\n *\r\n * @param {string} method\r\n *         The method to create the query with.\r\n *\r\n * @return {Function}\r\n *         The query method\r\n */\r\nfunction createQuerier(method) {\r\n  return function (selector, context) {\r\n    if (!isNonBlankString(selector)) {\r\n      return document[method](null);\r\n    }\r\n    if (isNonBlankString(context)) {\r\n      context = document.querySelector(context);\r\n    }\r\n\r\n    var ctx = isEl(context) ? context : document;\r\n\r\n    return ctx[method] && ctx[method](selector);\r\n  };\r\n}\r\n\r\n/**\r\n * Creates an element and applies properties.\r\n *\r\n * @param {string} [tagName='div']\r\n *         Name of tag to be created.\r\n *\r\n * @param {Object} [properties={}]\r\n *         Element properties to be applied.\r\n *\r\n * @param {Object} [attributes={}]\r\n *         Element attributes to be applied.\r\n *\r\n * @param {String|Element|TextNode|Array|Function} [content]\r\n *         Contents for the element (see: {@link dom:normalizeContent})\r\n *\r\n * @return {Element}\r\n *         The element that was created.\r\n */\r\nfunction createEl() {\r\n  var tagName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'div';\r\n  var properties = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n  var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n  var content = arguments[3];\r\n\r\n  var el = document.createElement(tagName);\r\n\r\n  Object.getOwnPropertyNames(properties).forEach(function (propName) {\r\n    var val = properties[propName];\r\n\r\n    // See #2176\r\n    // We originally were accepting both properties and attributes in the\r\n    // same object, but that doesn't work so well.\r\n    if (propName.indexOf('aria-') !== -1 || propName === 'role' || propName === 'type') {\r\n      log.warn(tsml(_templateObject, propName, val));\r\n      el.setAttribute(propName, val);\r\n\r\n      // Handle textContent since it's not supported everywhere and we have a\r\n      // method for it.\r\n    } else if (propName === 'textContent') {\r\n      textContent(el, val);\r\n    } else {\r\n      el[propName] = val;\r\n    }\r\n  });\r\n\r\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\r\n    el.setAttribute(attrName, attributes[attrName]);\r\n  });\r\n\r\n  if (content) {\r\n    appendContent(el, content);\r\n  }\r\n\r\n  return el;\r\n}\r\n\r\n/**\r\n * Injects text into an element, replacing any existing contents entirely.\r\n *\r\n * @param {Element} el\r\n *        The element to add text content into\r\n *\r\n * @param {string} text\r\n *        The text content to add.\r\n *\r\n * @return {Element}\r\n *         The element with added text content.\r\n */\r\nfunction textContent(el, text) {\r\n  if (typeof el.textContent === 'undefined') {\r\n    el.innerText = text;\r\n  } else {\r\n    el.textContent = text;\r\n  }\r\n  return el;\r\n}\r\n\r\n/**\r\n * Insert an element as the first child node of another\r\n *\r\n * @param {Element} child\r\n *        Element to insert\r\n *\r\n * @param {Element} parent\r\n *        Element to insert child into\r\n */\r\nfunction prependTo(child, parent) {\r\n  if (parent.firstChild) {\r\n    parent.insertBefore(child, parent.firstChild);\r\n  } else {\r\n    parent.appendChild(child);\r\n  }\r\n}\r\n\r\n/**\r\n * Check if an element has a CSS class\r\n *\r\n * @param {Element} element\r\n *        Element to check\r\n *\r\n * @param {string} classToCheck\r\n *        Class name to check for\r\n *\r\n * @return {boolean}\r\n *         - True if the element had the class\r\n *         - False otherwise.\r\n *\r\n * @throws {Error}\r\n *         Throws an error if `classToCheck` has white space.\r\n */\r\nfunction hasClass(element, classToCheck) {\r\n  throwIfWhitespace(classToCheck);\r\n  if (element.classList) {\r\n    return element.classList.contains(classToCheck);\r\n  }\r\n  return classRegExp(classToCheck).test(element.className);\r\n}\r\n\r\n/**\r\n * Add a CSS class name to an element\r\n *\r\n * @param {Element} element\r\n *        Element to add class name to.\r\n *\r\n * @param {string} classToAdd\r\n *        Class name to add.\r\n *\r\n * @return {Element}\r\n *         The dom element with the added class name.\r\n */\r\nfunction addClass(element, classToAdd) {\r\n  if (element.classList) {\r\n    element.classList.add(classToAdd);\r\n\r\n    // Don't need to `throwIfWhitespace` here because `hasElClass` will do it\r\n    // in the case of classList not being supported.\r\n  } else if (!hasClass(element, classToAdd)) {\r\n    element.className = (element.className + ' ' + classToAdd).trim();\r\n  }\r\n\r\n  return element;\r\n}\r\n\r\n/**\r\n * Remove a CSS class name from an element\r\n *\r\n * @param {Element} element\r\n *        Element to remove a class name from.\r\n *\r\n * @param {string} classToRemove\r\n *        Class name to remove\r\n *\r\n * @return {Element}\r\n *         The dom element with class name removed.\r\n */\r\nfunction removeClass(element, classToRemove) {\r\n  if (element.classList) {\r\n    element.classList.remove(classToRemove);\r\n  } else {\r\n    throwIfWhitespace(classToRemove);\r\n    element.className = element.className.split(/\\s+/).filter(function (c) {\r\n      return c !== classToRemove;\r\n    }).join(' ');\r\n  }\r\n\r\n  return element;\r\n}\r\n\r\n/**\r\n * The callback definition for toggleElClass.\r\n *\r\n * @callback Dom~PredicateCallback\r\n * @param {Element} element\r\n *        The DOM element of the Component.\r\n *\r\n * @param {string} classToToggle\r\n *        The `className` that wants to be toggled\r\n *\r\n * @return {boolean|undefined}\r\n *         - If true the `classToToggle` will get added to `element`.\r\n *         - If false the `classToToggle` will get removed from `element`.\r\n *         - If undefined this callback will be ignored\r\n */\r\n\r\n/**\r\n * Adds or removes a CSS class name on an element depending on an optional\r\n * condition or the presence/absence of the class name.\r\n *\r\n * @param {Element} element\r\n *        The element to toggle a class name on.\r\n *\r\n * @param {string} classToToggle\r\n *        The class that should be toggled\r\n *\r\n * @param {boolean|PredicateCallback} [predicate]\r\n *        See the return value for {@link Dom~PredicateCallback}\r\n *\r\n * @return {Element}\r\n *         The element with a class that has been toggled.\r\n */\r\nfunction toggleClass(element, classToToggle, predicate) {\r\n\r\n  // This CANNOT use `classList` internally because IE does not support the\r\n  // second parameter to the `classList.toggle()` method! Which is fine because\r\n  // `classList` will be used by the add/remove functions.\r\n  var has = hasClass(element, classToToggle);\r\n\r\n  if (typeof predicate === 'function') {\r\n    predicate = predicate(element, classToToggle);\r\n  }\r\n\r\n  if (typeof predicate !== 'boolean') {\r\n    predicate = !has;\r\n  }\r\n\r\n  // If the necessary class operation matches the current state of the\r\n  // element, no action is required.\r\n  if (predicate === has) {\r\n    return;\r\n  }\r\n\r\n  if (predicate) {\r\n    addClass(element, classToToggle);\r\n  } else {\r\n    removeClass(element, classToToggle);\r\n  }\r\n\r\n  return element;\r\n}\r\n\r\n/**\r\n * Apply attributes to an HTML element.\r\n *\r\n * @param {Element} el\r\n *        Element to add attributes to.\r\n *\r\n * @param {Object} [attributes]\r\n *        Attributes to be applied.\r\n */\r\nfunction setAttributes(el, attributes) {\r\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\r\n    var attrValue = attributes[attrName];\r\n\r\n    if (attrValue === null || typeof attrValue === 'undefined' || attrValue === false) {\r\n      el.removeAttribute(attrName);\r\n    } else {\r\n      el.setAttribute(attrName, attrValue === true ? '' : attrValue);\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * Get an element's attribute values, as defined on the HTML tag\r\n * Attributes are not the same as properties. They're defined on the tag\r\n * or with setAttribute (which shouldn't be used with HTML)\r\n * This will return true or false for boolean attributes.\r\n *\r\n * @param {Element} tag\r\n *        Element from which to get tag attributes.\r\n *\r\n * @return {Object}\r\n *         All attributes of the element.\r\n */\r\nfunction getAttributes(tag) {\r\n  var obj = {};\r\n\r\n  // known boolean attributes\r\n  // we can check for matching boolean properties, but older browsers\r\n  // won't know about HTML5 boolean attributes that we still read from\r\n  var knownBooleans = ',' + 'autoplay,controls,playsinline,loop,muted,default,defaultMuted' + ',';\r\n\r\n  if (tag && tag.attributes && tag.attributes.length > 0) {\r\n    var attrs = tag.attributes;\r\n\r\n    for (var i = attrs.length - 1; i >= 0; i--) {\r\n      var attrName = attrs[i].name;\r\n      var attrVal = attrs[i].value;\r\n\r\n      // check for known booleans\r\n      // the matching element property will return a value for typeof\r\n      if (typeof tag[attrName] === 'boolean' || knownBooleans.indexOf(',' + attrName + ',') !== -1) {\r\n        // the value of an included boolean attribute is typically an empty\r\n        // string ('') which would equal false if we just check for a false value.\r\n        // we also don't want support bad code like autoplay='false'\r\n        attrVal = attrVal !== null ? true : false;\r\n      }\r\n\r\n      obj[attrName] = attrVal;\r\n    }\r\n  }\r\n\r\n  return obj;\r\n}\r\n\r\n/**\r\n * Get the value of an element's attribute\r\n *\r\n * @param {Element} el\r\n *        A DOM element\r\n *\r\n * @param {string} attribute\r\n *        Attribute to get the value of\r\n *\r\n * @return {string}\r\n *         value of the attribute\r\n */\r\nfunction getAttribute(el, attribute) {\r\n  return el.getAttribute(attribute);\r\n}\r\n\r\n/**\r\n * Set the value of an element's attribute\r\n *\r\n * @param {Element} el\r\n *        A DOM element\r\n *\r\n * @param {string} attribute\r\n *        Attribute to set\r\n *\r\n * @param {string} value\r\n *        Value to set the attribute to\r\n */\r\nfunction setAttribute(el, attribute, value) {\r\n  el.setAttribute(attribute, value);\r\n}\r\n\r\n/**\r\n * Remove an element's attribute\r\n *\r\n * @param {Element} el\r\n *        A DOM element\r\n *\r\n * @param {string} attribute\r\n *        Attribute to remove\r\n */\r\nfunction removeAttribute(el, attribute) {\r\n  el.removeAttribute(attribute);\r\n}\r\n\r\n/**\r\n * Attempt to block the ability to select text while dragging controls\r\n */\r\nfunction blockTextSelection() {\r\n  document.body.focus();\r\n  document.onselectstart = function () {\r\n    return false;\r\n  };\r\n}\r\n\r\n/**\r\n * Turn off text selection blocking\r\n */\r\nfunction unblockTextSelection() {\r\n  document.onselectstart = function () {\r\n    return true;\r\n  };\r\n}\r\n\r\n/**\r\n * Identical to the native `getBoundingClientRect` function, but ensures that\r\n * the method is supported at all (it is in all browsers we claim to support)\r\n * and that the element is in the DOM before continuing.\r\n *\r\n * This wrapper function also shims properties which are not provided by some\r\n * older browsers (namely, IE8).\r\n *\r\n * Additionally, some browsers do not support adding properties to a\r\n * `ClientRect`/`DOMRect` object; so, we shallow-copy it with the standard\r\n * properties (except `x` and `y` which are not widely supported). This helps\r\n * avoid implementations where keys are non-enumerable.\r\n *\r\n * @param  {Element} el\r\n *         Element whose `ClientRect` we want to calculate.\r\n *\r\n * @return {Object|undefined}\r\n *         Always returns a plain\r\n */\r\nfunction getBoundingClientRect(el) {\r\n  if (el && el.getBoundingClientRect && el.parentNode) {\r\n    var rect = el.getBoundingClientRect();\r\n    var result = {};\r\n\r\n    ['bottom', 'height', 'left', 'right', 'top', 'width'].forEach(function (k) {\r\n      if (rect[k] !== undefined) {\r\n        result[k] = rect[k];\r\n      }\r\n    });\r\n\r\n    if (!result.height) {\r\n      result.height = parseFloat(computedStyle(el, 'height'));\r\n    }\r\n\r\n    if (!result.width) {\r\n      result.width = parseFloat(computedStyle(el, 'width'));\r\n    }\r\n\r\n    return result;\r\n  }\r\n}\r\n\r\n/**\r\n * The postion of a DOM element on the page.\r\n *\r\n * @typedef {Object} module:dom~Position\r\n *\r\n * @property {number} left\r\n *           Pixels to the left\r\n *\r\n * @property {number} top\r\n *           Pixels on top\r\n */\r\n\r\n/**\r\n * Offset Left.\r\n * getBoundingClientRect technique from\r\n * John Resig\r\n *\r\n * @see http://ejohn.org/blog/getboundingclientrect-is-awesome/\r\n *\r\n * @param {Element} el\r\n *        Element from which to get offset\r\n *\r\n * @return {module:dom~Position}\r\n *         The position of the element that was passed in.\r\n */\r\nfunction findPosition(el) {\r\n  var box = void 0;\r\n\r\n  if (el.getBoundingClientRect && el.parentNode) {\r\n    box = el.getBoundingClientRect();\r\n  }\r\n\r\n  if (!box) {\r\n    return {\r\n      left: 0,\r\n      top: 0\r\n    };\r\n  }\r\n\r\n  var docEl = document.documentElement;\r\n  var body = document.body;\r\n\r\n  var clientLeft = docEl.clientLeft || body.clientLeft || 0;\r\n  var scrollLeft = window.pageXOffset || body.scrollLeft;\r\n  var left = box.left + scrollLeft - clientLeft;\r\n\r\n  var clientTop = docEl.clientTop || body.clientTop || 0;\r\n  var scrollTop = window.pageYOffset || body.scrollTop;\r\n  var top = box.top + scrollTop - clientTop;\r\n\r\n  // Android sometimes returns slightly off decimal values, so need to round\r\n  return {\r\n    left: Math.round(left),\r\n    top: Math.round(top)\r\n  };\r\n}\r\n\r\n/**\r\n * x and y coordinates for a dom element or mouse pointer\r\n *\r\n * @typedef {Object} Dom~Coordinates\r\n *\r\n * @property {number} x\r\n *           x coordinate in pixels\r\n *\r\n * @property {number} y\r\n *           y coordinate in pixels\r\n */\r\n\r\n/**\r\n * Get pointer position in element\r\n * Returns an object with x and y coordinates.\r\n * The base on the coordinates are the bottom left of the element.\r\n *\r\n * @param {Element} el\r\n *        Element on which to get the pointer position on\r\n *\r\n * @param {EventTarget~Event} event\r\n *        Event object\r\n *\r\n * @return {Dom~Coordinates}\r\n *         A Coordinates object corresponding to the mouse position.\r\n *\r\n */\r\nfunction getPointerPosition(el, event) {\r\n  var position = {};\r\n  var box = findPosition(el);\r\n  var boxW = el.offsetWidth;\r\n  var boxH = el.offsetHeight;\r\n\r\n  var boxY = box.top;\r\n  var boxX = box.left;\r\n  var pageY = event.pageY;\r\n  var pageX = event.pageX;\r\n\r\n  if (event.changedTouches) {\r\n    pageX = event.changedTouches[0].pageX;\r\n    pageY = event.changedTouches[0].pageY;\r\n  }\r\n\r\n  position.y = Math.max(0, Math.min(1, (boxY - pageY + boxH) / boxH));\r\n  position.x = Math.max(0, Math.min(1, (pageX - boxX) / boxW));\r\n\r\n  return position;\r\n}\r\n\r\n/**\r\n * Determines, via duck typing, whether or not a value is a text node.\r\n *\r\n * @param {Mixed} value\r\n *        Check if this value is a text node.\r\n *\r\n * @return {boolean}\r\n *         - True if it is a text node\r\n *         - False otherwise\r\n */\r\nfunction isTextNode(value) {\r\n  return isObject(value) && value.nodeType === 3;\r\n}\r\n\r\n/**\r\n * Empties the contents of an element.\r\n *\r\n * @param {Element} el\r\n *        The element to empty children from\r\n *\r\n * @return {Element}\r\n *         The element with no children\r\n */\r\nfunction emptyEl(el) {\r\n  while (el.firstChild) {\r\n    el.removeChild(el.firstChild);\r\n  }\r\n  return el;\r\n}\r\n\r\n/**\r\n * Normalizes content for eventual insertion into the DOM.\r\n *\r\n * This allows a wide range of content definition methods, but protects\r\n * from falling into the trap of simply writing to `innerHTML`, which is\r\n * an XSS concern.\r\n *\r\n * The content for an element can be passed in multiple types and\r\n * combinations, whose behavior is as follows:\r\n *\r\n * @param {String|Element|TextNode|Array|Function} content\r\n *        - String: Normalized into a text node.\r\n *        - Element/TextNode: Passed through.\r\n *        - Array: A one-dimensional array of strings, elements, nodes, or functions\r\n *          (which return single strings, elements, or nodes).\r\n *        - Function: If the sole argument, is expected to produce a string, element,\r\n *          node, or array as defined above.\r\n *\r\n * @return {Array}\r\n *         All of the content that was passed in normalized.\r\n */\r\nfunction normalizeContent(content) {\r\n\r\n  // First, invoke content if it is a function. If it produces an array,\r\n  // that needs to happen before normalization.\r\n  if (typeof content === 'function') {\r\n    content = content();\r\n  }\r\n\r\n  // Next up, normalize to an array, so one or many items can be normalized,\r\n  // filtered, and returned.\r\n  return (Array.isArray(content) ? content : [content]).map(function (value) {\r\n\r\n    // First, invoke value if it is a function to produce a new value,\r\n    // which will be subsequently normalized to a Node of some kind.\r\n    if (typeof value === 'function') {\r\n      value = value();\r\n    }\r\n\r\n    if (isEl(value) || isTextNode(value)) {\r\n      return value;\r\n    }\r\n\r\n    if (typeof value === 'string' && /\\S/.test(value)) {\r\n      return document.createTextNode(value);\r\n    }\r\n  }).filter(function (value) {\r\n    return value;\r\n  });\r\n}\r\n\r\n/**\r\n * Normalizes and appends content to an element.\r\n *\r\n * @param {Element} el\r\n *        Element to append normalized content to.\r\n *\r\n *\r\n * @param {String|Element|TextNode|Array|Function} content\r\n *        See the `content` argument of {@link dom:normalizeContent}\r\n *\r\n * @return {Element}\r\n *         The element with appended normalized content.\r\n */\r\nfunction appendContent(el, content) {\r\n  normalizeContent(content).forEach(function (node) {\r\n    return el.appendChild(node);\r\n  });\r\n  return el;\r\n}\r\n\r\n/**\r\n * Normalizes and inserts content into an element; this is identical to\r\n * `appendContent()`, except it empties the element first.\r\n *\r\n * @param {Element} el\r\n *        Element to insert normalized content into.\r\n *\r\n * @param {String|Element|TextNode|Array|Function} content\r\n *        See the `content` argument of {@link dom:normalizeContent}\r\n *\r\n * @return {Element}\r\n *         The element with inserted normalized content.\r\n *\r\n */\r\nfunction insertContent(el, content) {\r\n  return appendContent(emptyEl(el), content);\r\n}\r\n\r\n/**\r\n * Check if event was a single left click\r\n *\r\n * @param {EventTarget~Event} event\r\n *        Event object\r\n *\r\n * @return {boolean}\r\n *         - True if a left click\r\n *         - False if not a left click\r\n */\r\nfunction isSingleLeftClick(event) {\r\n  // Note: if you create something draggable, be sure to\r\n  // call it on both `mousedown` and `mousemove` event,\r\n  // otherwise `mousedown` should be enough for a button\r\n\r\n  if (event.button === undefined && event.buttons === undefined) {\r\n    // Why do we need `buttons` ?\r\n    // Because, middle mouse sometimes have this:\r\n    // e.button === 0 and e.buttons === 4\r\n    // Furthermore, we want to prevent combination click, something like\r\n    // HOLD middlemouse then left click, that would be\r\n    // e.button === 0, e.buttons === 5\r\n    // just `button` is not gonna work\r\n\r\n    // Alright, then what this block does ?\r\n    // this is for chrome `simulate mobile devices`\r\n    // I want to support this as well\r\n\r\n    return true;\r\n  }\r\n\r\n  if (event.button === 0 && event.buttons === undefined) {\r\n    // Touch screen, sometimes on some specific device, `buttons`\r\n    // doesn't have anything (safari on ios, blackberry...)\r\n\r\n    return true;\r\n  }\r\n\r\n  if (IE_VERSION === 9) {\r\n    // Ignore IE9\r\n\r\n    return true;\r\n  }\r\n\r\n  if (event.button !== 0 || event.buttons !== 1) {\r\n    // This is the reason we have those if else block above\r\n    // if any special case we can catch and let it slide\r\n    // we do it above, when get to here, this definitely\r\n    // is-not-left-click\r\n\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\n/**\r\n * Finds a single DOM element matching `selector` within the optional\r\n * `context` of another DOM element (defaulting to `document`).\r\n *\r\n * @param {string} selector\r\n *        A valid CSS selector, which will be passed to `querySelector`.\r\n *\r\n * @param {Element|String} [context=document]\r\n *        A DOM element within which to query. Can also be a selector\r\n *        string in which case the first matching element will be used\r\n *        as context. If missing (or no element matches selector), falls\r\n *        back to `document`.\r\n *\r\n * @return {Element|null}\r\n *         The element that was found or null.\r\n */\r\nvar $ = createQuerier('querySelector');\r\n\r\n/**\r\n * Finds a all DOM elements matching `selector` within the optional\r\n * `context` of another DOM element (defaulting to `document`).\r\n *\r\n * @param {string} selector\r\n *           A valid CSS selector, which will be passed to `querySelectorAll`.\r\n *\r\n * @param {Element|String} [context=document]\r\n *           A DOM element within which to query. Can also be a selector\r\n *           string in which case the first matching element will be used\r\n *           as context. If missing (or no element matches selector), falls\r\n *           back to `document`.\r\n *\r\n * @return {NodeList}\r\n *         A element list of elements that were found. Will be empty if none were found.\r\n *\r\n */\r\nvar $$ = createQuerier('querySelectorAll');\r\n\r\n\r\n\r\nvar Dom = (Object.freeze || Object)({\r\n\tisReal: isReal,\r\n\tisEl: isEl,\r\n\tisInFrame: isInFrame,\r\n\tcreateEl: createEl,\r\n\ttextContent: textContent,\r\n\tprependTo: prependTo,\r\n\thasClass: hasClass,\r\n\taddClass: addClass,\r\n\tremoveClass: removeClass,\r\n\ttoggleClass: toggleClass,\r\n\tsetAttributes: setAttributes,\r\n\tgetAttributes: getAttributes,\r\n\tgetAttribute: getAttribute,\r\n\tsetAttribute: setAttribute,\r\n\tremoveAttribute: removeAttribute,\r\n\tblockTextSelection: blockTextSelection,\r\n\tunblockTextSelection: unblockTextSelection,\r\n\tgetBoundingClientRect: getBoundingClientRect,\r\n\tfindPosition: findPosition,\r\n\tgetPointerPosition: getPointerPosition,\r\n\tisTextNode: isTextNode,\r\n\temptyEl: emptyEl,\r\n\tnormalizeContent: normalizeContent,\r\n\tappendContent: appendContent,\r\n\tinsertContent: insertContent,\r\n\tisSingleLeftClick: isSingleLeftClick,\r\n\t$: $,\r\n\t$$: $$\r\n});\r\n\r\n/**\r\n * @file guid.js\r\n * @module guid\r\n */\r\n\r\n/**\r\n * Unique ID for an element or function\r\n * @type {Number}\r\n */\r\nvar _guid = 1;\r\n\r\n/**\r\n * Get a unique auto-incrementing ID by number that has not been returned before.\r\n *\r\n * @return {number}\r\n *         A new unique ID.\r\n */\r\nfunction newGUID() {\r\n  return _guid++;\r\n}\r\n\r\n/**\r\n * @file dom-data.js\r\n * @module dom-data\r\n */\r\n/**\r\n * Element Data Store.\r\n *\r\n * Allows for binding data to an element without putting it directly on the\r\n * element. Ex. Event listeners are stored here.\r\n * (also from jsninja.com, slightly modified and updated for closure compiler)\r\n *\r\n * @type {Object}\r\n * @private\r\n */\r\nvar elData = {};\r\n\r\n/*\r\n * Unique attribute name to store an element's guid in\r\n *\r\n * @type {String}\r\n * @constant\r\n * @private\r\n */\r\nvar elIdAttr = 'vdata' + new Date().getTime();\r\n\r\n/**\r\n * Returns the cache object where data for an element is stored\r\n *\r\n * @param {Element} el\r\n *        Element to store data for.\r\n *\r\n * @return {Object}\r\n *         The cache object for that el that was passed in.\r\n */\r\nfunction getData(el) {\r\n  var id = el[elIdAttr];\r\n\r\n  if (!id) {\r\n    id = el[elIdAttr] = newGUID();\r\n  }\r\n\r\n  if (!elData[id]) {\r\n    elData[id] = {};\r\n  }\r\n\r\n  return elData[id];\r\n}\r\n\r\n/**\r\n * Returns whether or not an element has cached data\r\n *\r\n * @param {Element} el\r\n *        Check if this element has cached data.\r\n *\r\n * @return {boolean}\r\n *         - True if the DOM element has cached data.\r\n *         - False otherwise.\r\n */\r\nfunction hasData(el) {\r\n  var id = el[elIdAttr];\r\n\r\n  if (!id) {\r\n    return false;\r\n  }\r\n\r\n  return !!Object.getOwnPropertyNames(elData[id]).length;\r\n}\r\n\r\n/**\r\n * Delete data for the element from the cache and the guid attr from getElementById\r\n *\r\n * @param {Element} el\r\n *        Remove cached data for this element.\r\n */\r\nfunction removeData(el) {\r\n  var id = el[elIdAttr];\r\n\r\n  if (!id) {\r\n    return;\r\n  }\r\n\r\n  // Remove all stored data\r\n  delete elData[id];\r\n\r\n  // Remove the elIdAttr property from the DOM node\r\n  try {\r\n    delete el[elIdAttr];\r\n  } catch (e) {\r\n    if (el.removeAttribute) {\r\n      el.removeAttribute(elIdAttr);\r\n    } else {\r\n      // IE doesn't appear to support removeAttribute on the document element\r\n      el[elIdAttr] = null;\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * @file events.js. An Event System (John Resig - Secrets of a JS Ninja http://jsninja.com/)\r\n * (Original book version wasn't completely usable, so fixed some things and made Closure Compiler compatible)\r\n * This should work very similarly to jQuery's events, however it's based off the book version which isn't as\r\n * robust as jquery's, so there's probably some differences.\r\n *\r\n * @module events\r\n */\r\n\r\n/**\r\n * Clean up the listener cache and dispatchers\r\n *\r\n * @param {Element|Object} elem\r\n *        Element to clean up\r\n *\r\n * @param {string} type\r\n *        Type of event to clean up\r\n */\r\nfunction _cleanUpEvents(elem, type) {\r\n  var data = getData(elem);\r\n\r\n  // Remove the events of a particular type if there are none left\r\n  if (data.handlers[type].length === 0) {\r\n    delete data.handlers[type];\r\n    // data.handlers[type] = null;\r\n    // Setting to null was causing an error with data.handlers\r\n\r\n    // Remove the meta-handler from the element\r\n    if (elem.removeEventListener) {\r\n      elem.removeEventListener(type, data.dispatcher, false);\r\n    } else if (elem.detachEvent) {\r\n      elem.detachEvent('on' + type, data.dispatcher);\r\n    }\r\n  }\r\n\r\n  // Remove the events object if there are no types left\r\n  if (Object.getOwnPropertyNames(data.handlers).length <= 0) {\r\n    delete data.handlers;\r\n    delete data.dispatcher;\r\n    delete data.disabled;\r\n  }\r\n\r\n  // Finally remove the element data if there is no data left\r\n  if (Object.getOwnPropertyNames(data).length === 0) {\r\n    removeData(elem);\r\n  }\r\n}\r\n\r\n/**\r\n * Loops through an array of event types and calls the requested method for each type.\r\n *\r\n * @param {Function} fn\r\n *        The event method we want to use.\r\n *\r\n * @param {Element|Object} elem\r\n *        Element or object to bind listeners to\r\n *\r\n * @param {string} type\r\n *        Type of event to bind to.\r\n *\r\n * @param {EventTarget~EventListener} callback\r\n *        Event listener.\r\n */\r\nfunction _handleMultipleEvents(fn, elem, types, callback) {\r\n  types.forEach(function (type) {\r\n    // Call the event method for each one of the types\r\n    fn(elem, type, callback);\r\n  });\r\n}\r\n\r\n/**\r\n * Fix a native event to have standard property values\r\n *\r\n * @param {Object} event\r\n *        Event object to fix.\r\n *\r\n * @return {Object}\r\n *         Fixed event object.\r\n */\r\nfunction fixEvent(event) {\r\n\r\n  function returnTrue() {\r\n    return true;\r\n  }\r\n\r\n  function returnFalse() {\r\n    return false;\r\n  }\r\n\r\n  // Test if fixing up is needed\r\n  // Used to check if !event.stopPropagation instead of isPropagationStopped\r\n  // But native events return true for stopPropagation, but don't have\r\n  // other expected methods like isPropagationStopped. Seems to be a problem\r\n  // with the Javascript Ninja code. So we're just overriding all events now.\r\n  if (!event || !event.isPropagationStopped) {\r\n    var old = event || window.event;\r\n\r\n    event = {};\r\n    // Clone the old object so that we can modify the values event = {};\r\n    // IE8 Doesn't like when you mess with native event properties\r\n    // Firefox returns false for event.hasOwnProperty('type') and other props\r\n    //  which makes copying more difficult.\r\n    // TODO: Probably best to create a whitelist of event props\r\n    for (var key in old) {\r\n      // Safari 6.0.3 warns you if you try to copy deprecated layerX/Y\r\n      // Chrome warns you if you try to copy deprecated keyboardEvent.keyLocation\r\n      // and webkitMovementX/Y\r\n      if (key !== 'layerX' && key !== 'layerY' && key !== 'keyLocation' && key !== 'webkitMovementX' && key !== 'webkitMovementY') {\r\n        // Chrome 32+ warns if you try to copy deprecated returnValue, but\r\n        // we still want to if preventDefault isn't supported (IE8).\r\n        if (!(key === 'returnValue' && old.preventDefault)) {\r\n          event[key] = old[key];\r\n        }\r\n      }\r\n    }\r\n\r\n    // The event occurred on this element\r\n    if (!event.target) {\r\n      event.target = event.srcElement || document;\r\n    }\r\n\r\n    // Handle which other element the event is related to\r\n    if (!event.relatedTarget) {\r\n      event.relatedTarget = event.fromElement === event.target ? event.toElement : event.fromElement;\r\n    }\r\n\r\n    // Stop the default browser action\r\n    event.preventDefault = function () {\r\n      if (old.preventDefault) {\r\n        old.preventDefault();\r\n      }\r\n      event.returnValue = false;\r\n      old.returnValue = false;\r\n      event.defaultPrevented = true;\r\n    };\r\n\r\n    event.defaultPrevented = false;\r\n\r\n    // Stop the event from bubbling\r\n    event.stopPropagation = function () {\r\n      if (old.stopPropagation) {\r\n        old.stopPropagation();\r\n      }\r\n      event.cancelBubble = true;\r\n      old.cancelBubble = true;\r\n      event.isPropagationStopped = returnTrue;\r\n    };\r\n\r\n    event.isPropagationStopped = returnFalse;\r\n\r\n    // Stop the event from bubbling and executing other handlers\r\n    event.stopImmediatePropagation = function () {\r\n      if (old.stopImmediatePropagation) {\r\n        old.stopImmediatePropagation();\r\n      }\r\n      event.isImmediatePropagationStopped = returnTrue;\r\n      event.stopPropagation();\r\n    };\r\n\r\n    event.isImmediatePropagationStopped = returnFalse;\r\n\r\n    // Handle mouse position\r\n    if (event.clientX !== null && event.clientX !== undefined) {\r\n      var doc = document.documentElement;\r\n      var body = document.body;\r\n\r\n      event.pageX = event.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);\r\n      event.pageY = event.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);\r\n    }\r\n\r\n    // Handle key presses\r\n    event.which = event.charCode || event.keyCode;\r\n\r\n    // Fix button for mouse clicks:\r\n    // 0 == left; 1 == middle; 2 == right\r\n    if (event.button !== null && event.button !== undefined) {\r\n\r\n      // The following is disabled because it does not pass videojs-standard\r\n      // and... yikes.\r\n      /* eslint-disable */\r\n      event.button = event.button & 1 ? 0 : event.button & 4 ? 1 : event.button & 2 ? 2 : 0;\r\n      /* eslint-enable */\r\n    }\r\n  }\r\n\r\n  // Returns fixed-up instance\r\n  return event;\r\n}\r\n\r\n/**\r\n * Whether passive event listeners are supported\r\n */\r\nvar _supportsPassive = false;\r\n\r\n(function () {\r\n  try {\r\n    var opts = Object.defineProperty({}, 'passive', {\r\n      get: function get() {\r\n        _supportsPassive = true;\r\n      }\r\n    });\r\n\r\n    window.addEventListener('test', null, opts);\r\n    window.removeEventListener('test', null, opts);\r\n  } catch (e) {\r\n    // disregard\r\n  }\r\n})();\r\n\r\n/**\r\n * Touch events Chrome expects to be passive\r\n */\r\nvar passiveEvents = ['touchstart', 'touchmove'];\r\n\r\n/**\r\n * Add an event listener to element\r\n * It stores the handler function in a separate cache object\r\n * and adds a generic handler to the element's event,\r\n * along with a unique id (guid) to the element.\r\n *\r\n * @param {Element|Object} elem\r\n *        Element or object to bind listeners to\r\n *\r\n * @param {string|string[]} type\r\n *        Type of event to bind to.\r\n *\r\n * @param {EventTarget~EventListener} fn\r\n *        Event listener.\r\n */\r\nfunction on(elem, type, fn) {\r\n  if (Array.isArray(type)) {\r\n    return _handleMultipleEvents(on, elem, type, fn);\r\n  }\r\n\r\n  var data = getData(elem);\r\n\r\n  // We need a place to store all our handler data\r\n  if (!data.handlers) {\r\n    data.handlers = {};\r\n  }\r\n\r\n  if (!data.handlers[type]) {\r\n    data.handlers[type] = [];\r\n  }\r\n\r\n  if (!fn.guid) {\r\n    fn.guid = newGUID();\r\n  }\r\n\r\n  data.handlers[type].push(fn);\r\n\r\n  if (!data.dispatcher) {\r\n    data.disabled = false;\r\n\r\n    data.dispatcher = function (event, hash) {\r\n\r\n      if (data.disabled) {\r\n        return;\r\n      }\r\n\r\n      event = fixEvent(event);\r\n\r\n      var handlers = data.handlers[event.type];\r\n\r\n      if (handlers) {\r\n        // Copy handlers so if handlers are added/removed during the process it doesn't throw everything off.\r\n        var handlersCopy = handlers.slice(0);\r\n\r\n        for (var m = 0, n = handlersCopy.length; m < n; m++) {\r\n          if (event.isImmediatePropagationStopped()) {\r\n            break;\r\n          } else {\r\n            try {\r\n              handlersCopy[m].call(elem, event, hash);\r\n            } catch (e) {\r\n              log.error(e);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  if (data.handlers[type].length === 1) {\r\n    if (elem.addEventListener) {\r\n      var options = false;\r\n\r\n      if (_supportsPassive && passiveEvents.indexOf(type) > -1) {\r\n        options = { passive: true };\r\n      }\r\n      elem.addEventListener(type, data.dispatcher, options);\r\n    } else if (elem.attachEvent) {\r\n      elem.attachEvent('on' + type, data.dispatcher);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Removes event listeners from an element\r\n *\r\n * @param {Element|Object} elem\r\n *        Object to remove listeners from.\r\n *\r\n * @param {string|string[]} [type]\r\n *        Type of listener to remove. Don't include to remove all events from element.\r\n *\r\n * @param {EventTarget~EventListener} [fn]\r\n *        Specific listener to remove. Don't include to remove listeners for an event\r\n *        type.\r\n */\r\nfunction off(elem, type, fn) {\r\n  // Don't want to add a cache object through getElData if not needed\r\n  if (!hasData(elem)) {\r\n    return;\r\n  }\r\n\r\n  var data = getData(elem);\r\n\r\n  // If no events exist, nothing to unbind\r\n  if (!data.handlers) {\r\n    return;\r\n  }\r\n\r\n  if (Array.isArray(type)) {\r\n    return _handleMultipleEvents(off, elem, type, fn);\r\n  }\r\n\r\n  // Utility function\r\n  var removeType = function removeType(el, t) {\r\n    data.handlers[t] = [];\r\n    _cleanUpEvents(el, t);\r\n  };\r\n\r\n  // Are we removing all bound events?\r\n  if (type === undefined) {\r\n    for (var t in data.handlers) {\r\n      if (Object.prototype.hasOwnProperty.call(data.handlers || {}, t)) {\r\n        removeType(elem, t);\r\n      }\r\n    }\r\n    return;\r\n  }\r\n\r\n  var handlers = data.handlers[type];\r\n\r\n  // If no handlers exist, nothing to unbind\r\n  if (!handlers) {\r\n    return;\r\n  }\r\n\r\n  // If no listener was provided, remove all listeners for type\r\n  if (!fn) {\r\n    removeType(elem, type);\r\n    return;\r\n  }\r\n\r\n  // We're only removing a single handler\r\n  if (fn.guid) {\r\n    for (var n = 0; n < handlers.length; n++) {\r\n      if (handlers[n].guid === fn.guid) {\r\n        handlers.splice(n--, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  _cleanUpEvents(elem, type);\r\n}\r\n\r\n/**\r\n * Trigger an event for an element\r\n *\r\n * @param {Element|Object} elem\r\n *        Element to trigger an event on\r\n *\r\n * @param {EventTarget~Event|string} event\r\n *        A string (the type) or an event object with a type attribute\r\n *\r\n * @param {Object} [hash]\r\n *        data hash to pass along with the event\r\n *\r\n * @return {boolean|undefined}\r\n *         - Returns the opposite of `defaultPrevented` if default was prevented\r\n *         - Otherwise returns undefined\r\n */\r\nfunction trigger(elem, event, hash) {\r\n  // Fetches element data and a reference to the parent (for bubbling).\r\n  // Don't want to add a data object to cache for every parent,\r\n  // so checking hasElData first.\r\n  var elemData = hasData(elem) ? getData(elem) : {};\r\n  var parent = elem.parentNode || elem.ownerDocument;\r\n  // type = event.type || event,\r\n  // handler;\r\n\r\n  // If an event name was passed as a string, creates an event out of it\r\n  if (typeof event === 'string') {\r\n    event = { type: event, target: elem };\r\n  } else if (!event.target) {\r\n    event.target = elem;\r\n  }\r\n\r\n  // Normalizes the event properties.\r\n  event = fixEvent(event);\r\n\r\n  // If the passed element has a dispatcher, executes the established handlers.\r\n  if (elemData.dispatcher) {\r\n    elemData.dispatcher.call(elem, event, hash);\r\n  }\r\n\r\n  // Unless explicitly stopped or the event does not bubble (e.g. media events)\r\n  // recursively calls this function to bubble the event up the DOM.\r\n  if (parent && !event.isPropagationStopped() && event.bubbles === true) {\r\n    trigger.call(null, parent, event, hash);\r\n\r\n    // If at the top of the DOM, triggers the default action unless disabled.\r\n  } else if (!parent && !event.defaultPrevented) {\r\n    var targetData = getData(event.target);\r\n\r\n    // Checks if the target has a default action for this event.\r\n    if (event.target[event.type]) {\r\n      // Temporarily disables event dispatching on the target as we have already executed the handler.\r\n      targetData.disabled = true;\r\n      // Executes the default action.\r\n      if (typeof event.target[event.type] === 'function') {\r\n        event.target[event.type]();\r\n      }\r\n      // Re-enables event dispatching.\r\n      targetData.disabled = false;\r\n    }\r\n  }\r\n\r\n  // Inform the triggerer if the default was prevented by returning false\r\n  return !event.defaultPrevented;\r\n}\r\n\r\n/**\r\n * Trigger a listener only once for an event\r\n *\r\n * @param {Element|Object} elem\r\n *        Element or object to bind to.\r\n *\r\n * @param {string|string[]} type\r\n *        Name/type of event\r\n *\r\n * @param {Event~EventListener} fn\r\n *        Event Listener function\r\n */\r\nfunction one(elem, type, fn) {\r\n  if (Array.isArray(type)) {\r\n    return _handleMultipleEvents(one, elem, type, fn);\r\n  }\r\n  var func = function func() {\r\n    off(elem, type, func);\r\n    fn.apply(this, arguments);\r\n  };\r\n\r\n  // copy the guid to the new function so it can removed using the original function's ID\r\n  func.guid = fn.guid = fn.guid || newGUID();\r\n  on(elem, type, func);\r\n}\r\n\r\nvar Events = (Object.freeze || Object)({\r\n\tfixEvent: fixEvent,\r\n\ton: on,\r\n\toff: off,\r\n\ttrigger: trigger,\r\n\tone: one\r\n});\r\n\r\n/**\r\n * @file setup.js - Functions for setting up a player without\r\n * user interaction based on the data-setup `attribute` of the video tag.\r\n *\r\n * @module setup\r\n */\r\nvar _windowLoaded = false;\r\nvar videojs$2 = void 0;\r\n\r\n/**\r\n * Set up any tags that have a data-setup `attribute` when the player is started.\r\n */\r\nvar autoSetup = function autoSetup() {\r\n\r\n  // Protect against breakage in non-browser environments and check global autoSetup option.\r\n  if (!isReal() || videojs$2.options.autoSetup === false) {\r\n    return;\r\n  }\r\n\r\n  // One day, when we stop supporting IE8, go back to this, but in the meantime...*hack hack hack*\r\n  // var vids = Array.prototype.slice.call(document.getElementsByTagName('video'));\r\n  // var audios = Array.prototype.slice.call(document.getElementsByTagName('audio'));\r\n  // var mediaEls = vids.concat(audios);\r\n\r\n  // Because IE8 doesn't support calling slice on a node list, we need to loop\r\n  // through each list of elements to build up a new, combined list of elements.\r\n  var vids = document.getElementsByTagName('video');\r\n  var audios = document.getElementsByTagName('audio');\r\n  var divs = document.getElementsByTagName('video-js');\r\n  var mediaEls = [];\r\n\r\n  if (vids && vids.length > 0) {\r\n    for (var i = 0, e = vids.length; i < e; i++) {\r\n      mediaEls.push(vids[i]);\r\n    }\r\n  }\r\n\r\n  if (audios && audios.length > 0) {\r\n    for (var _i = 0, _e = audios.length; _i < _e; _i++) {\r\n      mediaEls.push(audios[_i]);\r\n    }\r\n  }\r\n\r\n  if (divs && divs.length > 0) {\r\n    for (var _i2 = 0, _e2 = divs.length; _i2 < _e2; _i2++) {\r\n      mediaEls.push(divs[_i2]);\r\n    }\r\n  }\r\n\r\n  // Check if any media elements exist\r\n  if (mediaEls && mediaEls.length > 0) {\r\n\r\n    for (var _i3 = 0, _e3 = mediaEls.length; _i3 < _e3; _i3++) {\r\n      var mediaEl = mediaEls[_i3];\r\n\r\n      // Check if element exists, has getAttribute func.\r\n      // IE seems to consider typeof el.getAttribute == 'object' instead of\r\n      // 'function' like expected, at least when loading the player immediately.\r\n      if (mediaEl && mediaEl.getAttribute) {\r\n\r\n        // Make sure this player hasn't already been set up.\r\n        if (mediaEl.player === undefined) {\r\n          var options = mediaEl.getAttribute('data-setup');\r\n\r\n          // Check if data-setup attr exists.\r\n          // We only auto-setup if they've added the data-setup attr.\r\n          if (options !== null) {\r\n            // Create new video.js instance.\r\n            videojs$2(mediaEl);\r\n          }\r\n        }\r\n\r\n        // If getAttribute isn't defined, we need to wait for the DOM.\r\n      } else {\r\n        autoSetupTimeout(1);\r\n        break;\r\n      }\r\n    }\r\n\r\n    // No videos were found, so keep looping unless page is finished loading.\r\n  } else if (!_windowLoaded) {\r\n    autoSetupTimeout(1);\r\n  }\r\n};\r\n\r\n/**\r\n * Wait until the page is loaded before running autoSetup. This will be called in\r\n * autoSetup if `hasLoaded` returns false.\r\n *\r\n * @param {number} wait\r\n *        How long to wait in ms\r\n *\r\n * @param {module:videojs} [vjs]\r\n *        The videojs library function\r\n */\r\nfunction autoSetupTimeout(wait, vjs) {\r\n  if (vjs) {\r\n    videojs$2 = vjs;\r\n  }\r\n\r\n  window.setTimeout(autoSetup, wait);\r\n}\r\n\r\nif (isReal() && document.readyState === 'complete') {\r\n  _windowLoaded = true;\r\n} else {\r\n  /**\r\n   * Listen for the load event on window, and set _windowLoaded to true.\r\n   *\r\n   * @listens load\r\n   */\r\n  one(window, 'load', function () {\r\n    _windowLoaded = true;\r\n  });\r\n}\r\n\r\n/**\r\n * @file stylesheet.js\r\n * @module stylesheet\r\n */\r\n/**\r\n * Create a DOM syle element given a className for it.\r\n *\r\n * @param {string} className\r\n *        The className to add to the created style element.\r\n *\r\n * @return {Element}\r\n *         The element that was created.\r\n */\r\nvar createStyleElement = function createStyleElement(className) {\r\n  var style = document.createElement('style');\r\n\r\n  style.className = className;\r\n\r\n  return style;\r\n};\r\n\r\n/**\r\n * Add text to a DOM element.\r\n *\r\n * @param {Element} el\r\n *        The Element to add text content to.\r\n *\r\n * @param {string} content\r\n *        The text to add to the element.\r\n */\r\nvar setTextContent = function setTextContent(el, content) {\r\n  if (el.styleSheet) {\r\n    el.styleSheet.cssText = content;\r\n  } else {\r\n    el.textContent = content;\r\n  }\r\n};\r\n\r\n/**\r\n * @file fn.js\r\n * @module fn\r\n */\r\n/**\r\n * Bind (a.k.a proxy or Context). A simple method for changing the context of a function\r\n * It also stores a unique id on the function so it can be easily removed from events.\r\n *\r\n * @param {Mixed} context\r\n *        The object to bind as scope.\r\n *\r\n * @param {Function} fn\r\n *        The function to be bound to a scope.\r\n *\r\n * @param {number} [uid]\r\n *        An optional unique ID for the function to be set\r\n *\r\n * @return {Function}\r\n *         The new function that will be bound into the context given\r\n */\r\nvar bind = function bind(context, fn, uid) {\r\n  // Make sure the function has a unique ID\r\n  if (!fn.guid) {\r\n    fn.guid = newGUID();\r\n  }\r\n\r\n  // Create the new function that changes the context\r\n  var bound = function bound() {\r\n    return fn.apply(context, arguments);\r\n  };\r\n\r\n  // Allow for the ability to individualize this function\r\n  // Needed in the case where multiple objects might share the same prototype\r\n  // IF both items add an event listener with the same function, then you try to remove just one\r\n  // it will remove both because they both have the same guid.\r\n  // when using this, you need to use the bind method when you remove the listener as well.\r\n  // currently used in text tracks\r\n  bound.guid = uid ? uid + '_' + fn.guid : fn.guid;\r\n\r\n  return bound;\r\n};\r\n\r\n/**\r\n * Wraps the given function, `fn`, with a new function that only invokes `fn`\r\n * at most once per every `wait` milliseconds.\r\n *\r\n * @param  {Function} fn\r\n *         The function to be throttled.\r\n *\r\n * @param  {Number}   wait\r\n *         The number of milliseconds by which to throttle.\r\n *\r\n * @return {Function}\r\n */\r\nvar throttle = function throttle(fn, wait) {\r\n  var last = Date.now();\r\n\r\n  var throttled = function throttled() {\r\n    var now = Date.now();\r\n\r\n    if (now - last >= wait) {\r\n      fn.apply(undefined, arguments);\r\n      last = now;\r\n    }\r\n  };\r\n\r\n  return throttled;\r\n};\r\n\r\n/**\r\n * Creates a debounced function that delays invoking `func` until after `wait`\r\n * milliseconds have elapsed since the last time the debounced function was\r\n * invoked.\r\n *\r\n * Inspired by lodash and underscore implementations.\r\n *\r\n * @param  {Function} func\r\n *         The function to wrap with debounce behavior.\r\n *\r\n * @param  {number} wait\r\n *         The number of milliseconds to wait after the last invocation.\r\n *\r\n * @param  {boolean} [immediate]\r\n *         Whether or not to invoke the function immediately upon creation.\r\n *\r\n * @param  {Object} [context=window]\r\n *         The \"context\" in which the debounced function should debounce. For\r\n *         example, if this function should be tied to a Video.js player,\r\n *         the player can be passed here. Alternatively, defaults to the\r\n *         global `window` object.\r\n *\r\n * @return {Function}\r\n *         A debounced function.\r\n */\r\nvar debounce = function debounce(func, wait, immediate) {\r\n  var context = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : window;\r\n\r\n  var timeout = void 0;\r\n\r\n  var cancel = function cancel() {\r\n    context.clearTimeout(timeout);\r\n    timeout = null;\r\n  };\r\n\r\n  /* eslint-disable consistent-this */\r\n  var debounced = function debounced() {\r\n    var self = this;\r\n    var args = arguments;\r\n\r\n    var _later = function later() {\r\n      timeout = null;\r\n      _later = null;\r\n      if (!immediate) {\r\n        func.apply(self, args);\r\n      }\r\n    };\r\n\r\n    if (!timeout && immediate) {\r\n      func.apply(self, args);\r\n    }\r\n\r\n    context.clearTimeout(timeout);\r\n    timeout = context.setTimeout(_later, wait);\r\n  };\r\n  /* eslint-enable consistent-this */\r\n\r\n  debounced.cancel = cancel;\r\n\r\n  return debounced;\r\n};\r\n\r\n/**\r\n * @file src/js/event-target.js\r\n */\r\n/**\r\n * `EventTarget` is a class that can have the same API as the DOM `EventTarget`. It\r\n * adds shorthand functions that wrap around lengthy functions. For example:\r\n * the `on` function is a wrapper around `addEventListener`.\r\n *\r\n * @see [EventTarget Spec]{@link https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget}\r\n * @class EventTarget\r\n */\r\nvar EventTarget = function EventTarget() {};\r\n\r\n/**\r\n * A Custom DOM event.\r\n *\r\n * @typedef {Object} EventTarget~Event\r\n * @see [Properties]{@link https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent}\r\n */\r\n\r\n/**\r\n * All event listeners should follow the following format.\r\n *\r\n * @callback EventTarget~EventListener\r\n * @this {EventTarget}\r\n *\r\n * @param {EventTarget~Event} event\r\n *        the event that triggered this function\r\n *\r\n * @param {Object} [hash]\r\n *        hash of data sent during the event\r\n */\r\n\r\n/**\r\n * An object containing event names as keys and booleans as values.\r\n *\r\n * > NOTE: If an event name is set to a true value here {@link EventTarget#trigger}\r\n *         will have extra functionality. See that function for more information.\r\n *\r\n * @property EventTarget.prototype.allowedEvents_\r\n * @private\r\n */\r\nEventTarget.prototype.allowedEvents_ = {};\r\n\r\n/**\r\n * Adds an `event listener` to an instance of an `EventTarget`. An `event listener` is a\r\n * function that will get called when an event with a certain name gets triggered.\r\n *\r\n * @param {string|string[]} type\r\n *        An event name or an array of event names.\r\n *\r\n * @param {EventTarget~EventListener} fn\r\n *        The function to call with `EventTarget`s\r\n */\r\nEventTarget.prototype.on = function (type, fn) {\r\n  // Remove the addEventListener alias before calling Events.on\r\n  // so we don't get into an infinite type loop\r\n  var ael = this.addEventListener;\r\n\r\n  this.addEventListener = function () {};\r\n  on(this, type, fn);\r\n  this.addEventListener = ael;\r\n};\r\n\r\n/**\r\n * An alias of {@link EventTarget#on}. Allows `EventTarget` to mimic\r\n * the standard DOM API.\r\n *\r\n * @function\r\n * @see {@link EventTarget#on}\r\n */\r\nEventTarget.prototype.addEventListener = EventTarget.prototype.on;\r\n\r\n/**\r\n * Removes an `event listener` for a specific event from an instance of `EventTarget`.\r\n * This makes it so that the `event listener` will no longer get called when the\r\n * named event happens.\r\n *\r\n * @param {string|string[]} type\r\n *        An event name or an array of event names.\r\n *\r\n * @param {EventTarget~EventListener} fn\r\n *        The function to remove.\r\n */\r\nEventTarget.prototype.off = function (type, fn) {\r\n  off(this, type, fn);\r\n};\r\n\r\n/**\r\n * An alias of {@link EventTarget#off}. Allows `EventTarget` to mimic\r\n * the standard DOM API.\r\n *\r\n * @function\r\n * @see {@link EventTarget#off}\r\n */\r\nEventTarget.prototype.removeEventListener = EventTarget.prototype.off;\r\n\r\n/**\r\n * This function will add an `event listener` that gets triggered only once. After the\r\n * first trigger it will get removed. This is like adding an `event listener`\r\n * with {@link EventTarget#on} that calls {@link EventTarget#off} on itself.\r\n *\r\n * @param {string|string[]} type\r\n *        An event name or an array of event names.\r\n *\r\n * @param {EventTarget~EventListener} fn\r\n *        The function to be called once for each event name.\r\n */\r\nEventTarget.prototype.one = function (type, fn) {\r\n  // Remove the addEventListener alialing Events.on\r\n  // so we don't get into an infinite type loop\r\n  var ael = this.addEventListener;\r\n\r\n  this.addEventListener = function () {};\r\n  one(this, type, fn);\r\n  this.addEventListener = ael;\r\n};\r\n\r\n/**\r\n * This function causes an event to happen. This will then cause any `event listeners`\r\n * that are waiting for that event, to get called. If there are no `event listeners`\r\n * for an event then nothing will happen.\r\n *\r\n * If the name of the `Event` that is being triggered is in `EventTarget.allowedEvents_`.\r\n * Trigger will also call the `on` + `uppercaseEventName` function.\r\n *\r\n * Example:\r\n * 'click' is in `EventTarget.allowedEvents_`, so, trigger will attempt to call\r\n * `onClick` if it exists.\r\n *\r\n * @param {string|EventTarget~Event|Object} event\r\n *        The name of the event, an `Event`, or an object with a key of type set to\r\n *        an event name.\r\n */\r\nEventTarget.prototype.trigger = function (event) {\r\n  var type = event.type || event;\r\n\r\n  if (typeof event === 'string') {\r\n    event = { type: type };\r\n  }\r\n  event = fixEvent(event);\r\n\r\n  if (this.allowedEvents_[type] && this['on' + type]) {\r\n    this['on' + type](event);\r\n  }\r\n\r\n  trigger(this, event);\r\n};\r\n\r\n/**\r\n * An alias of {@link EventTarget#trigger}. Allows `EventTarget` to mimic\r\n * the standard DOM API.\r\n *\r\n * @function\r\n * @see {@link EventTarget#trigger}\r\n */\r\nEventTarget.prototype.dispatchEvent = EventTarget.prototype.trigger;\r\n\r\n/**\r\n * @file mixins/evented.js\r\n * @module evented\r\n */\r\n/**\r\n * Returns whether or not an object has had the evented mixin applied.\r\n *\r\n * @param  {Object} object\r\n *         An object to test.\r\n *\r\n * @return {boolean}\r\n *         Whether or not the object appears to be evented.\r\n */\r\nvar isEvented = function isEvented(object) {\r\n  return object instanceof EventTarget || !!object.eventBusEl_ && ['on', 'one', 'off', 'trigger'].every(function (k) {\r\n    return typeof object[k] === 'function';\r\n  });\r\n};\r\n\r\n/**\r\n * Whether a value is a valid event type - non-empty string or array.\r\n *\r\n * @private\r\n * @param  {string|Array} type\r\n *         The type value to test.\r\n *\r\n * @return {boolean}\r\n *         Whether or not the type is a valid event type.\r\n */\r\nvar isValidEventType = function isValidEventType(type) {\r\n  return (\r\n    // The regex here verifies that the `type` contains at least one non-\r\n    // whitespace character.\r\n    typeof type === 'string' && /\\S/.test(type) || Array.isArray(type) && !!type.length\r\n  );\r\n};\r\n\r\n/**\r\n * Validates a value to determine if it is a valid event target. Throws if not.\r\n *\r\n * @private\r\n * @throws {Error}\r\n *         If the target does not appear to be a valid event target.\r\n *\r\n * @param  {Object} target\r\n *         The object to test.\r\n */\r\nvar validateTarget = function validateTarget(target) {\r\n  if (!target.nodeName && !isEvented(target)) {\r\n    throw new Error('Invalid target; must be a DOM node or evented object.');\r\n  }\r\n};\r\n\r\n/**\r\n * Validates a value to determine if it is a valid event target. Throws if not.\r\n *\r\n * @private\r\n * @throws {Error}\r\n *         If the type does not appear to be a valid event type.\r\n *\r\n * @param  {string|Array} type\r\n *         The type to test.\r\n */\r\nvar validateEventType = function validateEventType(type) {\r\n  if (!isValidEventType(type)) {\r\n    throw new Error('Invalid event type; must be a non-empty string or array.');\r\n  }\r\n};\r\n\r\n/**\r\n * Validates a value to determine if it is a valid listener. Throws if not.\r\n *\r\n * @private\r\n * @throws {Error}\r\n *         If the listener is not a function.\r\n *\r\n * @param  {Function} listener\r\n *         The listener to test.\r\n */\r\nvar validateListener = function validateListener(listener) {\r\n  if (typeof listener !== 'function') {\r\n    throw new Error('Invalid listener; must be a function.');\r\n  }\r\n};\r\n\r\n/**\r\n * Takes an array of arguments given to `on()` or `one()`, validates them, and\r\n * normalizes them into an object.\r\n *\r\n * @private\r\n * @param  {Object} self\r\n *         The evented object on which `on()` or `one()` was called. This\r\n *         object will be bound as the `this` value for the listener.\r\n *\r\n * @param  {Array} args\r\n *         An array of arguments passed to `on()` or `one()`.\r\n *\r\n * @return {Object}\r\n *         An object containing useful values for `on()` or `one()` calls.\r\n */\r\nvar normalizeListenArgs = function normalizeListenArgs(self, args) {\r\n\r\n  // If the number of arguments is less than 3, the target is always the\r\n  // evented object itself.\r\n  var isTargetingSelf = args.length < 3 || args[0] === self || args[0] === self.eventBusEl_;\r\n  var target = void 0;\r\n  var type = void 0;\r\n  var listener = void 0;\r\n\r\n  if (isTargetingSelf) {\r\n    target = self.eventBusEl_;\r\n\r\n    // Deal with cases where we got 3 arguments, but we are still listening to\r\n    // the evented object itself.\r\n    if (args.length >= 3) {\r\n      args.shift();\r\n    }\r\n\r\n    type = args[0];\r\n    listener = args[1];\r\n  } else {\r\n    target = args[0];\r\n    type = args[1];\r\n    listener = args[2];\r\n  }\r\n\r\n  validateTarget(target);\r\n  validateEventType(type);\r\n  validateListener(listener);\r\n\r\n  listener = bind(self, listener);\r\n\r\n  return { isTargetingSelf: isTargetingSelf, target: target, type: type, listener: listener };\r\n};\r\n\r\n/**\r\n * Adds the listener to the event type(s) on the target, normalizing for\r\n * the type of target.\r\n *\r\n * @private\r\n * @param  {Element|Object} target\r\n *         A DOM node or evented object.\r\n *\r\n * @param  {string} method\r\n *         The event binding method to use (\"on\" or \"one\").\r\n *\r\n * @param  {string|Array} type\r\n *         One or more event type(s).\r\n *\r\n * @param  {Function} listener\r\n *         A listener function.\r\n */\r\nvar listen = function listen(target, method, type, listener) {\r\n  validateTarget(target);\r\n\r\n  if (target.nodeName) {\r\n    Events[method](target, type, listener);\r\n  } else {\r\n    target[method](type, listener);\r\n  }\r\n};\r\n\r\n/**\r\n * Contains methods that provide event capabilites to an object which is passed\r\n * to {@link module:evented|evented}.\r\n *\r\n * @mixin EventedMixin\r\n */\r\nvar EventedMixin = {\r\n\r\n  /**\r\n   * Add a listener to an event (or events) on this object or another evented\r\n   * object.\r\n   *\r\n   * @param  {string|Array|Element|Object} targetOrType\r\n   *         If this is a string or array, it represents the event type(s)\r\n   *         that will trigger the listener.\r\n   *\r\n   *         Another evented object can be passed here instead, which will\r\n   *         cause the listener to listen for events on _that_ object.\r\n   *\r\n   *         In either case, the listener's `this` value will be bound to\r\n   *         this object.\r\n   *\r\n   * @param  {string|Array|Function} typeOrListener\r\n   *         If the first argument was a string or array, this should be the\r\n   *         listener function. Otherwise, this is a string or array of event\r\n   *         type(s).\r\n   *\r\n   * @param  {Function} [listener]\r\n   *         If the first argument was another evented object, this will be\r\n   *         the listener function.\r\n   */\r\n  on: function on$$1() {\r\n    var _this = this;\r\n\r\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\r\n      args[_key] = arguments[_key];\r\n    }\r\n\r\n    var _normalizeListenArgs = normalizeListenArgs(this, args),\r\n        isTargetingSelf = _normalizeListenArgs.isTargetingSelf,\r\n        target = _normalizeListenArgs.target,\r\n        type = _normalizeListenArgs.type,\r\n        listener = _normalizeListenArgs.listener;\r\n\r\n    listen(target, 'on', type, listener);\r\n\r\n    // If this object is listening to another evented object.\r\n    if (!isTargetingSelf) {\r\n\r\n      // If this object is disposed, remove the listener.\r\n      var removeListenerOnDispose = function removeListenerOnDispose() {\r\n        return _this.off(target, type, listener);\r\n      };\r\n\r\n      // Use the same function ID as the listener so we can remove it later it\r\n      // using the ID of the original listener.\r\n      removeListenerOnDispose.guid = listener.guid;\r\n\r\n      // Add a listener to the target's dispose event as well. This ensures\r\n      // that if the target is disposed BEFORE this object, we remove the\r\n      // removal listener that was just added. Otherwise, we create a memory leak.\r\n      var removeRemoverOnTargetDispose = function removeRemoverOnTargetDispose() {\r\n        return _this.off('dispose', removeListenerOnDispose);\r\n      };\r\n\r\n      // Use the same function ID as the listener so we can remove it later\r\n      // it using the ID of the original listener.\r\n      removeRemoverOnTargetDispose.guid = listener.guid;\r\n\r\n      listen(this, 'on', 'dispose', removeListenerOnDispose);\r\n      listen(target, 'on', 'dispose', removeRemoverOnTargetDispose);\r\n    }\r\n  },\r\n\r\n\r\n  /**\r\n   * Add a listener to an event (or events) on this object or another evented\r\n   * object. The listener will only be called once and then removed.\r\n   *\r\n   * @param  {string|Array|Element|Object} targetOrType\r\n   *         If this is a string or array, it represents the event type(s)\r\n   *         that will trigger the listener.\r\n   *\r\n   *         Another evented object can be passed here instead, which will\r\n   *         cause the listener to listen for events on _that_ object.\r\n   *\r\n   *         In either case, the listener's `this` value will be bound to\r\n   *         this object.\r\n   *\r\n   * @param  {string|Array|Function} typeOrListener\r\n   *         If the first argument was a string or array, this should be the\r\n   *         listener function. Otherwise, this is a string or array of event\r\n   *         type(s).\r\n   *\r\n   * @param  {Function} [listener]\r\n   *         If the first argument was another evented object, this will be\r\n   *         the listener function.\r\n   */\r\n  one: function one$$1() {\r\n    var _this2 = this;\r\n\r\n    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\r\n      args[_key2] = arguments[_key2];\r\n    }\r\n\r\n    var _normalizeListenArgs2 = normalizeListenArgs(this, args),\r\n        isTargetingSelf = _normalizeListenArgs2.isTargetingSelf,\r\n        target = _normalizeListenArgs2.target,\r\n        type = _normalizeListenArgs2.type,\r\n        listener = _normalizeListenArgs2.listener;\r\n\r\n    // Targeting this evented object.\r\n\r\n\r\n    if (isTargetingSelf) {\r\n      listen(target, 'one', type, listener);\r\n\r\n      // Targeting another evented object.\r\n    } else {\r\n      var wrapper = function wrapper() {\r\n        for (var _len3 = arguments.length, largs = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\r\n          largs[_key3] = arguments[_key3];\r\n        }\r\n\r\n        _this2.off(target, type, wrapper);\r\n        listener.apply(null, largs);\r\n      };\r\n\r\n      // Use the same function ID as the listener so we can remove it later\r\n      // it using the ID of the original listener.\r\n      wrapper.guid = listener.guid;\r\n      listen(target, 'one', type, wrapper);\r\n    }\r\n  },\r\n\r\n\r\n  /**\r\n   * Removes listener(s) from event(s) on an evented object.\r\n   *\r\n   * @param  {string|Array|Element|Object} [targetOrType]\r\n   *         If this is a string or array, it represents the event type(s).\r\n   *\r\n   *         Another evented object can be passed here instead, in which case\r\n   *         ALL 3 arguments are _required_.\r\n   *\r\n   * @param  {string|Array|Function} [typeOrListener]\r\n   *         If the first argument was a string or array, this may be the\r\n   *         listener function. Otherwise, this is a string or array of event\r\n   *         type(s).\r\n   *\r\n   * @param  {Function} [listener]\r\n   *         If the first argument was another evented object, this will be\r\n   *         the listener function; otherwise, _all_ listeners bound to the\r\n   *         event type(s) will be removed.\r\n   */\r\n  off: function off$$1(targetOrType, typeOrListener, listener) {\r\n\r\n    // Targeting this evented object.\r\n    if (!targetOrType || isValidEventType(targetOrType)) {\r\n      off(this.eventBusEl_, targetOrType, typeOrListener);\r\n\r\n      // Targeting another evented object.\r\n    } else {\r\n      var target = targetOrType;\r\n      var type = typeOrListener;\r\n\r\n      // Fail fast and in a meaningful way!\r\n      validateTarget(target);\r\n      validateEventType(type);\r\n      validateListener(listener);\r\n\r\n      // Ensure there's at least a guid, even if the function hasn't been used\r\n      listener = bind(this, listener);\r\n\r\n      // Remove the dispose listener on this evented object, which was given\r\n      // the same guid as the event listener in on().\r\n      this.off('dispose', listener);\r\n\r\n      if (target.nodeName) {\r\n        off(target, type, listener);\r\n        off(target, 'dispose', listener);\r\n      } else if (isEvented(target)) {\r\n        target.off(type, listener);\r\n        target.off('dispose', listener);\r\n      }\r\n    }\r\n  },\r\n\r\n\r\n  /**\r\n   * Fire an event on this evented object, causing its listeners to be called.\r\n   *\r\n   * @param   {string|Object} event\r\n   *          An event type or an object with a type property.\r\n   *\r\n   * @param   {Object} [hash]\r\n   *          An additional object to pass along to listeners.\r\n   *\r\n   * @returns {boolean}\r\n   *          Whether or not the default behavior was prevented.\r\n   */\r\n  trigger: function trigger$$1(event, hash) {\r\n    return trigger(this.eventBusEl_, event, hash);\r\n  }\r\n};\r\n\r\n/**\r\n * Applies {@link module:evented~EventedMixin|EventedMixin} to a target object.\r\n *\r\n * @param  {Object} target\r\n *         The object to which to add event methods.\r\n *\r\n * @param  {Object} [options={}]\r\n *         Options for customizing the mixin behavior.\r\n *\r\n * @param  {String} [options.eventBusKey]\r\n *         By default, adds a `eventBusEl_` DOM element to the target object,\r\n *         which is used as an event bus. If the target object already has a\r\n *         DOM element that should be used, pass its key here.\r\n *\r\n * @return {Object}\r\n *         The target object.\r\n */\r\nfunction evented(target) {\r\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n  var eventBusKey = options.eventBusKey;\r\n\r\n  // Set or create the eventBusEl_.\r\n\r\n  if (eventBusKey) {\r\n    if (!target[eventBusKey].nodeName) {\r\n      throw new Error('The eventBusKey \"' + eventBusKey + '\" does not refer to an element.');\r\n    }\r\n    target.eventBusEl_ = target[eventBusKey];\r\n  } else {\r\n    target.eventBusEl_ = createEl('span', { className: 'vjs-event-bus' });\r\n  }\r\n\r\n  assign(target, EventedMixin);\r\n\r\n  // When any evented object is disposed, it removes all its listeners.\r\n  target.on('dispose', function () {\r\n    target.off();\r\n    window.setTimeout(function () {\r\n      target.eventBusEl_ = null;\r\n    }, 0);\r\n  });\r\n\r\n  return target;\r\n}\r\n\r\n/**\r\n * @file mixins/stateful.js\r\n * @module stateful\r\n */\r\n/**\r\n * Contains methods that provide statefulness to an object which is passed\r\n * to {@link module:stateful}.\r\n *\r\n * @mixin StatefulMixin\r\n */\r\nvar StatefulMixin = {\r\n\r\n  /**\r\n   * A hash containing arbitrary keys and values representing the state of\r\n   * the object.\r\n   *\r\n   * @type {Object}\r\n   */\r\n  state: {},\r\n\r\n  /**\r\n   * Set the state of an object by mutating its\r\n   * {@link module:stateful~StatefulMixin.state|state} object in place.\r\n   *\r\n   * @fires   module:stateful~StatefulMixin#statechanged\r\n   * @param   {Object|Function} stateUpdates\r\n   *          A new set of properties to shallow-merge into the plugin state.\r\n   *          Can be a plain object or a function returning a plain object.\r\n   *\r\n   * @returns {Object|undefined}\r\n   *          An object containing changes that occurred. If no changes\r\n   *          occurred, returns `undefined`.\r\n   */\r\n  setState: function setState(stateUpdates) {\r\n    var _this = this;\r\n\r\n    // Support providing the `stateUpdates` state as a function.\r\n    if (typeof stateUpdates === 'function') {\r\n      stateUpdates = stateUpdates();\r\n    }\r\n\r\n    var changes = void 0;\r\n\r\n    each(stateUpdates, function (value, key) {\r\n\r\n      // Record the change if the value is different from what's in the\r\n      // current state.\r\n      if (_this.state[key] !== value) {\r\n        changes = changes || {};\r\n        changes[key] = {\r\n          from: _this.state[key],\r\n          to: value\r\n        };\r\n      }\r\n\r\n      _this.state[key] = value;\r\n    });\r\n\r\n    // Only trigger \"statechange\" if there were changes AND we have a trigger\r\n    // function. This allows us to not require that the target object be an\r\n    // evented object.\r\n    if (changes && isEvented(this)) {\r\n\r\n      /**\r\n       * An event triggered on an object that is both\r\n       * {@link module:stateful|stateful} and {@link module:evented|evented}\r\n       * indicating that its state has changed.\r\n       *\r\n       * @event    module:stateful~StatefulMixin#statechanged\r\n       * @type     {Object}\r\n       * @property {Object} changes\r\n       *           A hash containing the properties that were changed and\r\n       *           the values they were changed `from` and `to`.\r\n       */\r\n      this.trigger({\r\n        changes: changes,\r\n        type: 'statechanged'\r\n      });\r\n    }\r\n\r\n    return changes;\r\n  }\r\n};\r\n\r\n/**\r\n * Applies {@link module:stateful~StatefulMixin|StatefulMixin} to a target\r\n * object.\r\n *\r\n * If the target object is {@link module:evented|evented} and has a\r\n * `handleStateChanged` method, that method will be automatically bound to the\r\n * `statechanged` event on itself.\r\n *\r\n * @param   {Object} target\r\n *          The object to be made stateful.\r\n *\r\n * @param   {Object} [defaultState]\r\n *          A default set of properties to populate the newly-stateful object's\r\n *          `state` property.\r\n *\r\n * @returns {Object}\r\n *          Returns the `target`.\r\n */\r\nfunction stateful(target, defaultState) {\r\n  assign(target, StatefulMixin);\r\n\r\n  // This happens after the mixing-in because we need to replace the `state`\r\n  // added in that step.\r\n  target.state = assign({}, target.state, defaultState);\r\n\r\n  // Auto-bind the `handleStateChanged` method of the target object if it exists.\r\n  if (typeof target.handleStateChanged === 'function' && isEvented(target)) {\r\n    target.on('statechanged', target.handleStateChanged);\r\n  }\r\n\r\n  return target;\r\n}\r\n\r\n/**\r\n * @file to-title-case.js\r\n * @module to-title-case\r\n */\r\n\r\n/**\r\n * Uppercase the first letter of a string.\r\n *\r\n * @param {string} string\r\n *        String to be uppercased\r\n *\r\n * @return {string}\r\n *         The string with an uppercased first letter\r\n */\r\nfunction toTitleCase(string) {\r\n  if (typeof string !== 'string') {\r\n    return string;\r\n  }\r\n\r\n  return string.charAt(0).toUpperCase() + string.slice(1);\r\n}\r\n\r\n/**\r\n * Compares the TitleCase versions of the two strings for equality.\r\n *\r\n * @param {string} str1\r\n *        The first string to compare\r\n *\r\n * @param {string} str2\r\n *        The second string to compare\r\n *\r\n * @return {boolean}\r\n *         Whether the TitleCase versions of the strings are equal\r\n */\r\nfunction titleCaseEquals(str1, str2) {\r\n  return toTitleCase(str1) === toTitleCase(str2);\r\n}\r\n\r\n/**\r\n * @file merge-options.js\r\n * @module merge-options\r\n */\r\n/**\r\n * Deep-merge one or more options objects, recursively merging **only** plain\r\n * object properties.\r\n *\r\n * @param   {Object[]} sources\r\n *          One or more objects to merge into a new object.\r\n *\r\n * @returns {Object}\r\n *          A new object that is the merged result of all sources.\r\n */\r\nfunction mergeOptions() {\r\n  var result = {};\r\n\r\n  for (var _len = arguments.length, sources = Array(_len), _key = 0; _key < _len; _key++) {\r\n    sources[_key] = arguments[_key];\r\n  }\r\n\r\n  sources.forEach(function (source) {\r\n    if (!source) {\r\n      return;\r\n    }\r\n\r\n    each(source, function (value, key) {\r\n      if (!isPlain(value)) {\r\n        result[key] = value;\r\n        return;\r\n      }\r\n\r\n      if (!isPlain(result[key])) {\r\n        result[key] = {};\r\n      }\r\n\r\n      result[key] = mergeOptions(result[key], value);\r\n    });\r\n  });\r\n\r\n  return result;\r\n}\r\n\r\n/**\r\n * Player Component - Base class for all UI objects\r\n *\r\n * @file component.js\r\n */\r\n/**\r\n * Base class for all UI Components.\r\n * Components are UI objects which represent both a javascript object and an element\r\n * in the DOM. They can be children of other components, and can have\r\n * children themselves.\r\n *\r\n * Components can also use methods from {@link EventTarget}\r\n */\r\n\r\nvar Component = function () {\r\n\r\n  /**\r\n   * A callback that is called when a component is ready. Does not have any\r\n   * paramters and any callback value will be ignored.\r\n   *\r\n   * @callback Component~ReadyCallback\r\n   * @this Component\r\n   */\r\n\r\n  /**\r\n   * Creates an instance of this class.\r\n   *\r\n   * @param {Player} player\r\n   *        The `Player` that this class should be attached to.\r\n   *\r\n   * @param {Object} [options]\r\n   *        The key/value store of player options.\r\n   *\r\n   * @param {Object[]} [options.children]\r\n   *        An array of children objects to intialize this component with. Children objects have\r\n   *        a name property that will be used if more than one component of the same type needs to be\r\n   *        added.\r\n   *\r\n   * @param {Component~ReadyCallback} [ready]\r\n   *        Function that gets called when the `Component` is ready.\r\n   */\r\n  function Component(player, options, ready) {\r\n    classCallCheck(this, Component);\r\n\r\n\r\n    // The component might be the player itself and we can't pass `this` to super\r\n    if (!player && this.play) {\r\n      this.player_ = player = this; // eslint-disable-line\r\n    } else {\r\n      this.player_ = player;\r\n    }\r\n\r\n    // Make a copy of prototype.options_ to protect against overriding defaults\r\n    this.options_ = mergeOptions({}, this.options_);\r\n\r\n    // Updated options with supplied options\r\n    options = this.options_ = mergeOptions(this.options_, options);\r\n\r\n    // Get ID from options or options element if one is supplied\r\n    this.id_ = options.id || options.el && options.el.id;\r\n\r\n    // If there was no ID from the options, generate one\r\n    if (!this.id_) {\r\n      // Don't require the player ID function in the case of mock players\r\n      var id = player && player.id && player.id() || 'no_player';\r\n\r\n      this.id_ = id + '_component_' + newGUID();\r\n    }\r\n\r\n    this.name_ = options.name || null;\r\n\r\n    // Create element if one wasn't provided in options\r\n    if (options.el) {\r\n      this.el_ = options.el;\r\n    } else if (options.createEl !== false) {\r\n      this.el_ = this.createEl();\r\n    }\r\n\r\n    // if evented is anything except false, we want to mixin in evented\r\n    if (options.evented !== false) {\r\n      // Make this an evented object and use `el_`, if available, as its event bus\r\n      evented(this, { eventBusKey: this.el_ ? 'el_' : null });\r\n    }\r\n    stateful(this, this.constructor.defaultState);\r\n\r\n    this.children_ = [];\r\n    this.childIndex_ = {};\r\n    this.childNameIndex_ = {};\r\n\r\n    // Add any child components in options\r\n    if (options.initChildren !== false) {\r\n      this.initChildren();\r\n    }\r\n\r\n    this.ready(ready);\r\n    // Don't want to trigger ready here or it will before init is actually\r\n    // finished for all children that run this constructor\r\n\r\n    if (options.reportTouchActivity !== false) {\r\n      this.enableTouchActivity();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Dispose of the `Component` and all child components.\r\n   *\r\n   * @fires Component#dispose\r\n   */\r\n\r\n\r\n  Component.prototype.dispose = function dispose() {\r\n\r\n    /**\r\n     * Triggered when a `Component` is disposed.\r\n     *\r\n     * @event Component#dispose\r\n     * @type {EventTarget~Event}\r\n     *\r\n     * @property {boolean} [bubbles=false]\r\n     *           set to false so that the close event does not\r\n     *           bubble up\r\n     */\r\n    this.trigger({ type: 'dispose', bubbles: false });\r\n\r\n    // Dispose all children.\r\n    if (this.children_) {\r\n      for (var i = this.children_.length - 1; i >= 0; i--) {\r\n        if (this.children_[i].dispose) {\r\n          this.children_[i].dispose();\r\n        }\r\n      }\r\n    }\r\n\r\n    // Delete child references\r\n    this.children_ = null;\r\n    this.childIndex_ = null;\r\n    this.childNameIndex_ = null;\r\n\r\n    if (this.el_) {\r\n      // Remove element from DOM\r\n      if (this.el_.parentNode) {\r\n        this.el_.parentNode.removeChild(this.el_);\r\n      }\r\n\r\n      removeData(this.el_);\r\n      this.el_ = null;\r\n    }\r\n\r\n    // remove reference to the player after disposing of the element\r\n    this.player_ = null;\r\n  };\r\n\r\n  /**\r\n   * Return the {@link Player} that the `Component` has attached to.\r\n   *\r\n   * @return {Player}\r\n   *         The player that this `Component` has attached to.\r\n   */\r\n\r\n\r\n  Component.prototype.player = function player() {\r\n    return this.player_;\r\n  };\r\n\r\n  /**\r\n   * Deep merge of options objects with new options.\r\n   * > Note: When both `obj` and `options` contain properties whose values are objects.\r\n   *         The two properties get merged using {@link module:mergeOptions}\r\n   *\r\n   * @param {Object} obj\r\n   *        The object that contains new options.\r\n   *\r\n   * @return {Object}\r\n   *         A new object of `this.options_` and `obj` merged together.\r\n   *\r\n   * @deprecated since version 5\r\n   */\r\n\r\n\r\n  Component.prototype.options = function options(obj) {\r\n    log.warn('this.options() has been deprecated and will be moved to the constructor in 6.0');\r\n\r\n    if (!obj) {\r\n      return this.options_;\r\n    }\r\n\r\n    this.options_ = mergeOptions(this.options_, obj);\r\n    return this.options_;\r\n  };\r\n\r\n  /**\r\n   * Get the `Component`s DOM element\r\n   *\r\n   * @return {Element}\r\n   *         The DOM element for this `Component`.\r\n   */\r\n\r\n\r\n  Component.prototype.el = function el() {\r\n    return this.el_;\r\n  };\r\n\r\n  /**\r\n   * Create the `Component`s DOM element.\r\n   *\r\n   * @param {string} [tagName]\r\n   *        Element's DOM node type. e.g. 'div'\r\n   *\r\n   * @param {Object} [properties]\r\n   *        An object of properties that should be set.\r\n   *\r\n   * @param {Object} [attributes]\r\n   *        An object of attributes that should be set.\r\n   *\r\n   * @return {Element}\r\n   *         The element that gets created.\r\n   */\r\n\r\n\r\n  Component.prototype.createEl = function createEl$$1(tagName, properties, attributes) {\r\n    return createEl(tagName, properties, attributes);\r\n  };\r\n\r\n  /**\r\n   * Localize a string given the string in english.\r\n   *\r\n   * If tokens are provided, it'll try and run a simple token replacement on the provided string.\r\n   * The tokens it looks for look like `{1}` with the index being 1-indexed into the tokens array.\r\n   *\r\n   * If a `defaultValue` is provided, it'll use that over `string`,\r\n   * if a value isn't found in provided language files.\r\n   * This is useful if you want to have a descriptive key for token replacement\r\n   * but have a succinct localized string and not require `en.json` to be included.\r\n   *\r\n   * Currently, it is used for the progress bar timing.\r\n   * ```js\r\n   * {\r\n   *   \"progress bar timing: currentTime={1} duration={2}\": \"{1} of {2}\"\r\n   * }\r\n   * ```\r\n   * It is then used like so:\r\n   * ```js\r\n   * this.localize('progress bar timing: currentTime={1} duration{2}',\r\n   *               [this.player_.currentTime(), this.player_.duration()],\r\n   *               '{1} of {2}');\r\n   * ```\r\n   *\r\n   * Which outputs something like: `01:23 of 24:56`.\r\n   *\r\n   *\r\n   * @param {string} string\r\n   *        The string to localize and the key to lookup in the language files.\r\n   * @param {string[]} [tokens]\r\n   *        If the current item has token replacements, provide the tokens here.\r\n   * @param {string} [defaultValue]\r\n   *        Defaults to `string`. Can be a default value to use for token replacement\r\n   *        if the lookup key is needed to be separate.\r\n   *\r\n   * @return {string}\r\n   *         The localized string or if no localization exists the english string.\r\n   */\r\n\r\n\r\n  Component.prototype.localize = function localize(string, tokens) {\r\n    var defaultValue = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : string;\r\n\r\n    var code = this.player_.language && this.player_.language();\r\n    var languages = this.player_.languages && this.player_.languages();\r\n    var language = languages && languages[code];\r\n    var primaryCode = code && code.split('-')[0];\r\n    var primaryLang = languages && languages[primaryCode];\r\n\r\n    var localizedString = defaultValue;\r\n\r\n    if (language && language[string]) {\r\n      localizedString = language[string];\r\n    } else if (primaryLang && primaryLang[string]) {\r\n      localizedString = primaryLang[string];\r\n    }\r\n\r\n    if (tokens) {\r\n      localizedString = localizedString.replace(/\\{(\\d+)\\}/g, function (match, index) {\r\n        var value = tokens[index - 1];\r\n        var ret = value;\r\n\r\n        if (typeof value === 'undefined') {\r\n          ret = match;\r\n        }\r\n\r\n        return ret;\r\n      });\r\n    }\r\n\r\n    return localizedString;\r\n  };\r\n\r\n  /**\r\n   * Return the `Component`s DOM element. This is where children get inserted.\r\n   * This will usually be the the same as the element returned in {@link Component#el}.\r\n   *\r\n   * @return {Element}\r\n   *         The content element for this `Component`.\r\n   */\r\n\r\n\r\n  Component.prototype.contentEl = function contentEl() {\r\n    return this.contentEl_ || this.el_;\r\n  };\r\n\r\n  /**\r\n   * Get this `Component`s ID\r\n   *\r\n   * @return {string}\r\n   *         The id of this `Component`\r\n   */\r\n\r\n\r\n  Component.prototype.id = function id() {\r\n    return this.id_;\r\n  };\r\n\r\n  /**\r\n   * Get the `Component`s name. The name gets used to reference the `Component`\r\n   * and is set during registration.\r\n   *\r\n   * @return {string}\r\n   *         The name of this `Component`.\r\n   */\r\n\r\n\r\n  Component.prototype.name = function name() {\r\n    return this.name_;\r\n  };\r\n\r\n  /**\r\n   * Get an array of all child components\r\n   *\r\n   * @return {Array}\r\n   *         The children\r\n   */\r\n\r\n\r\n  Component.prototype.children = function children() {\r\n    return this.children_;\r\n  };\r\n\r\n  /**\r\n   * Returns the child `Component` with the given `id`.\r\n   *\r\n   * @param {string} id\r\n   *        The id of the child `Component` to get.\r\n   *\r\n   * @return {Component|undefined}\r\n   *         The child `Component` with the given `id` or undefined.\r\n   */\r\n\r\n\r\n  Component.prototype.getChildById = function getChildById(id) {\r\n    return this.childIndex_[id];\r\n  };\r\n\r\n  /**\r\n   * Returns the child `Component` with the given `name`.\r\n   *\r\n   * @param {string} name\r\n   *        The name of the child `Component` to get.\r\n   *\r\n   * @return {Component|undefined}\r\n   *         The child `Component` with the given `name` or undefined.\r\n   */\r\n\r\n\r\n  Component.prototype.getChild = function getChild(name) {\r\n    if (!name) {\r\n      return;\r\n    }\r\n\r\n    name = toTitleCase(name);\r\n\r\n    return this.childNameIndex_[name];\r\n  };\r\n\r\n  /**\r\n   * Add a child `Component` inside the current `Component`.\r\n   *\r\n   *\r\n   * @param {string|Component} child\r\n   *        The name or instance of a child to add.\r\n   *\r\n   * @param {Object} [options={}]\r\n   *        The key/value store of options that will get passed to children of\r\n   *        the child.\r\n   *\r\n   * @param {number} [index=this.children_.length]\r\n   *        The index to attempt to add a child into.\r\n   *\r\n   * @return {Component}\r\n   *         The `Component` that gets added as a child. When using a string the\r\n   *         `Component` will get created by this process.\r\n   */\r\n\r\n\r\n  Component.prototype.addChild = function addChild(child) {\r\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n    var index = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.children_.length;\r\n\r\n    var component = void 0;\r\n    var componentName = void 0;\r\n\r\n    // If child is a string, create component with options\r\n    if (typeof child === 'string') {\r\n      componentName = toTitleCase(child);\r\n\r\n      var componentClassName = options.componentClass || componentName;\r\n\r\n      // Set name through options\r\n      options.name = componentName;\r\n\r\n      // Create a new object & element for this controls set\r\n      // If there's no .player_, this is a player\r\n      var ComponentClass = Component.getComponent(componentClassName);\r\n\r\n      if (!ComponentClass) {\r\n        throw new Error('Component ' + componentClassName + ' does not exist');\r\n      }\r\n\r\n      // data stored directly on the videojs object may be\r\n      // misidentified as a component to retain\r\n      // backwards-compatibility with 4.x. check to make sure the\r\n      // component class can be instantiated.\r\n      if (typeof ComponentClass !== 'function') {\r\n        return null;\r\n      }\r\n\r\n      component = new ComponentClass(this.player_ || this, options);\r\n\r\n      // child is a component instance\r\n    } else {\r\n      component = child;\r\n    }\r\n\r\n    this.children_.splice(index, 0, component);\r\n\r\n    if (typeof component.id === 'function') {\r\n      this.childIndex_[component.id()] = component;\r\n    }\r\n\r\n    // If a name wasn't used to create the component, check if we can use the\r\n    // name function of the component\r\n    componentName = componentName || component.name && toTitleCase(component.name());\r\n\r\n    if (componentName) {\r\n      this.childNameIndex_[componentName] = component;\r\n    }\r\n\r\n    // Add the UI object's element to the container div (box)\r\n    // Having an element is not required\r\n    if (typeof component.el === 'function' && component.el()) {\r\n      var childNodes = this.contentEl().children;\r\n      var refNode = childNodes[index] || null;\r\n\r\n      this.contentEl().insertBefore(component.el(), refNode);\r\n    }\r\n\r\n    // Return so it can stored on parent object if desired.\r\n    return component;\r\n  };\r\n\r\n  /**\r\n   * Remove a child `Component` from this `Component`s list of children. Also removes\r\n   * the child `Component`s element from this `Component`s element.\r\n   *\r\n   * @param {Component} component\r\n   *        The child `Component` to remove.\r\n   */\r\n\r\n\r\n  Component.prototype.removeChild = function removeChild(component) {\r\n    if (typeof component === 'string') {\r\n      component = this.getChild(component);\r\n    }\r\n\r\n    if (!component || !this.children_) {\r\n      return;\r\n    }\r\n\r\n    var childFound = false;\r\n\r\n    for (var i = this.children_.length - 1; i >= 0; i--) {\r\n      if (this.children_[i] === component) {\r\n        childFound = true;\r\n        this.children_.splice(i, 1);\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (!childFound) {\r\n      return;\r\n    }\r\n\r\n    this.childIndex_[component.id()] = null;\r\n    this.childNameIndex_[component.name()] = null;\r\n\r\n    var compEl = component.el();\r\n\r\n    if (compEl && compEl.parentNode === this.contentEl()) {\r\n      this.contentEl().removeChild(component.el());\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Add and initialize default child `Component`s based upon options.\r\n   */\r\n\r\n\r\n  Component.prototype.initChildren = function initChildren() {\r\n    var _this = this;\r\n\r\n    var children = this.options_.children;\r\n\r\n    if (children) {\r\n      // `this` is `parent`\r\n      var parentOptions = this.options_;\r\n\r\n      var handleAdd = function handleAdd(child) {\r\n        var name = child.name;\r\n        var opts = child.opts;\r\n\r\n        // Allow options for children to be set at the parent options\r\n        // e.g. videojs(id, { controlBar: false });\r\n        // instead of videojs(id, { children: { controlBar: false });\r\n        if (parentOptions[name] !== undefined) {\r\n          opts = parentOptions[name];\r\n        }\r\n\r\n        // Allow for disabling default components\r\n        // e.g. options['children']['posterImage'] = false\r\n        if (opts === false) {\r\n          return;\r\n        }\r\n\r\n        // Allow options to be passed as a simple boolean if no configuration\r\n        // is necessary.\r\n        if (opts === true) {\r\n          opts = {};\r\n        }\r\n\r\n        // We also want to pass the original player options\r\n        // to each component as well so they don't need to\r\n        // reach back into the player for options later.\r\n        opts.playerOptions = _this.options_.playerOptions;\r\n\r\n        // Create and add the child component.\r\n        // Add a direct reference to the child by name on the parent instance.\r\n        // If two of the same component are used, different names should be supplied\r\n        // for each\r\n        var newChild = _this.addChild(name, opts);\r\n\r\n        if (newChild) {\r\n          _this[name] = newChild;\r\n        }\r\n      };\r\n\r\n      // Allow for an array of children details to passed in the options\r\n      var workingChildren = void 0;\r\n      var Tech = Component.getComponent('Tech');\r\n\r\n      if (Array.isArray(children)) {\r\n        workingChildren = children;\r\n      } else {\r\n        workingChildren = Object.keys(children);\r\n      }\r\n\r\n      workingChildren\r\n      // children that are in this.options_ but also in workingChildren  would\r\n      // give us extra children we do not want. So, we want to filter them out.\r\n      .concat(Object.keys(this.options_).filter(function (child) {\r\n        return !workingChildren.some(function (wchild) {\r\n          if (typeof wchild === 'string') {\r\n            return child === wchild;\r\n          }\r\n          return child === wchild.name;\r\n        });\r\n      })).map(function (child) {\r\n        var name = void 0;\r\n        var opts = void 0;\r\n\r\n        if (typeof child === 'string') {\r\n          name = child;\r\n          opts = children[name] || _this.options_[name] || {};\r\n        } else {\r\n          name = child.name;\r\n          opts = child;\r\n        }\r\n\r\n        return { name: name, opts: opts };\r\n      }).filter(function (child) {\r\n        // we have to make sure that child.name isn't in the techOrder since\r\n        // techs are registerd as Components but can't aren't compatible\r\n        // See https://github.com/videojs/video.js/issues/2772\r\n        var c = Component.getComponent(child.opts.componentClass || toTitleCase(child.name));\r\n\r\n        return c && !Tech.isTech(c);\r\n      }).forEach(handleAdd);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Builds the default DOM class name. Should be overriden by sub-components.\r\n   *\r\n   * @return {string}\r\n   *         The DOM class name for this object.\r\n   *\r\n   * @abstract\r\n   */\r\n\r\n\r\n  Component.prototype.buildCSSClass = function buildCSSClass() {\r\n    // Child classes can include a function that does:\r\n    // return 'CLASS NAME' + this._super();\r\n    return '';\r\n  };\r\n\r\n  /**\r\n   * Bind a listener to the component's ready state.\r\n   * Different from event listeners in that if the ready event has already happened\r\n   * it will trigger the function immediately.\r\n   *\r\n   * @return {Component}\r\n   *         Returns itself; method can be chained.\r\n   */\r\n\r\n\r\n  Component.prototype.ready = function ready(fn) {\r\n    var sync = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\r\n\r\n    if (!fn) {\r\n      return;\r\n    }\r\n\r\n    if (!this.isReady_) {\r\n      this.readyQueue_ = this.readyQueue_ || [];\r\n      this.readyQueue_.push(fn);\r\n      return;\r\n    }\r\n\r\n    if (sync) {\r\n      fn.call(this);\r\n    } else {\r\n      // Call the function asynchronously by default for consistency\r\n      this.setTimeout(fn, 1);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Trigger all the ready listeners for this `Component`.\r\n   *\r\n   * @fires Component#ready\r\n   */\r\n\r\n\r\n  Component.prototype.triggerReady = function triggerReady() {\r\n    this.isReady_ = true;\r\n\r\n    // Ensure ready is triggered asynchronously\r\n    this.setTimeout(function () {\r\n      var readyQueue = this.readyQueue_;\r\n\r\n      // Reset Ready Queue\r\n      this.readyQueue_ = [];\r\n\r\n      if (readyQueue && readyQueue.length > 0) {\r\n        readyQueue.forEach(function (fn) {\r\n          fn.call(this);\r\n        }, this);\r\n      }\r\n\r\n      // Allow for using event listeners also\r\n      /**\r\n       * Triggered when a `Component` is ready.\r\n       *\r\n       * @event Component#ready\r\n       * @type {EventTarget~Event}\r\n       */\r\n      this.trigger('ready');\r\n    }, 1);\r\n  };\r\n\r\n  /**\r\n   * Find a single DOM element matching a `selector`. This can be within the `Component`s\r\n   * `contentEl()` or another custom context.\r\n   *\r\n   * @param {string} selector\r\n   *        A valid CSS selector, which will be passed to `querySelector`.\r\n   *\r\n   * @param {Element|string} [context=this.contentEl()]\r\n   *        A DOM element within which to query. Can also be a selector string in\r\n   *        which case the first matching element will get used as context. If\r\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\r\n   *        nothing it falls back to `document`.\r\n   *\r\n   * @return {Element|null}\r\n   *         the dom element that was found, or null\r\n   *\r\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\r\n   */\r\n\r\n\r\n  Component.prototype.$ = function $$$1(selector, context) {\r\n    return $(selector, context || this.contentEl());\r\n  };\r\n\r\n  /**\r\n   * Finds all DOM element matching a `selector`. This can be within the `Component`s\r\n   * `contentEl()` or another custom context.\r\n   *\r\n   * @param {string} selector\r\n   *        A valid CSS selector, which will be passed to `querySelectorAll`.\r\n   *\r\n   * @param {Element|string} [context=this.contentEl()]\r\n   *        A DOM element within which to query. Can also be a selector string in\r\n   *        which case the first matching element will get used as context. If\r\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\r\n   *        nothing it falls back to `document`.\r\n   *\r\n   * @return {NodeList}\r\n   *         a list of dom elements that were found\r\n   *\r\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\r\n   */\r\n\r\n\r\n  Component.prototype.$$ = function $$$$1(selector, context) {\r\n    return $$(selector, context || this.contentEl());\r\n  };\r\n\r\n  /**\r\n   * Check if a component's element has a CSS class name.\r\n   *\r\n   * @param {string} classToCheck\r\n   *        CSS class name to check.\r\n   *\r\n   * @return {boolean}\r\n   *         - True if the `Component` has the class.\r\n   *         - False if the `Component` does not have the class`\r\n   */\r\n\r\n\r\n  Component.prototype.hasClass = function hasClass$$1(classToCheck) {\r\n    return hasClass(this.el_, classToCheck);\r\n  };\r\n\r\n  /**\r\n   * Add a CSS class name to the `Component`s element.\r\n   *\r\n   * @param {string} classToAdd\r\n   *        CSS class name to add\r\n   */\r\n\r\n\r\n  Component.prototype.addClass = function addClass$$1(classToAdd) {\r\n    addClass(this.el_, classToAdd);\r\n  };\r\n\r\n  /**\r\n   * Remove a CSS class name from the `Component`s element.\r\n   *\r\n   * @param {string} classToRemove\r\n   *        CSS class name to remove\r\n   */\r\n\r\n\r\n  Component.prototype.removeClass = function removeClass$$1(classToRemove) {\r\n    removeClass(this.el_, classToRemove);\r\n  };\r\n\r\n  /**\r\n   * Add or remove a CSS class name from the component's element.\r\n   * - `classToToggle` gets added when {@link Component#hasClass} would return false.\r\n   * - `classToToggle` gets removed when {@link Component#hasClass} would return true.\r\n   *\r\n   * @param  {string} classToToggle\r\n   *         The class to add or remove based on (@link Component#hasClass}\r\n   *\r\n   * @param  {boolean|Dom~predicate} [predicate]\r\n   *         An {@link Dom~predicate} function or a boolean\r\n   */\r\n\r\n\r\n  Component.prototype.toggleClass = function toggleClass$$1(classToToggle, predicate) {\r\n    toggleClass(this.el_, classToToggle, predicate);\r\n  };\r\n\r\n  /**\r\n   * Show the `Component`s element if it is hidden by removing the\r\n   * 'vjs-hidden' class name from it.\r\n   */\r\n\r\n\r\n  Component.prototype.show = function show() {\r\n    this.removeClass('vjs-hidden');\r\n  };\r\n\r\n  /**\r\n   * Hide the `Component`s element if it is currently showing by adding the\r\n   * 'vjs-hidden` class name to it.\r\n   */\r\n\r\n\r\n  Component.prototype.hide = function hide() {\r\n    this.addClass('vjs-hidden');\r\n  };\r\n\r\n  /**\r\n   * Lock a `Component`s element in its visible state by adding the 'vjs-lock-showing'\r\n   * class name to it. Used during fadeIn/fadeOut.\r\n   *\r\n   * @private\r\n   */\r\n\r\n\r\n  Component.prototype.lockShowing = function lockShowing() {\r\n    this.addClass('vjs-lock-showing');\r\n  };\r\n\r\n  /**\r\n   * Unlock a `Component`s element from its visible state by removing the 'vjs-lock-showing'\r\n   * class name from it. Used during fadeIn/fadeOut.\r\n   *\r\n   * @private\r\n   */\r\n\r\n\r\n  Component.prototype.unlockShowing = function unlockShowing() {\r\n    this.removeClass('vjs-lock-showing');\r\n  };\r\n\r\n  /**\r\n   * Get the value of an attribute on the `Component`s element.\r\n   *\r\n   * @param {string} attribute\r\n   *        Name of the attribute to get the value from.\r\n   *\r\n   * @return {string|null}\r\n   *         - The value of the attribute that was asked for.\r\n   *         - Can be an empty string on some browsers if the attribute does not exist\r\n   *           or has no value\r\n   *         - Most browsers will return null if the attibute does not exist or has\r\n   *           no value.\r\n   *\r\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute}\r\n   */\r\n\r\n\r\n  Component.prototype.getAttribute = function getAttribute$$1(attribute) {\r\n    return getAttribute(this.el_, attribute);\r\n  };\r\n\r\n  /**\r\n   * Set the value of an attribute on the `Component`'s element\r\n   *\r\n   * @param {string} attribute\r\n   *        Name of the attribute to set.\r\n   *\r\n   * @param {string} value\r\n   *        Value to set the attribute to.\r\n   *\r\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute}\r\n   */\r\n\r\n\r\n  Component.prototype.setAttribute = function setAttribute$$1(attribute, value) {\r\n    setAttribute(this.el_, attribute, value);\r\n  };\r\n\r\n  /**\r\n   * Remove an attribute from the `Component`s element.\r\n   *\r\n   * @param {string} attribute\r\n   *        Name of the attribute to remove.\r\n   *\r\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute}\r\n   */\r\n\r\n\r\n  Component.prototype.removeAttribute = function removeAttribute$$1(attribute) {\r\n    removeAttribute(this.el_, attribute);\r\n  };\r\n\r\n  /**\r\n   * Get or set the width of the component based upon the CSS styles.\r\n   * See {@link Component#dimension} for more detailed information.\r\n   *\r\n   * @param {number|string} [num]\r\n   *        The width that you want to set postfixed with '%', 'px' or nothing.\r\n   *\r\n   * @param {boolean} [skipListeners]\r\n   *        Skip the componentresize event trigger\r\n   *\r\n   * @return {number|string}\r\n   *         The width when getting, zero if there is no width. Can be a string\r\n   *           postpixed with '%' or 'px'.\r\n   */\r\n\r\n\r\n  Component.prototype.width = function width(num, skipListeners) {\r\n    return this.dimension('width', num, skipListeners);\r\n  };\r\n\r\n  /**\r\n   * Get or set the height of the component based upon the CSS styles.\r\n   * See {@link Component#dimension} for more detailed information.\r\n   *\r\n   * @param {number|string} [num]\r\n   *        The height that you want to set postfixed with '%', 'px' or nothing.\r\n   *\r\n   * @param {boolean} [skipListeners]\r\n   *        Skip the componentresize event trigger\r\n   *\r\n   * @return {number|string}\r\n   *         The width when getting, zero if there is no width. Can be a string\r\n   *         postpixed with '%' or 'px'.\r\n   */\r\n\r\n\r\n  Component.prototype.height = function height(num, skipListeners) {\r\n    return this.dimension('height', num, skipListeners);\r\n  };\r\n\r\n  /**\r\n   * Set both the width and height of the `Component` element at the same time.\r\n   *\r\n   * @param  {number|string} width\r\n   *         Width to set the `Component`s element to.\r\n   *\r\n   * @param  {number|string} height\r\n   *         Height to set the `Component`s element to.\r\n   */\r\n\r\n\r\n  Component.prototype.dimensions = function dimensions(width, height) {\r\n    // Skip componentresize listeners on width for optimization\r\n    this.width(width, true);\r\n    this.height(height);\r\n  };\r\n\r\n  /**\r\n   * Get or set width or height of the `Component` element. This is the shared code\r\n   * for the {@link Component#width} and {@link Component#height}.\r\n   *\r\n   * Things to know:\r\n   * - If the width or height in an number this will return the number postfixed with 'px'.\r\n   * - If the width/height is a percent this will return the percent postfixed with '%'\r\n   * - Hidden elements have a width of 0 with `window.getComputedStyle`. This function\r\n   *   defaults to the `Component`s `style.width` and falls back to `window.getComputedStyle`.\r\n   *   See [this]{@link http://www.foliotek.com/devblog/getting-the-width-of-a-hidden-element-with-jquery-using-width/}\r\n   *   for more information\r\n   * - If you want the computed style of the component, use {@link Component#currentWidth}\r\n   *   and {@link {Component#currentHeight}\r\n   *\r\n   * @fires Component#componentresize\r\n   *\r\n   * @param {string} widthOrHeight\r\n   8        'width' or 'height'\r\n   *\r\n   * @param  {number|string} [num]\r\n   8         New dimension\r\n   *\r\n   * @param  {boolean} [skipListeners]\r\n   *         Skip componentresize event trigger\r\n   *\r\n   * @return {number}\r\n   *         The dimension when getting or 0 if unset\r\n   */\r\n\r\n\r\n  Component.prototype.dimension = function dimension(widthOrHeight, num, skipListeners) {\r\n    if (num !== undefined) {\r\n      // Set to zero if null or literally NaN (NaN !== NaN)\r\n      if (num === null || num !== num) {\r\n        num = 0;\r\n      }\r\n\r\n      // Check if using css width/height (% or px) and adjust\r\n      if (('' + num).indexOf('%') !== -1 || ('' + num).indexOf('px') !== -1) {\r\n        this.el_.style[widthOrHeight] = num;\r\n      } else if (num === 'auto') {\r\n        this.el_.style[widthOrHeight] = '';\r\n      } else {\r\n        this.el_.style[widthOrHeight] = num + 'px';\r\n      }\r\n\r\n      // skipListeners allows us to avoid triggering the resize event when setting both width and height\r\n      if (!skipListeners) {\r\n        /**\r\n         * Triggered when a component is resized.\r\n         *\r\n         * @event Component#componentresize\r\n         * @type {EventTarget~Event}\r\n         */\r\n        this.trigger('componentresize');\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    // Not setting a value, so getting it\r\n    // Make sure element exists\r\n    if (!this.el_) {\r\n      return 0;\r\n    }\r\n\r\n    // Get dimension value from style\r\n    var val = this.el_.style[widthOrHeight];\r\n    var pxIndex = val.indexOf('px');\r\n\r\n    if (pxIndex !== -1) {\r\n      // Return the pixel value with no 'px'\r\n      return parseInt(val.slice(0, pxIndex), 10);\r\n    }\r\n\r\n    // No px so using % or no style was set, so falling back to offsetWidth/height\r\n    // If component has display:none, offset will return 0\r\n    // TODO: handle display:none and no dimension style using px\r\n    return parseInt(this.el_['offset' + toTitleCase(widthOrHeight)], 10);\r\n  };\r\n\r\n  /**\r\n   * Get the computed width or the height of the component's element.\r\n   *\r\n   * Uses `window.getComputedStyle`.\r\n   *\r\n   * @param {string} widthOrHeight\r\n   *        A string containing 'width' or 'height'. Whichever one you want to get.\r\n   *\r\n   * @return {number}\r\n   *         The dimension that gets asked for or 0 if nothing was set\r\n   *         for that dimension.\r\n   */\r\n\r\n\r\n  Component.prototype.currentDimension = function currentDimension(widthOrHeight) {\r\n    var computedWidthOrHeight = 0;\r\n\r\n    if (widthOrHeight !== 'width' && widthOrHeight !== 'height') {\r\n      throw new Error('currentDimension only accepts width or height value');\r\n    }\r\n\r\n    if (typeof window.getComputedStyle === 'function') {\r\n      var computedStyle = window.getComputedStyle(this.el_);\r\n\r\n      computedWidthOrHeight = computedStyle.getPropertyValue(widthOrHeight) || computedStyle[widthOrHeight];\r\n    }\r\n\r\n    // remove 'px' from variable and parse as integer\r\n    computedWidthOrHeight = parseFloat(computedWidthOrHeight);\r\n\r\n    // if the computed value is still 0, it's possible that the browser is lying\r\n    // and we want to check the offset values.\r\n    // This code also runs on IE8 and wherever getComputedStyle doesn't exist.\r\n    if (computedWidthOrHeight === 0) {\r\n      var rule = 'offset' + toTitleCase(widthOrHeight);\r\n\r\n      computedWidthOrHeight = this.el_[rule];\r\n    }\r\n\r\n    return computedWidthOrHeight;\r\n  };\r\n\r\n  /**\r\n   * An object that contains width and height values of the `Component`s\r\n   * computed style. Uses `window.getComputedStyle`.\r\n   *\r\n   * @typedef {Object} Component~DimensionObject\r\n   *\r\n   * @property {number} width\r\n   *           The width of the `Component`s computed style.\r\n   *\r\n   * @property {number} height\r\n   *           The height of the `Component`s computed style.\r\n   */\r\n\r\n  /**\r\n   * Get an object that contains computed width and height values of the\r\n   * component's element.\r\n   *\r\n   * Uses `window.getComputedStyle`.\r\n   *\r\n   * @return {Component~DimensionObject}\r\n   *         The computed dimensions of the component's element.\r\n   */\r\n\r\n\r\n  Component.prototype.currentDimensions = function currentDimensions() {\r\n    return {\r\n      width: this.currentDimension('width'),\r\n      height: this.currentDimension('height')\r\n    };\r\n  };\r\n\r\n  /**\r\n   * Get the computed width of the component's element.\r\n   *\r\n   * Uses `window.getComputedStyle`.\r\n   *\r\n   * @return {number}\r\n   *         The computed width of the component's element.\r\n   */\r\n\r\n\r\n  Component.prototype.currentWidth = function currentWidth() {\r\n    return this.currentDimension('width');\r\n  };\r\n\r\n  /**\r\n   * Get the computed height of the component's element.\r\n   *\r\n   * Uses `window.getComputedStyle`.\r\n   *\r\n   * @return {number}\r\n   *         The computed height of the component's element.\r\n   */\r\n\r\n\r\n  Component.prototype.currentHeight = function currentHeight() {\r\n    return this.currentDimension('height');\r\n  };\r\n\r\n  /**\r\n   * Set the focus to this component\r\n   */\r\n\r\n\r\n  Component.prototype.focus = function focus() {\r\n    this.el_.focus();\r\n  };\r\n\r\n  /**\r\n   * Remove the focus from this component\r\n   */\r\n\r\n\r\n  Component.prototype.blur = function blur() {\r\n    this.el_.blur();\r\n  };\r\n\r\n  /**\r\n   * Emit a 'tap' events when touch event support gets detected. This gets used to\r\n   * support toggling the controls through a tap on the video. They get enabled\r\n   * because every sub-component would have extra overhead otherwise.\r\n   *\r\n   * @private\r\n   * @fires Component#tap\r\n   * @listens Component#touchstart\r\n   * @listens Component#touchmove\r\n   * @listens Component#touchleave\r\n   * @listens Component#touchcancel\r\n   * @listens Component#touchend\r\n    */\r\n\r\n\r\n  Component.prototype.emitTapEvents = function emitTapEvents() {\r\n    // Track the start time so we can determine how long the touch lasted\r\n    var touchStart = 0;\r\n    var firstTouch = null;\r\n\r\n    // Maximum movement allowed during a touch event to still be considered a tap\r\n    // Other popular libs use anywhere from 2 (hammer.js) to 15,\r\n    // so 10 seems like a nice, round number.\r\n    var tapMovementThreshold = 10;\r\n\r\n    // The maximum length a touch can be while still being considered a tap\r\n    var touchTimeThreshold = 200;\r\n\r\n    var couldBeTap = void 0;\r\n\r\n    this.on('touchstart', function (event) {\r\n      // If more than one finger, don't consider treating this as a click\r\n      if (event.touches.length === 1) {\r\n        // Copy pageX/pageY from the object\r\n        firstTouch = {\r\n          pageX: event.touches[0].pageX,\r\n          pageY: event.touches[0].pageY\r\n        };\r\n        // Record start time so we can detect a tap vs. \"touch and hold\"\r\n        touchStart = new Date().getTime();\r\n        // Reset couldBeTap tracking\r\n        couldBeTap = true;\r\n      }\r\n    });\r\n\r\n    this.on('touchmove', function (event) {\r\n      // If more than one finger, don't consider treating this as a click\r\n      if (event.touches.length > 1) {\r\n        couldBeTap = false;\r\n      } else if (firstTouch) {\r\n        // Some devices will throw touchmoves for all but the slightest of taps.\r\n        // So, if we moved only a small distance, this could still be a tap\r\n        var xdiff = event.touches[0].pageX - firstTouch.pageX;\r\n        var ydiff = event.touches[0].pageY - firstTouch.pageY;\r\n        var touchDistance = Math.sqrt(xdiff * xdiff + ydiff * ydiff);\r\n\r\n        if (touchDistance > tapMovementThreshold) {\r\n          couldBeTap = false;\r\n        }\r\n      }\r\n    });\r\n\r\n    var noTap = function noTap() {\r\n      couldBeTap = false;\r\n    };\r\n\r\n    // TODO: Listen to the original target. http://youtu.be/DujfpXOKUp8?t=13m8s\r\n    this.on('touchleave', noTap);\r\n    this.on('touchcancel', noTap);\r\n\r\n    // When the touch ends, measure how long it took and trigger the appropriate\r\n    // event\r\n    this.on('touchend', function (event) {\r\n      firstTouch = null;\r\n      // Proceed only if the touchmove/leave/cancel event didn't happen\r\n      if (couldBeTap === true) {\r\n        // Measure how long the touch lasted\r\n        var touchTime = new Date().getTime() - touchStart;\r\n\r\n        // Make sure the touch was less than the threshold to be considered a tap\r\n        if (touchTime < touchTimeThreshold) {\r\n          // Don't let browser turn this into a click\r\n          event.preventDefault();\r\n          /**\r\n           * Triggered when a `Component` is tapped.\r\n           *\r\n           * @event Component#tap\r\n           * @type {EventTarget~Event}\r\n           */\r\n          this.trigger('tap');\r\n          // It may be good to copy the touchend event object and change the\r\n          // type to tap, if the other event properties aren't exact after\r\n          // Events.fixEvent runs (e.g. event.target)\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  /**\r\n   * This function reports user activity whenever touch events happen. This can get\r\n   * turned off by any sub-components that wants touch events to act another way.\r\n   *\r\n   * Report user touch activity when touch events occur. User activity gets used to\r\n   * determine when controls should show/hide. It is simple when it comes to mouse\r\n   * events, because any mouse event should show the controls. So we capture mouse\r\n   * events that bubble up to the player and report activity when that happens.\r\n   * With touch events it isn't as easy as `touchstart` and `touchend` toggle player\r\n   * controls. So touch events can't help us at the player level either.\r\n   *\r\n   * User activity gets checked asynchronously. So what could happen is a tap event\r\n   * on the video turns the controls off. Then the `touchend` event bubbles up to\r\n   * the player. Which, if it reported user activity, would turn the controls right\r\n   * back on. We also don't want to completely block touch events from bubbling up.\r\n   * Furthermore a `touchmove` event and anything other than a tap, should not turn\r\n   * controls back on.\r\n   *\r\n   * @listens Component#touchstart\r\n   * @listens Component#touchmove\r\n   * @listens Component#touchend\r\n   * @listens Component#touchcancel\r\n   */\r\n\r\n\r\n  Component.prototype.enableTouchActivity = function enableTouchActivity() {\r\n    // Don't continue if the root player doesn't support reporting user activity\r\n    if (!this.player() || !this.player().reportUserActivity) {\r\n      return;\r\n    }\r\n\r\n    // listener for reporting that the user is active\r\n    var report = bind(this.player(), this.player().reportUserActivity);\r\n\r\n    var touchHolding = void 0;\r\n\r\n    this.on('touchstart', function () {\r\n      report();\r\n      // For as long as the they are touching the device or have their mouse down,\r\n      // we consider them active even if they're not moving their finger or mouse.\r\n      // So we want to continue to update that they are active\r\n      this.clearInterval(touchHolding);\r\n      // report at the same interval as activityCheck\r\n      touchHolding = this.setInterval(report, 250);\r\n    });\r\n\r\n    var touchEnd = function touchEnd(event) {\r\n      report();\r\n      // stop the interval that maintains activity if the touch is holding\r\n      this.clearInterval(touchHolding);\r\n    };\r\n\r\n    this.on('touchmove', report);\r\n    this.on('touchend', touchEnd);\r\n    this.on('touchcancel', touchEnd);\r\n  };\r\n\r\n  /**\r\n   * A callback that has no parameters and is bound into `Component`s context.\r\n   *\r\n   * @callback Component~GenericCallback\r\n   * @this Component\r\n   */\r\n\r\n  /**\r\n   * Creates a function that runs after an `x` millisecond timeout. This function is a\r\n   * wrapper around `window.setTimeout`. There are a few reasons to use this one\r\n   * instead though:\r\n   * 1. It gets cleared via  {@link Component#clearTimeout} when\r\n   *    {@link Component#dispose} gets called.\r\n   * 2. The function callback will gets turned into a {@link Component~GenericCallback}\r\n   *\r\n   * > Note: You can't use `window.clearTimeout` on the id returned by this function. This\r\n   *         will cause its dispose listener not to get cleaned up! Please use\r\n   *         {@link Component#clearTimeout} or {@link Component#dispose} instead.\r\n   *\r\n   * @param {Component~GenericCallback} fn\r\n   *        The function that will be run after `timeout`.\r\n   *\r\n   * @param {number} timeout\r\n   *        Timeout in milliseconds to delay before executing the specified function.\r\n   *\r\n   * @return {number}\r\n   *         Returns a timeout ID that gets used to identify the timeout. It can also\r\n   *         get used in {@link Component#clearTimeout} to clear the timeout that\r\n   *         was set.\r\n   *\r\n   * @listens Component#dispose\r\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setTimeout}\r\n   */\r\n\r\n\r\n  Component.prototype.setTimeout = function setTimeout(fn, timeout) {\r\n    var _this2 = this;\r\n\r\n    // declare as variables so they are properly available in timeout function\r\n    // eslint-disable-next-line\r\n    var timeoutId, disposeFn;\r\n\r\n    fn = bind(this, fn);\r\n\r\n    timeoutId = window.setTimeout(function () {\r\n      _this2.off('dispose', disposeFn);\r\n      fn();\r\n    }, timeout);\r\n\r\n    disposeFn = function disposeFn() {\r\n      return _this2.clearTimeout(timeoutId);\r\n    };\r\n\r\n    disposeFn.guid = 'vjs-timeout-' + timeoutId;\r\n\r\n    this.on('dispose', disposeFn);\r\n\r\n    return timeoutId;\r\n  };\r\n\r\n  /**\r\n   * Clears a timeout that gets created via `window.setTimeout` or\r\n   * {@link Component#setTimeout}. If you set a timeout via {@link Component#setTimeout}\r\n   * use this function instead of `window.clearTimout`. If you don't your dispose\r\n   * listener will not get cleaned up until {@link Component#dispose}!\r\n   *\r\n   * @param {number} timeoutId\r\n   *        The id of the timeout to clear. The return value of\r\n   *        {@link Component#setTimeout} or `window.setTimeout`.\r\n   *\r\n   * @return {number}\r\n   *         Returns the timeout id that was cleared.\r\n   *\r\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearTimeout}\r\n   */\r\n\r\n\r\n  Component.prototype.clearTimeout = function clearTimeout(timeoutId) {\r\n    window.clearTimeout(timeoutId);\r\n\r\n    var disposeFn = function disposeFn() {};\r\n\r\n    disposeFn.guid = 'vjs-timeout-' + timeoutId;\r\n\r\n    this.off('dispose', disposeFn);\r\n\r\n    return timeoutId;\r\n  };\r\n\r\n  /**\r\n   * Creates a function that gets run every `x` milliseconds. This function is a wrapper\r\n   * around `window.setInterval`. There are a few reasons to use this one instead though.\r\n   * 1. It gets cleared via  {@link Component#clearInterval} when\r\n   *    {@link Component#dispose} gets called.\r\n   * 2. The function callback will be a {@link Component~GenericCallback}\r\n   *\r\n   * @param {Component~GenericCallback} fn\r\n   *        The function to run every `x` seconds.\r\n   *\r\n   * @param {number} interval\r\n   *        Execute the specified function every `x` milliseconds.\r\n   *\r\n   * @return {number}\r\n   *         Returns an id that can be used to identify the interval. It can also be be used in\r\n   *         {@link Component#clearInterval} to clear the interval.\r\n   *\r\n   * @listens Component#dispose\r\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval}\r\n   */\r\n\r\n\r\n  Component.prototype.setInterval = function setInterval(fn, interval) {\r\n    var _this3 = this;\r\n\r\n    fn = bind(this, fn);\r\n\r\n    var intervalId = window.setInterval(fn, interval);\r\n\r\n    var disposeFn = function disposeFn() {\r\n      return _this3.clearInterval(intervalId);\r\n    };\r\n\r\n    disposeFn.guid = 'vjs-interval-' + intervalId;\r\n\r\n    this.on('dispose', disposeFn);\r\n\r\n    return intervalId;\r\n  };\r\n\r\n  /**\r\n   * Clears an interval that gets created via `window.setInterval` or\r\n   * {@link Component#setInterval}. If you set an inteval via {@link Component#setInterval}\r\n   * use this function instead of `window.clearInterval`. If you don't your dispose\r\n   * listener will not get cleaned up until {@link Component#dispose}!\r\n   *\r\n   * @param {number} intervalId\r\n   *        The id of the interval to clear. The return value of\r\n   *        {@link Component#setInterval} or `window.setInterval`.\r\n   *\r\n   * @return {number}\r\n   *         Returns the interval id that was cleared.\r\n   *\r\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearInterval}\r\n   */\r\n\r\n\r\n  Component.prototype.clearInterval = function clearInterval(intervalId) {\r\n    window.clearInterval(intervalId);\r\n\r\n    var disposeFn = function disposeFn() {};\r\n\r\n    disposeFn.guid = 'vjs-interval-' + intervalId;\r\n\r\n    this.off('dispose', disposeFn);\r\n\r\n    return intervalId;\r\n  };\r\n\r\n  /**\r\n   * Queues up a callback to be passed to requestAnimationFrame (rAF), but\r\n   * with a few extra bonuses:\r\n   *\r\n   * - Supports browsers that do not support rAF by falling back to\r\n   *   {@link Component#setTimeout}.\r\n   *\r\n   * - The callback is turned into a {@link Component~GenericCallback} (i.e.\r\n   *   bound to the component).\r\n   *\r\n   * - Automatic cancellation of the rAF callback is handled if the component\r\n   *   is disposed before it is called.\r\n   *\r\n   * @param  {Component~GenericCallback} fn\r\n   *         A function that will be bound to this component and executed just\r\n   *         before the browser's next repaint.\r\n   *\r\n   * @return {number}\r\n   *         Returns an rAF ID that gets used to identify the timeout. It can\r\n   *         also be used in {@link Component#cancelAnimationFrame} to cancel\r\n   *         the animation frame callback.\r\n   *\r\n   * @listens Component#dispose\r\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame}\r\n   */\r\n\r\n\r\n  Component.prototype.requestAnimationFrame = function requestAnimationFrame(fn) {\r\n    var _this4 = this;\r\n\r\n    // declare as variables so they are properly available in rAF function\r\n    // eslint-disable-next-line\r\n    var id, disposeFn;\r\n\r\n    if (this.supportsRaf_) {\r\n      fn = bind(this, fn);\r\n\r\n      id = window.requestAnimationFrame(function () {\r\n        _this4.off('dispose', disposeFn);\r\n        fn();\r\n      });\r\n\r\n      disposeFn = function disposeFn() {\r\n        return _this4.cancelAnimationFrame(id);\r\n      };\r\n\r\n      disposeFn.guid = 'vjs-raf-' + id;\r\n      this.on('dispose', disposeFn);\r\n\r\n      return id;\r\n    }\r\n\r\n    // Fall back to using a timer.\r\n    return this.setTimeout(fn, 1000 / 60);\r\n  };\r\n\r\n  /**\r\n   * Cancels a queued callback passed to {@link Component#requestAnimationFrame}\r\n   * (rAF).\r\n   *\r\n   * If you queue an rAF callback via {@link Component#requestAnimationFrame},\r\n   * use this function instead of `window.cancelAnimationFrame`. If you don't,\r\n   * your dispose listener will not get cleaned up until {@link Component#dispose}!\r\n   *\r\n   * @param {number} id\r\n   *        The rAF ID to clear. The return value of {@link Component#requestAnimationFrame}.\r\n   *\r\n   * @return {number}\r\n   *         Returns the rAF ID that was cleared.\r\n   *\r\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/cancelAnimationFrame}\r\n   */\r\n\r\n\r\n  Component.prototype.cancelAnimationFrame = function cancelAnimationFrame(id) {\r\n    if (this.supportsRaf_) {\r\n      window.cancelAnimationFrame(id);\r\n\r\n      var disposeFn = function disposeFn() {};\r\n\r\n      disposeFn.guid = 'vjs-raf-' + id;\r\n\r\n      this.off('dispose', disposeFn);\r\n\r\n      return id;\r\n    }\r\n\r\n    // Fall back to using a timer.\r\n    return this.clearTimeout(id);\r\n  };\r\n\r\n  /**\r\n   * Register a `Component` with `videojs` given the name and the component.\r\n   *\r\n   * > NOTE: {@link Tech}s should not be registered as a `Component`. {@link Tech}s\r\n   *         should be registered using {@link Tech.registerTech} or\r\n   *         {@link videojs:videojs.registerTech}.\r\n   *\r\n   * > NOTE: This function can also be seen on videojs as\r\n   *         {@link videojs:videojs.registerComponent}.\r\n   *\r\n   * @param {string} name\r\n   *        The name of the `Component` to register.\r\n   *\r\n   * @param {Component} ComponentToRegister\r\n   *        The `Component` class to register.\r\n   *\r\n   * @return {Component}\r\n   *         The `Component` that was registered.\r\n   */\r\n\r\n\r\n  Component.registerComponent = function registerComponent(name, ComponentToRegister) {\r\n    if (typeof name !== 'string' || !name) {\r\n      throw new Error('Illegal component name, \"' + name + '\"; must be a non-empty string.');\r\n    }\r\n\r\n    var Tech = Component.getComponent('Tech');\r\n\r\n    // We need to make sure this check is only done if Tech has been registered.\r\n    var isTech = Tech && Tech.isTech(ComponentToRegister);\r\n    var isComp = Component === ComponentToRegister || Component.prototype.isPrototypeOf(ComponentToRegister.prototype);\r\n\r\n    if (isTech || !isComp) {\r\n      var reason = void 0;\r\n\r\n      if (isTech) {\r\n        reason = 'techs must be registered using Tech.registerTech()';\r\n      } else {\r\n        reason = 'must be a Component subclass';\r\n      }\r\n\r\n      throw new Error('Illegal component, \"' + name + '\"; ' + reason + '.');\r\n    }\r\n\r\n    name = toTitleCase(name);\r\n\r\n    if (!Component.components_) {\r\n      Component.components_ = {};\r\n    }\r\n\r\n    var Player = Component.getComponent('Player');\r\n\r\n    if (name === 'Player' && Player && Player.players) {\r\n      var players = Player.players;\r\n      var playerNames = Object.keys(players);\r\n\r\n      // If we have players that were disposed, then their name will still be\r\n      // in Players.players. So, we must loop through and verify that the value\r\n      // for each item is not null. This allows registration of the Player component\r\n      // after all players have been disposed or before any were created.\r\n      if (players && playerNames.length > 0 && playerNames.map(function (pname) {\r\n        return players[pname];\r\n      }).every(Boolean)) {\r\n        throw new Error('Can not register Player component after player has been created.');\r\n      }\r\n    }\r\n\r\n    Component.components_[name] = ComponentToRegister;\r\n\r\n    return ComponentToRegister;\r\n  };\r\n\r\n  /**\r\n   * Get a `Component` based on the name it was registered with.\r\n   *\r\n   * @param {string} name\r\n   *        The Name of the component to get.\r\n   *\r\n   * @return {Component}\r\n   *         The `Component` that got registered under the given name.\r\n   *\r\n   * @deprecated In `videojs` 6 this will not return `Component`s that were not\r\n   *             registered using {@link Component.registerComponent}. Currently we\r\n   *             check the global `videojs` object for a `Component` name and\r\n   *             return that if it exists.\r\n   */\r\n\r\n\r\n  Component.getComponent = function getComponent(name) {\r\n    if (!name) {\r\n      return;\r\n    }\r\n\r\n    name = toTitleCase(name);\r\n\r\n    if (Component.components_ && Component.components_[name]) {\r\n      return Component.components_[name];\r\n    }\r\n  };\r\n\r\n  return Component;\r\n}();\r\n\r\n/**\r\n * Whether or not this component supports `requestAnimationFrame`.\r\n *\r\n * This is exposed primarily for testing purposes.\r\n *\r\n * @private\r\n * @type {Boolean}\r\n */\r\n\r\n\r\nComponent.prototype.supportsRaf_ = typeof window.requestAnimationFrame === 'function' && typeof window.cancelAnimationFrame === 'function';\r\n\r\nComponent.registerComponent('Component', Component);\r\n\r\n/**\r\n * @file time-ranges.js\r\n * @module time-ranges\r\n */\r\n\r\n/**\r\n * Returns the time for the specified index at the start or end\r\n * of a TimeRange object.\r\n *\r\n * @function time-ranges:indexFunction\r\n *\r\n * @param {number} [index=0]\r\n *        The range number to return the time for.\r\n *\r\n * @return {number}\r\n *         The time that offset at the specified index.\r\n *\r\n * @depricated index must be set to a value, in the future this will throw an error.\r\n */\r\n\r\n/**\r\n * An object that contains ranges of time for various reasons.\r\n *\r\n * @typedef {Object} TimeRange\r\n *\r\n * @property {number} length\r\n *           The number of time ranges represented by this Object\r\n *\r\n * @property {time-ranges:indexFunction} start\r\n *           Returns the time offset at which a specified time range begins.\r\n *\r\n * @property {time-ranges:indexFunction} end\r\n *           Returns the time offset at which a specified time range ends.\r\n *\r\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges\r\n */\r\n\r\n/**\r\n * Check if any of the time ranges are over the maximum index.\r\n *\r\n * @param {string} fnName\r\n *        The function name to use for logging\r\n *\r\n * @param {number} index\r\n *        The index to check\r\n *\r\n * @param {number} maxIndex\r\n *        The maximum possible index\r\n *\r\n * @throws {Error} if the timeRanges provided are over the maxIndex\r\n */\r\nfunction rangeCheck(fnName, index, maxIndex) {\r\n  if (typeof index !== 'number' || index < 0 || index > maxIndex) {\r\n    throw new Error('Failed to execute \\'' + fnName + '\\' on \\'TimeRanges\\': The index provided (' + index + ') is non-numeric or out of bounds (0-' + maxIndex + ').');\r\n  }\r\n}\r\n\r\n/**\r\n * Get the time for the specified index at the start or end\r\n * of a TimeRange object.\r\n *\r\n * @param {string} fnName\r\n *        The function name to use for logging\r\n *\r\n * @param {string} valueIndex\r\n *        The proprety that should be used to get the time. should be 'start' or 'end'\r\n *\r\n * @param {Array} ranges\r\n *        An array of time ranges\r\n *\r\n * @param {Array} [rangeIndex=0]\r\n *        The index to start the search at\r\n *\r\n * @return {number}\r\n *         The time that offset at the specified index.\r\n *\r\n *\r\n * @depricated rangeIndex must be set to a value, in the future this will throw an error.\r\n * @throws {Error} if rangeIndex is more than the length of ranges\r\n */\r\nfunction getRange(fnName, valueIndex, ranges, rangeIndex) {\r\n  rangeCheck(fnName, rangeIndex, ranges.length - 1);\r\n  return ranges[rangeIndex][valueIndex];\r\n}\r\n\r\n/**\r\n * Create a time range object given ranges of time.\r\n *\r\n * @param {Array} [ranges]\r\n *        An array of time ranges.\r\n */\r\nfunction createTimeRangesObj(ranges) {\r\n  if (ranges === undefined || ranges.length === 0) {\r\n    return {\r\n      length: 0,\r\n      start: function start() {\r\n        throw new Error('This TimeRanges object is empty');\r\n      },\r\n      end: function end() {\r\n        throw new Error('This TimeRanges object is empty');\r\n      }\r\n    };\r\n  }\r\n  return {\r\n    length: ranges.length,\r\n    start: getRange.bind(null, 'start', 0, ranges),\r\n    end: getRange.bind(null, 'end', 1, ranges)\r\n  };\r\n}\r\n\r\n/**\r\n * Should create a fake `TimeRange` object which mimics an HTML5 time range instance.\r\n *\r\n * @param {number|Array} start\r\n *        The start of a single range or an array of ranges\r\n *\r\n * @param {number} end\r\n *        The end of a single range.\r\n *\r\n * @private\r\n */\r\nfunction createTimeRanges(start, end) {\r\n  if (Array.isArray(start)) {\r\n    return createTimeRangesObj(start);\r\n  } else if (start === undefined || end === undefined) {\r\n    return createTimeRangesObj();\r\n  }\r\n  return createTimeRangesObj([[start, end]]);\r\n}\r\n\r\n/**\r\n * @file buffer.js\r\n * @module buffer\r\n */\r\n/**\r\n * Compute the percentage of the media that has been buffered.\r\n *\r\n * @param {TimeRange} buffered\r\n *        The current `TimeRange` object representing buffered time ranges\r\n *\r\n * @param {number} duration\r\n *        Total duration of the media\r\n *\r\n * @return {number}\r\n *         Percent buffered of the total duration in decimal form.\r\n */\r\nfunction bufferedPercent(buffered, duration) {\r\n  var bufferedDuration = 0;\r\n  var start = void 0;\r\n  var end = void 0;\r\n\r\n  if (!duration) {\r\n    return 0;\r\n  }\r\n\r\n  if (!buffered || !buffered.length) {\r\n    buffered = createTimeRanges(0, 0);\r\n  }\r\n\r\n  for (var i = 0; i < buffered.length; i++) {\r\n    start = buffered.start(i);\r\n    end = buffered.end(i);\r\n\r\n    // buffered end can be bigger than duration by a very small fraction\r\n    if (end > duration) {\r\n      end = duration;\r\n    }\r\n\r\n    bufferedDuration += end - start;\r\n  }\r\n\r\n  return bufferedDuration / duration;\r\n}\r\n\r\n/**\r\n * @file fullscreen-api.js\r\n * @module fullscreen-api\r\n * @private\r\n */\r\n/**\r\n * Store the browser-specific methods for the fullscreen API.\r\n *\r\n * @type {Object}\r\n * @see [Specification]{@link https://fullscreen.spec.whatwg.org}\r\n * @see [Map Approach From Screenfull.js]{@link https://github.com/sindresorhus/screenfull.js}\r\n */\r\nvar FullscreenApi = {};\r\n\r\n// browser API methods\r\nvar apiMap = [['requestFullscreen', 'exitFullscreen', 'fullscreenElement', 'fullscreenEnabled', 'fullscreenchange', 'fullscreenerror'],\r\n// WebKit\r\n['webkitRequestFullscreen', 'webkitExitFullscreen', 'webkitFullscreenElement', 'webkitFullscreenEnabled', 'webkitfullscreenchange', 'webkitfullscreenerror'],\r\n// Old WebKit (Safari 5.1)\r\n['webkitRequestFullScreen', 'webkitCancelFullScreen', 'webkitCurrentFullScreenElement', 'webkitCancelFullScreen', 'webkitfullscreenchange', 'webkitfullscreenerror'],\r\n// Mozilla\r\n['mozRequestFullScreen', 'mozCancelFullScreen', 'mozFullScreenElement', 'mozFullScreenEnabled', 'mozfullscreenchange', 'mozfullscreenerror'],\r\n// Microsoft\r\n['msRequestFullscreen', 'msExitFullscreen', 'msFullscreenElement', 'msFullscreenEnabled', 'MSFullscreenChange', 'MSFullscreenError']];\r\n\r\nvar specApi = apiMap[0];\r\nvar browserApi = void 0;\r\n\r\n// determine the supported set of functions\r\nfor (var i = 0; i < apiMap.length; i++) {\r\n  // check for exitFullscreen function\r\n  if (apiMap[i][1] in document) {\r\n    browserApi = apiMap[i];\r\n    break;\r\n  }\r\n}\r\n\r\n// map the browser API names to the spec API names\r\nif (browserApi) {\r\n  for (var _i = 0; _i < browserApi.length; _i++) {\r\n    FullscreenApi[specApi[_i]] = browserApi[_i];\r\n  }\r\n}\r\n\r\n/**\r\n * @file media-error.js\r\n */\r\n/**\r\n * A Custom `MediaError` class which mimics the standard HTML5 `MediaError` class.\r\n *\r\n * @param {number|string|Object|MediaError} value\r\n *        This can be of multiple types:\r\n *        - number: should be a standard error code\r\n *        - string: an error message (the code will be 0)\r\n *        - Object: arbitrary properties\r\n *        - `MediaError` (native): used to populate a video.js `MediaError` object\r\n *        - `MediaError` (video.js): will return itself if it's already a\r\n *          video.js `MediaError` object.\r\n *\r\n * @see [MediaError Spec]{@link https://dev.w3.org/html5/spec-author-view/video.html#mediaerror}\r\n * @see [Encrypted MediaError Spec]{@link https://www.w3.org/TR/2013/WD-encrypted-media-20130510/#error-codes}\r\n *\r\n * @class MediaError\r\n */\r\nfunction MediaError(value) {\r\n\r\n  // Allow redundant calls to this constructor to avoid having `instanceof`\r\n  // checks peppered around the code.\r\n  if (value instanceof MediaError) {\r\n    return value;\r\n  }\r\n\r\n  if (typeof value === 'number') {\r\n    this.code = value;\r\n  } else if (typeof value === 'string') {\r\n    // default code is zero, so this is a custom error\r\n    this.message = value;\r\n  } else if (isObject(value)) {\r\n\r\n    // We assign the `code` property manually because native `MediaError` objects\r\n    // do not expose it as an own/enumerable property of the object.\r\n    if (typeof value.code === 'number') {\r\n      this.code = value.code;\r\n    }\r\n\r\n    assign(this, value);\r\n  }\r\n\r\n  if (!this.message) {\r\n    this.message = MediaError.defaultMessages[this.code] || '';\r\n  }\r\n}\r\n\r\n/**\r\n * The error code that refers two one of the defined `MediaError` types\r\n *\r\n * @type {Number}\r\n */\r\nMediaError.prototype.code = 0;\r\n\r\n/**\r\n * An optional message that to show with the error. Message is not part of the HTML5\r\n * video spec but allows for more informative custom errors.\r\n *\r\n * @type {String}\r\n */\r\nMediaError.prototype.message = '';\r\n\r\n/**\r\n * An optional status code that can be set by plugins to allow even more detail about\r\n * the error. For example a plugin might provide a specific HTTP status code and an\r\n * error message for that code. Then when the plugin gets that error this class will\r\n * know how to display an error message for it. This allows a custom message to show\r\n * up on the `Player` error overlay.\r\n *\r\n * @type {Array}\r\n */\r\nMediaError.prototype.status = null;\r\n\r\n/**\r\n * Errors indexed by the W3C standard. The order **CANNOT CHANGE**! See the\r\n * specification listed under {@link MediaError} for more information.\r\n *\r\n * @enum {array}\r\n * @readonly\r\n * @property {string} 0 - MEDIA_ERR_CUSTOM\r\n * @property {string} 1 - MEDIA_ERR_CUSTOM\r\n * @property {string} 2 - MEDIA_ERR_ABORTED\r\n * @property {string} 3 - MEDIA_ERR_NETWORK\r\n * @property {string} 4 - MEDIA_ERR_SRC_NOT_SUPPORTED\r\n * @property {string} 5 - MEDIA_ERR_ENCRYPTED\r\n */\r\nMediaError.errorTypes = ['MEDIA_ERR_CUSTOM', 'MEDIA_ERR_ABORTED', 'MEDIA_ERR_NETWORK', 'MEDIA_ERR_DECODE', 'MEDIA_ERR_SRC_NOT_SUPPORTED', 'MEDIA_ERR_ENCRYPTED'];\r\n\r\n/**\r\n * The default `MediaError` messages based on the {@link MediaError.errorTypes}.\r\n *\r\n * @type {Array}\r\n * @constant\r\n */\r\nMediaError.defaultMessages = {\r\n  1: 'You aborted the media playback',\r\n  2: 'A network error caused the media download to fail part-way.',\r\n  3: 'The media playback was aborted due to a corruption problem or because the media used features your browser did not support.',\r\n  4: 'The media could not be loaded, either because the server or network failed or because the format is not supported.',\r\n  5: 'The media is encrypted and we do not have the keys to decrypt it.'\r\n};\r\n\r\n// Add types as properties on MediaError\r\n// e.g. MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED = 4;\r\nfor (var errNum = 0; errNum < MediaError.errorTypes.length; errNum++) {\r\n  MediaError[MediaError.errorTypes[errNum]] = errNum;\r\n  // values should be accessible on both the class and instance\r\n  MediaError.prototype[MediaError.errorTypes[errNum]] = errNum;\r\n}\r\n\r\n/**\r\n * Returns whether an object is `Promise`-like (i.e. has a `then` method).\r\n *\r\n * @param  {Object}  value\r\n *         An object that may or may not be `Promise`-like.\r\n *\r\n * @return {Boolean}\r\n *         Whether or not the object is `Promise`-like.\r\n */\r\nfunction isPromise(value) {\r\n  return value !== undefined && value !== null && typeof value.then === 'function';\r\n}\r\n\r\n/**\r\n * Silence a Promise-like object.\r\n *\r\n * This is useful for avoiding non-harmful, but potentially confusing \"uncaught\r\n * play promise\" rejection error messages.\r\n *\r\n * @param  {Object} value\r\n *         An object that may or may not be `Promise`-like.\r\n */\r\nfunction silencePromise(value) {\r\n  if (isPromise(value)) {\r\n    value.then(null, function (e) {});\r\n  }\r\n}\r\n\r\n/**\r\n * @file text-track-list-converter.js Utilities for capturing text track state and\r\n * re-creating tracks based on a capture.\r\n *\r\n * @module text-track-list-converter\r\n */\r\n\r\n/**\r\n * Examine a single {@link TextTrack} and return a JSON-compatible javascript object that\r\n * represents the {@link TextTrack}'s state.\r\n *\r\n * @param {TextTrack} track\r\n *        The text track to query.\r\n *\r\n * @return {Object}\r\n *         A serializable javascript representation of the TextTrack.\r\n * @private\r\n */\r\nvar trackToJson_ = function trackToJson_(track) {\r\n  var ret = ['kind', 'label', 'language', 'id', 'inBandMetadataTrackDispatchType', 'mode', 'src'].reduce(function (acc, prop, i) {\r\n\r\n    if (track[prop]) {\r\n      acc[prop] = track[prop];\r\n    }\r\n\r\n    return acc;\r\n  }, {\r\n    cues: track.cues && Array.prototype.map.call(track.cues, function (cue) {\r\n      return {\r\n        startTime: cue.startTime,\r\n        endTime: cue.endTime,\r\n        text: cue.text,\r\n        id: cue.id\r\n      };\r\n    })\r\n  });\r\n\r\n  return ret;\r\n};\r\n\r\n/**\r\n * Examine a {@link Tech} and return a JSON-compatible javascript array that represents the\r\n * state of all {@link TextTrack}s currently configured. The return array is compatible with\r\n * {@link text-track-list-converter:jsonToTextTracks}.\r\n *\r\n * @param {Tech} tech\r\n *        The tech object to query\r\n *\r\n * @return {Array}\r\n *         A serializable javascript representation of the {@link Tech}s\r\n *         {@link TextTrackList}.\r\n */\r\nvar textTracksToJson = function textTracksToJson(tech) {\r\n\r\n  var trackEls = tech.$$('track');\r\n\r\n  var trackObjs = Array.prototype.map.call(trackEls, function (t) {\r\n    return t.track;\r\n  });\r\n  var tracks = Array.prototype.map.call(trackEls, function (trackEl) {\r\n    var json = trackToJson_(trackEl.track);\r\n\r\n    if (trackEl.src) {\r\n      json.src = trackEl.src;\r\n    }\r\n    return json;\r\n  });\r\n\r\n  return tracks.concat(Array.prototype.filter.call(tech.textTracks(), function (track) {\r\n    return trackObjs.indexOf(track) === -1;\r\n  }).map(trackToJson_));\r\n};\r\n\r\n/**\r\n * Create a set of remote {@link TextTrack}s on a {@link Tech} based on an array of javascript\r\n * object {@link TextTrack} representations.\r\n *\r\n * @param {Array} json\r\n *        An array of `TextTrack` representation objects, like those that would be\r\n *        produced by `textTracksToJson`.\r\n *\r\n * @param {Tech} tech\r\n *        The `Tech` to create the `TextTrack`s on.\r\n */\r\nvar jsonToTextTracks = function jsonToTextTracks(json, tech) {\r\n  json.forEach(function (track) {\r\n    var addedTrack = tech.addRemoteTextTrack(track).track;\r\n\r\n    if (!track.src && track.cues) {\r\n      track.cues.forEach(function (cue) {\r\n        return addedTrack.addCue(cue);\r\n      });\r\n    }\r\n  });\r\n\r\n  return tech.textTracks();\r\n};\r\n\r\nvar textTrackConverter = { textTracksToJson: textTracksToJson, jsonToTextTracks: jsonToTextTracks, trackToJson_: trackToJson_ };\r\n\r\n/**\r\n * @file modal-dialog.js\r\n */\r\nvar MODAL_CLASS_NAME = 'vjs-modal-dialog';\r\nvar ESC = 27;\r\n\r\n/**\r\n * The `ModalDialog` displays over the video and its controls, which blocks\r\n * interaction with the player until it is closed.\r\n *\r\n * Modal dialogs include a \"Close\" button and will close when that button\r\n * is activated - or when ESC is pressed anywhere.\r\n *\r\n * @extends Component\r\n */\r\n\r\nvar ModalDialog = function (_Component) {\r\n  inherits(ModalDialog, _Component);\r\n\r\n  /**\r\n   * Create an instance of this class.\r\n   *\r\n   * @param {Player} player\r\n   *        The `Player` that this class should be attached to.\r\n   *\r\n   * @param {Object} [options]\r\n   *        The key/value store of player options.\r\n   *\r\n   * @param {Mixed} [options.content=undefined]\r\n   *        Provide customized content for this modal.\r\n   *\r\n   * @param {string} [options.description]\r\n   *        A text description for the modal, primarily for accessibility.\r\n   *\r\n   * @param {boolean} [options.fillAlways=false]\r\n   *        Normally, modals are automatically filled only the first time\r\n   *        they open. This tells the modal to refresh its content\r\n   *        every time it opens.\r\n   *\r\n   * @param {string} [options.label]\r\n   *        A text label for the modal, primarily for accessibility.\r\n   *\r\n   * @param {boolean} [options.temporary=true]\r\n   *        If `true`, the modal can only be opened once; it will be\r\n   *        disposed as soon as it's closed.\r\n   *\r\n   * @param {boolean} [options.uncloseable=false]\r\n   *        If `true`, the user will not be able to close the modal\r\n   *        through the UI in the normal ways. Programmatic closing is\r\n   *        still possible.\r\n   */\r\n  function ModalDialog(player, options) {\r\n    classCallCheck(this, ModalDialog);\r\n\r\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\r\n\r\n    _this.opened_ = _this.hasBeenOpened_ = _this.hasBeenFilled_ = false;\r\n\r\n    _this.closeable(!_this.options_.uncloseable);\r\n    _this.content(_this.options_.content);\r\n\r\n    // Make sure the contentEl is defined AFTER any children are initialized\r\n    // because we only want the contents of the modal in the contentEl\r\n    // (not the UI elements like the close button).\r\n    _this.contentEl_ = createEl('div', {\r\n      className: MODAL_CLASS_NAME + '-content'\r\n    }, {\r\n      role: 'document'\r\n    });\r\n\r\n    _this.descEl_ = createEl('p', {\r\n      className: MODAL_CLASS_NAME + '-description vjs-control-text',\r\n      id: _this.el().getAttribute('aria-describedby')\r\n    });\r\n\r\n    textContent(_this.descEl_, _this.description());\r\n    _this.el_.appendChild(_this.descEl_);\r\n    _this.el_.appendChild(_this.contentEl_);\r\n    return _this;\r\n  }\r\n\r\n  /**\r\n   * Create the `ModalDialog`'s DOM element\r\n   *\r\n   * @return {Element}\r\n   *         The DOM element that gets created.\r\n   */\r\n\r\n\r\n  ModalDialog.prototype.createEl = function createEl$$1() {\r\n    return _Component.prototype.createEl.call(this, 'div', {\r\n      className: this.buildCSSClass(),\r\n      tabIndex: -1\r\n    }, {\r\n      'aria-describedby': this.id() + '_description',\r\n      'aria-hidden': 'true',\r\n      'aria-label': this.label(),\r\n      'role': 'dialog'\r\n    });\r\n  };\r\n\r\n  ModalDialog.prototype.dispose = function dispose() {\r\n    this.contentEl_ = null;\r\n    this.descEl_ = null;\r\n    this.previouslyActiveEl_ = null;\r\n\r\n    _Component.prototype.dispose.call(this);\r\n  };\r\n\r\n  /**\r\n   * Builds the default DOM `className`.\r\n   *\r\n   * @return {string}\r\n   *         The DOM `className` for this object.\r\n   */\r\n\r\n\r\n  ModalDialog.prototype.buildCSSClass = function buildCSSClass() {\r\n    return MODAL_CLASS_NAME + ' vjs-hidden ' + _Component.prototype.buildCSSClass.call(this);\r\n  };\r\n\r\n  /**\r\n   * Handles `keydown` events on the document, looking for ESC, which closes\r\n   * the modal.\r\n   *\r\n   * @param {EventTarget~Event} e\r\n   *        The keypress that triggered this event.\r\n   *\r\n   * @listens keydown\r\n   */\r\n\r\n\r\n  ModalDialog.prototype.handleKeyPress = function handleKeyPress(e) {\r\n    if (e.which === ESC && this.closeable()) {\r\n      this.close();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Returns the label string for this modal. Primarily used for accessibility.\r\n   *\r\n   * @return {string}\r\n   *         the localized or raw label of this modal.\r\n   */\r\n\r\n\r\n  ModalDialog.prototype.label = function label() {\r\n    return this.localize(this.options_.label || 'Modal Window');\r\n  };\r\n\r\n  /**\r\n   * Returns the description string for this modal. Primarily used for\r\n   * accessibility.\r\n   *\r\n   * @return {string}\r\n   *         The localized or raw description of this modal.\r\n   */\r\n\r\n\r\n  ModalDialog.prototype.description = function description() {\r\n    var desc = this.options_.description || this.localize('This is a modal window.');\r\n\r\n    // Append a universal closeability message if the modal is closeable.\r\n    if (this.closeable()) {\r\n      desc += ' ' + this.localize('This modal can be closed by pressing the Escape key or activating the close button.');\r\n    }\r\n\r\n    return desc;\r\n  };\r\n\r\n  /**\r\n   * Opens the modal.\r\n   *\r\n   * @fires ModalDialog#beforemodalopen\r\n   * @fires ModalDialog#modalopen\r\n   */\r\n\r\n\r\n  ModalDialog.prototype.open = function open() {\r\n    if (!this.opened_) {\r\n      var player = this.player();\r\n\r\n      /**\r\n        * Fired just before a `ModalDialog` is opened.\r\n        *\r\n        * @event ModalDialog#beforemodalopen\r\n        * @type {EventTarget~Event}\r\n        */\r\n      this.trigger('beforemodalopen');\r\n      this.opened_ = true;\r\n\r\n      // Fill content if the modal has never opened before and\r\n      // never been filled.\r\n      if (this.options_.fillAlways || !this.hasBeenOpened_ && !this.hasBeenFilled_) {\r\n        this.fill();\r\n      }\r\n\r\n      // If the player was playing, pause it and take note of its previously\r\n      // playing state.\r\n      this.wasPlaying_ = !player.paused();\r\n\r\n      if (this.options_.pauseOnOpen && this.wasPlaying_) {\r\n        player.pause();\r\n      }\r\n\r\n      if (this.closeable()) {\r\n        this.on(this.el_.ownerDocument, 'keydown', bind(this, this.handleKeyPress));\r\n      }\r\n\r\n      // Hide controls and note if they were enabled.\r\n      this.hadControls_ = player.controls();\r\n      player.controls(false);\r\n\r\n      this.show();\r\n      this.conditionalFocus_();\r\n      this.el().setAttribute('aria-hidden', 'false');\r\n\r\n      /**\r\n        * Fired just after a `ModalDialog` is opened.\r\n        *\r\n        * @event ModalDialog#modalopen\r\n        * @type {EventTarget~Event}\r\n        */\r\n      this.trigger('modalopen');\r\n      this.hasBeenOpened_ = true;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * If the `ModalDialog` is currently open or closed.\r\n   *\r\n   * @param  {boolean} [value]\r\n   *         If given, it will open (`true`) or close (`false`) the modal.\r\n   *\r\n   * @return {boolean}\r\n   *         the current open state of the modaldialog\r\n   */\r\n\r\n\r\n  ModalDialog.prototype.opened = function opened(value) {\r\n    if (typeof value === 'boolean') {\r\n      this[value ? 'open' : 'close']();\r\n    }\r\n    return this.opened_;\r\n  };\r\n\r\n  /**\r\n   * Closes the modal, does nothing if the `ModalDialog` is\r\n   * not open.\r\n   *\r\n   * @fires ModalDialog#beforemodalclose\r\n   * @fires ModalDialog#modalclose\r\n   */\r\n\r\n\r\n  ModalDialog.prototype.close = function close() {\r\n    if (!this.opened_) {\r\n      return;\r\n    }\r\n    var player = this.player();\r\n\r\n    /**\r\n      * Fired just before a `ModalDialog` is closed.\r\n      *\r\n      * @event ModalDialog#beforemodalclose\r\n      * @type {EventTarget~Event}\r\n      */\r\n    this.trigger('beforemodalclose');\r\n    this.opened_ = false;\r\n\r\n    if (this.wasPlaying_ && this.options_.pauseOnOpen) {\r\n      player.play();\r\n    }\r\n\r\n    if (this.closeable()) {\r\n      this.off(this.el_.ownerDocument, 'keydown', bind(this, this.handleKeyPress));\r\n    }\r\n\r\n    if (this.hadControls_) {\r\n      player.controls(true);\r\n    }\r\n\r\n    this.hide();\r\n    this.el().setAttribute('aria-hidden', 'true');\r\n\r\n    /**\r\n      * Fired just after a `ModalDialog` is closed.\r\n      *\r\n      * @event ModalDialog#modalclose\r\n      * @type {EventTarget~Event}\r\n      */\r\n    this.trigger('modalclose');\r\n    this.conditionalBlur_();\r\n\r\n    if (this.options_.temporary) {\r\n      this.dispose();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Check to see if the `ModalDialog` is closeable via the UI.\r\n   *\r\n   * @param  {boolean} [value]\r\n   *         If given as a boolean, it will set the `closeable` option.\r\n   *\r\n   * @return {boolean}\r\n   *         Returns the final value of the closable option.\r\n   */\r\n\r\n\r\n  ModalDialog.prototype.closeable = function closeable(value) {\r\n    if (typeof value === 'boolean') {\r\n      var closeable = this.closeable_ = !!value;\r\n      var close = this.getChild('closeButton');\r\n\r\n      // If this is being made closeable and has no close button, add one.\r\n      if (closeable && !close) {\r\n\r\n        // The close button should be a child of the modal - not its\r\n        // content element, so temporarily change the content element.\r\n        var temp = this.contentEl_;\r\n\r\n        this.contentEl_ = this.el_;\r\n        close = this.addChild('closeButton', { controlText: 'Close Modal Dialog' });\r\n        this.contentEl_ = temp;\r\n        this.on(close, 'close', this.close);\r\n      }\r\n\r\n      // If this is being made uncloseable and has a close button, remove it.\r\n      if (!closeable && close) {\r\n        this.off(close, 'close', this.close);\r\n        this.removeChild(close);\r\n        close.dispose();\r\n      }\r\n    }\r\n    return this.closeable_;\r\n  };\r\n\r\n  /**\r\n   * Fill the modal's content element with the modal's \"content\" option.\r\n   * The content element will be emptied before this change takes place.\r\n   */\r\n\r\n\r\n  ModalDialog.prototype.fill = function fill() {\r\n    this.fillWith(this.content());\r\n  };\r\n\r\n  /**\r\n   * Fill the modal's content element with arbitrary content.\r\n   * The content element will be emptied before this change takes place.\r\n   *\r\n   * @fires ModalDialog#beforemodalfill\r\n   * @fires ModalDialog#modalfill\r\n   *\r\n   * @param {Mixed} [content]\r\n   *        The same rules apply to this as apply to the `content` option.\r\n   */\r\n\r\n\r\n  ModalDialog.prototype.fillWith = function fillWith(content) {\r\n    var contentEl = this.contentEl();\r\n    var parentEl = contentEl.parentNode;\r\n    var nextSiblingEl = contentEl.nextSibling;\r\n\r\n    /**\r\n     * Fired just before a `ModalDialog` is filled with content.\r\n     *\r\n     * @event ModalDialog#beforemodalfill\r\n     * @type {EventTarget~Event}\r\n     */\r\n    this.trigger('beforemodalfill');\r\n    this.hasBeenFilled_ = true;\r\n\r\n    // Detach the content element from the DOM before performing\r\n    // manipulation to avoid modifying the live DOM multiple times.\r\n    parentEl.removeChild(contentEl);\r\n    this.empty();\r\n    insertContent(contentEl, content);\r\n    /**\r\n     * Fired just after a `ModalDialog` is filled with content.\r\n     *\r\n     * @event ModalDialog#modalfill\r\n     * @type {EventTarget~Event}\r\n     */\r\n    this.trigger('modalfill');\r\n\r\n    // Re-inject the re-filled content element.\r\n    if (nextSiblingEl) {\r\n      parentEl.insertBefore(contentEl, nextSiblingEl);\r\n    } else {\r\n      parentEl.appendChild(contentEl);\r\n    }\r\n\r\n    // make sure that the close button is last in the dialog DOM\r\n    var closeButton = this.getChild('closeButton');\r\n\r\n    if (closeButton) {\r\n      parentEl.appendChild(closeButton.el_);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Empties the content element. This happens anytime the modal is filled.\r\n   *\r\n   * @fires ModalDialog#beforemodalempty\r\n   * @fires ModalDialog#modalempty\r\n   */\r\n\r\n\r\n  ModalDialog.prototype.empty = function empty() {\r\n    /**\r\n     * Fired just before a `ModalDialog` is emptied.\r\n     *\r\n     * @event ModalDialog#beforemodalempty\r\n     * @type {EventTarget~Event}\r\n     */\r\n    this.trigger('beforemodalempty');\r\n    emptyEl(this.contentEl());\r\n\r\n    /**\r\n     * Fired just after a `ModalDialog` is emptied.\r\n     *\r\n     * @event ModalDialog#modalempty\r\n     * @type {EventTarget~Event}\r\n     */\r\n    this.trigger('modalempty');\r\n  };\r\n\r\n  /**\r\n   * Gets or sets the modal content, which gets normalized before being\r\n   * rendered into the DOM.\r\n   *\r\n   * This does not update the DOM or fill the modal, but it is called during\r\n   * that process.\r\n   *\r\n   * @param  {Mixed} [value]\r\n   *         If defined, sets the internal content value to be used on the\r\n   *         next call(s) to `fill`. This value is normalized before being\r\n   *         inserted. To \"clear\" the internal content value, pass `null`.\r\n   *\r\n   * @return {Mixed}\r\n   *         The current content of the modal dialog\r\n   */\r\n\r\n\r\n  ModalDialog.prototype.content = function content(value) {\r\n    if (typeof value !== 'undefined') {\r\n      this.content_ = value;\r\n    }\r\n    return this.content_;\r\n  };\r\n\r\n  /**\r\n   * conditionally focus the modal dialog if focus was previously on the player.\r\n   *\r\n   * @private\r\n   */\r\n\r\n\r\n  ModalDialog.prototype.conditionalFocus_ = function conditionalFocus_() {\r\n    var activeEl = document.activeElement;\r\n    var playerEl = this.player_.el_;\r\n\r\n    this.previouslyActiveEl_ = null;\r\n\r\n    if (playerEl.contains(activeEl) || playerEl === activeEl) {\r\n      this.previouslyActiveEl_ = activeEl;\r\n\r\n      this.focus();\r\n\r\n      this.on(document, 'keydown', this.handleKeyDown);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * conditionally blur the element and refocus the last focused element\r\n   *\r\n   * @private\r\n   */\r\n\r\n\r\n  ModalDialog.prototype.conditionalBlur_ = function conditionalBlur_() {\r\n    if (this.previouslyActiveEl_) {\r\n      this.previouslyActiveEl_.focus();\r\n      this.previouslyActiveEl_ = null;\r\n    }\r\n\r\n    this.off(document, 'keydown', this.handleKeyDown);\r\n  };\r\n\r\n  /**\r\n   * Keydown handler. Attached when modal is focused.\r\n   *\r\n   * @listens keydown\r\n   */\r\n\r\n\r\n  ModalDialog.prototype.handleKeyDown = function handleKeyDown(event) {\r\n    // exit early if it isn't a tab key\r\n    if (event.which !== 9) {\r\n      return;\r\n    }\r\n\r\n    var focusableEls = this.focusableEls_();\r\n    var activeEl = this.el_.querySelector(':focus');\r\n    var focusIndex = void 0;\r\n\r\n    for (var i = 0; i < focusableEls.length; i++) {\r\n      if (activeEl === focusableEls[i]) {\r\n        focusIndex = i;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (document.activeElement === this.el_) {\r\n      focusIndex = 0;\r\n    }\r\n\r\n    if (event.shiftKey && focusIndex === 0) {\r\n      focusableEls[focusableEls.length - 1].focus();\r\n      event.preventDefault();\r\n    } else if (!event.shiftKey && focusIndex === focusableEls.length - 1) {\r\n      focusableEls[0].focus();\r\n      event.preventDefault();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * get all focusable elements\r\n   *\r\n   * @private\r\n   */\r\n\r\n\r\n  ModalDialog.prototype.focusableEls_ = function focusableEls_() {\r\n    var allChildren = this.el_.querySelectorAll('*');\r\n\r\n    return Array.prototype.filter.call(allChildren, function (child) {\r\n      return (child instanceof window.HTMLAnchorElement || child instanceof window.HTMLAreaElement) && child.hasAttribute('href') || (child instanceof window.HTMLInputElement || child instanceof window.HTMLSelectElement || child instanceof window.HTMLTextAreaElement || child instanceof window.HTMLButtonElement) && !child.hasAttribute('disabled') || child instanceof window.HTMLIFrameElement || child instanceof window.HTMLObjectElement || child instanceof window.HTMLEmbedElement || child.hasAttribute('tabindex') && child.getAttribute('tabindex') !== -1 || child.hasAttribute('contenteditable');\r\n    });\r\n  };\r\n\r\n  return ModalDialog;\r\n}(Component);\r\n\r\n/**\r\n * Default options for `ModalDialog` default options.\r\n *\r\n * @type {Object}\r\n * @private\r\n */\r\n\r\n\r\nModalDialog.prototype.options_ = {\r\n  pauseOnOpen: true,\r\n  temporary: true\r\n};\r\n\r\nComponent.registerComponent('ModalDialog', ModalDialog);\r\n\r\n/**\r\n * @file track-list.js\r\n */\r\n/**\r\n * Common functionaliy between {@link TextTrackList}, {@link AudioTrackList}, and\r\n * {@link VideoTrackList}\r\n *\r\n * @extends EventTarget\r\n */\r\n\r\nvar TrackList = function (_EventTarget) {\r\n  inherits(TrackList, _EventTarget);\r\n\r\n  /**\r\n   * Create an instance of this class\r\n   *\r\n   * @param {Track[]} tracks\r\n   *        A list of tracks to initialize the list with.\r\n   *\r\n   * @param {Object} [list]\r\n   *        The child object with inheritance done manually for ie8.\r\n   *\r\n   * @abstract\r\n   */\r\n  function TrackList() {\r\n    var tracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\r\n\r\n    var _ret;\r\n\r\n    var list = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\r\n    classCallCheck(this, TrackList);\r\n\r\n    var _this = possibleConstructorReturn(this, _EventTarget.call(this));\r\n\r\n    if (!list) {\r\n      list = _this; // eslint-disable-line\r\n      if (IS_IE8) {\r\n        list = document.createElement('custom');\r\n        for (var prop in TrackList.prototype) {\r\n          if (prop !== 'constructor') {\r\n            list[prop] = TrackList.prototype[prop];\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    list.tracks_ = [];\r\n\r\n    /**\r\n     * @memberof TrackList\r\n     * @member {number} length\r\n     *         The current number of `Track`s in the this Trackist.\r\n     * @instance\r\n     */\r\n    Object.defineProperty(list, 'length', {\r\n      get: function get$$1() {\r\n        return this.tracks_.length;\r\n      }\r\n    });\r\n\r\n    for (var i = 0; i < tracks.length; i++) {\r\n      list.addTrack(tracks[i]);\r\n    }\r\n\r\n    // must return the object, as for ie8 it will not be this\r\n    // but a reference to a document object\r\n    return _ret = list, possibleConstructorReturn(_this, _ret);\r\n  }\r\n\r\n  /**\r\n   * Add a {@link Track} to the `TrackList`\r\n   *\r\n   * @param {Track} track\r\n   *        The audio, video, or text track to add to the list.\r\n   *\r\n   * @fires TrackList#addtrack\r\n   */\r\n\r\n\r\n  TrackList.prototype.addTrack = function addTrack(track) {\r\n    var index = this.tracks_.length;\r\n\r\n    if (!('' + index in this)) {\r\n      Object.defineProperty(this, index, {\r\n        get: function get$$1() {\r\n          return this.tracks_[index];\r\n        }\r\n      });\r\n    }\r\n\r\n    // Do not add duplicate tracks\r\n    if (this.tracks_.indexOf(track) === -1) {\r\n      this.tracks_.push(track);\r\n      /**\r\n       * Triggered when a track is added to a track list.\r\n       *\r\n       * @event TrackList#addtrack\r\n       * @type {EventTarget~Event}\r\n       * @property {Track} track\r\n       *           A reference to track that was added.\r\n       */\r\n      this.trigger({\r\n        track: track,\r\n        type: 'addtrack'\r\n      });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Remove a {@link Track} from the `TrackList`\r\n   *\r\n   * @param {Track} rtrack\r\n   *        The audio, video, or text track to remove from the list.\r\n   *\r\n   * @fires TrackList#removetrack\r\n   */\r\n\r\n\r\n  TrackList.prototype.removeTrack = function removeTrack(rtrack) {\r\n    var track = void 0;\r\n\r\n    for (var i = 0, l = this.length; i < l; i++) {\r\n      if (this[i] === rtrack) {\r\n        track = this[i];\r\n        if (track.off) {\r\n          track.off();\r\n        }\r\n\r\n        this.tracks_.splice(i, 1);\r\n\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (!track) {\r\n      return;\r\n    }\r\n\r\n    /**\r\n     * Triggered when a track is removed from track list.\r\n     *\r\n     * @event TrackList#removetrack\r\n     * @type {EventTarget~Event}\r\n     * @property {Track} track\r\n     *           A reference to track that was removed.\r\n     */\r\n    this.trigger({\r\n      track: track,\r\n      type: 'removetrack'\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Get a Track from the TrackList by a tracks id\r\n   *\r\n   * @param {String} id - the id of the track to get\r\n   * @method getTrackById\r\n   * @return {Track}\r\n   * @private\r\n   */\r\n\r\n\r\n  TrackList.prototype.getTrackById = function getTrackById(id) {\r\n    var result = null;\r\n\r\n    for (var i = 0, l = this.length; i < l; i++) {\r\n      var track = this[i];\r\n\r\n      if (track.id === id) {\r\n        result = track;\r\n        break;\r\n      }\r\n    }\r\n\r\n    return result;\r\n  };\r\n\r\n  return TrackList;\r\n}(EventTarget);\r\n\r\n/**\r\n * Triggered when a different track is selected/enabled.\r\n *\r\n * @event TrackList#change\r\n * @type {EventTarget~Event}\r\n */\r\n\r\n/**\r\n * Events that can be called with on + eventName. See {@link EventHandler}.\r\n *\r\n * @property {Object} TrackList#allowedEvents_\r\n * @private\r\n */\r\n\r\n\r\nTrackList.prototype.allowedEvents_ = {\r\n  change: 'change',\r\n  addtrack: 'addtrack',\r\n  removetrack: 'removetrack'\r\n};\r\n\r\n// emulate attribute EventHandler support to allow for feature detection\r\nfor (var event in TrackList.prototype.allowedEvents_) {\r\n  TrackList.prototype['on' + event] = null;\r\n}\r\n\r\n/**\r\n * @file audio-track-list.js\r\n */\r\n/**\r\n * Anywhere we call this function we diverge from the spec\r\n * as we only support one enabled audiotrack at a time\r\n *\r\n * @param {AudioTrackList} list\r\n *        list to work on\r\n *\r\n * @param {AudioTrack} track\r\n *        The track to skip\r\n *\r\n * @private\r\n */\r\nvar disableOthers = function disableOthers(list, track) {\r\n  for (var i = 0; i < list.length; i++) {\r\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\r\n      continue;\r\n    }\r\n    // another audio track is enabled, disable it\r\n    list[i].enabled = false;\r\n  }\r\n};\r\n\r\n/**\r\n * The current list of {@link AudioTrack} for a media file.\r\n *\r\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist}\r\n * @extends TrackList\r\n */\r\n\r\nvar AudioTrackList = function (_TrackList) {\r\n  inherits(AudioTrackList, _TrackList);\r\n\r\n  /**\r\n   * Create an instance of this class.\r\n   *\r\n   * @param {AudioTrack[]} [tracks=[]]\r\n   *        A list of `AudioTrack` to instantiate the list with.\r\n   */\r\n  function AudioTrackList() {\r\n    var _this, _ret;\r\n\r\n    var tracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\r\n    classCallCheck(this, AudioTrackList);\r\n\r\n    var list = void 0;\r\n\r\n    // make sure only 1 track is enabled\r\n    // sorted from last index to first index\r\n    for (var i = tracks.length - 1; i >= 0; i--) {\r\n      if (tracks[i].enabled) {\r\n        disableOthers(tracks, tracks[i]);\r\n        break;\r\n      }\r\n    }\r\n\r\n    // IE8 forces us to implement inheritance ourselves\r\n    // as it does not support Object.defineProperty properly\r\n    if (IS_IE8) {\r\n      list = document.createElement('custom');\r\n      for (var prop in TrackList.prototype) {\r\n        if (prop !== 'constructor') {\r\n          list[prop] = TrackList.prototype[prop];\r\n        }\r\n      }\r\n      for (var _prop in AudioTrackList.prototype) {\r\n        if (_prop !== 'constructor') {\r\n          list[_prop] = AudioTrackList.prototype[_prop];\r\n        }\r\n      }\r\n    }\r\n\r\n    list = (_this = possibleConstructorReturn(this, _TrackList.call(this, tracks, list)), _this);\r\n    list.changing_ = false;\r\n\r\n    return _ret = list, possibleConstructorReturn(_this, _ret);\r\n  }\r\n\r\n  /**\r\n   * Add an {@link AudioTrack} to the `AudioTrackList`.\r\n   *\r\n   * @param {AudioTrack} track\r\n   *        The AudioTrack to add to the list\r\n   *\r\n   * @fires TrackList#addtrack\r\n   */\r\n\r\n\r\n  AudioTrackList.prototype.addTrack = function addTrack(track) {\r\n    var _this2 = this;\r\n\r\n    if (track.enabled) {\r\n      disableOthers(this, track);\r\n    }\r\n\r\n    _TrackList.prototype.addTrack.call(this, track);\r\n    // native tracks don't have this\r\n    if (!track.addEventListener) {\r\n      return;\r\n    }\r\n\r\n    /**\r\n     * @listens AudioTrack#enabledchange\r\n     * @fires TrackList#change\r\n     */\r\n    track.addEventListener('enabledchange', function () {\r\n      // when we are disabling other tracks (since we don't support\r\n      // more than one track at a time) we will set changing_\r\n      // to true so that we don't trigger additional change events\r\n      if (_this2.changing_) {\r\n        return;\r\n      }\r\n      _this2.changing_ = true;\r\n      disableOthers(_this2, track);\r\n      _this2.changing_ = false;\r\n      _this2.trigger('change');\r\n    });\r\n  };\r\n\r\n  return AudioTrackList;\r\n}(TrackList);\r\n\r\n/**\r\n * @file video-track-list.js\r\n */\r\n/**\r\n * Un-select all other {@link VideoTrack}s that are selected.\r\n *\r\n * @param {VideoTrackList} list\r\n *        list to work on\r\n *\r\n * @param {VideoTrack} track\r\n *        The track to skip\r\n *\r\n * @private\r\n */\r\nvar disableOthers$1 = function disableOthers(list, track) {\r\n  for (var i = 0; i < list.length; i++) {\r\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\r\n      continue;\r\n    }\r\n    // another video track is enabled, disable it\r\n    list[i].selected = false;\r\n  }\r\n};\r\n\r\n/**\r\n * The current list of {@link VideoTrack} for a video.\r\n *\r\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist}\r\n * @extends TrackList\r\n */\r\n\r\nvar VideoTrackList = function (_TrackList) {\r\n  inherits(VideoTrackList, _TrackList);\r\n\r\n  /**\r\n   * Create an instance of this class.\r\n   *\r\n   * @param {VideoTrack[]} [tracks=[]]\r\n   *        A list of `VideoTrack` to instantiate the list with.\r\n   */\r\n  function VideoTrackList() {\r\n    var _this, _ret;\r\n\r\n    var tracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\r\n    classCallCheck(this, VideoTrackList);\r\n\r\n    var list = void 0;\r\n\r\n    // make sure only 1 track is enabled\r\n    // sorted from last index to first index\r\n    for (var i = tracks.length - 1; i >= 0; i--) {\r\n      if (tracks[i].selected) {\r\n        disableOthers$1(tracks, tracks[i]);\r\n        break;\r\n      }\r\n    }\r\n\r\n    // IE8 forces us to implement inheritance ourselves\r\n    // as it does not support Object.defineProperty properly\r\n    if (IS_IE8) {\r\n      list = document.createElement('custom');\r\n      for (var prop in TrackList.prototype) {\r\n        if (prop !== 'constructor') {\r\n          list[prop] = TrackList.prototype[prop];\r\n        }\r\n      }\r\n      for (var _prop in VideoTrackList.prototype) {\r\n        if (_prop !== 'constructor') {\r\n          list[_prop] = VideoTrackList.prototype[_prop];\r\n        }\r\n      }\r\n    }\r\n\r\n    list = (_this = possibleConstructorReturn(this, _TrackList.call(this, tracks, list)), _this);\r\n    list.changing_ = false;\r\n\r\n    /**\r\n     * @member {number} VideoTrackList#selectedIndex\r\n     *         The current index of the selected {@link VideoTrack`}.\r\n     */\r\n    Object.defineProperty(list, 'selectedIndex', {\r\n      get: function get$$1() {\r\n        for (var _i = 0; _i < this.length; _i++) {\r\n          if (this[_i].selected) {\r\n            return _i;\r\n          }\r\n        }\r\n        return -1;\r\n      },\r\n      set: function set$$1() {}\r\n    });\r\n\r\n    return _ret = list, possibleConstructorReturn(_this, _ret);\r\n  }\r\n\r\n  /**\r\n   * Add a {@link VideoTrack} to the `VideoTrackList`.\r\n   *\r\n   * @param {VideoTrack} track\r\n   *        The VideoTrack to add to the list\r\n   *\r\n   * @fires TrackList#addtrack\r\n   */\r\n\r\n\r\n  VideoTrackList.prototype.addTrack = function addTrack(track) {\r\n    var _this2 = this;\r\n\r\n    if (track.selected) {\r\n      disableOthers$1(this, track);\r\n    }\r\n\r\n    _TrackList.prototype.addTrack.call(this, track);\r\n    // native tracks don't have this\r\n    if (!track.addEventListener) {\r\n      return;\r\n    }\r\n\r\n    /**\r\n     * @listens VideoTrack#selectedchange\r\n     * @fires TrackList#change\r\n     */\r\n    track.addEventListener('selectedchange', function () {\r\n      if (_this2.changing_) {\r\n        return;\r\n      }\r\n      _this2.changing_ = true;\r\n      disableOthers$1(_this2, track);\r\n      _this2.changing_ = false;\r\n      _this2.trigger('change');\r\n    });\r\n  };\r\n\r\n  return VideoTrackList;\r\n}(TrackList);\r\n\r\n/**\r\n * @file text-track-list.js\r\n */\r\n/**\r\n * The current list of {@link TextTrack} for a media file.\r\n *\r\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttracklist}\r\n * @extends TrackList\r\n */\r\n\r\nvar TextTrackList = function (_TrackList) {\r\n  inherits(TextTrackList, _TrackList);\r\n\r\n  /**\r\n   * Create an instance of this class.\r\n   *\r\n   * @param {TextTrack[]} [tracks=[]]\r\n   *        A list of `TextTrack` to instantiate the list with.\r\n   */\r\n  function TextTrackList() {\r\n    var _this, _ret;\r\n\r\n    var tracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\r\n    classCallCheck(this, TextTrackList);\r\n\r\n    var list = void 0;\r\n\r\n    // IE8 forces us to implement inheritance ourselves\r\n    // as it does not support Object.defineProperty properly\r\n    if (IS_IE8) {\r\n      list = document.createElement('custom');\r\n      for (var prop in TrackList.prototype) {\r\n        if (prop !== 'constructor') {\r\n          list[prop] = TrackList.prototype[prop];\r\n        }\r\n      }\r\n      for (var _prop in TextTrackList.prototype) {\r\n        if (_prop !== 'constructor') {\r\n          list[_prop] = TextTrackList.prototype[_prop];\r\n        }\r\n      }\r\n    }\r\n\r\n    list = (_this = possibleConstructorReturn(this, _TrackList.call(this, tracks, list)), _this);\r\n    return _ret = list, possibleConstructorReturn(_this, _ret);\r\n  }\r\n\r\n  /**\r\n   * Add a {@link TextTrack} to the `TextTrackList`\r\n   *\r\n   * @param {TextTrack} track\r\n   *        The text track to add to the list.\r\n   *\r\n   * @fires TrackList#addtrack\r\n   */\r\n\r\n\r\n  TextTrackList.prototype.addTrack = function addTrack(track) {\r\n    _TrackList.prototype.addTrack.call(this, track);\r\n\r\n    /**\r\n     * @listens TextTrack#modechange\r\n     * @fires TrackList#change\r\n     */\r\n    track.addEventListener('modechange', bind(this, function () {\r\n      this.trigger('change');\r\n    }));\r\n\r\n    var nonLanguageTextTrackKind = ['metadata', 'chapters'];\r\n\r\n    if (nonLanguageTextTrackKind.indexOf(track.kind) === -1) {\r\n      track.addEventListener('modechange', bind(this, function () {\r\n        this.trigger('selectedlanguagechange');\r\n      }));\r\n    }\r\n  };\r\n\r\n  return TextTrackList;\r\n}(TrackList);\r\n\r\n/**\r\n * @file html-track-element-list.js\r\n */\r\n\r\n/**\r\n * The current list of {@link HtmlTrackElement}s.\r\n */\r\n\r\nvar HtmlTrackElementList = function () {\r\n\r\n  /**\r\n   * Create an instance of this class.\r\n   *\r\n   * @param {HtmlTrackElement[]} [tracks=[]]\r\n   *        A list of `HtmlTrackElement` to instantiate the list with.\r\n   */\r\n  function HtmlTrackElementList() {\r\n    var trackElements = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\r\n    classCallCheck(this, HtmlTrackElementList);\r\n\r\n    var list = this; // eslint-disable-line\r\n\r\n    if (IS_IE8) {\r\n      list = document.createElement('custom');\r\n\r\n      for (var prop in HtmlTrackElementList.prototype) {\r\n        if (prop !== 'constructor') {\r\n          list[prop] = HtmlTrackElementList.prototype[prop];\r\n        }\r\n      }\r\n    }\r\n\r\n    list.trackElements_ = [];\r\n\r\n    /**\r\n     * @memberof HtmlTrackElementList\r\n     * @member {number} length\r\n     *         The current number of `Track`s in the this Trackist.\r\n     * @instance\r\n     */\r\n    Object.defineProperty(list, 'length', {\r\n      get: function get$$1() {\r\n        return this.trackElements_.length;\r\n      }\r\n    });\r\n\r\n    for (var i = 0, length = trackElements.length; i < length; i++) {\r\n      list.addTrackElement_(trackElements[i]);\r\n    }\r\n\r\n    if (IS_IE8) {\r\n      return list;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add an {@link HtmlTrackElement} to the `HtmlTrackElementList`\r\n   *\r\n   * @param {HtmlTrackElement} trackElement\r\n   *        The track element to add to the list.\r\n   *\r\n   * @private\r\n   */\r\n\r\n\r\n  HtmlTrackElementList.prototype.addTrackElement_ = function addTrackElement_(trackElement) {\r\n    var index = this.trackElements_.length;\r\n\r\n    if (!('' + index in this)) {\r\n      Object.defineProperty(this, index, {\r\n        get: function get$$1() {\r\n          return this.trackElements_[index];\r\n        }\r\n      });\r\n    }\r\n\r\n    // Do not add duplicate elements\r\n    if (this.trackElements_.indexOf(trackElement) === -1) {\r\n      this.trackElements_.push(trackElement);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Get an {@link HtmlTrackElement} from the `HtmlTrackElementList` given an\r\n   * {@link TextTrack}.\r\n   *\r\n   * @param {TextTrack} track\r\n   *        The track associated with a track element.\r\n   *\r\n   * @return {HtmlTrackElement|undefined}\r\n   *         The track element that was found or undefined.\r\n   *\r\n   * @private\r\n   */\r\n\r\n\r\n  HtmlTrackElementList.prototype.getTrackElementByTrack_ = function getTrackElementByTrack_(track) {\r\n    var trackElement_ = void 0;\r\n\r\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\r\n      if (track === this.trackElements_[i].track) {\r\n        trackElement_ = this.trackElements_[i];\r\n\r\n        break;\r\n      }\r\n    }\r\n\r\n    return trackElement_;\r\n  };\r\n\r\n  /**\r\n   * Remove a {@link HtmlTrackElement} from the `HtmlTrackElementList`\r\n   *\r\n   * @param {HtmlTrackElement} trackElement\r\n   *        The track element to remove from the list.\r\n   *\r\n   * @private\r\n   */\r\n\r\n\r\n  HtmlTrackElementList.prototype.removeTrackElement_ = function removeTrackElement_(trackElement) {\r\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\r\n      if (trackElement === this.trackElements_[i]) {\r\n        this.trackElements_.splice(i, 1);\r\n\r\n        break;\r\n      }\r\n    }\r\n  };\r\n\r\n  return HtmlTrackElementList;\r\n}();\r\n\r\n/**\r\n * @file text-track-cue-list.js\r\n */\r\n/**\r\n * @typedef {Object} TextTrackCueList~TextTrackCue\r\n *\r\n * @property {string} id\r\n *           The unique id for this text track cue\r\n *\r\n * @property {number} startTime\r\n *           The start time for this text track cue\r\n *\r\n * @property {number} endTime\r\n *           The end time for this text track cue\r\n *\r\n * @property {boolean} pauseOnExit\r\n *           Pause when the end time is reached if true.\r\n *\r\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcue}\r\n */\r\n\r\n/**\r\n * A List of TextTrackCues.\r\n *\r\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcuelist}\r\n */\r\n\r\nvar TextTrackCueList = function () {\r\n\r\n  /**\r\n   * Create an instance of this class..\r\n   *\r\n   * @param {Array} cues\r\n   *        A list of cues to be initialized with\r\n   */\r\n  function TextTrackCueList(cues) {\r\n    classCallCheck(this, TextTrackCueList);\r\n\r\n    var list = this; // eslint-disable-line\r\n\r\n    if (IS_IE8) {\r\n      list = document.createElement('custom');\r\n\r\n      for (var prop in TextTrackCueList.prototype) {\r\n        if (prop !== 'constructor') {\r\n          list[prop] = TextTrackCueList.prototype[prop];\r\n        }\r\n      }\r\n    }\r\n\r\n    TextTrackCueList.prototype.setCues_.call(list, cues);\r\n\r\n    /**\r\n     * @memberof TextTrackCueList\r\n     * @member {number} length\r\n     *         The current number of `TextTrackCue`s in the TextTrackCueList.\r\n     * @instance\r\n     */\r\n    Object.defineProperty(list, 'length', {\r\n      get: function get$$1() {\r\n        return this.length_;\r\n      }\r\n    });\r\n\r\n    if (IS_IE8) {\r\n      return list;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * A setter for cues in this list. Creates getters\r\n   * an an index for the cues.\r\n   *\r\n   * @param {Array} cues\r\n   *        An array of cues to set\r\n   *\r\n   * @private\r\n   */\r\n\r\n\r\n  TextTrackCueList.prototype.setCues_ = function setCues_(cues) {\r\n    var oldLength = this.length || 0;\r\n    var i = 0;\r\n    var l = cues.length;\r\n\r\n    this.cues_ = cues;\r\n    this.length_ = cues.length;\r\n\r\n    var defineProp = function defineProp(index) {\r\n      if (!('' + index in this)) {\r\n        Object.defineProperty(this, '' + index, {\r\n          get: function get$$1() {\r\n            return this.cues_[index];\r\n          }\r\n        });\r\n      }\r\n    };\r\n\r\n    if (oldLength < l) {\r\n      i = oldLength;\r\n\r\n      for (; i < l; i++) {\r\n        defineProp.call(this, i);\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Get a `TextTrackCue` that is currently in the `TextTrackCueList` by id.\r\n   *\r\n   * @param {string} id\r\n   *        The id of the cue that should be searched for.\r\n   *\r\n   * @return {TextTrackCueList~TextTrackCue|null}\r\n   *         A single cue or null if none was found.\r\n   */\r\n\r\n\r\n  TextTrackCueList.prototype.getCueById = function getCueById(id) {\r\n    var result = null;\r\n\r\n    for (var i = 0, l = this.length; i < l; i++) {\r\n      var cue = this[i];\r\n\r\n      if (cue.id === id) {\r\n        result = cue;\r\n        break;\r\n      }\r\n    }\r\n\r\n    return result;\r\n  };\r\n\r\n  return TextTrackCueList;\r\n}();\r\n\r\n/**\r\n * @file track-kinds.js\r\n */\r\n\r\n/**\r\n * All possible `VideoTrackKind`s\r\n *\r\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-videotrack-kind\r\n * @typedef VideoTrack~Kind\r\n * @enum\r\n */\r\nvar VideoTrackKind = {\r\n  alternative: 'alternative',\r\n  captions: 'captions',\r\n  main: 'main',\r\n  sign: 'sign',\r\n  subtitles: 'subtitles',\r\n  commentary: 'commentary'\r\n};\r\n\r\n/**\r\n * All possible `AudioTrackKind`s\r\n *\r\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-audiotrack-kind\r\n * @typedef AudioTrack~Kind\r\n * @enum\r\n */\r\nvar AudioTrackKind = {\r\n  'alternative': 'alternative',\r\n  'descriptions': 'descriptions',\r\n  'main': 'main',\r\n  'main-desc': 'main-desc',\r\n  'translation': 'translation',\r\n  'commentary': 'commentary'\r\n};\r\n\r\n/**\r\n * All possible `TextTrackKind`s\r\n *\r\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-texttrack-kind\r\n * @typedef TextTrack~Kind\r\n * @enum\r\n */\r\nvar TextTrackKind = {\r\n  subtitles: 'subtitles',\r\n  captions: 'captions',\r\n  descriptions: 'descriptions',\r\n  chapters: 'chapters',\r\n  metadata: 'metadata'\r\n};\r\n\r\n/**\r\n * All possible `TextTrackMode`s\r\n *\r\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackmode\r\n * @typedef TextTrack~Mode\r\n * @enum\r\n */\r\nvar TextTrackMode = {\r\n  disabled: 'disabled',\r\n  hidden: 'hidden',\r\n  showing: 'showing'\r\n};\r\n\r\n/**\r\n * @file track.js\r\n */\r\n/**\r\n * A Track class that contains all of the common functionality for {@link AudioTrack},\r\n * {@link VideoTrack}, and {@link TextTrack}.\r\n *\r\n * > Note: This class should not be used directly\r\n *\r\n * @see {@link https://html.spec.whatwg.org/multipage/embedded-content.html}\r\n * @extends EventTarget\r\n * @abstract\r\n */\r\n\r\nvar Track = function (_EventTarget) {\r\n  inherits(Track, _EventTarget);\r\n\r\n  /**\r\n   * Create an instance of this class.\r\n   *\r\n   * @param {Object} [options={}]\r\n   *        Object of option names and values\r\n   *\r\n   * @param {string} [options.kind='']\r\n   *        A valid kind for the track type you are creating.\r\n   *\r\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\r\n   *        A unique id for this AudioTrack.\r\n   *\r\n   * @param {string} [options.label='']\r\n   *        The menu label for this track.\r\n   *\r\n   * @param {string} [options.language='']\r\n   *        A valid two character language code.\r\n   *\r\n   * @abstract\r\n   */\r\n  function Track() {\r\n    var _ret;\r\n\r\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\r\n    classCallCheck(this, Track);\r\n\r\n    var _this = possibleConstructorReturn(this, _EventTarget.call(this));\r\n\r\n    var track = _this; // eslint-disable-line\r\n\r\n    if (IS_IE8) {\r\n      track = document.createElement('custom');\r\n      for (var prop in Track.prototype) {\r\n        if (prop !== 'constructor') {\r\n          track[prop] = Track.prototype[prop];\r\n        }\r\n      }\r\n    }\r\n\r\n    var trackProps = {\r\n      id: options.id || 'vjs_track_' + newGUID(),\r\n      kind: options.kind || '',\r\n      label: options.label || '',\r\n      language: options.language || ''\r\n    };\r\n\r\n    /**\r\n     * @memberof Track\r\n     * @member {string} id\r\n     *         The id of this track. Cannot be changed after creation.\r\n     * @instance\r\n     *\r\n     * @readonly\r\n     */\r\n\r\n    /**\r\n     * @memberof Track\r\n     * @member {string} kind\r\n     *         The kind of track that this is. Cannot be changed after creation.\r\n     * @instance\r\n     *\r\n     * @readonly\r\n     */\r\n\r\n    /**\r\n     * @memberof Track\r\n     * @member {string} label\r\n     *         The label of this track. Cannot be changed after creation.\r\n     * @instance\r\n     *\r\n     * @readonly\r\n     */\r\n\r\n    /**\r\n     * @memberof Track\r\n     * @member {string} language\r\n     *         The two letter language code for this track. Cannot be changed after\r\n     *         creation.\r\n     * @instance\r\n     *\r\n     * @readonly\r\n     */\r\n\r\n    var _loop = function _loop(key) {\r\n      Object.defineProperty(track, key, {\r\n        get: function get$$1() {\r\n          return trackProps[key];\r\n        },\r\n        set: function set$$1() {}\r\n      });\r\n    };\r\n\r\n    for (var key in trackProps) {\r\n      _loop(key);\r\n    }\r\n\r\n    return _ret = track, possibleConstructorReturn(_this, _ret);\r\n  }\r\n\r\n  return Track;\r\n}(EventTarget);\r\n\r\n/**\r\n * @file url.js\r\n * @module url\r\n */\r\n/**\r\n * @typedef {Object} url:URLObject\r\n *\r\n * @property {string} protocol\r\n *           The protocol of the url that was parsed.\r\n *\r\n * @property {string} hostname\r\n *           The hostname of the url that was parsed.\r\n *\r\n * @property {string} port\r\n *           The port of the url that was parsed.\r\n *\r\n * @property {string} pathname\r\n *           The pathname of the url that was parsed.\r\n *\r\n * @property {string} search\r\n *           The search query of the url that was parsed.\r\n *\r\n * @property {string} hash\r\n *           The hash of the url that was parsed.\r\n *\r\n * @property {string} host\r\n *           The host of the url that was parsed.\r\n */\r\n\r\n/**\r\n * Resolve and parse the elements of a URL.\r\n *\r\n * @param  {String} url\r\n *         The url to parse\r\n *\r\n * @return {url:URLObject}\r\n *         An object of url details\r\n */\r\nvar parseUrl = function parseUrl(url) {\r\n  var props = ['protocol', 'hostname', 'port', 'pathname', 'search', 'hash', 'host'];\r\n\r\n  // add the url to an anchor and let the browser parse the URL\r\n  var a = document.createElement('a');\r\n\r\n  a.href = url;\r\n\r\n  // IE8 (and 9?) Fix\r\n  // ie8 doesn't parse the URL correctly until the anchor is actually\r\n  // added to the body, and an innerHTML is needed to trigger the parsing\r\n  var addToBody = a.host === '' && a.protocol !== 'file:';\r\n  var div = void 0;\r\n\r\n  if (addToBody) {\r\n    div = document.createElement('div');\r\n    div.innerHTML = '<a href=\"' + url + '\"></a>';\r\n    a = div.firstChild;\r\n    // prevent the div from affecting layout\r\n    div.setAttribute('style', 'display:none; position:absolute;');\r\n    document.body.appendChild(div);\r\n  }\r\n\r\n  // Copy the specific URL properties to a new object\r\n  // This is also needed for IE8 because the anchor loses its\r\n  // properties when it's removed from the dom\r\n  var details = {};\r\n\r\n  for (var i = 0; i < props.length; i++) {\r\n    details[props[i]] = a[props[i]];\r\n  }\r\n\r\n  // IE9 adds the port to the host property unlike everyone else. If\r\n  // a port identifier is added for standard ports, strip it.\r\n  if (details.protocol === 'http:') {\r\n    details.host = details.host.replace(/:80$/, '');\r\n  }\r\n\r\n  if (details.protocol === 'https:') {\r\n    details.host = details.host.replace(/:443$/, '');\r\n  }\r\n\r\n  if (!details.protocol) {\r\n    details.protocol = window.location.protocol;\r\n  }\r\n\r\n  if (addToBody) {\r\n    document.body.removeChild(div);\r\n  }\r\n\r\n  return details;\r\n};\r\n\r\n/**\r\n * Get absolute version of relative URL. Used to tell flash correct URL.\r\n *\r\n *\r\n * @param  {string} url\r\n *         URL to make absolute\r\n *\r\n * @return {string}\r\n *         Absolute URL\r\n *\r\n * @see http://stackoverflow.com/questions/470832/getting-an-absolute-url-from-a-relative-one-ie6-issue\r\n */\r\nvar getAbsoluteURL = function getAbsoluteURL(url) {\r\n  // Check if absolute URL\r\n  if (!url.match(/^https?:\\/\\//)) {\r\n    // Convert to absolute URL. Flash hosted off-site needs an absolute URL.\r\n    var div = document.createElement('div');\r\n\r\n    div.innerHTML = '<a href=\"' + url + '\">x</a>';\r\n    url = div.firstChild.href;\r\n  }\r\n\r\n  return url;\r\n};\r\n\r\n/**\r\n * Returns the extension of the passed file name. It will return an empty string\r\n * if passed an invalid path.\r\n *\r\n * @param {string} path\r\n *        The fileName path like '/path/to/file.mp4'\r\n *\r\n * @returns {string}\r\n *          The extension in lower case or an empty string if no\r\n *          extension could be found.\r\n */\r\nvar getFileExtension = function getFileExtension(path) {\r\n  if (typeof path === 'string') {\r\n    var splitPathRe = /^(\\/?)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?)(\\.([^\\.\\/\\?]+)))(?:[\\/]*|[\\?].*)$/i;\r\n    var pathParts = splitPathRe.exec(path);\r\n\r\n    if (pathParts) {\r\n      return pathParts.pop().toLowerCase();\r\n    }\r\n  }\r\n\r\n  return '';\r\n};\r\n\r\n/**\r\n * Returns whether the url passed is a cross domain request or not.\r\n *\r\n * @param {string} url\r\n *        The url to check.\r\n *\r\n * @return {boolean}\r\n *         Whether it is a cross domain request or not.\r\n */\r\nvar isCrossOrigin = function isCrossOrigin(url) {\r\n  var winLoc = window.location;\r\n  var urlInfo = parseUrl(url);\r\n\r\n  // IE8 protocol relative urls will return ':' for protocol\r\n  var srcProtocol = urlInfo.protocol === ':' ? winLoc.protocol : urlInfo.protocol;\r\n\r\n  // Check if url is for another domain/origin\r\n  // IE8 doesn't know location.origin, so we won't rely on it here\r\n  var crossOrigin = srcProtocol + urlInfo.host !== winLoc.protocol + winLoc.host;\r\n\r\n  return crossOrigin;\r\n};\r\n\r\nvar Url = (Object.freeze || Object)({\r\n\tparseUrl: parseUrl,\r\n\tgetAbsoluteURL: getAbsoluteURL,\r\n\tgetFileExtension: getFileExtension,\r\n\tisCrossOrigin: isCrossOrigin\r\n});\r\n\r\n/**\r\n * @file text-track.js\r\n */\r\n/**\r\n * Takes a webvtt file contents and parses it into cues\r\n *\r\n * @param {string} srcContent\r\n *        webVTT file contents\r\n *\r\n * @param {TextTrack} track\r\n *        TextTrack to add cues to. Cues come from the srcContent.\r\n *\r\n * @private\r\n */\r\nvar parseCues = function parseCues(srcContent, track) {\r\n  var parser = new window.WebVTT.Parser(window, window.vttjs, window.WebVTT.StringDecoder());\r\n  var errors = [];\r\n\r\n  parser.oncue = function (cue) {\r\n    track.addCue(cue);\r\n  };\r\n\r\n  parser.onparsingerror = function (error) {\r\n    errors.push(error);\r\n  };\r\n\r\n  parser.onflush = function () {\r\n    track.trigger({\r\n      type: 'loadeddata',\r\n      target: track\r\n    });\r\n  };\r\n\r\n  parser.parse(srcContent);\r\n  if (errors.length > 0) {\r\n    if (window.console && window.console.groupCollapsed) {\r\n      window.console.groupCollapsed('Text Track parsing errors for ' + track.src);\r\n    }\r\n    errors.forEach(function (error) {\r\n      return log.error(error);\r\n    });\r\n    if (window.console && window.console.groupEnd) {\r\n      window.console.groupEnd();\r\n    }\r\n  }\r\n\r\n  parser.flush();\r\n};\r\n\r\n/**\r\n * Load a `TextTrack` from a specifed url.\r\n *\r\n * @param {string} src\r\n *        Url to load track from.\r\n *\r\n * @param {TextTrack} track\r\n *        Track to add cues to. Comes from the content at the end of `url`.\r\n *\r\n * @private\r\n */\r\nvar loadTrack = function loadTrack(src, track) {\r\n  var opts = {\r\n    uri: src\r\n  };\r\n  var crossOrigin = isCrossOrigin(src);\r\n\r\n  if (crossOrigin) {\r\n    opts.cors = crossOrigin;\r\n  }\r\n\r\n  xhr(opts, bind(this, function (err, response, responseBody) {\r\n    if (err) {\r\n      return log.error(err, response);\r\n    }\r\n\r\n    track.loaded_ = true;\r\n\r\n    // Make sure that vttjs has loaded, otherwise, wait till it finished loading\r\n    // NOTE: this is only used for the alt/video.novtt.js build\r\n    if (typeof window.WebVTT !== 'function') {\r\n      if (track.tech_) {\r\n        var loadHandler = function loadHandler() {\r\n          return parseCues(responseBody, track);\r\n        };\r\n\r\n        track.tech_.on('vttjsloaded', loadHandler);\r\n        track.tech_.on('vttjserror', function () {\r\n          log.error('vttjs failed to load, stopping trying to process ' + track.src);\r\n          track.tech_.off('vttjsloaded', loadHandler);\r\n        });\r\n      }\r\n    } else {\r\n      parseCues(responseBody, track);\r\n    }\r\n  }));\r\n};\r\n\r\n/**\r\n * A representation of a single `TextTrack`.\r\n *\r\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrack}\r\n * @extends Track\r\n */\r\n\r\nvar TextTrack = function (_Track) {\r\n  inherits(TextTrack, _Track);\r\n\r\n  /**\r\n   * Create an instance of this class.\r\n   *\r\n   * @param {Object} options={}\r\n   *        Object of option names and values\r\n   *\r\n   * @param {Tech} options.tech\r\n   *        A reference to the tech that owns this TextTrack.\r\n   *\r\n   * @param {TextTrack~Kind} [options.kind='subtitles']\r\n   *        A valid text track kind.\r\n   *\r\n   * @param {TextTrack~Mode} [options.mode='disabled']\r\n   *        A valid text track mode.\r\n   *\r\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\r\n   *        A unique id for this TextTrack.\r\n   *\r\n   * @param {string} [options.label='']\r\n   *        The menu label for this track.\r\n   *\r\n   * @param {string} [options.language='']\r\n   *        A valid two character language code.\r\n   *\r\n   * @param {string} [options.srclang='']\r\n   *        A valid two character language code. An alternative, but deprioritized\r\n   *        vesion of `options.language`\r\n   *\r\n   * @param {string} [options.src]\r\n   *        A url to TextTrack cues.\r\n   *\r\n   * @param {boolean} [options.default]\r\n   *        If this track should default to on or off.\r\n   */\r\n  function TextTrack() {\r\n    var _this, _ret;\r\n\r\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\r\n    classCallCheck(this, TextTrack);\r\n\r\n    if (!options.tech) {\r\n      throw new Error('A tech was not provided.');\r\n    }\r\n\r\n    var settings = mergeOptions(options, {\r\n      kind: TextTrackKind[options.kind] || 'subtitles',\r\n      language: options.language || options.srclang || ''\r\n    });\r\n    var mode = TextTrackMode[settings.mode] || 'disabled';\r\n    var default_ = settings['default'];\r\n\r\n    if (settings.kind === 'metadata' || settings.kind === 'chapters') {\r\n      mode = 'hidden';\r\n    }\r\n    // on IE8 this will be a document element\r\n    // for every other browser this will be a normal object\r\n    var tt = (_this = possibleConstructorReturn(this, _Track.call(this, settings)), _this);\r\n\r\n    tt.tech_ = settings.tech;\r\n\r\n    if (IS_IE8) {\r\n      for (var prop in TextTrack.prototype) {\r\n        if (prop !== 'constructor') {\r\n          tt[prop] = TextTrack.prototype[prop];\r\n        }\r\n      }\r\n    }\r\n\r\n    tt.cues_ = [];\r\n    tt.activeCues_ = [];\r\n\r\n    var cues = new TextTrackCueList(tt.cues_);\r\n    var activeCues = new TextTrackCueList(tt.activeCues_);\r\n    var changed = false;\r\n    var timeupdateHandler = bind(tt, function () {\r\n\r\n      // Accessing this.activeCues for the side-effects of updating itself\r\n      // due to it's nature as a getter function. Do not remove or cues will\r\n      // stop updating!\r\n      // Use the setter to prevent deletion from uglify (pure_getters rule)\r\n      this.activeCues = this.activeCues;\r\n      if (changed) {\r\n        this.trigger('cuechange');\r\n        changed = false;\r\n      }\r\n    });\r\n\r\n    if (mode !== 'disabled') {\r\n      tt.tech_.ready(function () {\r\n        tt.tech_.on('timeupdate', timeupdateHandler);\r\n      }, true);\r\n    }\r\n\r\n    /**\r\n     * @memberof TextTrack\r\n     * @member {boolean} default\r\n     *         If this track was set to be on or off by default. Cannot be changed after\r\n     *         creation.\r\n     * @instance\r\n     *\r\n     * @readonly\r\n     */\r\n    Object.defineProperty(tt, 'default', {\r\n      get: function get$$1() {\r\n        return default_;\r\n      },\r\n      set: function set$$1() {}\r\n    });\r\n\r\n    /**\r\n     * @memberof TextTrack\r\n     * @member {string} mode\r\n     *         Set the mode of this TextTrack to a valid {@link TextTrack~Mode}. Will\r\n     *         not be set if setting to an invalid mode.\r\n     * @instance\r\n     *\r\n     * @fires TextTrack#modechange\r\n     */\r\n    Object.defineProperty(tt, 'mode', {\r\n      get: function get$$1() {\r\n        return mode;\r\n      },\r\n      set: function set$$1(newMode) {\r\n        var _this2 = this;\r\n\r\n        if (!TextTrackMode[newMode]) {\r\n          return;\r\n        }\r\n        mode = newMode;\r\n        if (mode !== 'disabled') {\r\n\r\n          this.tech_.ready(function () {\r\n            _this2.tech_.on('timeupdate', timeupdateHandler);\r\n          }, true);\r\n        } else {\r\n          this.tech_.off('timeupdate', timeupdateHandler);\r\n        }\r\n        /**\r\n         * An event that fires when mode changes on this track. This allows\r\n         * the TextTrackList that holds this track to act accordingly.\r\n         *\r\n         * > Note: This is not part of the spec!\r\n         *\r\n         * @event TextTrack#modechange\r\n         * @type {EventTarget~Event}\r\n         */\r\n        this.trigger('modechange');\r\n      }\r\n    });\r\n\r\n    /**\r\n     * @memberof TextTrack\r\n     * @member {TextTrackCueList} cues\r\n     *         The text track cue list for this TextTrack.\r\n     * @instance\r\n     */\r\n    Object.defineProperty(tt, 'cues', {\r\n      get: function get$$1() {\r\n        if (!this.loaded_) {\r\n          return null;\r\n        }\r\n\r\n        return cues;\r\n      },\r\n      set: function set$$1() {}\r\n    });\r\n\r\n    /**\r\n     * @memberof TextTrack\r\n     * @member {TextTrackCueList} activeCues\r\n     *         The list text track cues that are currently active for this TextTrack.\r\n     * @instance\r\n     */\r\n    Object.defineProperty(tt, 'activeCues', {\r\n      get: function get$$1() {\r\n        if (!this.loaded_) {\r\n          return null;\r\n        }\r\n\r\n        // nothing to do\r\n        if (this.cues.length === 0) {\r\n          return activeCues;\r\n        }\r\n\r\n        var ct = this.tech_.currentTime();\r\n        var active = [];\r\n\r\n        for (var i = 0, l = this.cues.length; i < l; i++) {\r\n          var cue = this.cues[i];\r\n\r\n          if (cue.startTime <= ct && cue.endTime >= ct) {\r\n            active.push(cue);\r\n          } else if (cue.startTime === cue.endTime && cue.startTime <= ct && cue.startTime + 0.5 >= ct) {\r\n            active.push(cue);\r\n          }\r\n        }\r\n\r\n        changed = false;\r\n\r\n        if (active.length !== this.activeCues_.length) {\r\n          changed = true;\r\n        } else {\r\n          for (var _i = 0; _i < active.length; _i++) {\r\n            if (this.activeCues_.indexOf(active[_i]) === -1) {\r\n              changed = true;\r\n            }\r\n          }\r\n        }\r\n\r\n        this.activeCues_ = active;\r\n        activeCues.setCues_(this.activeCues_);\r\n\r\n        return activeCues;\r\n      },\r\n\r\n\r\n      // /!\\ Keep this setter empty (see the timeupdate handler above)\r\n      set: function set$$1() {}\r\n    });\r\n\r\n    if (settings.src) {\r\n      tt.src = settings.src;\r\n      loadTrack(settings.src, tt);\r\n    } else {\r\n      tt.loaded_ = true;\r\n    }\r\n\r\n    return _ret = tt, possibleConstructorReturn(_this, _ret);\r\n  }\r\n\r\n  /**\r\n   * Add a cue to the internal list of cues.\r\n   *\r\n   * @param {TextTrack~Cue} cue\r\n   *        The cue to add to our internal list\r\n   */\r\n\r\n\r\n  TextTrack.prototype.addCue = function addCue(originalCue) {\r\n    var cue = originalCue;\r\n\r\n    if (window.vttjs && !(originalCue instanceof window.vttjs.VTTCue)) {\r\n      cue = new window.vttjs.VTTCue(originalCue.startTime, originalCue.endTime, originalCue.text);\r\n\r\n      for (var prop in originalCue) {\r\n        if (!(prop in cue)) {\r\n          cue[prop] = originalCue[prop];\r\n        }\r\n      }\r\n\r\n      // make sure that `id` is copied over\r\n      cue.id = originalCue.id;\r\n      cue.originalCue_ = originalCue;\r\n    }\r\n\r\n    var tracks = this.tech_.textTracks();\r\n\r\n    for (var i = 0; i < tracks.length; i++) {\r\n      if (tracks[i] !== this) {\r\n        tracks[i].removeCue(cue);\r\n      }\r\n    }\r\n\r\n    this.cues_.push(cue);\r\n    this.cues.setCues_(this.cues_);\r\n  };\r\n\r\n  /**\r\n   * Remove a cue from our internal list\r\n   *\r\n   * @param {TextTrack~Cue} removeCue\r\n   *        The cue to remove from our internal list\r\n   */\r\n\r\n\r\n  TextTrack.prototype.removeCue = function removeCue(_removeCue) {\r\n    var i = this.cues_.length;\r\n\r\n    while (i--) {\r\n      var cue = this.cues_[i];\r\n\r\n      if (cue === _removeCue || cue.originalCue_ && cue.originalCue_ === _removeCue) {\r\n        this.cues_.splice(i, 1);\r\n        this.cues.setCues_(this.cues_);\r\n        break;\r\n      }\r\n    }\r\n  };\r\n\r\n  return TextTrack;\r\n}(Track);\r\n\r\n/**\r\n * cuechange - One or more cues in the track have become active or stopped being active.\r\n */\r\n\r\n\r\nTextTrack.prototype.allowedEvents_ = {\r\n  cuechange: 'cuechange'\r\n};\r\n\r\n/**\r\n * A representation of a single `AudioTrack`. If it is part of an {@link AudioTrackList}\r\n * only one `AudioTrack` in the list will be enabled at a time.\r\n *\r\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotrack}\r\n * @extends Track\r\n */\r\n\r\nvar AudioTrack = function (_Track) {\r\n  inherits(AudioTrack, _Track);\r\n\r\n  /**\r\n   * Create an instance of this class.\r\n   *\r\n   * @param {Object} [options={}]\r\n   *        Object of option names and values\r\n   *\r\n   * @param {AudioTrack~Kind} [options.kind='']\r\n   *        A valid audio track kind\r\n   *\r\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\r\n   *        A unique id for this AudioTrack.\r\n   *\r\n   * @param {string} [options.label='']\r\n   *        The menu label for this track.\r\n   *\r\n   * @param {string} [options.language='']\r\n   *        A valid two character language code.\r\n   *\r\n   * @param {boolean} [options.enabled]\r\n   *        If this track is the one that is currently playing. If this track is part of\r\n   *        an {@link AudioTrackList}, only one {@link AudioTrack} will be enabled.\r\n   */\r\n  function AudioTrack() {\r\n    var _this, _ret;\r\n\r\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\r\n    classCallCheck(this, AudioTrack);\r\n\r\n    var settings = mergeOptions(options, {\r\n      kind: AudioTrackKind[options.kind] || ''\r\n    });\r\n    // on IE8 this will be a document element\r\n    // for every other browser this will be a normal object\r\n    var track = (_this = possibleConstructorReturn(this, _Track.call(this, settings)), _this);\r\n    var enabled = false;\r\n\r\n    if (IS_IE8) {\r\n      for (var prop in AudioTrack.prototype) {\r\n        if (prop !== 'constructor') {\r\n          track[prop] = AudioTrack.prototype[prop];\r\n        }\r\n      }\r\n    }\r\n    /**\r\n     * @memberof AudioTrack\r\n     * @member {boolean} enabled\r\n     *         If this `AudioTrack` is enabled or not. When setting this will\r\n     *         fire {@link AudioTrack#enabledchange} if the state of enabled is changed.\r\n     * @instance\r\n     *\r\n     * @fires VideoTrack#selectedchange\r\n     */\r\n    Object.defineProperty(track, 'enabled', {\r\n      get: function get$$1() {\r\n        return enabled;\r\n      },\r\n      set: function set$$1(newEnabled) {\r\n        // an invalid or unchanged value\r\n        if (typeof newEnabled !== 'boolean' || newEnabled === enabled) {\r\n          return;\r\n        }\r\n        enabled = newEnabled;\r\n\r\n        /**\r\n         * An event that fires when enabled changes on this track. This allows\r\n         * the AudioTrackList that holds this track to act accordingly.\r\n         *\r\n         * > Note: This is not part of the spec! Native tracks will do\r\n         *         this internally without an event.\r\n         *\r\n         * @event AudioTrack#enabledchange\r\n         * @type {EventTarget~Event}\r\n         */\r\n        this.trigger('enabledchange');\r\n      }\r\n    });\r\n\r\n    // if the user sets this track to selected then\r\n    // set selected to that true value otherwise\r\n    // we keep it false\r\n    if (settings.enabled) {\r\n      track.enabled = settings.enabled;\r\n    }\r\n    track.loaded_ = true;\r\n\r\n    return _ret = track, possibleConstructorReturn(_this, _ret);\r\n  }\r\n\r\n  return AudioTrack;\r\n}(Track);\r\n\r\n/**\r\n * A representation of a single `VideoTrack`.\r\n *\r\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotrack}\r\n * @extends Track\r\n */\r\n\r\nvar VideoTrack = function (_Track) {\r\n  inherits(VideoTrack, _Track);\r\n\r\n  /**\r\n   * Create an instance of this class.\r\n   *\r\n   * @param {Object} [options={}]\r\n   *        Object of option names and values\r\n   *\r\n   * @param {string} [options.kind='']\r\n   *        A valid {@link VideoTrack~Kind}\r\n   *\r\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\r\n   *        A unique id for this AudioTrack.\r\n   *\r\n   * @param {string} [options.label='']\r\n   *        The menu label for this track.\r\n   *\r\n   * @param {string} [options.language='']\r\n   *        A valid two character language code.\r\n   *\r\n   * @param {boolean} [options.selected]\r\n   *        If this track is the one that is currently playing.\r\n   */\r\n  function VideoTrack() {\r\n    var _this, _ret;\r\n\r\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\r\n    classCallCheck(this, VideoTrack);\r\n\r\n    var settings = mergeOptions(options, {\r\n      kind: VideoTrackKind[options.kind] || ''\r\n    });\r\n\r\n    // on IE8 this will be a document element\r\n    // for every other browser this will be a normal object\r\n    var track = (_this = possibleConstructorReturn(this, _Track.call(this, settings)), _this);\r\n    var selected = false;\r\n\r\n    if (IS_IE8) {\r\n      for (var prop in VideoTrack.prototype) {\r\n        if (prop !== 'constructor') {\r\n          track[prop] = VideoTrack.prototype[prop];\r\n        }\r\n      }\r\n    }\r\n\r\n    /**\r\n     * @memberof VideoTrack\r\n     * @member {boolean} selected\r\n     *         If this `VideoTrack` is selected or not. When setting this will\r\n     *         fire {@link VideoTrack#selectedchange} if the state of selected changed.\r\n     * @instance\r\n     *\r\n     * @fires VideoTrack#selectedchange\r\n     */\r\n    Object.defineProperty(track, 'selected', {\r\n      get: function get$$1() {\r\n        return selected;\r\n      },\r\n      set: function set$$1(newSelected) {\r\n        // an invalid or unchanged value\r\n        if (typeof newSelected !== 'boolean' || newSelected === selected) {\r\n          return;\r\n        }\r\n        selected = newSelected;\r\n\r\n        /**\r\n         * An event that fires when selected changes on this track. This allows\r\n         * the VideoTrackList that holds this track to act accordingly.\r\n         *\r\n         * > Note: This is not part of the spec! Native tracks will do\r\n         *         this internally without an event.\r\n         *\r\n         * @event VideoTrack#selectedchange\r\n         * @type {EventTarget~Event}\r\n         */\r\n        this.trigger('selectedchange');\r\n      }\r\n    });\r\n\r\n    // if the user sets this track to selected then\r\n    // set selected to that true value otherwise\r\n    // we keep it false\r\n    if (settings.selected) {\r\n      track.selected = settings.selected;\r\n    }\r\n\r\n    return _ret = track, possibleConstructorReturn(_this, _ret);\r\n  }\r\n\r\n  return VideoTrack;\r\n}(Track);\r\n\r\n/**\r\n * @file html-track-element.js\r\n */\r\n\r\n/**\r\n * @memberof HTMLTrackElement\r\n * @typedef {HTMLTrackElement~ReadyState}\r\n * @enum {number}\r\n */\r\nvar NONE = 0;\r\nvar LOADING = 1;\r\nvar LOADED = 2;\r\nvar ERROR = 3;\r\n\r\n/**\r\n * A single track represented in the DOM.\r\n *\r\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#htmltrackelement}\r\n * @extends EventTarget\r\n */\r\n\r\nvar HTMLTrackElement = function (_EventTarget) {\r\n  inherits(HTMLTrackElement, _EventTarget);\r\n\r\n  /**\r\n   * Create an instance of this class.\r\n   *\r\n   * @param {Object} options={}\r\n   *        Object of option names and values\r\n   *\r\n   * @param {Tech} options.tech\r\n   *        A reference to the tech that owns this HTMLTrackElement.\r\n   *\r\n   * @param {TextTrack~Kind} [options.kind='subtitles']\r\n   *        A valid text track kind.\r\n   *\r\n   * @param {TextTrack~Mode} [options.mode='disabled']\r\n   *        A valid text track mode.\r\n   *\r\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\r\n   *        A unique id for this TextTrack.\r\n   *\r\n   * @param {string} [options.label='']\r\n   *        The menu label for this track.\r\n   *\r\n   * @param {string} [options.language='']\r\n   *        A valid two character language code.\r\n   *\r\n   * @param {string} [options.srclang='']\r\n   *        A valid two character language code. An alternative, but deprioritized\r\n   *        vesion of `options.language`\r\n   *\r\n   * @param {string} [options.src]\r\n   *        A url to TextTrack cues.\r\n   *\r\n   * @param {boolean} [options.default]\r\n   *        If this track should default to on or off.\r\n   */\r\n  function HTMLTrackElement() {\r\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\r\n    classCallCheck(this, HTMLTrackElement);\r\n\r\n    var _this = possibleConstructorReturn(this, _EventTarget.call(this));\r\n\r\n    var readyState = void 0;\r\n    var trackElement = _this; // eslint-disable-line\r\n\r\n    if (IS_IE8) {\r\n      trackElement = document.createElement('custom');\r\n\r\n      for (var prop in HTMLTrackElement.prototype) {\r\n        if (prop !== 'constructor') {\r\n          trackElement[prop] = HTMLTrackElement.prototype[prop];\r\n        }\r\n      }\r\n    }\r\n\r\n    var track = new TextTrack(options);\r\n\r\n    trackElement.kind = track.kind;\r\n    trackElement.src = track.src;\r\n    trackElement.srclang = track.language;\r\n    trackElement.label = track.label;\r\n    trackElement['default'] = track['default'];\r\n\r\n    /**\r\n     * @memberof HTMLTrackElement\r\n     * @member {HTMLTrackElement~ReadyState} readyState\r\n     *         The current ready state of the track element.\r\n     * @instance\r\n     */\r\n    Object.defineProperty(trackElement, 'readyState', {\r\n      get: function get$$1() {\r\n        return readyState;\r\n      }\r\n    });\r\n\r\n    /**\r\n     * @memberof HTMLTrackElement\r\n     * @member {TextTrack} track\r\n     *         The underlying TextTrack object.\r\n     * @instance\r\n     *\r\n     */\r\n    Object.defineProperty(trackElement, 'track', {\r\n      get: function get$$1() {\r\n        return track;\r\n      }\r\n    });\r\n\r\n    readyState = NONE;\r\n\r\n    /**\r\n     * @listens TextTrack#loadeddata\r\n     * @fires HTMLTrackElement#load\r\n     */\r\n    track.addEventListener('loadeddata', function () {\r\n      readyState = LOADED;\r\n\r\n      trackElement.trigger({\r\n        type: 'load',\r\n        target: trackElement\r\n      });\r\n    });\r\n\r\n    if (IS_IE8) {\r\n      var _ret;\r\n\r\n      return _ret = trackElement, possibleConstructorReturn(_this, _ret);\r\n    }\r\n    return _this;\r\n  }\r\n\r\n  return HTMLTrackElement;\r\n}(EventTarget);\r\n\r\nHTMLTrackElement.prototype.allowedEvents_ = {\r\n  load: 'load'\r\n};\r\n\r\nHTMLTrackElement.NONE = NONE;\r\nHTMLTrackElement.LOADING = LOADING;\r\nHTMLTrackElement.LOADED = LOADED;\r\nHTMLTrackElement.ERROR = ERROR;\r\n\r\n/*\r\n * This file contains all track properties that are used in\r\n * player.js, tech.js, html5.js and possibly other techs in the future.\r\n */\r\n\r\nvar NORMAL = {\r\n  audio: {\r\n    ListClass: AudioTrackList,\r\n    TrackClass: AudioTrack,\r\n    capitalName: 'Audio'\r\n  },\r\n  video: {\r\n    ListClass: VideoTrackList,\r\n    TrackClass: VideoTrack,\r\n    capitalName: 'Video'\r\n  },\r\n  text: {\r\n    ListClass: TextTrackList,\r\n    TrackClass: TextTrack,\r\n    capitalName: 'Text'\r\n  }\r\n};\r\n\r\nObject.keys(NORMAL).forEach(function (type) {\r\n  NORMAL[type].getterName = type + 'Tracks';\r\n  NORMAL[type].privateName = type + 'Tracks_';\r\n});\r\n\r\nvar REMOTE = {\r\n  remoteText: {\r\n    ListClass: TextTrackList,\r\n    TrackClass: TextTrack,\r\n    capitalName: 'RemoteText',\r\n    getterName: 'remoteTextTracks',\r\n    privateName: 'remoteTextTracks_'\r\n  },\r\n  remoteTextEl: {\r\n    ListClass: HtmlTrackElementList,\r\n    TrackClass: HTMLTrackElement,\r\n    capitalName: 'RemoteTextTrackEls',\r\n    getterName: 'remoteTextTrackEls',\r\n    privateName: 'remoteTextTrackEls_'\r\n  }\r\n};\r\n\r\nvar ALL = mergeOptions(NORMAL, REMOTE);\r\n\r\nREMOTE.names = Object.keys(REMOTE);\r\nNORMAL.names = Object.keys(NORMAL);\r\nALL.names = [].concat(REMOTE.names).concat(NORMAL.names);\r\n\r\n/**\r\n * @file tech.js\r\n */\r\n\r\n/**\r\n * An Object containing a structure like: `{src: 'url', type: 'mimetype'}` or string\r\n * that just contains the src url alone.\r\n * * `var SourceObject = {src: 'http://ex.com/video.mp4', type: 'video/mp4'};`\r\n   * `var SourceString = 'http://example.com/some-video.mp4';`\r\n *\r\n * @typedef {Object|string} Tech~SourceObject\r\n *\r\n * @property {string} src\r\n *           The url to the source\r\n *\r\n * @property {string} type\r\n *           The mime type of the source\r\n */\r\n\r\n/**\r\n * A function used by {@link Tech} to create a new {@link TextTrack}.\r\n *\r\n * @private\r\n *\r\n * @param {Tech} self\r\n *        An instance of the Tech class.\r\n *\r\n * @param {string} kind\r\n *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\r\n *\r\n * @param {string} [label]\r\n *        Label to identify the text track\r\n *\r\n * @param {string} [language]\r\n *        Two letter language abbreviation\r\n *\r\n * @param {Object} [options={}]\r\n *        An object with additional text track options\r\n *\r\n * @return {TextTrack}\r\n *          The text track that was created.\r\n */\r\nfunction createTrackHelper(self, kind, label, language) {\r\n  var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\r\n\r\n  var tracks = self.textTracks();\r\n\r\n  options.kind = kind;\r\n\r\n  if (label) {\r\n    options.label = label;\r\n  }\r\n  if (language) {\r\n    options.language = language;\r\n  }\r\n  options.tech = self;\r\n\r\n  var track = new ALL.text.TrackClass(options);\r\n\r\n  tracks.addTrack(track);\r\n\r\n  return track;\r\n}\r\n\r\n/**\r\n * This is the base class for media playback technology controllers, such as\r\n * {@link Flash} and {@link HTML5}\r\n *\r\n * @extends Component\r\n */\r\n\r\nvar Tech = function (_Component) {\r\n  inherits(Tech, _Component);\r\n\r\n  /**\r\n   * Create an instance of this Tech.\r\n   *\r\n   * @param {Object} [options]\r\n   *        The key/value store of player options.\r\n   *\r\n   * @param {Component~ReadyCallback} ready\r\n   *        Callback function to call when the `HTML5` Tech is ready.\r\n   */\r\n  function Tech() {\r\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\r\n    var ready = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};\r\n    classCallCheck(this, Tech);\r\n\r\n    // we don't want the tech to report user activity automatically.\r\n    // This is done manually in addControlsListeners\r\n    options.reportTouchActivity = false;\r\n\r\n    // keep track of whether the current source has played at all to\r\n    // implement a very limited played()\r\n    var _this = possibleConstructorReturn(this, _Component.call(this, null, options, ready));\r\n\r\n    _this.hasStarted_ = false;\r\n    _this.on('playing', function () {\r\n      this.hasStarted_ = true;\r\n    });\r\n    _this.on('loadstart', function () {\r\n      this.hasStarted_ = false;\r\n    });\r\n\r\n    ALL.names.forEach(function (name) {\r\n      var props = ALL[name];\r\n\r\n      if (options && options[props.getterName]) {\r\n        _this[props.privateName] = options[props.getterName];\r\n      }\r\n    });\r\n\r\n    // Manually track progress in cases where the browser/flash player doesn't report it.\r\n    if (!_this.featuresProgressEvents) {\r\n      _this.manualProgressOn();\r\n    }\r\n\r\n    // Manually track timeupdates in cases where the browser/flash player doesn't report it.\r\n    if (!_this.featuresTimeupdateEvents) {\r\n      _this.manualTimeUpdatesOn();\r\n    }\r\n\r\n    ['Text', 'Audio', 'Video'].forEach(function (track) {\r\n      if (options['native' + track + 'Tracks'] === false) {\r\n        _this['featuresNative' + track + 'Tracks'] = false;\r\n      }\r\n    });\r\n\r\n    if (options.nativeCaptions === false || options.nativeTextTracks === false) {\r\n      _this.featuresNativeTextTracks = false;\r\n    } else if (options.nativeCaptions === true || options.nativeTextTracks === true) {\r\n      _this.featuresNativeTextTracks = true;\r\n    }\r\n\r\n    if (!_this.featuresNativeTextTracks) {\r\n      _this.emulateTextTracks();\r\n    }\r\n\r\n    _this.autoRemoteTextTracks_ = new ALL.text.ListClass();\r\n\r\n    _this.initTrackListeners();\r\n\r\n    // Turn on component tap events only if not using native controls\r\n    if (!options.nativeControlsForTouch) {\r\n      _this.emitTapEvents();\r\n    }\r\n\r\n    if (_this.constructor) {\r\n      _this.name_ = _this.constructor.name || 'Unknown Tech';\r\n    }\r\n    return _this;\r\n  }\r\n\r\n  /**\r\n   * A special function to trigger source set in a way that will allow player\r\n   * to re-trigger if the player or tech are not ready yet.\r\n   *\r\n   * @fires Tech#sourceset\r\n   * @param {string} src The source string at the time of the source changing.\r\n   */\r\n\r\n\r\n  Tech.prototype.triggerSourceset = function triggerSourceset(src) {\r\n    var _this2 = this;\r\n\r\n    if (!this.isReady_) {\r\n      // on initial ready we have to trigger source set\r\n      // 1ms after ready so that player can watch for it.\r\n      this.one('ready', function () {\r\n        return _this2.setTimeout(function () {\r\n          return _this2.triggerSourceset(src);\r\n        }, 1);\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Fired when the source is set on the tech causing the media element\r\n     * to reload.\r\n     *\r\n     * @see {@link Player#event:sourceset}\r\n     * @event Tech#sourceset\r\n     * @type {EventTarget~Event}\r\n     */\r\n    this.trigger({\r\n      src: src,\r\n      type: 'sourceset'\r\n    });\r\n  };\r\n\r\n  /* Fallbacks for unsupported event types\r\n  ================================================================================ */\r\n\r\n  /**\r\n   * Polyfill the `progress` event for browsers that don't support it natively.\r\n   *\r\n   * @see {@link Tech#trackProgress}\r\n   */\r\n\r\n\r\n  Tech.prototype.manualProgressOn = function manualProgressOn() {\r\n    this.on('durationchange', this.onDurationChange);\r\n\r\n    this.manualProgress = true;\r\n\r\n    // Trigger progress watching when a source begins loading\r\n    this.one('ready', this.trackProgress);\r\n  };\r\n\r\n  /**\r\n   * Turn off the polyfill for `progress` events that was created in\r\n   * {@link Tech#manualProgressOn}\r\n   */\r\n\r\n\r\n  Tech.prototype.manualProgressOff = function manualProgressOff() {\r\n    this.manualProgress = false;\r\n    this.stopTrackingProgress();\r\n\r\n    this.off('durationchange', this.onDurationChange);\r\n  };\r\n\r\n  /**\r\n   * This is used to trigger a `progress` event when the buffered percent changes. It\r\n   * sets an interval function that will be called every 500 milliseconds to check if the\r\n   * buffer end percent has changed.\r\n   *\r\n   * > This function is called by {@link Tech#manualProgressOn}\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        The `ready` event that caused this to run.\r\n   *\r\n   * @listens Tech#ready\r\n   * @fires Tech#progress\r\n   */\r\n\r\n\r\n  Tech.prototype.trackProgress = function trackProgress(event) {\r\n    this.stopTrackingProgress();\r\n    this.progressInterval = this.setInterval(bind(this, function () {\r\n      // Don't trigger unless buffered amount is greater than last time\r\n\r\n      var numBufferedPercent = this.bufferedPercent();\r\n\r\n      if (this.bufferedPercent_ !== numBufferedPercent) {\r\n        /**\r\n         * See {@link Player#progress}\r\n         *\r\n         * @event Tech#progress\r\n         * @type {EventTarget~Event}\r\n         */\r\n        this.trigger('progress');\r\n      }\r\n\r\n      this.bufferedPercent_ = numBufferedPercent;\r\n\r\n      if (numBufferedPercent === 1) {\r\n        this.stopTrackingProgress();\r\n      }\r\n    }), 500);\r\n  };\r\n\r\n  /**\r\n   * Update our internal duration on a `durationchange` event by calling\r\n   * {@link Tech#duration}.\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        The `durationchange` event that caused this to run.\r\n   *\r\n   * @listens Tech#durationchange\r\n   */\r\n\r\n\r\n  Tech.prototype.onDurationChange = function onDurationChange(event) {\r\n    this.duration_ = this.duration();\r\n  };\r\n\r\n  /**\r\n   * Get and create a `TimeRange` object for buffering.\r\n   *\r\n   * @return {TimeRange}\r\n   *         The time range object that was created.\r\n   */\r\n\r\n\r\n  Tech.prototype.buffered = function buffered() {\r\n    return createTimeRanges(0, 0);\r\n  };\r\n\r\n  /**\r\n   * Get the percentage of the current video that is currently buffered.\r\n   *\r\n   * @return {number}\r\n   *         A number from 0 to 1 that represents the decimal percentage of the\r\n   *         video that is buffered.\r\n   *\r\n   */\r\n\r\n\r\n  Tech.prototype.bufferedPercent = function bufferedPercent$$1() {\r\n    return bufferedPercent(this.buffered(), this.duration_);\r\n  };\r\n\r\n  /**\r\n   * Turn off the polyfill for `progress` events that was created in\r\n   * {@link Tech#manualProgressOn}\r\n   * Stop manually tracking progress events by clearing the interval that was set in\r\n   * {@link Tech#trackProgress}.\r\n   */\r\n\r\n\r\n  Tech.prototype.stopTrackingProgress = function stopTrackingProgress() {\r\n    this.clearInterval(this.progressInterval);\r\n  };\r\n\r\n  /**\r\n   * Polyfill the `timeupdate` event for browsers that don't support it.\r\n   *\r\n   * @see {@link Tech#trackCurrentTime}\r\n   */\r\n\r\n\r\n  Tech.prototype.manualTimeUpdatesOn = function manualTimeUpdatesOn() {\r\n    this.manualTimeUpdates = true;\r\n\r\n    this.on('play', this.trackCurrentTime);\r\n    this.on('pause', this.stopTrackingCurrentTime);\r\n  };\r\n\r\n  /**\r\n   * Turn off the polyfill for `timeupdate` events that was created in\r\n   * {@link Tech#manualTimeUpdatesOn}\r\n   */\r\n\r\n\r\n  Tech.prototype.manualTimeUpdatesOff = function manualTimeUpdatesOff() {\r\n    this.manualTimeUpdates = false;\r\n    this.stopTrackingCurrentTime();\r\n    this.off('play', this.trackCurrentTime);\r\n    this.off('pause', this.stopTrackingCurrentTime);\r\n  };\r\n\r\n  /**\r\n   * Sets up an interval function to track current time and trigger `timeupdate` every\r\n   * 250 milliseconds.\r\n   *\r\n   * @listens Tech#play\r\n   * @triggers Tech#timeupdate\r\n   */\r\n\r\n\r\n  Tech.prototype.trackCurrentTime = function trackCurrentTime() {\r\n    if (this.currentTimeInterval) {\r\n      this.stopTrackingCurrentTime();\r\n    }\r\n    this.currentTimeInterval = this.setInterval(function () {\r\n      /**\r\n       * Triggered at an interval of 250ms to indicated that time is passing in the video.\r\n       *\r\n       * @event Tech#timeupdate\r\n       * @type {EventTarget~Event}\r\n       */\r\n      this.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\r\n\r\n      // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\r\n    }, 250);\r\n  };\r\n\r\n  /**\r\n   * Stop the interval function created in {@link Tech#trackCurrentTime} so that the\r\n   * `timeupdate` event is no longer triggered.\r\n   *\r\n   * @listens {Tech#pause}\r\n   */\r\n\r\n\r\n  Tech.prototype.stopTrackingCurrentTime = function stopTrackingCurrentTime() {\r\n    this.clearInterval(this.currentTimeInterval);\r\n\r\n    // #1002 - if the video ends right before the next timeupdate would happen,\r\n    // the progress bar won't make it all the way to the end\r\n    this.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\r\n  };\r\n\r\n  /**\r\n   * Turn off all event polyfills, clear the `Tech`s {@link AudioTrackList},\r\n   * {@link VideoTrackList}, and {@link TextTrackList}, and dispose of this Tech.\r\n   *\r\n   * @fires Component#dispose\r\n   */\r\n\r\n\r\n  Tech.prototype.dispose = function dispose() {\r\n\r\n    // clear out all tracks because we can't reuse them between techs\r\n    this.clearTracks(NORMAL.names);\r\n\r\n    // Turn off any manual progress or timeupdate tracking\r\n    if (this.manualProgress) {\r\n      this.manualProgressOff();\r\n    }\r\n\r\n    if (this.manualTimeUpdates) {\r\n      this.manualTimeUpdatesOff();\r\n    }\r\n\r\n    _Component.prototype.dispose.call(this);\r\n  };\r\n\r\n  /**\r\n   * Clear out a single `TrackList` or an array of `TrackLists` given their names.\r\n   *\r\n   * > Note: Techs without source handlers should call this between sources for `video`\r\n   *         & `audio` tracks. You don't want to use them between tracks!\r\n   *\r\n   * @param {string[]|string} types\r\n   *        TrackList names to clear, valid names are `video`, `audio`, and\r\n   *        `text`.\r\n   */\r\n\r\n\r\n  Tech.prototype.clearTracks = function clearTracks(types) {\r\n    var _this3 = this;\r\n\r\n    types = [].concat(types);\r\n    // clear out all tracks because we can't reuse them between techs\r\n    types.forEach(function (type) {\r\n      var list = _this3[type + 'Tracks']() || [];\r\n      var i = list.length;\r\n\r\n      while (i--) {\r\n        var track = list[i];\r\n\r\n        if (type === 'text') {\r\n          _this3.removeRemoteTextTrack(track);\r\n        }\r\n        list.removeTrack(track);\r\n      }\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Remove any TextTracks added via addRemoteTextTrack that are\r\n   * flagged for automatic garbage collection\r\n   */\r\n\r\n\r\n  Tech.prototype.cleanupAutoTextTracks = function cleanupAutoTextTracks() {\r\n    var list = this.autoRemoteTextTracks_ || [];\r\n    var i = list.length;\r\n\r\n    while (i--) {\r\n      var track = list[i];\r\n\r\n      this.removeRemoteTextTrack(track);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Reset the tech, which will removes all sources and reset the internal readyState.\r\n   *\r\n   * @abstract\r\n   */\r\n\r\n\r\n  Tech.prototype.reset = function reset() {};\r\n\r\n  /**\r\n   * Get or set an error on the Tech.\r\n   *\r\n   * @param {MediaError} [err]\r\n   *        Error to set on the Tech\r\n   *\r\n   * @return {MediaError|null}\r\n   *         The current error object on the tech, or null if there isn't one.\r\n   */\r\n\r\n\r\n  Tech.prototype.error = function error(err) {\r\n    if (err !== undefined) {\r\n      this.error_ = new MediaError(err);\r\n      this.trigger('error');\r\n    }\r\n    return this.error_;\r\n  };\r\n\r\n  /**\r\n   * Returns the `TimeRange`s that have been played through for the current source.\r\n   *\r\n   * > NOTE: This implementation is incomplete. It does not track the played `TimeRange`.\r\n   *         It only checks wether the source has played at all or not.\r\n   *\r\n   * @return {TimeRange}\r\n   *         - A single time range if this video has played\r\n   *         - An empty set of ranges if not.\r\n   */\r\n\r\n\r\n  Tech.prototype.played = function played() {\r\n    if (this.hasStarted_) {\r\n      return createTimeRanges(0, 0);\r\n    }\r\n    return createTimeRanges();\r\n  };\r\n\r\n  /**\r\n   * Causes a manual time update to occur if {@link Tech#manualTimeUpdatesOn} was\r\n   * previously called.\r\n   *\r\n   * @fires Tech#timeupdate\r\n   */\r\n\r\n\r\n  Tech.prototype.setCurrentTime = function setCurrentTime() {\r\n    // improve the accuracy of manual timeupdates\r\n    if (this.manualTimeUpdates) {\r\n      /**\r\n       * A manual `timeupdate` event.\r\n       *\r\n       * @event Tech#timeupdate\r\n       * @type {EventTarget~Event}\r\n       */\r\n      this.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Turn on listeners for {@link VideoTrackList}, {@link {AudioTrackList}, and\r\n   * {@link TextTrackList} events.\r\n   *\r\n   * This adds {@link EventTarget~EventListeners} for `addtrack`, and  `removetrack`.\r\n   *\r\n   * @fires Tech#audiotrackchange\r\n   * @fires Tech#videotrackchange\r\n   * @fires Tech#texttrackchange\r\n   */\r\n\r\n\r\n  Tech.prototype.initTrackListeners = function initTrackListeners() {\r\n    var _this4 = this;\r\n\r\n    /**\r\n     * Triggered when tracks are added or removed on the Tech {@link AudioTrackList}\r\n     *\r\n     * @event Tech#audiotrackchange\r\n     * @type {EventTarget~Event}\r\n     */\r\n\r\n    /**\r\n     * Triggered when tracks are added or removed on the Tech {@link VideoTrackList}\r\n     *\r\n     * @event Tech#videotrackchange\r\n     * @type {EventTarget~Event}\r\n     */\r\n\r\n    /**\r\n     * Triggered when tracks are added or removed on the Tech {@link TextTrackList}\r\n     *\r\n     * @event Tech#texttrackchange\r\n     * @type {EventTarget~Event}\r\n     */\r\n    NORMAL.names.forEach(function (name) {\r\n      var props = NORMAL[name];\r\n      var trackListChanges = function trackListChanges() {\r\n        _this4.trigger(name + 'trackchange');\r\n      };\r\n\r\n      var tracks = _this4[props.getterName]();\r\n\r\n      tracks.addEventListener('removetrack', trackListChanges);\r\n      tracks.addEventListener('addtrack', trackListChanges);\r\n\r\n      _this4.on('dispose', function () {\r\n        tracks.removeEventListener('removetrack', trackListChanges);\r\n        tracks.removeEventListener('addtrack', trackListChanges);\r\n      });\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Emulate TextTracks using vtt.js if necessary\r\n   *\r\n   * @fires Tech#vttjsloaded\r\n   * @fires Tech#vttjserror\r\n   */\r\n\r\n\r\n  Tech.prototype.addWebVttScript_ = function addWebVttScript_() {\r\n    var _this5 = this;\r\n\r\n    if (window.WebVTT) {\r\n      return;\r\n    }\r\n\r\n    // Initially, Tech.el_ is a child of a dummy-div wait until the Component system\r\n    // signals that the Tech is ready at which point Tech.el_ is part of the DOM\r\n    // before inserting the WebVTT script\r\n    if (document.body.contains(this.el())) {\r\n\r\n      // load via require if available and vtt.js script location was not passed in\r\n      // as an option. novtt builds will turn the above require call into an empty object\r\n      // which will cause this if check to always fail.\r\n      if (!this.options_['vtt.js'] && isPlain(vtt) && Object.keys(vtt).length > 0) {\r\n        this.trigger('vttjsloaded');\r\n        return;\r\n      }\r\n\r\n      // load vtt.js via the script location option or the cdn of no location was\r\n      // passed in\r\n      var script = document.createElement('script');\r\n\r\n      script.src = this.options_['vtt.js'] || 'https://vjs.zencdn.net/vttjs/0.12.4/vtt.min.js';\r\n      script.onload = function () {\r\n        /**\r\n         * Fired when vtt.js is loaded.\r\n         *\r\n         * @event Tech#vttjsloaded\r\n         * @type {EventTarget~Event}\r\n         */\r\n        _this5.trigger('vttjsloaded');\r\n      };\r\n      script.onerror = function () {\r\n        /**\r\n         * Fired when vtt.js was not loaded due to an error\r\n         *\r\n         * @event Tech#vttjsloaded\r\n         * @type {EventTarget~Event}\r\n         */\r\n        _this5.trigger('vttjserror');\r\n      };\r\n      this.on('dispose', function () {\r\n        script.onload = null;\r\n        script.onerror = null;\r\n      });\r\n      // but have not loaded yet and we set it to true before the inject so that\r\n      // we don't overwrite the injected window.WebVTT if it loads right away\r\n      window.WebVTT = true;\r\n      this.el().parentNode.appendChild(script);\r\n    } else {\r\n      this.ready(this.addWebVttScript_);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Emulate texttracks\r\n   *\r\n   */\r\n\r\n\r\n  Tech.prototype.emulateTextTracks = function emulateTextTracks() {\r\n    var _this6 = this;\r\n\r\n    var tracks = this.textTracks();\r\n    var remoteTracks = this.remoteTextTracks();\r\n    var handleAddTrack = function handleAddTrack(e) {\r\n      return tracks.addTrack(e.track);\r\n    };\r\n    var handleRemoveTrack = function handleRemoveTrack(e) {\r\n      return tracks.removeTrack(e.track);\r\n    };\r\n\r\n    remoteTracks.on('addtrack', handleAddTrack);\r\n    remoteTracks.on('removetrack', handleRemoveTrack);\r\n\r\n    this.addWebVttScript_();\r\n\r\n    var updateDisplay = function updateDisplay() {\r\n      return _this6.trigger('texttrackchange');\r\n    };\r\n\r\n    var textTracksChanges = function textTracksChanges() {\r\n      updateDisplay();\r\n\r\n      for (var i = 0; i < tracks.length; i++) {\r\n        var track = tracks[i];\r\n\r\n        track.removeEventListener('cuechange', updateDisplay);\r\n        if (track.mode === 'showing') {\r\n          track.addEventListener('cuechange', updateDisplay);\r\n        }\r\n      }\r\n    };\r\n\r\n    textTracksChanges();\r\n    tracks.addEventListener('change', textTracksChanges);\r\n    tracks.addEventListener('addtrack', textTracksChanges);\r\n    tracks.addEventListener('removetrack', textTracksChanges);\r\n\r\n    this.on('dispose', function () {\r\n      remoteTracks.off('addtrack', handleAddTrack);\r\n      remoteTracks.off('removetrack', handleRemoveTrack);\r\n      tracks.removeEventListener('change', textTracksChanges);\r\n      tracks.removeEventListener('addtrack', textTracksChanges);\r\n      tracks.removeEventListener('removetrack', textTracksChanges);\r\n\r\n      for (var i = 0; i < tracks.length; i++) {\r\n        var track = tracks[i];\r\n\r\n        track.removeEventListener('cuechange', updateDisplay);\r\n      }\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Create and returns a remote {@link TextTrack} object.\r\n   *\r\n   * @param {string} kind\r\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\r\n   *\r\n   * @param {string} [label]\r\n   *        Label to identify the text track\r\n   *\r\n   * @param {string} [language]\r\n   *        Two letter language abbreviation\r\n   *\r\n   * @return {TextTrack}\r\n   *         The TextTrack that gets created.\r\n   */\r\n\r\n\r\n  Tech.prototype.addTextTrack = function addTextTrack(kind, label, language) {\r\n    if (!kind) {\r\n      throw new Error('TextTrack kind is required but was not provided');\r\n    }\r\n\r\n    return createTrackHelper(this, kind, label, language);\r\n  };\r\n\r\n  /**\r\n   * Create an emulated TextTrack for use by addRemoteTextTrack\r\n   *\r\n   * This is intended to be overridden by classes that inherit from\r\n   * Tech in order to create native or custom TextTracks.\r\n   *\r\n   * @param {Object} options\r\n   *        The object should contain the options to initialize the TextTrack with.\r\n   *\r\n   * @param {string} [options.kind]\r\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\r\n   *\r\n   * @param {string} [options.label].\r\n   *        Label to identify the text track\r\n   *\r\n   * @param {string} [options.language]\r\n   *        Two letter language abbreviation.\r\n   *\r\n   * @return {HTMLTrackElement}\r\n   *         The track element that gets created.\r\n   */\r\n\r\n\r\n  Tech.prototype.createRemoteTextTrack = function createRemoteTextTrack(options) {\r\n    var track = mergeOptions(options, {\r\n      tech: this\r\n    });\r\n\r\n    return new REMOTE.remoteTextEl.TrackClass(track);\r\n  };\r\n\r\n  /**\r\n   * Creates a remote text track object and returns an html track element.\r\n   *\r\n   * > Note: This can be an emulated {@link HTMLTrackElement} or a native one.\r\n   *\r\n   * @param {Object} options\r\n   *        See {@link Tech#createRemoteTextTrack} for more detailed properties.\r\n   *\r\n   * @param {boolean} [manualCleanup=true]\r\n   *        - When false: the TextTrack will be automatically removed from the video\r\n   *          element whenever the source changes\r\n   *        - When True: The TextTrack will have to be cleaned up manually\r\n   *\r\n   * @return {HTMLTrackElement}\r\n   *         An Html Track Element.\r\n   *\r\n   * @deprecated The default functionality for this function will be equivalent\r\n   *             to \"manualCleanup=false\" in the future. The manualCleanup parameter will\r\n   *             also be removed.\r\n   */\r\n\r\n\r\n  Tech.prototype.addRemoteTextTrack = function addRemoteTextTrack() {\r\n    var _this7 = this;\r\n\r\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\r\n    var manualCleanup = arguments[1];\r\n\r\n    var htmlTrackElement = this.createRemoteTextTrack(options);\r\n\r\n    if (manualCleanup !== true && manualCleanup !== false) {\r\n      // deprecation warning\r\n      log.warn('Calling addRemoteTextTrack without explicitly setting the \"manualCleanup\" parameter to `true` is deprecated and default to `false` in future version of video.js');\r\n      manualCleanup = true;\r\n    }\r\n\r\n    // store HTMLTrackElement and TextTrack to remote list\r\n    this.remoteTextTrackEls().addTrackElement_(htmlTrackElement);\r\n    this.remoteTextTracks().addTrack(htmlTrackElement.track);\r\n\r\n    if (manualCleanup !== true) {\r\n      // create the TextTrackList if it doesn't exist\r\n      this.ready(function () {\r\n        return _this7.autoRemoteTextTracks_.addTrack(htmlTrackElement.track);\r\n      });\r\n    }\r\n\r\n    return htmlTrackElement;\r\n  };\r\n\r\n  /**\r\n   * Remove a remote text track from the remote `TextTrackList`.\r\n   *\r\n   * @param {TextTrack} track\r\n   *        `TextTrack` to remove from the `TextTrackList`\r\n   */\r\n\r\n\r\n  Tech.prototype.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\r\n    var trackElement = this.remoteTextTrackEls().getTrackElementByTrack_(track);\r\n\r\n    // remove HTMLTrackElement and TextTrack from remote list\r\n    this.remoteTextTrackEls().removeTrackElement_(trackElement);\r\n    this.remoteTextTracks().removeTrack(track);\r\n    this.autoRemoteTextTracks_.removeTrack(track);\r\n  };\r\n\r\n  /**\r\n   * Gets available media playback quality metrics as specified by the W3C's Media\r\n   * Playback Quality API.\r\n   *\r\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\r\n   *\r\n   * @return {Object}\r\n   *         An object with supported media playback quality metrics\r\n   *\r\n   * @abstract\r\n   */\r\n\r\n\r\n  Tech.prototype.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\r\n    return {};\r\n  };\r\n\r\n  /**\r\n   * A method to set a poster from a `Tech`.\r\n   *\r\n   * @abstract\r\n   */\r\n\r\n\r\n  Tech.prototype.setPoster = function setPoster() {};\r\n\r\n  /**\r\n   * A method to check for the presence of the 'playsinine' <video> attribute.\r\n   *\r\n   * @abstract\r\n   */\r\n\r\n\r\n  Tech.prototype.playsinline = function playsinline() {};\r\n\r\n  /**\r\n   * A method to set or unset the 'playsinine' <video> attribute.\r\n   *\r\n   * @abstract\r\n   */\r\n\r\n\r\n  Tech.prototype.setPlaysinline = function setPlaysinline() {};\r\n\r\n  /*\r\n   * Check if the tech can support the given mime-type.\r\n   *\r\n   * The base tech does not support any type, but source handlers might\r\n   * overwrite this.\r\n   *\r\n   * @param  {string} type\r\n   *         The mimetype to check for support\r\n   *\r\n   * @return {string}\r\n   *         'probably', 'maybe', or empty string\r\n   *\r\n   * @see [Spec]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canPlayType}\r\n   *\r\n   * @abstract\r\n   */\r\n\r\n\r\n  Tech.prototype.canPlayType = function canPlayType() {\r\n    return '';\r\n  };\r\n\r\n  /**\r\n   * Check if the type is supported by this tech.\r\n   *\r\n   * The base tech does not support any type, but source handlers might\r\n   * overwrite this.\r\n   *\r\n   * @param {string} type\r\n   *        The media type to check\r\n   * @return {string} Returns the native video element's response\r\n   */\r\n\r\n\r\n  Tech.canPlayType = function canPlayType() {\r\n    return '';\r\n  };\r\n\r\n  /**\r\n   * Check if the tech can support the given source\r\n   * @param {Object} srcObj\r\n   *        The source object\r\n   * @param {Object} options\r\n   *        The options passed to the tech\r\n   * @return {string} 'probably', 'maybe', or '' (empty string)\r\n   */\r\n\r\n\r\n  Tech.canPlaySource = function canPlaySource(srcObj, options) {\r\n    return Tech.canPlayType(srcObj.type);\r\n  };\r\n\r\n  /*\r\n   * Return whether the argument is a Tech or not.\r\n   * Can be passed either a Class like `Html5` or a instance like `player.tech_`\r\n   *\r\n   * @param {Object} component\r\n   *        The item to check\r\n   *\r\n   * @return {boolean}\r\n   *         Whether it is a tech or not\r\n   *         - True if it is a tech\r\n   *         - False if it is not\r\n   */\r\n\r\n\r\n  Tech.isTech = function isTech(component) {\r\n    return component.prototype instanceof Tech || component instanceof Tech || component === Tech;\r\n  };\r\n\r\n  /**\r\n   * Registers a `Tech` into a shared list for videojs.\r\n   *\r\n   * @param {string} name\r\n   *        Name of the `Tech` to register.\r\n   *\r\n   * @param {Object} tech\r\n   *        The `Tech` class to register.\r\n   */\r\n\r\n\r\n  Tech.registerTech = function registerTech(name, tech) {\r\n    if (!Tech.techs_) {\r\n      Tech.techs_ = {};\r\n    }\r\n\r\n    if (!Tech.isTech(tech)) {\r\n      throw new Error('Tech ' + name + ' must be a Tech');\r\n    }\r\n\r\n    if (!Tech.canPlayType) {\r\n      throw new Error('Techs must have a static canPlayType method on them');\r\n    }\r\n    if (!Tech.canPlaySource) {\r\n      throw new Error('Techs must have a static canPlaySource method on them');\r\n    }\r\n\r\n    name = toTitleCase(name);\r\n\r\n    Tech.techs_[name] = tech;\r\n    if (name !== 'Tech') {\r\n      // camel case the techName for use in techOrder\r\n      Tech.defaultTechOrder_.push(name);\r\n    }\r\n    return tech;\r\n  };\r\n\r\n  /**\r\n   * Get a `Tech` from the shared list by name.\r\n   *\r\n   * @param {string} name\r\n   *        `camelCase` or `TitleCase` name of the Tech to get\r\n   *\r\n   * @return {Tech|undefined}\r\n   *         The `Tech` or undefined if there was no tech with the name requsted.\r\n   */\r\n\r\n\r\n  Tech.getTech = function getTech(name) {\r\n    if (!name) {\r\n      return;\r\n    }\r\n\r\n    name = toTitleCase(name);\r\n\r\n    if (Tech.techs_ && Tech.techs_[name]) {\r\n      return Tech.techs_[name];\r\n    }\r\n\r\n    if (window && window.videojs && window.videojs[name]) {\r\n      log.warn('The ' + name + ' tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)');\r\n      return window.videojs[name];\r\n    }\r\n  };\r\n\r\n  return Tech;\r\n}(Component);\r\n\r\n/**\r\n * Get the {@link VideoTrackList}\r\n *\r\n * @returns {VideoTrackList}\r\n * @method Tech.prototype.videoTracks\r\n */\r\n\r\n/**\r\n * Get the {@link AudioTrackList}\r\n *\r\n * @returns {AudioTrackList}\r\n * @method Tech.prototype.audioTracks\r\n */\r\n\r\n/**\r\n * Get the {@link TextTrackList}\r\n *\r\n * @returns {TextTrackList}\r\n * @method Tech.prototype.textTracks\r\n */\r\n\r\n/**\r\n * Get the remote element {@link TextTrackList}\r\n *\r\n * @returns {TextTrackList}\r\n * @method Tech.prototype.remoteTextTracks\r\n */\r\n\r\n/**\r\n * Get the remote element {@link HtmlTrackElementList}\r\n *\r\n * @returns {HtmlTrackElementList}\r\n * @method Tech.prototype.remoteTextTrackEls\r\n */\r\n\r\nALL.names.forEach(function (name) {\r\n  var props = ALL[name];\r\n\r\n  Tech.prototype[props.getterName] = function () {\r\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\r\n    return this[props.privateName];\r\n  };\r\n});\r\n\r\n/**\r\n * List of associated text tracks\r\n *\r\n * @type {TextTrackList}\r\n * @private\r\n * @property Tech#textTracks_\r\n */\r\n\r\n/**\r\n * List of associated audio tracks.\r\n *\r\n * @type {AudioTrackList}\r\n * @private\r\n * @property Tech#audioTracks_\r\n */\r\n\r\n/**\r\n * List of associated video tracks.\r\n *\r\n * @type {VideoTrackList}\r\n * @private\r\n * @property Tech#videoTracks_\r\n */\r\n\r\n/**\r\n * Boolean indicating wether the `Tech` supports volume control.\r\n *\r\n * @type {boolean}\r\n * @default\r\n */\r\nTech.prototype.featuresVolumeControl = true;\r\n\r\n/**\r\n * Boolean indicating whether the `Tech` supports muting volume.\r\n *\r\n * @type {bolean}\r\n * @default\r\n */\r\nTech.prototype.featuresMuteControl = true;\r\n\r\n/**\r\n * Boolean indicating whether the `Tech` supports fullscreen resize control.\r\n * Resizing plugins using request fullscreen reloads the plugin\r\n *\r\n * @type {boolean}\r\n * @default\r\n */\r\nTech.prototype.featuresFullscreenResize = false;\r\n\r\n/**\r\n * Boolean indicating wether the `Tech` supports changing the speed at which the video\r\n * plays. Examples:\r\n *   - Set player to play 2x (twice) as fast\r\n *   - Set player to play 0.5x (half) as fast\r\n *\r\n * @type {boolean}\r\n * @default\r\n */\r\nTech.prototype.featuresPlaybackRate = false;\r\n\r\n/**\r\n * Boolean indicating wether the `Tech` supports the `progress` event. This is currently\r\n * not triggered by video-js-swf. This will be used to determine if\r\n * {@link Tech#manualProgressOn} should be called.\r\n *\r\n * @type {boolean}\r\n * @default\r\n */\r\nTech.prototype.featuresProgressEvents = false;\r\n\r\n/**\r\n * Boolean indicating wether the `Tech` supports the `sourceset` event.\r\n *\r\n * A tech should set this to `true` and then use {@link Tech#triggerSourceset}\r\n * to trigger a {@link Tech#event:sourceset} at the earliest time after getting\r\n * a new source.\r\n *\r\n * @type {boolean}\r\n * @default\r\n */\r\nTech.prototype.featuresSourceset = false;\r\n\r\n/**\r\n * Boolean indicating wether the `Tech` supports the `timeupdate` event. This is currently\r\n * not triggered by video-js-swf. This will be used to determine if\r\n * {@link Tech#manualTimeUpdates} should be called.\r\n *\r\n * @type {boolean}\r\n * @default\r\n */\r\nTech.prototype.featuresTimeupdateEvents = false;\r\n\r\n/**\r\n * Boolean indicating wether the `Tech` supports the native `TextTrack`s.\r\n * This will help us integrate with native `TextTrack`s if the browser supports them.\r\n *\r\n * @type {boolean}\r\n * @default\r\n */\r\nTech.prototype.featuresNativeTextTracks = false;\r\n\r\n/**\r\n * A functional mixin for techs that want to use the Source Handler pattern.\r\n * Source handlers are scripts for handling specific formats.\r\n * The source handler pattern is used for adaptive formats (HLS, DASH) that\r\n * manually load video data and feed it into a Source Buffer (Media Source Extensions)\r\n * Example: `Tech.withSourceHandlers.call(MyTech);`\r\n *\r\n * @param {Tech} _Tech\r\n *        The tech to add source handler functions to.\r\n *\r\n * @mixes Tech~SourceHandlerAdditions\r\n */\r\nTech.withSourceHandlers = function (_Tech) {\r\n\r\n  /**\r\n   * Register a source handler\r\n   *\r\n   * @param {Function} handler\r\n   *        The source handler class\r\n   *\r\n   * @param {number} [index]\r\n   *        Register it at the following index\r\n   */\r\n  _Tech.registerSourceHandler = function (handler, index) {\r\n    var handlers = _Tech.sourceHandlers;\r\n\r\n    if (!handlers) {\r\n      handlers = _Tech.sourceHandlers = [];\r\n    }\r\n\r\n    if (index === undefined) {\r\n      // add to the end of the list\r\n      index = handlers.length;\r\n    }\r\n\r\n    handlers.splice(index, 0, handler);\r\n  };\r\n\r\n  /**\r\n   * Check if the tech can support the given type. Also checks the\r\n   * Techs sourceHandlers.\r\n   *\r\n   * @param {string} type\r\n   *         The mimetype to check.\r\n   *\r\n   * @return {string}\r\n   *         'probably', 'maybe', or '' (empty string)\r\n   */\r\n  _Tech.canPlayType = function (type) {\r\n    var handlers = _Tech.sourceHandlers || [];\r\n    var can = void 0;\r\n\r\n    for (var i = 0; i < handlers.length; i++) {\r\n      can = handlers[i].canPlayType(type);\r\n\r\n      if (can) {\r\n        return can;\r\n      }\r\n    }\r\n\r\n    return '';\r\n  };\r\n\r\n  /**\r\n   * Returns the first source handler that supports the source.\r\n   *\r\n   * TODO: Answer question: should 'probably' be prioritized over 'maybe'\r\n   *\r\n   * @param {Tech~SourceObject} source\r\n   *        The source object\r\n   *\r\n   * @param {Object} options\r\n   *        The options passed to the tech\r\n   *\r\n   * @return {SourceHandler|null}\r\n   *          The first source handler that supports the source or null if\r\n   *          no SourceHandler supports the source\r\n   */\r\n  _Tech.selectSourceHandler = function (source, options) {\r\n    var handlers = _Tech.sourceHandlers || [];\r\n    var can = void 0;\r\n\r\n    for (var i = 0; i < handlers.length; i++) {\r\n      can = handlers[i].canHandleSource(source, options);\r\n\r\n      if (can) {\r\n        return handlers[i];\r\n      }\r\n    }\r\n\r\n    return null;\r\n  };\r\n\r\n  /**\r\n   * Check if the tech can support the given source.\r\n   *\r\n   * @param {Tech~SourceObject} srcObj\r\n   *        The source object\r\n   *\r\n   * @param {Object} options\r\n   *        The options passed to the tech\r\n   *\r\n   * @return {string}\r\n   *         'probably', 'maybe', or '' (empty string)\r\n   */\r\n  _Tech.canPlaySource = function (srcObj, options) {\r\n    var sh = _Tech.selectSourceHandler(srcObj, options);\r\n\r\n    if (sh) {\r\n      return sh.canHandleSource(srcObj, options);\r\n    }\r\n\r\n    return '';\r\n  };\r\n\r\n  /**\r\n   * When using a source handler, prefer its implementation of\r\n   * any function normally provided by the tech.\r\n   */\r\n  var deferrable = ['seekable', 'seeking', 'duration'];\r\n\r\n  /**\r\n   * A wrapper around {@link Tech#seekable} that will call a `SourceHandler`s seekable\r\n   * function if it exists, with a fallback to the Techs seekable function.\r\n   *\r\n   * @method _Tech.seekable\r\n   */\r\n\r\n  /**\r\n   * A wrapper around {@link Tech#duration} that will call a `SourceHandler`s duration\r\n   * function if it exists, otherwise it will fallback to the techs duration function.\r\n   *\r\n   * @method _Tech.duration\r\n   */\r\n\r\n  deferrable.forEach(function (fnName) {\r\n    var originalFn = this[fnName];\r\n\r\n    if (typeof originalFn !== 'function') {\r\n      return;\r\n    }\r\n\r\n    this[fnName] = function () {\r\n      if (this.sourceHandler_ && this.sourceHandler_[fnName]) {\r\n        return this.sourceHandler_[fnName].apply(this.sourceHandler_, arguments);\r\n      }\r\n      return originalFn.apply(this, arguments);\r\n    };\r\n  }, _Tech.prototype);\r\n\r\n  /**\r\n   * Create a function for setting the source using a source object\r\n   * and source handlers.\r\n   * Should never be called unless a source handler was found.\r\n   *\r\n   * @param {Tech~SourceObject} source\r\n   *        A source object with src and type keys\r\n   */\r\n  _Tech.prototype.setSource = function (source) {\r\n    var sh = _Tech.selectSourceHandler(source, this.options_);\r\n\r\n    if (!sh) {\r\n      // Fall back to a native source hander when unsupported sources are\r\n      // deliberately set\r\n      if (_Tech.nativeSourceHandler) {\r\n        sh = _Tech.nativeSourceHandler;\r\n      } else {\r\n        log.error('No source hander found for the current source.');\r\n      }\r\n    }\r\n\r\n    // Dispose any existing source handler\r\n    this.disposeSourceHandler();\r\n    this.off('dispose', this.disposeSourceHandler);\r\n\r\n    if (sh !== _Tech.nativeSourceHandler) {\r\n      this.currentSource_ = source;\r\n    }\r\n\r\n    this.sourceHandler_ = sh.handleSource(source, this, this.options_);\r\n    this.on('dispose', this.disposeSourceHandler);\r\n  };\r\n\r\n  /**\r\n   * Clean up any existing SourceHandlers and listeners when the Tech is disposed.\r\n   *\r\n   * @listens Tech#dispose\r\n   */\r\n  _Tech.prototype.disposeSourceHandler = function () {\r\n    // if we have a source and get another one\r\n    // then we are loading something new\r\n    // than clear all of our current tracks\r\n    if (this.currentSource_) {\r\n      this.clearTracks(['audio', 'video']);\r\n      this.currentSource_ = null;\r\n    }\r\n\r\n    // always clean up auto-text tracks\r\n    this.cleanupAutoTextTracks();\r\n\r\n    if (this.sourceHandler_) {\r\n\r\n      if (this.sourceHandler_.dispose) {\r\n        this.sourceHandler_.dispose();\r\n      }\r\n\r\n      this.sourceHandler_ = null;\r\n    }\r\n  };\r\n};\r\n\r\n// The base Tech class needs to be registered as a Component. It is the only\r\n// Tech that can be registered as a Component.\r\nComponent.registerComponent('Tech', Tech);\r\nTech.registerTech('Tech', Tech);\r\n\r\n/**\r\n * A list of techs that should be added to techOrder on Players\r\n *\r\n * @private\r\n */\r\nTech.defaultTechOrder_ = [];\r\n\r\nvar middlewares = {};\r\nvar middlewareInstances = {};\r\n\r\nvar TERMINATOR = {};\r\n\r\nfunction use(type, middleware) {\r\n  middlewares[type] = middlewares[type] || [];\r\n  middlewares[type].push(middleware);\r\n}\r\n\r\n\r\n\r\nfunction setSource(player, src, next) {\r\n  player.setTimeout(function () {\r\n    return setSourceHelper(src, middlewares[src.type], next, player);\r\n  }, 1);\r\n}\r\n\r\nfunction setTech(middleware, tech) {\r\n  middleware.forEach(function (mw) {\r\n    return mw.setTech && mw.setTech(tech);\r\n  });\r\n}\r\n\r\n/**\r\n * Calls a getter on the tech first, through each middleware\r\n * from right to left to the player.\r\n */\r\nfunction get$1(middleware, tech, method) {\r\n  return middleware.reduceRight(middlewareIterator(method), tech[method]());\r\n}\r\n\r\n/**\r\n * Takes the argument given to the player and calls the setter method on each\r\n * middlware from left to right to the tech.\r\n */\r\nfunction set$1(middleware, tech, method, arg) {\r\n  return tech[method](middleware.reduce(middlewareIterator(method), arg));\r\n}\r\n\r\n/**\r\n * Takes the argument given to the player and calls the `call` version of the method\r\n * on each middleware from left to right.\r\n * Then, call the passed in method on the tech and return the result unchanged\r\n * back to the player, through middleware, this time from right to left.\r\n */\r\nfunction mediate(middleware, tech, method) {\r\n  var arg = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\r\n\r\n  var callMethod = 'call' + toTitleCase(method);\r\n  var middlewareValue = middleware.reduce(middlewareIterator(callMethod), arg);\r\n  var terminated = middlewareValue === TERMINATOR;\r\n  var returnValue = terminated ? null : tech[method](middlewareValue);\r\n\r\n  executeRight(middleware, method, returnValue, terminated);\r\n\r\n  return returnValue;\r\n}\r\n\r\nvar allowedGetters = {\r\n  buffered: 1,\r\n  currentTime: 1,\r\n  duration: 1,\r\n  seekable: 1,\r\n  played: 1,\r\n  paused: 1\r\n};\r\n\r\nvar allowedSetters = {\r\n  setCurrentTime: 1\r\n};\r\n\r\nvar allowedMediators = {\r\n  play: 1,\r\n  pause: 1\r\n};\r\n\r\nfunction middlewareIterator(method) {\r\n  return function (value, mw) {\r\n    // if the previous middleware terminated, pass along the termination\r\n    if (value === TERMINATOR) {\r\n      return TERMINATOR;\r\n    }\r\n\r\n    if (mw[method]) {\r\n      return mw[method](value);\r\n    }\r\n\r\n    return value;\r\n  };\r\n}\r\n\r\nfunction executeRight(mws, method, value, terminated) {\r\n  for (var i = mws.length - 1; i >= 0; i--) {\r\n    var mw = mws[i];\r\n\r\n    if (mw[method]) {\r\n      mw[method](terminated, value);\r\n    }\r\n  }\r\n}\r\n\r\nfunction clearCacheForPlayer(player) {\r\n  middlewareInstances[player.id()] = null;\r\n}\r\n\r\n/**\r\n * {\r\n *  [playerId]: [[mwFactory, mwInstance], ...]\r\n * }\r\n */\r\nfunction getOrCreateFactory(player, mwFactory) {\r\n  var mws = middlewareInstances[player.id()];\r\n  var mw = null;\r\n\r\n  if (mws === undefined || mws === null) {\r\n    mw = mwFactory(player);\r\n    middlewareInstances[player.id()] = [[mwFactory, mw]];\r\n    return mw;\r\n  }\r\n\r\n  for (var i = 0; i < mws.length; i++) {\r\n    var _mws$i = mws[i],\r\n        mwf = _mws$i[0],\r\n        mwi = _mws$i[1];\r\n\r\n\r\n    if (mwf !== mwFactory) {\r\n      continue;\r\n    }\r\n\r\n    mw = mwi;\r\n  }\r\n\r\n  if (mw === null) {\r\n    mw = mwFactory(player);\r\n    mws.push([mwFactory, mw]);\r\n  }\r\n\r\n  return mw;\r\n}\r\n\r\nfunction setSourceHelper() {\r\n  var src = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\r\n  var middleware = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\r\n  var next = arguments[2];\r\n  var player = arguments[3];\r\n  var acc = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [];\r\n  var lastRun = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\r\n  var mwFactory = middleware[0],\r\n      mwrest = middleware.slice(1);\r\n\r\n  // if mwFactory is a string, then we're at a fork in the road\r\n\r\n  if (typeof mwFactory === 'string') {\r\n    setSourceHelper(src, middlewares[mwFactory], next, player, acc, lastRun);\r\n\r\n    // if we have an mwFactory, call it with the player to get the mw,\r\n    // then call the mw's setSource method\r\n  } else if (mwFactory) {\r\n    var mw = getOrCreateFactory(player, mwFactory);\r\n\r\n    // if setSource isn't present, implicitly select this middleware\r\n    if (!mw.setSource) {\r\n      acc.push(mw);\r\n      return setSourceHelper(src, mwrest, next, player, acc, lastRun);\r\n    }\r\n\r\n    mw.setSource(assign({}, src), function (err, _src) {\r\n\r\n      // something happened, try the next middleware on the current level\r\n      // make sure to use the old src\r\n      if (err) {\r\n        return setSourceHelper(src, mwrest, next, player, acc, lastRun);\r\n      }\r\n\r\n      // we've succeeded, now we need to go deeper\r\n      acc.push(mw);\r\n\r\n      // if it's the same type, continue down the current chain\r\n      // otherwise, we want to go down the new chain\r\n      setSourceHelper(_src, src.type === _src.type ? mwrest : middlewares[_src.type], next, player, acc, lastRun);\r\n    });\r\n  } else if (mwrest.length) {\r\n    setSourceHelper(src, mwrest, next, player, acc, lastRun);\r\n  } else if (lastRun) {\r\n    next(src, acc);\r\n  } else {\r\n    setSourceHelper(src, middlewares['*'], next, player, acc, true);\r\n  }\r\n}\r\n\r\n/**\r\n * Mimetypes\r\n *\r\n * @see http://hul.harvard.edu/ois/////systems/wax/wax-public-help/mimetypes.htm\r\n * @typedef Mimetypes~Kind\r\n * @enum\r\n */\r\nvar MimetypesKind = {\r\n  opus: 'video/ogg',\r\n  ogv: 'video/ogg',\r\n  mp4: 'video/mp4',\r\n  mov: 'video/mp4',\r\n  m4v: 'video/mp4',\r\n  mkv: 'video/x-matroska',\r\n  mp3: 'audio/mpeg',\r\n  aac: 'audio/aac',\r\n  oga: 'audio/ogg',\r\n  m3u8: 'application/x-mpegURL'\r\n};\r\n\r\n/**\r\n * Get the mimetype of a given src url if possible\r\n *\r\n * @param {string} src\r\n *        The url to the src\r\n *\r\n * @return {string}\r\n *         return the mimetype if it was known or empty string otherwise\r\n */\r\nvar getMimetype = function getMimetype() {\r\n  var src = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\r\n\r\n  var ext = getFileExtension(src);\r\n  var mimetype = MimetypesKind[ext.toLowerCase()];\r\n\r\n  return mimetype || '';\r\n};\r\n\r\n/**\r\n * Find the mime type of a given source string if possible. Uses the player\r\n * source cache.\r\n *\r\n * @param {Player} player\r\n *        The player object\r\n *\r\n * @param {string} src\r\n *        The source string\r\n *\r\n * @return {string}\r\n *         The type that was found\r\n */\r\nvar findMimetype = function findMimetype(player, src) {\r\n  if (!src) {\r\n    return '';\r\n  }\r\n\r\n  // 1. check for the type in the `source` cache\r\n  if (player.cache_.source.src === src && player.cache_.source.type) {\r\n    return player.cache_.source.type;\r\n  }\r\n\r\n  // 2. see if we have this source in our `currentSources` cache\r\n  var matchingSources = player.cache_.sources.filter(function (s) {\r\n    return s.src === src;\r\n  });\r\n\r\n  if (matchingSources.length) {\r\n    return matchingSources[0].type;\r\n  }\r\n\r\n  // 3. look for the src url in source elements and use the type there\r\n  var sources = player.$$('source');\r\n\r\n  for (var i = 0; i < sources.length; i++) {\r\n    var s = sources[i];\r\n\r\n    if (s.type && s.src && s.src === src) {\r\n      return s.type;\r\n    }\r\n  }\r\n\r\n  // 4. finally fallback to our list of mime types based on src url extension\r\n  return getMimetype(src);\r\n};\r\n\r\n/**\r\n * @module filter-source\r\n */\r\n/**\r\n * Filter out single bad source objects or multiple source objects in an\r\n * array. Also flattens nested source object arrays into a 1 dimensional\r\n * array of source objects.\r\n *\r\n * @param {Tech~SourceObject|Tech~SourceObject[]} src\r\n *        The src object to filter\r\n *\r\n * @return {Tech~SourceObject[]}\r\n *         An array of sourceobjects containing only valid sources\r\n *\r\n * @private\r\n */\r\nvar filterSource = function filterSource(src) {\r\n  // traverse array\r\n  if (Array.isArray(src)) {\r\n    var newsrc = [];\r\n\r\n    src.forEach(function (srcobj) {\r\n      srcobj = filterSource(srcobj);\r\n\r\n      if (Array.isArray(srcobj)) {\r\n        newsrc = newsrc.concat(srcobj);\r\n      } else if (isObject(srcobj)) {\r\n        newsrc.push(srcobj);\r\n      }\r\n    });\r\n\r\n    src = newsrc;\r\n  } else if (typeof src === 'string' && src.trim()) {\r\n    // convert string into object\r\n    src = [fixSource({ src: src })];\r\n  } else if (isObject(src) && typeof src.src === 'string' && src.src && src.src.trim()) {\r\n    // src is already valid\r\n    src = [fixSource(src)];\r\n  } else {\r\n    // invalid source, turn it into an empty array\r\n    src = [];\r\n  }\r\n\r\n  return src;\r\n};\r\n\r\n/**\r\n * Checks src mimetype, adding it when possible\r\n *\r\n * @param {Tech~SourceObject} src\r\n *        The src object to check\r\n * @return {Tech~SourceObject}\r\n *        src Object with known type\r\n */\r\nfunction fixSource(src) {\r\n  var mimetype = getMimetype(src.src);\r\n\r\n  if (!src.type && mimetype) {\r\n    src.type = mimetype;\r\n  }\r\n\r\n  return src;\r\n}\r\n\r\n/**\r\n * @file loader.js\r\n */\r\n/**\r\n * The `MediaLoader` is the `Component` that decides which playback technology to load\r\n * when a player is initialized.\r\n *\r\n * @extends Component\r\n */\r\n\r\nvar MediaLoader = function (_Component) {\r\n  inherits(MediaLoader, _Component);\r\n\r\n  /**\r\n   * Create an instance of this class.\r\n   *\r\n   * @param {Player} player\r\n   *        The `Player` that this class should attach to.\r\n   *\r\n   * @param {Object} [options]\r\n   *        The key/value stroe of player options.\r\n   *\r\n   * @param {Component~ReadyCallback} [ready]\r\n   *        The function that is run when this component is ready.\r\n   */\r\n  function MediaLoader(player, options, ready) {\r\n    classCallCheck(this, MediaLoader);\r\n\r\n    // MediaLoader has no element\r\n    var options_ = mergeOptions({ createEl: false }, options);\r\n\r\n    // If there are no sources when the player is initialized,\r\n    // load the first supported playback technology.\r\n\r\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options_, ready));\r\n\r\n    if (!options.playerOptions.sources || options.playerOptions.sources.length === 0) {\r\n      for (var i = 0, j = options.playerOptions.techOrder; i < j.length; i++) {\r\n        var techName = toTitleCase(j[i]);\r\n        var tech = Tech.getTech(techName);\r\n\r\n        // Support old behavior of techs being registered as components.\r\n        // Remove once that deprecated behavior is removed.\r\n        if (!techName) {\r\n          tech = Component.getComponent(techName);\r\n        }\r\n\r\n        // Check if the browser supports this technology\r\n        if (tech && tech.isSupported()) {\r\n          player.loadTech_(techName);\r\n          break;\r\n        }\r\n      }\r\n    } else {\r\n      // Loop through playback technologies (HTML5, Flash) and check for support.\r\n      // Then load the best source.\r\n      // A few assumptions here:\r\n      //   All playback technologies respect preload false.\r\n      player.src(options.playerOptions.sources);\r\n    }\r\n    return _this;\r\n  }\r\n\r\n  return MediaLoader;\r\n}(Component);\r\n\r\nComponent.registerComponent('MediaLoader', MediaLoader);\r\n\r\n/**\r\n * @file button.js\r\n */\r\n/**\r\n * Clickable Component which is clickable or keyboard actionable,\r\n * but is not a native HTML button.\r\n *\r\n * @extends Component\r\n */\r\n\r\nvar ClickableComponent = function (_Component) {\r\n  inherits(ClickableComponent, _Component);\r\n\r\n  /**\r\n   * Creates an instance of this class.\r\n   *\r\n   * @param  {Player} player\r\n   *         The `Player` that this class should be attached to.\r\n   *\r\n   * @param  {Object} [options]\r\n   *         The key/value store of player options.\r\n   */\r\n  function ClickableComponent(player, options) {\r\n    classCallCheck(this, ClickableComponent);\r\n\r\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\r\n\r\n    _this.emitTapEvents();\r\n\r\n    _this.enable();\r\n    return _this;\r\n  }\r\n\r\n  /**\r\n   * Create the `Component`s DOM element.\r\n   *\r\n   * @param {string} [tag=div]\r\n   *        The element's node type.\r\n   *\r\n   * @param {Object} [props={}]\r\n   *        An object of properties that should be set on the element.\r\n   *\r\n   * @param {Object} [attributes={}]\r\n   *        An object of attributes that should be set on the element.\r\n   *\r\n   * @return {Element}\r\n   *         The element that gets created.\r\n   */\r\n\r\n\r\n  ClickableComponent.prototype.createEl = function createEl$$1() {\r\n    var tag = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'div';\r\n    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n    var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n\r\n    props = assign({\r\n      innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\r\n      className: this.buildCSSClass(),\r\n      tabIndex: 0\r\n    }, props);\r\n\r\n    if (tag === 'button') {\r\n      log.error('Creating a ClickableComponent with an HTML element of ' + tag + ' is not supported; use a Button instead.');\r\n    }\r\n\r\n    // Add ARIA attributes for clickable element which is not a native HTML button\r\n    attributes = assign({\r\n      role: 'button'\r\n    }, attributes);\r\n\r\n    this.tabIndex_ = props.tabIndex;\r\n\r\n    var el = _Component.prototype.createEl.call(this, tag, props, attributes);\r\n\r\n    this.createControlTextEl(el);\r\n\r\n    return el;\r\n  };\r\n\r\n  ClickableComponent.prototype.dispose = function dispose() {\r\n    // remove controlTextEl_ on dipose\r\n    this.controlTextEl_ = null;\r\n\r\n    _Component.prototype.dispose.call(this);\r\n  };\r\n\r\n  /**\r\n   * Create a control text element on this `Component`\r\n   *\r\n   * @param {Element} [el]\r\n   *        Parent element for the control text.\r\n   *\r\n   * @return {Element}\r\n   *         The control text element that gets created.\r\n   */\r\n\r\n\r\n  ClickableComponent.prototype.createControlTextEl = function createControlTextEl(el) {\r\n    this.controlTextEl_ = createEl('span', {\r\n      className: 'vjs-control-text'\r\n    }, {\r\n      // let the screen reader user know that the text of the element may change\r\n      'aria-live': 'polite'\r\n    });\r\n\r\n    if (el) {\r\n      el.appendChild(this.controlTextEl_);\r\n    }\r\n\r\n    this.controlText(this.controlText_, el);\r\n\r\n    return this.controlTextEl_;\r\n  };\r\n\r\n  /**\r\n   * Get or set the localize text to use for the controls on the `Component`.\r\n   *\r\n   * @param {string} [text]\r\n   *        Control text for element.\r\n   *\r\n   * @param {Element} [el=this.el()]\r\n   *        Element to set the title on.\r\n   *\r\n   * @return {string}\r\n   *         - The control text when getting\r\n   */\r\n\r\n\r\n  ClickableComponent.prototype.controlText = function controlText(text) {\r\n    var el = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.el();\r\n\r\n    if (text === undefined) {\r\n      return this.controlText_ || 'Need Text';\r\n    }\r\n\r\n    var localizedText = this.localize(text);\r\n\r\n    this.controlText_ = text;\r\n    textContent(this.controlTextEl_, localizedText);\r\n    if (!this.nonIconControl) {\r\n      // Set title attribute if only an icon is shown\r\n      el.setAttribute('title', localizedText);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Builds the default DOM `className`.\r\n   *\r\n   * @return {string}\r\n   *         The DOM `className` for this object.\r\n   */\r\n\r\n\r\n  ClickableComponent.prototype.buildCSSClass = function buildCSSClass() {\r\n    return 'vjs-control vjs-button ' + _Component.prototype.buildCSSClass.call(this);\r\n  };\r\n\r\n  /**\r\n   * Enable this `Component`s element.\r\n   */\r\n\r\n\r\n  ClickableComponent.prototype.enable = function enable() {\r\n    if (!this.enabled_) {\r\n      this.enabled_ = true;\r\n      this.removeClass('vjs-disabled');\r\n      this.el_.setAttribute('aria-disabled', 'false');\r\n      if (typeof this.tabIndex_ !== 'undefined') {\r\n        this.el_.setAttribute('tabIndex', this.tabIndex_);\r\n      }\r\n      this.on(['tap', 'click'], this.handleClick);\r\n      this.on('focus', this.handleFocus);\r\n      this.on('blur', this.handleBlur);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Disable this `Component`s element.\r\n   */\r\n\r\n\r\n  ClickableComponent.prototype.disable = function disable() {\r\n    this.enabled_ = false;\r\n    this.addClass('vjs-disabled');\r\n    this.el_.setAttribute('aria-disabled', 'true');\r\n    if (typeof this.tabIndex_ !== 'undefined') {\r\n      this.el_.removeAttribute('tabIndex');\r\n    }\r\n    this.off(['tap', 'click'], this.handleClick);\r\n    this.off('focus', this.handleFocus);\r\n    this.off('blur', this.handleBlur);\r\n  };\r\n\r\n  /**\r\n   * This gets called when a `ClickableComponent` gets:\r\n   * - Clicked (via the `click` event, listening starts in the constructor)\r\n   * - Tapped (via the `tap` event, listening starts in the constructor)\r\n   * - The following things happen in order:\r\n   *   1. {@link ClickableComponent#handleFocus} is called via a `focus` event on the\r\n   *      `ClickableComponent`.\r\n   *   2. {@link ClickableComponent#handleFocus} adds a listener for `keydown` on using\r\n   *      {@link ClickableComponent#handleKeyPress}.\r\n   *   3. `ClickableComponent` has not had a `blur` event (`blur` means that focus was lost). The user presses\r\n   *      the space or enter key.\r\n   *   4. {@link ClickableComponent#handleKeyPress} calls this function with the `keydown`\r\n   *      event as a parameter.\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\r\n   *        called.\r\n   *\r\n   * @listens tap\r\n   * @listens click\r\n   * @abstract\r\n   */\r\n\r\n\r\n  ClickableComponent.prototype.handleClick = function handleClick(event) {};\r\n\r\n  /**\r\n   * This gets called when a `ClickableComponent` gains focus via a `focus` event.\r\n   * Turns on listening for `keydown` events. When they happen it\r\n   * calls `this.handleKeyPress`.\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        The `focus` event that caused this function to be called.\r\n   *\r\n   * @listens focus\r\n   */\r\n\r\n\r\n  ClickableComponent.prototype.handleFocus = function handleFocus(event) {\r\n    on(document, 'keydown', bind(this, this.handleKeyPress));\r\n  };\r\n\r\n  /**\r\n   * Called when this ClickableComponent has focus and a key gets pressed down. By\r\n   * default it will call `this.handleClick` when the key is space or enter.\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        The `keydown` event that caused this function to be called.\r\n   *\r\n   * @listens keydown\r\n   */\r\n\r\n\r\n  ClickableComponent.prototype.handleKeyPress = function handleKeyPress(event) {\r\n\r\n    // Support Space (32) or Enter (13) key operation to fire a click event\r\n    if (event.which === 32 || event.which === 13) {\r\n      event.preventDefault();\r\n      this.trigger('click');\r\n    } else if (_Component.prototype.handleKeyPress) {\r\n\r\n      // Pass keypress handling up for unsupported keys\r\n      _Component.prototype.handleKeyPress.call(this, event);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Called when a `ClickableComponent` loses focus. Turns off the listener for\r\n   * `keydown` events. Which Stops `this.handleKeyPress` from getting called.\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        The `blur` event that caused this function to be called.\r\n   *\r\n   * @listens blur\r\n   */\r\n\r\n\r\n  ClickableComponent.prototype.handleBlur = function handleBlur(event) {\r\n    off(document, 'keydown', bind(this, this.handleKeyPress));\r\n  };\r\n\r\n  return ClickableComponent;\r\n}(Component);\r\n\r\nComponent.registerComponent('ClickableComponent', ClickableComponent);\r\n\r\n/**\r\n * @file poster-image.js\r\n */\r\n/**\r\n * A `ClickableComponent` that handles showing the poster image for the player.\r\n *\r\n * @extends ClickableComponent\r\n */\r\n\r\nvar PosterImage = function (_ClickableComponent) {\r\n  inherits(PosterImage, _ClickableComponent);\r\n\r\n  /**\r\n   * Create an instance of this class.\r\n   *\r\n   * @param {Player} player\r\n   *        The `Player` that this class should attach to.\r\n   *\r\n   * @param {Object} [options]\r\n   *        The key/value store of player options.\r\n   */\r\n  function PosterImage(player, options) {\r\n    classCallCheck(this, PosterImage);\r\n\r\n    var _this = possibleConstructorReturn(this, _ClickableComponent.call(this, player, options));\r\n\r\n    _this.update();\r\n    player.on('posterchange', bind(_this, _this.update));\r\n    return _this;\r\n  }\r\n\r\n  /**\r\n   * Clean up and dispose of the `PosterImage`.\r\n   */\r\n\r\n\r\n  PosterImage.prototype.dispose = function dispose() {\r\n    this.player().off('posterchange', this.update);\r\n    _ClickableComponent.prototype.dispose.call(this);\r\n  };\r\n\r\n  /**\r\n   * Create the `PosterImage`s DOM element.\r\n   *\r\n   * @return {Element}\r\n   *         The element that gets created.\r\n   */\r\n\r\n\r\n  PosterImage.prototype.createEl = function createEl$$1() {\r\n    var el = createEl('div', {\r\n      className: 'vjs-poster',\r\n\r\n      // Don't want poster to be tabbable.\r\n      tabIndex: -1\r\n    });\r\n\r\n    // To ensure the poster image resizes while maintaining its original aspect\r\n    // ratio, use a div with `background-size` when available. For browsers that\r\n    // do not support `background-size` (e.g. IE8), fall back on using a regular\r\n    // img element.\r\n    if (!BACKGROUND_SIZE_SUPPORTED) {\r\n      this.fallbackImg_ = createEl('img');\r\n      el.appendChild(this.fallbackImg_);\r\n    }\r\n\r\n    return el;\r\n  };\r\n\r\n  /**\r\n   * An {@link EventTarget~EventListener} for {@link Player#posterchange} events.\r\n   *\r\n   * @listens Player#posterchange\r\n   *\r\n   * @param {EventTarget~Event} [event]\r\n   *        The `Player#posterchange` event that triggered this function.\r\n   */\r\n\r\n\r\n  PosterImage.prototype.update = function update(event) {\r\n    var url = this.player().poster();\r\n\r\n    this.setSrc(url);\r\n\r\n    // If there's no poster source we should display:none on this component\r\n    // so it's not still clickable or right-clickable\r\n    if (url) {\r\n      this.show();\r\n    } else {\r\n      this.hide();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Set the source of the `PosterImage` depending on the display method.\r\n   *\r\n   * @param {string} url\r\n   *        The URL to the source for the `PosterImage`.\r\n   */\r\n\r\n\r\n  PosterImage.prototype.setSrc = function setSrc(url) {\r\n    if (this.fallbackImg_) {\r\n      this.fallbackImg_.src = url;\r\n    } else {\r\n      var backgroundImage = '';\r\n\r\n      // Any falsey values should stay as an empty string, otherwise\r\n      // this will throw an extra error\r\n      if (url) {\r\n        backgroundImage = 'url(\"' + url + '\")';\r\n      }\r\n\r\n      this.el_.style.backgroundImage = backgroundImage;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * An {@link EventTarget~EventListener} for clicks on the `PosterImage`. See\r\n   * {@link ClickableComponent#handleClick} for instances where this will be triggered.\r\n   *\r\n   * @listens tap\r\n   * @listens click\r\n   * @listens keydown\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   +        The `click`, `tap` or `keydown` event that caused this function to be called.\r\n   */\r\n\r\n\r\n  PosterImage.prototype.handleClick = function handleClick(event) {\r\n    // We don't want a click to trigger playback when controls are disabled\r\n    if (!this.player_.controls()) {\r\n      return;\r\n    }\r\n\r\n    if (this.player_.paused()) {\r\n      silencePromise(this.player_.play());\r\n    } else {\r\n      this.player_.pause();\r\n    }\r\n  };\r\n\r\n  return PosterImage;\r\n}(ClickableComponent);\r\n\r\nComponent.registerComponent('PosterImage', PosterImage);\r\n\r\n/**\r\n * @file text-track-display.js\r\n */\r\nvar darkGray = '#222';\r\nvar lightGray = '#ccc';\r\nvar fontMap = {\r\n  monospace: 'monospace',\r\n  sansSerif: 'sans-serif',\r\n  serif: 'serif',\r\n  monospaceSansSerif: '\"Andale Mono\", \"Lucida Console\", monospace',\r\n  monospaceSerif: '\"Courier New\", monospace',\r\n  proportionalSansSerif: 'sans-serif',\r\n  proportionalSerif: 'serif',\r\n  casual: '\"Comic Sans MS\", Impact, fantasy',\r\n  script: '\"Monotype Corsiva\", cursive',\r\n  smallcaps: '\"Andale Mono\", \"Lucida Console\", monospace, sans-serif'\r\n};\r\n\r\n/**\r\n * Construct an rgba color from a given hex color code.\r\n *\r\n * @param {number} color\r\n *        Hex number for color, like #f0e or #f604e2.\r\n *\r\n * @param {number} opacity\r\n *        Value for opacity, 0.0 - 1.0.\r\n *\r\n * @return {string}\r\n *         The rgba color that was created, like 'rgba(255, 0, 0, 0.3)'.\r\n */\r\nfunction constructColor(color, opacity) {\r\n  var hex = void 0;\r\n\r\n  if (color.length === 4) {\r\n    // color looks like \"#f0e\"\r\n    hex = color[1] + color[1] + color[2] + color[2] + color[3] + color[3];\r\n  } else if (color.length === 7) {\r\n    // color looks like \"#f604e2\"\r\n    hex = color.slice(1);\r\n  } else {\r\n    throw new Error('Invalid color code provided, ' + color + '; must be formatted as e.g. #f0e or #f604e2.');\r\n  }\r\n  return 'rgba(' + parseInt(hex.slice(0, 2), 16) + ',' + parseInt(hex.slice(2, 4), 16) + ',' + parseInt(hex.slice(4, 6), 16) + ',' + opacity + ')';\r\n}\r\n\r\n/**\r\n * Try to update the style of a DOM element. Some style changes will throw an error,\r\n * particularly in IE8. Those should be noops.\r\n *\r\n * @param {Element} el\r\n *        The DOM element to be styled.\r\n *\r\n * @param {string} style\r\n *        The CSS property on the element that should be styled.\r\n *\r\n * @param {string} rule\r\n *        The style rule that should be applied to the property.\r\n *\r\n * @private\r\n */\r\nfunction tryUpdateStyle(el, style, rule) {\r\n  try {\r\n    el.style[style] = rule;\r\n  } catch (e) {\r\n\r\n    // Satisfies linter.\r\n    return;\r\n  }\r\n}\r\n\r\n/**\r\n * The component for displaying text track cues.\r\n *\r\n * @extends Component\r\n */\r\n\r\nvar TextTrackDisplay = function (_Component) {\r\n  inherits(TextTrackDisplay, _Component);\r\n\r\n  /**\r\n   * Creates an instance of this class.\r\n   *\r\n   * @param {Player} player\r\n   *        The `Player` that this class should be attached to.\r\n   *\r\n   * @param {Object} [options]\r\n   *        The key/value store of player options.\r\n   *\r\n   * @param {Component~ReadyCallback} [ready]\r\n   *        The function to call when `TextTrackDisplay` is ready.\r\n   */\r\n  function TextTrackDisplay(player, options, ready) {\r\n    classCallCheck(this, TextTrackDisplay);\r\n\r\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options, ready));\r\n\r\n    var updateDisplayHandler = bind(_this, _this.updateDisplay);\r\n\r\n    player.on('loadstart', bind(_this, _this.toggleDisplay));\r\n    player.on('texttrackchange', updateDisplayHandler);\r\n    player.on('loadstart', bind(_this, _this.preselectTrack));\r\n\r\n    // This used to be called during player init, but was causing an error\r\n    // if a track should show by default and the display hadn't loaded yet.\r\n    // Should probably be moved to an external track loader when we support\r\n    // tracks that don't need a display.\r\n    player.ready(bind(_this, function () {\r\n      if (player.tech_ && player.tech_.featuresNativeTextTracks) {\r\n        this.hide();\r\n        return;\r\n      }\r\n\r\n      player.on('fullscreenchange', updateDisplayHandler);\r\n      player.on('playerresize', updateDisplayHandler);\r\n\r\n      if (window.addEventListener) {\r\n        window.addEventListener('orientationchange', updateDisplayHandler);\r\n      }\r\n      player.on('dispose', function () {\r\n        return window.removeEventListener('orientationchange', updateDisplayHandler);\r\n      });\r\n\r\n      var tracks = this.options_.playerOptions.tracks || [];\r\n\r\n      for (var i = 0; i < tracks.length; i++) {\r\n        this.player_.addRemoteTextTrack(tracks[i], true);\r\n      }\r\n\r\n      this.preselectTrack();\r\n    }));\r\n    return _this;\r\n  }\r\n\r\n  /**\r\n  * Preselect a track following this precedence:\r\n  * - matches the previously selected {@link TextTrack}'s language and kind\r\n  * - matches the previously selected {@link TextTrack}'s language only\r\n  * - is the first default captions track\r\n  * - is the first default descriptions track\r\n  *\r\n  * @listens Player#loadstart\r\n  */\r\n\r\n\r\n  TextTrackDisplay.prototype.preselectTrack = function preselectTrack() {\r\n    var modes = { captions: 1, subtitles: 1 };\r\n    var trackList = this.player_.textTracks();\r\n    var userPref = this.player_.cache_.selectedLanguage;\r\n    var firstDesc = void 0;\r\n    var firstCaptions = void 0;\r\n    var preferredTrack = void 0;\r\n\r\n    for (var i = 0; i < trackList.length; i++) {\r\n      var track = trackList[i];\r\n\r\n      if (userPref && userPref.enabled && userPref.language === track.language) {\r\n        // Always choose the track that matches both language and kind\r\n        if (track.kind === userPref.kind) {\r\n          preferredTrack = track;\r\n          // or choose the first track that matches language\r\n        } else if (!preferredTrack) {\r\n          preferredTrack = track;\r\n        }\r\n\r\n        // clear everything if offTextTrackMenuItem was clicked\r\n      } else if (userPref && !userPref.enabled) {\r\n        preferredTrack = null;\r\n        firstDesc = null;\r\n        firstCaptions = null;\r\n      } else if (track['default']) {\r\n        if (track.kind === 'descriptions' && !firstDesc) {\r\n          firstDesc = track;\r\n        } else if (track.kind in modes && !firstCaptions) {\r\n          firstCaptions = track;\r\n        }\r\n      }\r\n    }\r\n\r\n    // The preferredTrack matches the user preference and takes\r\n    // precendence over all the other tracks.\r\n    // So, display the preferredTrack before the first default track\r\n    // and the subtitles/captions track before the descriptions track\r\n    if (preferredTrack) {\r\n      preferredTrack.mode = 'showing';\r\n    } else if (firstCaptions) {\r\n      firstCaptions.mode = 'showing';\r\n    } else if (firstDesc) {\r\n      firstDesc.mode = 'showing';\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Turn display of {@link TextTrack}'s from the current state into the other state.\r\n   * There are only two states:\r\n   * - 'shown'\r\n   * - 'hidden'\r\n   *\r\n   * @listens Player#loadstart\r\n   */\r\n\r\n\r\n  TextTrackDisplay.prototype.toggleDisplay = function toggleDisplay() {\r\n    if (this.player_.tech_ && this.player_.tech_.featuresNativeTextTracks) {\r\n      this.hide();\r\n    } else {\r\n      this.show();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Create the {@link Component}'s DOM element.\r\n   *\r\n   * @return {Element}\r\n   *         The element that was created.\r\n   */\r\n\r\n\r\n  TextTrackDisplay.prototype.createEl = function createEl() {\r\n    return _Component.prototype.createEl.call(this, 'div', {\r\n      className: 'vjs-text-track-display'\r\n    }, {\r\n      'aria-live': 'off',\r\n      'aria-atomic': 'true'\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Clear all displayed {@link TextTrack}s.\r\n   */\r\n\r\n\r\n  TextTrackDisplay.prototype.clearDisplay = function clearDisplay() {\r\n    if (typeof window.WebVTT === 'function') {\r\n      window.WebVTT.processCues(window, [], this.el_);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Update the displayed TextTrack when a either a {@link Player#texttrackchange} or\r\n   * a {@link Player#fullscreenchange} is fired.\r\n   *\r\n   * @listens Player#texttrackchange\r\n   * @listens Player#fullscreenchange\r\n   */\r\n\r\n\r\n  TextTrackDisplay.prototype.updateDisplay = function updateDisplay() {\r\n    var tracks = this.player_.textTracks();\r\n\r\n    this.clearDisplay();\r\n\r\n    // Track display prioritization model: if multiple tracks are 'showing',\r\n    //  display the first 'subtitles' or 'captions' track which is 'showing',\r\n    //  otherwise display the first 'descriptions' track which is 'showing'\r\n\r\n    var descriptionsTrack = null;\r\n    var captionsSubtitlesTrack = null;\r\n    var i = tracks.length;\r\n\r\n    while (i--) {\r\n      var track = tracks[i];\r\n\r\n      if (track.mode === 'showing') {\r\n        if (track.kind === 'descriptions') {\r\n          descriptionsTrack = track;\r\n        } else {\r\n          captionsSubtitlesTrack = track;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (captionsSubtitlesTrack) {\r\n      if (this.getAttribute('aria-live') !== 'off') {\r\n        this.setAttribute('aria-live', 'off');\r\n      }\r\n      this.updateForTrack(captionsSubtitlesTrack);\r\n    } else if (descriptionsTrack) {\r\n      if (this.getAttribute('aria-live') !== 'assertive') {\r\n        this.setAttribute('aria-live', 'assertive');\r\n      }\r\n      this.updateForTrack(descriptionsTrack);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Add an {@link Texttrack} to to the {@link Tech}s {@link TextTrackList}.\r\n   *\r\n   * @param {TextTrack} track\r\n   *        Text track object to be added to the list.\r\n   */\r\n\r\n\r\n  TextTrackDisplay.prototype.updateForTrack = function updateForTrack(track) {\r\n    if (typeof window.WebVTT !== 'function' || !track.activeCues) {\r\n      return;\r\n    }\r\n\r\n    var cues = [];\r\n\r\n    for (var _i = 0; _i < track.activeCues.length; _i++) {\r\n      cues.push(track.activeCues[_i]);\r\n    }\r\n\r\n    window.WebVTT.processCues(window, cues, this.el_);\r\n\r\n    if (!this.player_.textTrackSettings) {\r\n      return;\r\n    }\r\n\r\n    var overrides = this.player_.textTrackSettings.getValues();\r\n\r\n    var i = cues.length;\r\n\r\n    while (i--) {\r\n      var cue = cues[i];\r\n\r\n      if (!cue) {\r\n        continue;\r\n      }\r\n\r\n      var cueDiv = cue.displayState;\r\n\r\n      if (overrides.color) {\r\n        cueDiv.firstChild.style.color = overrides.color;\r\n      }\r\n      if (overrides.textOpacity) {\r\n        tryUpdateStyle(cueDiv.firstChild, 'color', constructColor(overrides.color || '#fff', overrides.textOpacity));\r\n      }\r\n      if (overrides.backgroundColor) {\r\n        cueDiv.firstChild.style.backgroundColor = overrides.backgroundColor;\r\n      }\r\n      if (overrides.backgroundOpacity) {\r\n        tryUpdateStyle(cueDiv.firstChild, 'backgroundColor', constructColor(overrides.backgroundColor || '#000', overrides.backgroundOpacity));\r\n      }\r\n      if (overrides.windowColor) {\r\n        if (overrides.windowOpacity) {\r\n          tryUpdateStyle(cueDiv, 'backgroundColor', constructColor(overrides.windowColor, overrides.windowOpacity));\r\n        } else {\r\n          cueDiv.style.backgroundColor = overrides.windowColor;\r\n        }\r\n      }\r\n      if (overrides.edgeStyle) {\r\n        if (overrides.edgeStyle === 'dropshadow') {\r\n          cueDiv.firstChild.style.textShadow = '2px 2px 3px ' + darkGray + ', 2px 2px 4px ' + darkGray + ', 2px 2px 5px ' + darkGray;\r\n        } else if (overrides.edgeStyle === 'raised') {\r\n          cueDiv.firstChild.style.textShadow = '1px 1px ' + darkGray + ', 2px 2px ' + darkGray + ', 3px 3px ' + darkGray;\r\n        } else if (overrides.edgeStyle === 'depressed') {\r\n          cueDiv.firstChild.style.textShadow = '1px 1px ' + lightGray + ', 0 1px ' + lightGray + ', -1px -1px ' + darkGray + ', 0 -1px ' + darkGray;\r\n        } else if (overrides.edgeStyle === 'uniform') {\r\n          cueDiv.firstChild.style.textShadow = '0 0 4px ' + darkGray + ', 0 0 4px ' + darkGray + ', 0 0 4px ' + darkGray + ', 0 0 4px ' + darkGray;\r\n        }\r\n      }\r\n      if (overrides.fontPercent && overrides.fontPercent !== 1) {\r\n        var fontSize = window.parseFloat(cueDiv.style.fontSize);\r\n\r\n        cueDiv.style.fontSize = fontSize * overrides.fontPercent + 'px';\r\n        cueDiv.style.height = 'auto';\r\n        cueDiv.style.top = 'auto';\r\n        cueDiv.style.bottom = '2px';\r\n      }\r\n      if (overrides.fontFamily && overrides.fontFamily !== 'default') {\r\n        if (overrides.fontFamily === 'small-caps') {\r\n          cueDiv.firstChild.style.fontVariant = 'small-caps';\r\n        } else {\r\n          cueDiv.firstChild.style.fontFamily = fontMap[overrides.fontFamily];\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return TextTrackDisplay;\r\n}(Component);\r\n\r\nComponent.registerComponent('TextTrackDisplay', TextTrackDisplay);\r\n\r\n/**\r\n * @file loading-spinner.js\r\n */\r\n/**\r\n * A loading spinner for use during waiting/loading events.\r\n *\r\n * @extends Component\r\n */\r\n\r\nvar LoadingSpinner = function (_Component) {\r\n  inherits(LoadingSpinner, _Component);\r\n\r\n  function LoadingSpinner() {\r\n    classCallCheck(this, LoadingSpinner);\r\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\r\n  }\r\n\r\n  /**\r\n   * Create the `LoadingSpinner`s DOM element.\r\n   *\r\n   * @return {Element}\r\n   *         The dom element that gets created.\r\n   */\r\n  LoadingSpinner.prototype.createEl = function createEl$$1() {\r\n    var isAudio = this.player_.isAudio();\r\n    var playerType = this.localize(isAudio ? 'Audio Player' : 'Video Player');\r\n    var controlText = createEl('span', {\r\n      className: 'vjs-control-text',\r\n      innerHTML: this.localize('{1} is loading.', [playerType])\r\n    });\r\n\r\n    var el = _Component.prototype.createEl.call(this, 'div', {\r\n      className: 'vjs-loading-spinner',\r\n      dir: 'ltr'\r\n    });\r\n\r\n    el.appendChild(controlText);\r\n\r\n    return el;\r\n  };\r\n\r\n  return LoadingSpinner;\r\n}(Component);\r\n\r\nComponent.registerComponent('LoadingSpinner', LoadingSpinner);\r\n\r\n/**\r\n * @file button.js\r\n */\r\n/**\r\n * Base class for all buttons.\r\n *\r\n * @extends ClickableComponent\r\n */\r\n\r\nvar Button = function (_ClickableComponent) {\r\n  inherits(Button, _ClickableComponent);\r\n\r\n  function Button() {\r\n    classCallCheck(this, Button);\r\n    return possibleConstructorReturn(this, _ClickableComponent.apply(this, arguments));\r\n  }\r\n\r\n  /**\r\n   * Create the `Button`s DOM element.\r\n   *\r\n   * @param {string} [tag=\"button\"]\r\n   *        The element's node type. This argument is IGNORED: no matter what\r\n   *        is passed, it will always create a `button` element.\r\n   *\r\n   * @param {Object} [props={}]\r\n   *        An object of properties that should be set on the element.\r\n   *\r\n   * @param {Object} [attributes={}]\r\n   *        An object of attributes that should be set on the element.\r\n   *\r\n   * @return {Element}\r\n   *         The element that gets created.\r\n   */\r\n  Button.prototype.createEl = function createEl(tag) {\r\n    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n    var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n\r\n    tag = 'button';\r\n\r\n    props = assign({\r\n      innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\r\n      className: this.buildCSSClass()\r\n    }, props);\r\n\r\n    // Add attributes for button element\r\n    attributes = assign({\r\n\r\n      // Necessary since the default button type is \"submit\"\r\n      type: 'button'\r\n    }, attributes);\r\n\r\n    var el = Component.prototype.createEl.call(this, tag, props, attributes);\r\n\r\n    this.createControlTextEl(el);\r\n\r\n    return el;\r\n  };\r\n\r\n  /**\r\n   * Add a child `Component` inside of this `Button`.\r\n   *\r\n   * @param {string|Component} child\r\n   *        The name or instance of a child to add.\r\n   *\r\n   * @param {Object} [options={}]\r\n   *        The key/value store of options that will get passed to children of\r\n   *        the child.\r\n   *\r\n   * @return {Component}\r\n   *         The `Component` that gets added as a child. When using a string the\r\n   *         `Component` will get created by this process.\r\n   *\r\n   * @deprecated since version 5\r\n   */\r\n\r\n\r\n  Button.prototype.addChild = function addChild(child) {\r\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n\r\n    var className = this.constructor.name;\r\n\r\n    log.warn('Adding an actionable (user controllable) child to a Button (' + className + ') is not supported; use a ClickableComponent instead.');\r\n\r\n    // Avoid the error message generated by ClickableComponent's addChild method\r\n    return Component.prototype.addChild.call(this, child, options);\r\n  };\r\n\r\n  /**\r\n   * Enable the `Button` element so that it can be activated or clicked. Use this with\r\n   * {@link Button#disable}.\r\n   */\r\n\r\n\r\n  Button.prototype.enable = function enable() {\r\n    _ClickableComponent.prototype.enable.call(this);\r\n    this.el_.removeAttribute('disabled');\r\n  };\r\n\r\n  /**\r\n   * Disable the `Button` element so that it cannot be activated or clicked. Use this with\r\n   * {@link Button#enable}.\r\n   */\r\n\r\n\r\n  Button.prototype.disable = function disable() {\r\n    _ClickableComponent.prototype.disable.call(this);\r\n    this.el_.setAttribute('disabled', 'disabled');\r\n  };\r\n\r\n  /**\r\n   * This gets called when a `Button` has focus and `keydown` is triggered via a key\r\n   * press.\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        The event that caused this function to get called.\r\n   *\r\n   * @listens keydown\r\n   */\r\n\r\n\r\n  Button.prototype.handleKeyPress = function handleKeyPress(event) {\r\n\r\n    // Ignore Space (32) or Enter (13) key operation, which is handled by the browser for a button.\r\n    if (event.which === 32 || event.which === 13) {\r\n      return;\r\n    }\r\n\r\n    // Pass keypress handling up for unsupported keys\r\n    _ClickableComponent.prototype.handleKeyPress.call(this, event);\r\n  };\r\n\r\n  return Button;\r\n}(ClickableComponent);\r\n\r\nComponent.registerComponent('Button', Button);\r\n\r\n/**\r\n * @file big-play-button.js\r\n */\r\n/**\r\n * The initial play button that shows before the video has played. The hiding of the\r\n * `BigPlayButton` get done via CSS and `Player` states.\r\n *\r\n * @extends Button\r\n */\r\n\r\nvar BigPlayButton = function (_Button) {\r\n  inherits(BigPlayButton, _Button);\r\n\r\n  function BigPlayButton(player, options) {\r\n    classCallCheck(this, BigPlayButton);\r\n\r\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\r\n\r\n    _this.mouseused_ = false;\r\n\r\n    _this.on('mousedown', _this.handleMouseDown);\r\n    return _this;\r\n  }\r\n\r\n  /**\r\n   * Builds the default DOM `className`.\r\n   *\r\n   * @return {string}\r\n   *         The DOM `className` for this object. Always returns 'vjs-big-play-button'.\r\n   */\r\n\r\n\r\n  BigPlayButton.prototype.buildCSSClass = function buildCSSClass() {\r\n    return 'vjs-big-play-button';\r\n  };\r\n\r\n  /**\r\n   * This gets called when a `BigPlayButton` \"clicked\". See {@link ClickableComponent}\r\n   * for more detailed information on what a click can be.\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\r\n   *        called.\r\n   *\r\n   * @listens tap\r\n   * @listens click\r\n   */\r\n\r\n\r\n  BigPlayButton.prototype.handleClick = function handleClick(event) {\r\n    var playPromise = this.player_.play();\r\n\r\n    // exit early if clicked via the mouse\r\n    if (this.mouseused_ && event.clientX && event.clientY) {\r\n      silencePromise(playPromise);\r\n      return;\r\n    }\r\n\r\n    var cb = this.player_.getChild('controlBar');\r\n    var playToggle = cb && cb.getChild('playToggle');\r\n\r\n    if (!playToggle) {\r\n      this.player_.focus();\r\n      return;\r\n    }\r\n\r\n    var playFocus = function playFocus() {\r\n      return playToggle.focus();\r\n    };\r\n\r\n    if (isPromise(playPromise)) {\r\n      playPromise.then(playFocus, function () {});\r\n    } else {\r\n      this.setTimeout(playFocus, 1);\r\n    }\r\n  };\r\n\r\n  BigPlayButton.prototype.handleKeyPress = function handleKeyPress(event) {\r\n    this.mouseused_ = false;\r\n\r\n    _Button.prototype.handleKeyPress.call(this, event);\r\n  };\r\n\r\n  BigPlayButton.prototype.handleMouseDown = function handleMouseDown(event) {\r\n    this.mouseused_ = true;\r\n  };\r\n\r\n  return BigPlayButton;\r\n}(Button);\r\n\r\n/**\r\n * The text that should display over the `BigPlayButton`s controls. Added to for localization.\r\n *\r\n * @type {string}\r\n * @private\r\n */\r\n\r\n\r\nBigPlayButton.prototype.controlText_ = 'Play Video';\r\n\r\nComponent.registerComponent('BigPlayButton', BigPlayButton);\r\n\r\n/**\r\n * @file close-button.js\r\n */\r\n/**\r\n * The `CloseButton` is a `{@link Button}` that fires a `close` event when\r\n * it gets clicked.\r\n *\r\n * @extends Button\r\n */\r\n\r\nvar CloseButton = function (_Button) {\r\n  inherits(CloseButton, _Button);\r\n\r\n  /**\r\n   * Creates an instance of the this class.\r\n   *\r\n   * @param  {Player} player\r\n   *         The `Player` that this class should be attached to.\r\n   *\r\n   * @param  {Object} [options]\r\n   *         The key/value store of player options.\r\n   */\r\n  function CloseButton(player, options) {\r\n    classCallCheck(this, CloseButton);\r\n\r\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\r\n\r\n    _this.controlText(options && options.controlText || _this.localize('Close'));\r\n    return _this;\r\n  }\r\n\r\n  /**\r\n   * Builds the default DOM `className`.\r\n   *\r\n   * @return {string}\r\n   *         The DOM `className` for this object.\r\n   */\r\n\r\n\r\n  CloseButton.prototype.buildCSSClass = function buildCSSClass() {\r\n    return 'vjs-close-button ' + _Button.prototype.buildCSSClass.call(this);\r\n  };\r\n\r\n  /**\r\n   * This gets called when a `CloseButton` gets clicked. See\r\n   * {@link ClickableComponent#handleClick} for more information on when this will be\r\n   * triggered\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\r\n   *        called.\r\n   *\r\n   * @listens tap\r\n   * @listens click\r\n   * @fires CloseButton#close\r\n   */\r\n\r\n\r\n  CloseButton.prototype.handleClick = function handleClick(event) {\r\n\r\n    /**\r\n     * Triggered when the a `CloseButton` is clicked.\r\n     *\r\n     * @event CloseButton#close\r\n     * @type {EventTarget~Event}\r\n     *\r\n     * @property {boolean} [bubbles=false]\r\n     *           set to false so that the close event does not\r\n     *           bubble up to parents if there is no listener\r\n     */\r\n    this.trigger({ type: 'close', bubbles: false });\r\n  };\r\n\r\n  return CloseButton;\r\n}(Button);\r\n\r\nComponent.registerComponent('CloseButton', CloseButton);\r\n\r\n/**\r\n * @file play-toggle.js\r\n */\r\n/**\r\n * Button to toggle between play and pause.\r\n *\r\n * @extends Button\r\n */\r\n\r\nvar PlayToggle = function (_Button) {\r\n  inherits(PlayToggle, _Button);\r\n\r\n  /**\r\n   * Creates an instance of this class.\r\n   *\r\n   * @param {Player} player\r\n   *        The `Player` that this class should be attached to.\r\n   *\r\n   * @param {Object} [options]\r\n   *        The key/value store of player options.\r\n   */\r\n  function PlayToggle(player, options) {\r\n    classCallCheck(this, PlayToggle);\r\n\r\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\r\n\r\n    _this.on(player, 'play', _this.handlePlay);\r\n    _this.on(player, 'pause', _this.handlePause);\r\n    _this.on(player, 'ended', _this.handleEnded);\r\n    return _this;\r\n  }\r\n\r\n  /**\r\n   * Builds the default DOM `className`.\r\n   *\r\n   * @return {string}\r\n   *         The DOM `className` for this object.\r\n   */\r\n\r\n\r\n  PlayToggle.prototype.buildCSSClass = function buildCSSClass() {\r\n    return 'vjs-play-control ' + _Button.prototype.buildCSSClass.call(this);\r\n  };\r\n\r\n  /**\r\n   * This gets called when an `PlayToggle` is \"clicked\". See\r\n   * {@link ClickableComponent} for more detailed information on what a click can be.\r\n   *\r\n   * @param {EventTarget~Event} [event]\r\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\r\n   *        called.\r\n   *\r\n   * @listens tap\r\n   * @listens click\r\n   */\r\n\r\n\r\n  PlayToggle.prototype.handleClick = function handleClick(event) {\r\n    if (this.player_.paused()) {\r\n      this.player_.play();\r\n    } else {\r\n      this.player_.pause();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * This gets called once after the video has ended and the user seeks so that\r\n   * we can change the replay button back to a play button.\r\n   *\r\n   * @param {EventTarget~Event} [event]\r\n   *        The event that caused this function to run.\r\n   *\r\n   * @listens Player#seeked\r\n   */\r\n\r\n\r\n  PlayToggle.prototype.handleSeeked = function handleSeeked(event) {\r\n    this.removeClass('vjs-ended');\r\n\r\n    if (this.player_.paused()) {\r\n      this.handlePause(event);\r\n    } else {\r\n      this.handlePlay(event);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Add the vjs-playing class to the element so it can change appearance.\r\n   *\r\n   * @param {EventTarget~Event} [event]\r\n   *        The event that caused this function to run.\r\n   *\r\n   * @listens Player#play\r\n   */\r\n\r\n\r\n  PlayToggle.prototype.handlePlay = function handlePlay(event) {\r\n    this.removeClass('vjs-ended');\r\n    this.removeClass('vjs-paused');\r\n    this.addClass('vjs-playing');\r\n    // change the button text to \"Pause\"\r\n    this.controlText('Pause');\r\n  };\r\n\r\n  /**\r\n   * Add the vjs-paused class to the element so it can change appearance.\r\n   *\r\n   * @param {EventTarget~Event} [event]\r\n   *        The event that caused this function to run.\r\n   *\r\n   * @listens Player#pause\r\n   */\r\n\r\n\r\n  PlayToggle.prototype.handlePause = function handlePause(event) {\r\n    this.removeClass('vjs-playing');\r\n    this.addClass('vjs-paused');\r\n    // change the button text to \"Play\"\r\n    this.controlText('Play');\r\n  };\r\n\r\n  /**\r\n   * Add the vjs-ended class to the element so it can change appearance\r\n   *\r\n   * @param {EventTarget~Event} [event]\r\n   *        The event that caused this function to run.\r\n   *\r\n   * @listens Player#ended\r\n   */\r\n\r\n\r\n  PlayToggle.prototype.handleEnded = function handleEnded(event) {\r\n    this.removeClass('vjs-playing');\r\n    this.addClass('vjs-ended');\r\n    // change the button text to \"Replay\"\r\n    this.controlText('Replay');\r\n\r\n    // on the next seek remove the replay button\r\n    this.one(this.player_, 'seeked', this.handleSeeked);\r\n  };\r\n\r\n  return PlayToggle;\r\n}(Button);\r\n\r\n/**\r\n * The text that should display over the `PlayToggle`s controls. Added for localization.\r\n *\r\n * @type {string}\r\n * @private\r\n */\r\n\r\n\r\nPlayToggle.prototype.controlText_ = 'Play';\r\n\r\nComponent.registerComponent('PlayToggle', PlayToggle);\r\n\r\n/**\r\n * @file format-time.js\r\n * @module format-time\r\n */\r\n\r\n/**\r\n* Format seconds as a time string, H:MM:SS or M:SS. Supplying a guide (in seconds)\r\n* will force a number of leading zeros to cover the length of the guide.\r\n*\r\n* @param {number} seconds\r\n*        Number of seconds to be turned into a string\r\n*\r\n* @param {number} guide\r\n*        Number (in seconds) to model the string after\r\n*\r\n* @return {string}\r\n*         Time formatted as H:MM:SS or M:SS\r\n*/\r\nvar defaultImplementation = function defaultImplementation(seconds, guide) {\r\n  seconds = seconds < 0 ? 0 : seconds;\r\n  var s = Math.floor(seconds % 60);\r\n  var m = Math.floor(seconds / 60 % 60);\r\n  var h = Math.floor(seconds / 3600);\r\n  var gm = Math.floor(guide / 60 % 60);\r\n  var gh = Math.floor(guide / 3600);\r\n\r\n  // handle invalid times\r\n  if (isNaN(seconds) || seconds === Infinity) {\r\n    // '-' is false for all relational operators (e.g. <, >=) so this setting\r\n    // will add the minimum number of fields specified by the guide\r\n    h = m = s = '-';\r\n  }\r\n\r\n  // Check if we need to show hours\r\n  h = h > 0 || gh > 0 ? h + ':' : '';\r\n\r\n  // If hours are showing, we may need to add a leading zero.\r\n  // Always show at least one digit of minutes.\r\n  m = ((h || gm >= 10) && m < 10 ? '0' + m : m) + ':';\r\n\r\n  // Check if leading zero is need for seconds\r\n  s = s < 10 ? '0' + s : s;\r\n\r\n  return h + m + s;\r\n};\r\n\r\nvar implementation = defaultImplementation;\r\n\r\n/**\r\n * Replaces the default formatTime implementation with a custom implementation.\r\n *\r\n * @param {Function} customImplementation\r\n *        A function which will be used in place of the default formatTime implementation.\r\n *        Will receive the current time in seconds and the guide (in seconds) as arguments.\r\n */\r\nfunction setFormatTime(customImplementation) {\r\n  implementation = customImplementation;\r\n}\r\n\r\n/**\r\n * Resets formatTime to the default implementation.\r\n */\r\nfunction resetFormatTime() {\r\n  implementation = defaultImplementation;\r\n}\r\n\r\nvar formatTime = function (seconds) {\r\n  var guide = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : seconds;\r\n\r\n  return implementation(seconds, guide);\r\n};\r\n\r\n/**\r\n * @file time-display.js\r\n */\r\n/**\r\n * Displays the time left in the video\r\n *\r\n * @extends Component\r\n */\r\n\r\nvar TimeDisplay = function (_Component) {\r\n  inherits(TimeDisplay, _Component);\r\n\r\n  /**\r\n   * Creates an instance of this class.\r\n   *\r\n   * @param {Player} player\r\n   *        The `Player` that this class should be attached to.\r\n   *\r\n   * @param {Object} [options]\r\n   *        The key/value store of player options.\r\n   */\r\n  function TimeDisplay(player, options) {\r\n    classCallCheck(this, TimeDisplay);\r\n\r\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\r\n\r\n    _this.throttledUpdateContent = throttle(bind(_this, _this.updateContent), 25);\r\n    _this.on(player, 'timeupdate', _this.throttledUpdateContent);\r\n    return _this;\r\n  }\r\n\r\n  /**\r\n   * Create the `Component`'s DOM element\r\n   *\r\n   * @return {Element}\r\n   *         The element that was created.\r\n   */\r\n\r\n\r\n  TimeDisplay.prototype.createEl = function createEl$$1(plainName) {\r\n    var className = this.buildCSSClass();\r\n    var el = _Component.prototype.createEl.call(this, 'div', {\r\n      className: className + ' vjs-time-control vjs-control',\r\n      innerHTML: '<span class=\"vjs-control-text\">' + this.localize(this.labelText_) + '\\xA0</span>'\r\n    });\r\n\r\n    this.contentEl_ = createEl('span', {\r\n      className: className + '-display'\r\n    }, {\r\n      // tell screen readers not to automatically read the time as it changes\r\n      'aria-live': 'off'\r\n    });\r\n\r\n    this.updateTextNode_();\r\n    el.appendChild(this.contentEl_);\r\n    return el;\r\n  };\r\n\r\n  TimeDisplay.prototype.dispose = function dispose() {\r\n    this.contentEl_ = null;\r\n    this.textNode_ = null;\r\n\r\n    _Component.prototype.dispose.call(this);\r\n  };\r\n\r\n  /**\r\n   * Updates the \"remaining time\" text node with new content using the\r\n   * contents of the `formattedTime_` property.\r\n   *\r\n   * @private\r\n   */\r\n\r\n\r\n  TimeDisplay.prototype.updateTextNode_ = function updateTextNode_() {\r\n    if (!this.contentEl_) {\r\n      return;\r\n    }\r\n\r\n    while (this.contentEl_.firstChild) {\r\n      this.contentEl_.removeChild(this.contentEl_.firstChild);\r\n    }\r\n\r\n    this.textNode_ = document.createTextNode(this.formattedTime_ || this.formatTime_(0));\r\n    this.contentEl_.appendChild(this.textNode_);\r\n  };\r\n\r\n  /**\r\n   * Generates a formatted time for this component to use in display.\r\n   *\r\n   * @param  {number} time\r\n   *         A numeric time, in seconds.\r\n   *\r\n   * @return {string}\r\n   *         A formatted time\r\n   *\r\n   * @private\r\n   */\r\n\r\n\r\n  TimeDisplay.prototype.formatTime_ = function formatTime_(time) {\r\n    return formatTime(time);\r\n  };\r\n\r\n  /**\r\n   * Updates the time display text node if it has what was passed in changed\r\n   * the formatted time.\r\n   *\r\n   * @param {number} time\r\n   *        The time to update to\r\n   *\r\n   * @private\r\n   */\r\n\r\n\r\n  TimeDisplay.prototype.updateFormattedTime_ = function updateFormattedTime_(time) {\r\n    var formattedTime = this.formatTime_(time);\r\n\r\n    if (formattedTime === this.formattedTime_) {\r\n      return;\r\n    }\r\n\r\n    this.formattedTime_ = formattedTime;\r\n    this.requestAnimationFrame(this.updateTextNode_);\r\n  };\r\n\r\n  /**\r\n   * To be filled out in the child class, should update the displayed time\r\n   * in accordance with the fact that the current time has changed.\r\n   *\r\n   * @param {EventTarget~Event} [event]\r\n   *        The `timeupdate`  event that caused this to run.\r\n   *\r\n   * @listens Player#timeupdate\r\n   */\r\n\r\n\r\n  TimeDisplay.prototype.updateContent = function updateContent(event) {};\r\n\r\n  return TimeDisplay;\r\n}(Component);\r\n\r\n/**\r\n * The text that is added to the `TimeDisplay` for screen reader users.\r\n *\r\n * @type {string}\r\n * @private\r\n */\r\n\r\n\r\nTimeDisplay.prototype.labelText_ = 'Time';\r\n\r\n/**\r\n * The text that should display over the `TimeDisplay`s controls. Added to for localization.\r\n *\r\n * @type {string}\r\n * @private\r\n *\r\n * @deprecated in v7; controlText_ is not used in non-active display Components\r\n */\r\nTimeDisplay.prototype.controlText_ = 'Time';\r\n\r\nComponent.registerComponent('TimeDisplay', TimeDisplay);\r\n\r\n/**\r\n * @file current-time-display.js\r\n */\r\n/**\r\n * Displays the current time\r\n *\r\n * @extends Component\r\n */\r\n\r\nvar CurrentTimeDisplay = function (_TimeDisplay) {\r\n  inherits(CurrentTimeDisplay, _TimeDisplay);\r\n\r\n  /**\r\n   * Creates an instance of this class.\r\n   *\r\n   * @param {Player} player\r\n   *        The `Player` that this class should be attached to.\r\n   *\r\n   * @param {Object} [options]\r\n   *        The key/value store of player options.\r\n   */\r\n  function CurrentTimeDisplay(player, options) {\r\n    classCallCheck(this, CurrentTimeDisplay);\r\n\r\n    var _this = possibleConstructorReturn(this, _TimeDisplay.call(this, player, options));\r\n\r\n    _this.on(player, 'ended', _this.handleEnded);\r\n    return _this;\r\n  }\r\n\r\n  /**\r\n   * Builds the default DOM `className`.\r\n   *\r\n   * @return {string}\r\n   *         The DOM `className` for this object.\r\n   */\r\n\r\n\r\n  CurrentTimeDisplay.prototype.buildCSSClass = function buildCSSClass() {\r\n    return 'vjs-current-time';\r\n  };\r\n\r\n  /**\r\n   * Update current time display\r\n   *\r\n   * @param {EventTarget~Event} [event]\r\n   *        The `timeupdate` event that caused this function to run.\r\n   *\r\n   * @listens Player#timeupdate\r\n   */\r\n\r\n\r\n  CurrentTimeDisplay.prototype.updateContent = function updateContent(event) {\r\n    // Allows for smooth scrubbing, when player can't keep up.\r\n    var time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\r\n\r\n    this.updateFormattedTime_(time);\r\n  };\r\n\r\n  /**\r\n   * When the player fires ended there should be no time left. Sadly\r\n   * this is not always the case, lets make it seem like that is the case\r\n   * for users.\r\n   *\r\n   * @param {EventTarget~Event} [event]\r\n   *        The `ended` event that caused this to run.\r\n   *\r\n   * @listens Player#ended\r\n   */\r\n\r\n\r\n  CurrentTimeDisplay.prototype.handleEnded = function handleEnded(event) {\r\n    if (!this.player_.duration()) {\r\n      return;\r\n    }\r\n    this.updateFormattedTime_(this.player_.duration());\r\n  };\r\n\r\n  return CurrentTimeDisplay;\r\n}(TimeDisplay);\r\n\r\n/**\r\n * The text that is added to the `CurrentTimeDisplay` for screen reader users.\r\n *\r\n * @type {string}\r\n * @private\r\n */\r\n\r\n\r\nCurrentTimeDisplay.prototype.labelText_ = 'Current Time';\r\n\r\n/**\r\n * The text that should display over the `CurrentTimeDisplay`s controls. Added to for localization.\r\n *\r\n * @type {string}\r\n * @private\r\n *\r\n * @deprecated in v7; controlText_ is not used in non-active display Components\r\n */\r\nCurrentTimeDisplay.prototype.controlText_ = 'Current Time';\r\n\r\nComponent.registerComponent('CurrentTimeDisplay', CurrentTimeDisplay);\r\n\r\n/**\r\n * @file duration-display.js\r\n */\r\n/**\r\n * Displays the duration\r\n *\r\n * @extends Component\r\n */\r\n\r\nvar DurationDisplay = function (_TimeDisplay) {\r\n  inherits(DurationDisplay, _TimeDisplay);\r\n\r\n  /**\r\n   * Creates an instance of this class.\r\n   *\r\n   * @param {Player} player\r\n   *        The `Player` that this class should be attached to.\r\n   *\r\n   * @param {Object} [options]\r\n   *        The key/value store of player options.\r\n   */\r\n  function DurationDisplay(player, options) {\r\n    classCallCheck(this, DurationDisplay);\r\n\r\n    // we do not want to/need to throttle duration changes,\r\n    // as they should always display the changed duration as\r\n    // it has changed\r\n    var _this = possibleConstructorReturn(this, _TimeDisplay.call(this, player, options));\r\n\r\n    _this.on(player, 'durationchange', _this.updateContent);\r\n\r\n    // Also listen for timeupdate (in the parent) and loadedmetadata because removing those\r\n    // listeners could have broken dependent applications/libraries. These\r\n    // can likely be removed for 7.0.\r\n    _this.on(player, 'loadedmetadata', _this.throttledUpdateContent);\r\n    return _this;\r\n  }\r\n\r\n  /**\r\n   * Builds the default DOM `className`.\r\n   *\r\n   * @return {string}\r\n   *         The DOM `className` for this object.\r\n   */\r\n\r\n\r\n  DurationDisplay.prototype.buildCSSClass = function buildCSSClass() {\r\n    return 'vjs-duration';\r\n  };\r\n\r\n  /**\r\n   * Update duration time display.\r\n   *\r\n   * @param {EventTarget~Event} [event]\r\n   *        The `durationchange`, `timeupdate`, or `loadedmetadata` event that caused\r\n   *        this function to be called.\r\n   *\r\n   * @listens Player#durationchange\r\n   * @listens Player#timeupdate\r\n   * @listens Player#loadedmetadata\r\n   */\r\n\r\n\r\n  DurationDisplay.prototype.updateContent = function updateContent(event) {\r\n    var duration = this.player_.duration();\r\n\r\n    if (duration && this.duration_ !== duration) {\r\n      this.duration_ = duration;\r\n      this.updateFormattedTime_(duration);\r\n    }\r\n  };\r\n\r\n  return DurationDisplay;\r\n}(TimeDisplay);\r\n\r\n/**\r\n * The text that is added to the `DurationDisplay` for screen reader users.\r\n *\r\n * @type {string}\r\n * @private\r\n */\r\n\r\n\r\nDurationDisplay.prototype.labelText_ = 'Duration';\r\n\r\n/**\r\n * The text that should display over the `DurationDisplay`s controls. Added to for localization.\r\n *\r\n * @type {string}\r\n * @private\r\n *\r\n * @deprecated in v7; controlText_ is not used in non-active display Components\r\n */\r\nDurationDisplay.prototype.controlText_ = 'Duration';\r\n\r\nComponent.registerComponent('DurationDisplay', DurationDisplay);\r\n\r\n/**\r\n * @file time-divider.js\r\n */\r\n/**\r\n * The separator between the current time and duration.\r\n * Can be hidden if it's not needed in the design.\r\n *\r\n * @extends Component\r\n */\r\n\r\nvar TimeDivider = function (_Component) {\r\n  inherits(TimeDivider, _Component);\r\n\r\n  function TimeDivider() {\r\n    classCallCheck(this, TimeDivider);\r\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\r\n  }\r\n\r\n  /**\r\n   * Create the component's DOM element\r\n   *\r\n   * @return {Element}\r\n   *         The element that was created.\r\n   */\r\n  TimeDivider.prototype.createEl = function createEl() {\r\n    return _Component.prototype.createEl.call(this, 'div', {\r\n      className: 'vjs-time-control vjs-time-divider',\r\n      innerHTML: '<div><span>/</span></div>'\r\n    });\r\n  };\r\n\r\n  return TimeDivider;\r\n}(Component);\r\n\r\nComponent.registerComponent('TimeDivider', TimeDivider);\r\n\r\n/**\r\n * @file remaining-time-display.js\r\n */\r\n/**\r\n * Displays the time left in the video\r\n *\r\n * @extends Component\r\n */\r\n\r\nvar RemainingTimeDisplay = function (_TimeDisplay) {\r\n  inherits(RemainingTimeDisplay, _TimeDisplay);\r\n\r\n  /**\r\n   * Creates an instance of this class.\r\n   *\r\n   * @param {Player} player\r\n   *        The `Player` that this class should be attached to.\r\n   *\r\n   * @param {Object} [options]\r\n   *        The key/value store of player options.\r\n   */\r\n  function RemainingTimeDisplay(player, options) {\r\n    classCallCheck(this, RemainingTimeDisplay);\r\n\r\n    var _this = possibleConstructorReturn(this, _TimeDisplay.call(this, player, options));\r\n\r\n    _this.on(player, 'durationchange', _this.throttledUpdateContent);\r\n    _this.on(player, 'ended', _this.handleEnded);\r\n    return _this;\r\n  }\r\n\r\n  /**\r\n   * Builds the default DOM `className`.\r\n   *\r\n   * @return {string}\r\n   *         The DOM `className` for this object.\r\n   */\r\n\r\n\r\n  RemainingTimeDisplay.prototype.buildCSSClass = function buildCSSClass() {\r\n    return 'vjs-remaining-time';\r\n  };\r\n\r\n  /**\r\n   * The remaining time display prefixes numbers with a \"minus\" character.\r\n   *\r\n   * @param  {number} time\r\n   *         A numeric time, in seconds.\r\n   *\r\n   * @return {string}\r\n   *         A formatted time\r\n   *\r\n   * @private\r\n   */\r\n\r\n\r\n  RemainingTimeDisplay.prototype.formatTime_ = function formatTime_(time) {\r\n    // TODO: The \"-\" should be decorative, and not announced by a screen reader\r\n    return '-' + _TimeDisplay.prototype.formatTime_.call(this, time);\r\n  };\r\n\r\n  /**\r\n   * Update remaining time display.\r\n   *\r\n   * @param {EventTarget~Event} [event]\r\n   *        The `timeupdate` or `durationchange` event that caused this to run.\r\n   *\r\n   * @listens Player#timeupdate\r\n   * @listens Player#durationchange\r\n   */\r\n\r\n\r\n  RemainingTimeDisplay.prototype.updateContent = function updateContent(event) {\r\n    if (!this.player_.duration()) {\r\n      return;\r\n    }\r\n\r\n    // @deprecated We should only use remainingTimeDisplay\r\n    // as of video.js 7\r\n    if (this.player_.remainingTimeDisplay) {\r\n      this.updateFormattedTime_(this.player_.remainingTimeDisplay());\r\n    } else {\r\n      this.updateFormattedTime_(this.player_.remainingTime());\r\n    }\r\n  };\r\n\r\n  /**\r\n   * When the player fires ended there should be no time left. Sadly\r\n   * this is not always the case, lets make it seem like that is the case\r\n   * for users.\r\n   *\r\n   * @param {EventTarget~Event} [event]\r\n   *        The `ended` event that caused this to run.\r\n   *\r\n   * @listens Player#ended\r\n   */\r\n\r\n\r\n  RemainingTimeDisplay.prototype.handleEnded = function handleEnded(event) {\r\n    if (!this.player_.duration()) {\r\n      return;\r\n    }\r\n    this.updateFormattedTime_(0);\r\n  };\r\n\r\n  return RemainingTimeDisplay;\r\n}(TimeDisplay);\r\n\r\n/**\r\n * The text that is added to the `RemainingTimeDisplay` for screen reader users.\r\n *\r\n * @type {string}\r\n * @private\r\n */\r\n\r\n\r\nRemainingTimeDisplay.prototype.labelText_ = 'Remaining Time';\r\n\r\n/**\r\n * The text that should display over the `RemainingTimeDisplay`s controls. Added to for localization.\r\n *\r\n * @type {string}\r\n * @private\r\n *\r\n * @deprecated in v7; controlText_ is not used in non-active display Components\r\n */\r\nRemainingTimeDisplay.prototype.controlText_ = 'Remaining Time';\r\n\r\nComponent.registerComponent('RemainingTimeDisplay', RemainingTimeDisplay);\r\n\r\n/**\r\n * @file live-display.js\r\n */\r\n// TODO - Future make it click to snap to live\r\n\r\n/**\r\n * Displays the live indicator when duration is Infinity.\r\n *\r\n * @extends Component\r\n */\r\n\r\nvar LiveDisplay = function (_Component) {\r\n  inherits(LiveDisplay, _Component);\r\n\r\n  /**\r\n   * Creates an instance of this class.\r\n   *\r\n   * @param {Player} player\r\n   *        The `Player` that this class should be attached to.\r\n   *\r\n   * @param {Object} [options]\r\n   *        The key/value store of player options.\r\n   */\r\n  function LiveDisplay(player, options) {\r\n    classCallCheck(this, LiveDisplay);\r\n\r\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\r\n\r\n    _this.updateShowing();\r\n    _this.on(_this.player(), 'durationchange', _this.updateShowing);\r\n    return _this;\r\n  }\r\n\r\n  /**\r\n   * Create the `Component`'s DOM element\r\n   *\r\n   * @return {Element}\r\n   *         The element that was created.\r\n   */\r\n\r\n\r\n  LiveDisplay.prototype.createEl = function createEl$$1() {\r\n    var el = _Component.prototype.createEl.call(this, 'div', {\r\n      className: 'vjs-live-control vjs-control'\r\n    });\r\n\r\n    this.contentEl_ = createEl('div', {\r\n      className: 'vjs-live-display',\r\n      innerHTML: '<span class=\"vjs-control-text\">' + this.localize('Stream Type') + '\\xA0</span>' + this.localize('LIVE')\r\n    }, {\r\n      'aria-live': 'off'\r\n    });\r\n\r\n    el.appendChild(this.contentEl_);\r\n    return el;\r\n  };\r\n\r\n  LiveDisplay.prototype.dispose = function dispose() {\r\n    this.contentEl_ = null;\r\n\r\n    _Component.prototype.dispose.call(this);\r\n  };\r\n\r\n  /**\r\n   * Check the duration to see if the LiveDisplay should be showing or not. Then show/hide\r\n   * it accordingly\r\n   *\r\n   * @param {EventTarget~Event} [event]\r\n   *        The {@link Player#durationchange} event that caused this function to run.\r\n   *\r\n   * @listens Player#durationchange\r\n   */\r\n\r\n\r\n  LiveDisplay.prototype.updateShowing = function updateShowing(event) {\r\n    if (this.player().duration() === Infinity) {\r\n      this.show();\r\n    } else {\r\n      this.hide();\r\n    }\r\n  };\r\n\r\n  return LiveDisplay;\r\n}(Component);\r\n\r\nComponent.registerComponent('LiveDisplay', LiveDisplay);\r\n\r\n/**\r\n * @file slider.js\r\n */\r\n/**\r\n * The base functionality for a slider. Can be vertical or horizontal.\r\n * For instance the volume bar or the seek bar on a video is a slider.\r\n *\r\n * @extends Component\r\n */\r\n\r\nvar Slider = function (_Component) {\r\n  inherits(Slider, _Component);\r\n\r\n  /**\r\n   * Create an instance of this class\r\n   *\r\n   * @param {Player} player\r\n   *        The `Player` that this class should be attached to.\r\n   *\r\n   * @param {Object} [options]\r\n   *        The key/value store of player options.\r\n   */\r\n  function Slider(player, options) {\r\n    classCallCheck(this, Slider);\r\n\r\n    // Set property names to bar to match with the child Slider class is looking for\r\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\r\n\r\n    _this.bar = _this.getChild(_this.options_.barName);\r\n\r\n    // Set a horizontal or vertical class on the slider depending on the slider type\r\n    _this.vertical(!!_this.options_.vertical);\r\n\r\n    _this.enable();\r\n    return _this;\r\n  }\r\n\r\n  /**\r\n   * Are controls are currently enabled for this slider or not.\r\n   *\r\n   * @return {boolean}\r\n   *         true if controls are enabled, false otherwise\r\n   */\r\n\r\n\r\n  Slider.prototype.enabled = function enabled() {\r\n    return this.enabled_;\r\n  };\r\n\r\n  /**\r\n   * Enable controls for this slider if they are disabled\r\n   */\r\n\r\n\r\n  Slider.prototype.enable = function enable() {\r\n    if (this.enabled()) {\r\n      return;\r\n    }\r\n\r\n    this.on('mousedown', this.handleMouseDown);\r\n    this.on('touchstart', this.handleMouseDown);\r\n    this.on('focus', this.handleFocus);\r\n    this.on('blur', this.handleBlur);\r\n    this.on('click', this.handleClick);\r\n\r\n    this.on(this.player_, 'controlsvisible', this.update);\r\n\r\n    if (this.playerEvent) {\r\n      this.on(this.player_, this.playerEvent, this.update);\r\n    }\r\n\r\n    this.removeClass('disabled');\r\n    this.setAttribute('tabindex', 0);\r\n\r\n    this.enabled_ = true;\r\n  };\r\n\r\n  /**\r\n   * Disable controls for this slider if they are enabled\r\n   */\r\n\r\n\r\n  Slider.prototype.disable = function disable() {\r\n    if (!this.enabled()) {\r\n      return;\r\n    }\r\n    var doc = this.bar.el_.ownerDocument;\r\n\r\n    this.off('mousedown', this.handleMouseDown);\r\n    this.off('touchstart', this.handleMouseDown);\r\n    this.off('focus', this.handleFocus);\r\n    this.off('blur', this.handleBlur);\r\n    this.off('click', this.handleClick);\r\n    this.off(this.player_, 'controlsvisible', this.update);\r\n    this.off(doc, 'mousemove', this.handleMouseMove);\r\n    this.off(doc, 'mouseup', this.handleMouseUp);\r\n    this.off(doc, 'touchmove', this.handleMouseMove);\r\n    this.off(doc, 'touchend', this.handleMouseUp);\r\n    this.removeAttribute('tabindex');\r\n\r\n    this.addClass('disabled');\r\n\r\n    if (this.playerEvent) {\r\n      this.off(this.player_, this.playerEvent, this.update);\r\n    }\r\n    this.enabled_ = false;\r\n  };\r\n\r\n  /**\r\n   * Create the `Button`s DOM element.\r\n   *\r\n   * @param {string} type\r\n   *        Type of element to create.\r\n   *\r\n   * @param {Object} [props={}]\r\n   *        List of properties in Object form.\r\n   *\r\n   * @param {Object} [attributes={}]\r\n   *        list of attributes in Object form.\r\n   *\r\n   * @return {Element}\r\n   *         The element that gets created.\r\n   */\r\n\r\n\r\n  Slider.prototype.createEl = function createEl$$1(type) {\r\n    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n    var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\r\n\r\n    // Add the slider element class to all sub classes\r\n    props.className = props.className + ' vjs-slider';\r\n    props = assign({\r\n      tabIndex: 0\r\n    }, props);\r\n\r\n    attributes = assign({\r\n      'role': 'slider',\r\n      'aria-valuenow': 0,\r\n      'aria-valuemin': 0,\r\n      'aria-valuemax': 100,\r\n      'tabIndex': 0\r\n    }, attributes);\r\n\r\n    return _Component.prototype.createEl.call(this, type, props, attributes);\r\n  };\r\n\r\n  /**\r\n   * Handle `mousedown` or `touchstart` events on the `Slider`.\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        `mousedown` or `touchstart` event that triggered this function\r\n   *\r\n   * @listens mousedown\r\n   * @listens touchstart\r\n   * @fires Slider#slideractive\r\n   */\r\n\r\n\r\n  Slider.prototype.handleMouseDown = function handleMouseDown(event) {\r\n    var doc = this.bar.el_.ownerDocument;\r\n\r\n    if (event.type === 'mousedown') {\r\n      event.preventDefault();\r\n    }\r\n    // Do not call preventDefault() on touchstart in Chrome\r\n    // to avoid console warnings. Use a 'touch-action: none' style\r\n    // instead to prevent unintented scrolling.\r\n    // https://developers.google.com/web/updates/2017/01/scrolling-intervention\r\n    if (event.type === 'touchstart' && !IS_CHROME) {\r\n      event.preventDefault();\r\n    }\r\n    blockTextSelection();\r\n\r\n    this.addClass('vjs-sliding');\r\n    /**\r\n     * Triggered when the slider is in an active state\r\n     *\r\n     * @event Slider#slideractive\r\n     * @type {EventTarget~Event}\r\n     */\r\n    this.trigger('slideractive');\r\n\r\n    this.on(doc, 'mousemove', this.handleMouseMove);\r\n    this.on(doc, 'mouseup', this.handleMouseUp);\r\n    this.on(doc, 'touchmove', this.handleMouseMove);\r\n    this.on(doc, 'touchend', this.handleMouseUp);\r\n\r\n    this.handleMouseMove(event);\r\n  };\r\n\r\n  /**\r\n   * Handle the `mousemove`, `touchmove`, and `mousedown` events on this `Slider`.\r\n   * The `mousemove` and `touchmove` events will only only trigger this function during\r\n   * `mousedown` and `touchstart`. This is due to {@link Slider#handleMouseDown} and\r\n   * {@link Slider#handleMouseUp}.\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        `mousedown`, `mousemove`, `touchstart`, or `touchmove` event that triggered\r\n   *        this function\r\n   *\r\n   * @listens mousemove\r\n   * @listens touchmove\r\n   */\r\n\r\n\r\n  Slider.prototype.handleMouseMove = function handleMouseMove(event) {};\r\n\r\n  /**\r\n   * Handle `mouseup` or `touchend` events on the `Slider`.\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        `mouseup` or `touchend` event that triggered this function.\r\n   *\r\n   * @listens touchend\r\n   * @listens mouseup\r\n   * @fires Slider#sliderinactive\r\n   */\r\n\r\n\r\n  Slider.prototype.handleMouseUp = function handleMouseUp() {\r\n    var doc = this.bar.el_.ownerDocument;\r\n\r\n    unblockTextSelection();\r\n\r\n    this.removeClass('vjs-sliding');\r\n    /**\r\n     * Triggered when the slider is no longer in an active state.\r\n     *\r\n     * @event Slider#sliderinactive\r\n     * @type {EventTarget~Event}\r\n     */\r\n    this.trigger('sliderinactive');\r\n\r\n    this.off(doc, 'mousemove', this.handleMouseMove);\r\n    this.off(doc, 'mouseup', this.handleMouseUp);\r\n    this.off(doc, 'touchmove', this.handleMouseMove);\r\n    this.off(doc, 'touchend', this.handleMouseUp);\r\n\r\n    this.update();\r\n  };\r\n\r\n  /**\r\n   * Update the progress bar of the `Slider`.\r\n   *\r\n   * @returns {number}\r\n   *          The percentage of progress the progress bar represents as a\r\n   *          number from 0 to 1.\r\n   */\r\n\r\n\r\n  Slider.prototype.update = function update() {\r\n\r\n    // In VolumeBar init we have a setTimeout for update that pops and update\r\n    // to the end of the execution stack. The player is destroyed before then\r\n    // update will cause an error\r\n    if (!this.el_) {\r\n      return;\r\n    }\r\n\r\n    // If scrubbing, we could use a cached value to make the handle keep up\r\n    // with the user's mouse. On HTML5 browsers scrubbing is really smooth, but\r\n    // some flash players are slow, so we might want to utilize this later.\r\n    // var progress =  (this.player_.scrubbing()) ? this.player_.getCache().currentTime / this.player_.duration() : this.player_.currentTime() / this.player_.duration();\r\n    var progress = this.getPercent();\r\n    var bar = this.bar;\r\n\r\n    // If there's no bar...\r\n    if (!bar) {\r\n      return;\r\n    }\r\n\r\n    // Protect against no duration and other division issues\r\n    if (typeof progress !== 'number' || progress !== progress || progress < 0 || progress === Infinity) {\r\n      progress = 0;\r\n    }\r\n\r\n    // Convert to a percentage for setting\r\n    var percentage = (progress * 100).toFixed(2) + '%';\r\n    var style = bar.el().style;\r\n\r\n    // Set the new bar width or height\r\n    if (this.vertical()) {\r\n      style.height = percentage;\r\n    } else {\r\n      style.width = percentage;\r\n    }\r\n\r\n    return progress;\r\n  };\r\n\r\n  /**\r\n   * Calculate distance for slider\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        The event that caused this function to run.\r\n   *\r\n   * @return {number}\r\n   *         The current position of the Slider.\r\n   *         - postition.x for vertical `Slider`s\r\n   *         - postition.y for horizontal `Slider`s\r\n   */\r\n\r\n\r\n  Slider.prototype.calculateDistance = function calculateDistance(event) {\r\n    var position = getPointerPosition(this.el_, event);\r\n\r\n    if (this.vertical()) {\r\n      return position.y;\r\n    }\r\n    return position.x;\r\n  };\r\n\r\n  /**\r\n   * Handle a `focus` event on this `Slider`.\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        The `focus` event that caused this function to run.\r\n   *\r\n   * @listens focus\r\n   */\r\n\r\n\r\n  Slider.prototype.handleFocus = function handleFocus() {\r\n    this.on(this.bar.el_.ownerDocument, 'keydown', this.handleKeyPress);\r\n  };\r\n\r\n  /**\r\n   * Handle a `keydown` event on the `Slider`. Watches for left, rigth, up, and down\r\n   * arrow keys. This function will only be called when the slider has focus. See\r\n   * {@link Slider#handleFocus} and {@link Slider#handleBlur}.\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        the `keydown` event that caused this function to run.\r\n   *\r\n   * @listens keydown\r\n   */\r\n\r\n\r\n  Slider.prototype.handleKeyPress = function handleKeyPress(event) {\r\n    // Left and Down Arrows\r\n    if (event.which === 37 || event.which === 40) {\r\n      event.preventDefault();\r\n      this.stepBack();\r\n\r\n      // Up and Right Arrows\r\n    } else if (event.which === 38 || event.which === 39) {\r\n      event.preventDefault();\r\n      this.stepForward();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handle a `blur` event on this `Slider`.\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        The `blur` event that caused this function to run.\r\n   *\r\n   * @listens blur\r\n   */\r\n\r\n  Slider.prototype.handleBlur = function handleBlur() {\r\n    this.off(this.bar.el_.ownerDocument, 'keydown', this.handleKeyPress);\r\n  };\r\n\r\n  /**\r\n   * Listener for click events on slider, used to prevent clicks\r\n   *   from bubbling up to parent elements like button menus.\r\n   *\r\n   * @param {Object} event\r\n   *        Event that caused this object to run\r\n   */\r\n\r\n\r\n  Slider.prototype.handleClick = function handleClick(event) {\r\n    event.stopImmediatePropagation();\r\n    event.preventDefault();\r\n  };\r\n\r\n  /**\r\n   * Get/set if slider is horizontal for vertical\r\n   *\r\n   * @param {boolean} [bool]\r\n   *        - true if slider is vertical,\r\n   *        - false is horizontal\r\n   *\r\n   * @return {boolean}\r\n   *         - true if slider is vertical, and getting\r\n   *         - false if the slider is horizontal, and getting\r\n   */\r\n\r\n\r\n  Slider.prototype.vertical = function vertical(bool) {\r\n    if (bool === undefined) {\r\n      return this.vertical_ || false;\r\n    }\r\n\r\n    this.vertical_ = !!bool;\r\n\r\n    if (this.vertical_) {\r\n      this.addClass('vjs-slider-vertical');\r\n    } else {\r\n      this.addClass('vjs-slider-horizontal');\r\n    }\r\n  };\r\n\r\n  return Slider;\r\n}(Component);\r\n\r\nComponent.registerComponent('Slider', Slider);\r\n\r\n/**\r\n * @file load-progress-bar.js\r\n */\r\n/**\r\n * Shows loading progress\r\n *\r\n * @extends Component\r\n */\r\n\r\nvar LoadProgressBar = function (_Component) {\r\n  inherits(LoadProgressBar, _Component);\r\n\r\n  /**\r\n   * Creates an instance of this class.\r\n   *\r\n   * @param {Player} player\r\n   *        The `Player` that this class should be attached to.\r\n   *\r\n   * @param {Object} [options]\r\n   *        The key/value store of player options.\r\n   */\r\n  function LoadProgressBar(player, options) {\r\n    classCallCheck(this, LoadProgressBar);\r\n\r\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\r\n\r\n    _this.partEls_ = [];\r\n    _this.on(player, 'progress', _this.update);\r\n    return _this;\r\n  }\r\n\r\n  /**\r\n   * Create the `Component`'s DOM element\r\n   *\r\n   * @return {Element}\r\n   *         The element that was created.\r\n   */\r\n\r\n\r\n  LoadProgressBar.prototype.createEl = function createEl$$1() {\r\n    return _Component.prototype.createEl.call(this, 'div', {\r\n      className: 'vjs-load-progress',\r\n      innerHTML: '<span class=\"vjs-control-text\"><span>' + this.localize('Loaded') + '</span>: 0%</span>'\r\n    });\r\n  };\r\n\r\n  LoadProgressBar.prototype.dispose = function dispose() {\r\n    this.partEls_ = null;\r\n\r\n    _Component.prototype.dispose.call(this);\r\n  };\r\n\r\n  /**\r\n   * Update progress bar\r\n   *\r\n   * @param {EventTarget~Event} [event]\r\n   *        The `progress` event that caused this function to run.\r\n   *\r\n   * @listens Player#progress\r\n   */\r\n\r\n\r\n  LoadProgressBar.prototype.update = function update(event) {\r\n    var buffered = this.player_.buffered();\r\n    var duration = this.player_.duration();\r\n    var bufferedEnd = this.player_.bufferedEnd();\r\n    var children = this.partEls_;\r\n\r\n    // get the percent width of a time compared to the total end\r\n    var percentify = function percentify(time, end) {\r\n      // no NaN\r\n      var percent = time / end || 0;\r\n\r\n      return (percent >= 1 ? 1 : percent) * 100 + '%';\r\n    };\r\n\r\n    // update the width of the progress bar\r\n    this.el_.style.width = percentify(bufferedEnd, duration);\r\n\r\n    // add child elements to represent the individual buffered time ranges\r\n    for (var i = 0; i < buffered.length; i++) {\r\n      var start = buffered.start(i);\r\n      var end = buffered.end(i);\r\n      var part = children[i];\r\n\r\n      if (!part) {\r\n        part = this.el_.appendChild(createEl());\r\n        children[i] = part;\r\n      }\r\n\r\n      // set the percent based on the width of the progress bar (bufferedEnd)\r\n      part.style.left = percentify(start, bufferedEnd);\r\n      part.style.width = percentify(end - start, bufferedEnd);\r\n    }\r\n\r\n    // remove unused buffered range elements\r\n    for (var _i = children.length; _i > buffered.length; _i--) {\r\n      this.el_.removeChild(children[_i - 1]);\r\n    }\r\n    children.length = buffered.length;\r\n  };\r\n\r\n  return LoadProgressBar;\r\n}(Component);\r\n\r\nComponent.registerComponent('LoadProgressBar', LoadProgressBar);\r\n\r\n/**\r\n * @file time-tooltip.js\r\n */\r\n/**\r\n * Time tooltips display a time above the progress bar.\r\n *\r\n * @extends Component\r\n */\r\n\r\nvar TimeTooltip = function (_Component) {\r\n  inherits(TimeTooltip, _Component);\r\n\r\n  function TimeTooltip() {\r\n    classCallCheck(this, TimeTooltip);\r\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\r\n  }\r\n\r\n  /**\r\n   * Create the time tooltip DOM element\r\n   *\r\n   * @return {Element}\r\n   *         The element that was created.\r\n   */\r\n  TimeTooltip.prototype.createEl = function createEl$$1() {\r\n    return _Component.prototype.createEl.call(this, 'div', {\r\n      className: 'vjs-time-tooltip'\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Updates the position of the time tooltip relative to the `SeekBar`.\r\n   *\r\n   * @param {Object} seekBarRect\r\n   *        The `ClientRect` for the {@link SeekBar} element.\r\n   *\r\n   * @param {number} seekBarPoint\r\n   *        A number from 0 to 1, representing a horizontal reference point\r\n   *        from the left edge of the {@link SeekBar}\r\n   */\r\n\r\n\r\n  TimeTooltip.prototype.update = function update(seekBarRect, seekBarPoint, content) {\r\n    var tooltipRect = getBoundingClientRect(this.el_);\r\n    var playerRect = getBoundingClientRect(this.player_.el());\r\n    var seekBarPointPx = seekBarRect.width * seekBarPoint;\r\n\r\n    // do nothing if either rect isn't available\r\n    // for example, if the player isn't in the DOM for testing\r\n    if (!playerRect || !tooltipRect) {\r\n      return;\r\n    }\r\n\r\n    // This is the space left of the `seekBarPoint` available within the bounds\r\n    // of the player. We calculate any gap between the left edge of the player\r\n    // and the left edge of the `SeekBar` and add the number of pixels in the\r\n    // `SeekBar` before hitting the `seekBarPoint`\r\n    var spaceLeftOfPoint = seekBarRect.left - playerRect.left + seekBarPointPx;\r\n\r\n    // This is the space right of the `seekBarPoint` available within the bounds\r\n    // of the player. We calculate the number of pixels from the `seekBarPoint`\r\n    // to the right edge of the `SeekBar` and add to that any gap between the\r\n    // right edge of the `SeekBar` and the player.\r\n    var spaceRightOfPoint = seekBarRect.width - seekBarPointPx + (playerRect.right - seekBarRect.right);\r\n\r\n    // This is the number of pixels by which the tooltip will need to be pulled\r\n    // further to the right to center it over the `seekBarPoint`.\r\n    var pullTooltipBy = tooltipRect.width / 2;\r\n\r\n    // Adjust the `pullTooltipBy` distance to the left or right depending on\r\n    // the results of the space calculations above.\r\n    if (spaceLeftOfPoint < pullTooltipBy) {\r\n      pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\r\n    } else if (spaceRightOfPoint < pullTooltipBy) {\r\n      pullTooltipBy = spaceRightOfPoint;\r\n    }\r\n\r\n    // Due to the imprecision of decimal/ratio based calculations and varying\r\n    // rounding behaviors, there are cases where the spacing adjustment is off\r\n    // by a pixel or two. This adds insurance to these calculations.\r\n    if (pullTooltipBy < 0) {\r\n      pullTooltipBy = 0;\r\n    } else if (pullTooltipBy > tooltipRect.width) {\r\n      pullTooltipBy = tooltipRect.width;\r\n    }\r\n\r\n    this.el_.style.right = '-' + pullTooltipBy + 'px';\r\n    textContent(this.el_, content);\r\n  };\r\n\r\n  return TimeTooltip;\r\n}(Component);\r\n\r\nComponent.registerComponent('TimeTooltip', TimeTooltip);\r\n\r\n/**\r\n * @file play-progress-bar.js\r\n */\r\n/**\r\n * Used by {@link SeekBar} to display media playback progress as part of the\r\n * {@link ProgressControl}.\r\n *\r\n * @extends Component\r\n */\r\n\r\nvar PlayProgressBar = function (_Component) {\r\n  inherits(PlayProgressBar, _Component);\r\n\r\n  function PlayProgressBar() {\r\n    classCallCheck(this, PlayProgressBar);\r\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\r\n  }\r\n\r\n  /**\r\n   * Create the the DOM element for this class.\r\n   *\r\n   * @return {Element}\r\n   *         The element that was created.\r\n   */\r\n  PlayProgressBar.prototype.createEl = function createEl() {\r\n    return _Component.prototype.createEl.call(this, 'div', {\r\n      className: 'vjs-play-progress vjs-slider-bar',\r\n      innerHTML: '<span class=\"vjs-control-text\"><span>' + this.localize('Progress') + '</span>: 0%</span>'\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Enqueues updates to its own DOM as well as the DOM of its\r\n   * {@link TimeTooltip} child.\r\n   *\r\n   * @param {Object} seekBarRect\r\n   *        The `ClientRect` for the {@link SeekBar} element.\r\n   *\r\n   * @param {number} seekBarPoint\r\n   *        A number from 0 to 1, representing a horizontal reference point\r\n   *        from the left edge of the {@link SeekBar}\r\n   */\r\n\r\n\r\n  PlayProgressBar.prototype.update = function update(seekBarRect, seekBarPoint) {\r\n    var _this2 = this;\r\n\r\n    // If there is an existing rAF ID, cancel it so we don't over-queue.\r\n    if (this.rafId_) {\r\n      this.cancelAnimationFrame(this.rafId_);\r\n    }\r\n\r\n    this.rafId_ = this.requestAnimationFrame(function () {\r\n      var time = _this2.player_.scrubbing() ? _this2.player_.getCache().currentTime : _this2.player_.currentTime();\r\n\r\n      var content = formatTime(time, _this2.player_.duration());\r\n      var timeTooltip = _this2.getChild('timeTooltip');\r\n\r\n      if (timeTooltip) {\r\n        timeTooltip.update(seekBarRect, seekBarPoint, content);\r\n      }\r\n    });\r\n  };\r\n\r\n  return PlayProgressBar;\r\n}(Component);\r\n\r\n/**\r\n * Default options for {@link PlayProgressBar}.\r\n *\r\n * @type {Object}\r\n * @private\r\n */\r\n\r\n\r\nPlayProgressBar.prototype.options_ = {\r\n  children: []\r\n};\r\n\r\n// Time tooltips should not be added to a player on mobile devices or IE8\r\nif ((!IE_VERSION || IE_VERSION > 8) && !IS_IOS && !IS_ANDROID) {\r\n  PlayProgressBar.prototype.options_.children.push('timeTooltip');\r\n}\r\n\r\nComponent.registerComponent('PlayProgressBar', PlayProgressBar);\r\n\r\n/**\r\n * @file mouse-time-display.js\r\n */\r\n/**\r\n * The {@link MouseTimeDisplay} component tracks mouse movement over the\r\n * {@link ProgressControl}. It displays an indicator and a {@link TimeTooltip}\r\n * indicating the time which is represented by a given point in the\r\n * {@link ProgressControl}.\r\n *\r\n * @extends Component\r\n */\r\n\r\nvar MouseTimeDisplay = function (_Component) {\r\n  inherits(MouseTimeDisplay, _Component);\r\n\r\n  /**\r\n   * Creates an instance of this class.\r\n   *\r\n   * @param {Player} player\r\n   *        The {@link Player} that this class should be attached to.\r\n   *\r\n   * @param {Object} [options]\r\n   *        The key/value store of player options.\r\n   */\r\n  function MouseTimeDisplay(player, options) {\r\n    classCallCheck(this, MouseTimeDisplay);\r\n\r\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\r\n\r\n    _this.update = throttle(bind(_this, _this.update), 25);\r\n    return _this;\r\n  }\r\n\r\n  /**\r\n   * Create the DOM element for this class.\r\n   *\r\n   * @return {Element}\r\n   *         The element that was created.\r\n   */\r\n\r\n\r\n  MouseTimeDisplay.prototype.createEl = function createEl() {\r\n    return _Component.prototype.createEl.call(this, 'div', {\r\n      className: 'vjs-mouse-display'\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Enqueues updates to its own DOM as well as the DOM of its\r\n   * {@link TimeTooltip} child.\r\n   *\r\n   * @param {Object} seekBarRect\r\n   *        The `ClientRect` for the {@link SeekBar} element.\r\n   *\r\n   * @param {number} seekBarPoint\r\n   *        A number from 0 to 1, representing a horizontal reference point\r\n   *        from the left edge of the {@link SeekBar}\r\n   */\r\n\r\n\r\n  MouseTimeDisplay.prototype.update = function update(seekBarRect, seekBarPoint) {\r\n    var _this2 = this;\r\n\r\n    // If there is an existing rAF ID, cancel it so we don't over-queue.\r\n    if (this.rafId_) {\r\n      this.cancelAnimationFrame(this.rafId_);\r\n    }\r\n\r\n    this.rafId_ = this.requestAnimationFrame(function () {\r\n      var duration = _this2.player_.duration();\r\n      var content = formatTime(seekBarPoint * duration, duration);\r\n\r\n      _this2.el_.style.left = seekBarRect.width * seekBarPoint + 'px';\r\n      _this2.getChild('timeTooltip').update(seekBarRect, seekBarPoint, content);\r\n    });\r\n  };\r\n\r\n  return MouseTimeDisplay;\r\n}(Component);\r\n\r\n/**\r\n * Default options for `MouseTimeDisplay`\r\n *\r\n * @type {Object}\r\n * @private\r\n */\r\n\r\n\r\nMouseTimeDisplay.prototype.options_ = {\r\n  children: ['timeTooltip']\r\n};\r\n\r\nComponent.registerComponent('MouseTimeDisplay', MouseTimeDisplay);\r\n\r\n/**\r\n * @file seek-bar.js\r\n */\r\n// The number of seconds the `step*` functions move the timeline.\r\nvar STEP_SECONDS = 5;\r\n\r\n// The interval at which the bar should update as it progresses.\r\nvar UPDATE_REFRESH_INTERVAL = 30;\r\n\r\n/**\r\n * Seek bar and container for the progress bars. Uses {@link PlayProgressBar}\r\n * as its `bar`.\r\n *\r\n * @extends Slider\r\n */\r\n\r\nvar SeekBar = function (_Slider) {\r\n  inherits(SeekBar, _Slider);\r\n\r\n  /**\r\n   * Creates an instance of this class.\r\n   *\r\n   * @param {Player} player\r\n   *        The `Player` that this class should be attached to.\r\n   *\r\n   * @param {Object} [options]\r\n   *        The key/value store of player options.\r\n   */\r\n  function SeekBar(player, options) {\r\n    classCallCheck(this, SeekBar);\r\n\r\n    var _this = possibleConstructorReturn(this, _Slider.call(this, player, options));\r\n\r\n    _this.setEventHandlers_();\r\n    return _this;\r\n  }\r\n\r\n  /**\r\n   * Sets the event handlers\r\n   *\r\n   * @private\r\n   */\r\n\r\n\r\n  SeekBar.prototype.setEventHandlers_ = function setEventHandlers_() {\r\n    var _this2 = this;\r\n\r\n    this.update = throttle(bind(this, this.update), UPDATE_REFRESH_INTERVAL);\r\n\r\n    this.on(this.player_, 'timeupdate', this.update);\r\n    this.on(this.player_, 'ended', this.handleEnded);\r\n\r\n    // when playing, let's ensure we smoothly update the play progress bar\r\n    // via an interval\r\n    this.updateInterval = null;\r\n\r\n    this.on(this.player_, ['playing'], function () {\r\n      _this2.clearInterval(_this2.updateInterval);\r\n\r\n      _this2.updateInterval = _this2.setInterval(function () {\r\n        _this2.requestAnimationFrame(function () {\r\n          _this2.update();\r\n        });\r\n      }, UPDATE_REFRESH_INTERVAL);\r\n    });\r\n\r\n    this.on(this.player_, ['ended', 'pause', 'waiting'], function () {\r\n      _this2.clearInterval(_this2.updateInterval);\r\n    });\r\n\r\n    this.on(this.player_, ['timeupdate', 'ended'], this.update);\r\n  };\r\n\r\n  /**\r\n   * Create the `Component`'s DOM element\r\n   *\r\n   * @return {Element}\r\n   *         The element that was created.\r\n   */\r\n\r\n\r\n  SeekBar.prototype.createEl = function createEl$$1() {\r\n    return _Slider.prototype.createEl.call(this, 'div', {\r\n      className: 'vjs-progress-holder'\r\n    }, {\r\n      'aria-label': this.localize('Progress Bar')\r\n    });\r\n  };\r\n\r\n  /**\r\n   * This function updates the play progress bar and accessiblity\r\n   * attributes to whatever is passed in.\r\n   *\r\n   * @param {number} currentTime\r\n   *        The currentTime value that should be used for accessiblity\r\n   *\r\n   * @param {number} percent\r\n   *        The percentage as a decimal that the bar should be filled from 0-1.\r\n   *\r\n   * @private\r\n   */\r\n\r\n\r\n  SeekBar.prototype.update_ = function update_(currentTime, percent) {\r\n    var duration = this.player_.duration();\r\n\r\n    // machine readable value of progress bar (percentage complete)\r\n    this.el_.setAttribute('aria-valuenow', (percent * 100).toFixed(2));\r\n\r\n    // human readable value of progress bar (time complete)\r\n    this.el_.setAttribute('aria-valuetext', this.localize('progress bar timing: currentTime={1} duration={2}', [formatTime(currentTime, duration), formatTime(duration, duration)], '{1} of {2}'));\r\n\r\n    // Update the `PlayProgressBar`.\r\n    this.bar.update(getBoundingClientRect(this.el_), percent);\r\n  };\r\n\r\n  /**\r\n   * Update the seek bar's UI.\r\n   *\r\n   * @param {EventTarget~Event} [event]\r\n   *        The `timeupdate` or `ended` event that caused this to run.\r\n   *\r\n   * @listens Player#timeupdate\r\n   *\r\n   * @returns {number}\r\n   *          The current percent at a number from 0-1\r\n   */\r\n\r\n\r\n  SeekBar.prototype.update = function update(event) {\r\n    var percent = _Slider.prototype.update.call(this);\r\n\r\n    this.update_(this.getCurrentTime_(), percent);\r\n    return percent;\r\n  };\r\n\r\n  /**\r\n   * Get the value of current time but allows for smooth scrubbing,\r\n   * when player can't keep up.\r\n   *\r\n   * @return {number}\r\n   *         The current time value to display\r\n   *\r\n   * @private\r\n   */\r\n\r\n\r\n  SeekBar.prototype.getCurrentTime_ = function getCurrentTime_() {\r\n    return this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\r\n  };\r\n\r\n  /**\r\n   * We want the seek bar to be full on ended\r\n   * no matter what the actual internal values are. so we force it.\r\n   *\r\n   * @param {EventTarget~Event} [event]\r\n   *        The `timeupdate` or `ended` event that caused this to run.\r\n   *\r\n   * @listens Player#ended\r\n   */\r\n\r\n\r\n  SeekBar.prototype.handleEnded = function handleEnded(event) {\r\n    this.update_(this.player_.duration(), 1);\r\n  };\r\n\r\n  /**\r\n   * Get the percentage of media played so far.\r\n   *\r\n   * @return {number}\r\n   *         The percentage of media played so far (0 to 1).\r\n   */\r\n\r\n\r\n  SeekBar.prototype.getPercent = function getPercent() {\r\n    var percent = this.getCurrentTime_() / this.player_.duration();\r\n\r\n    return percent >= 1 ? 1 : percent;\r\n  };\r\n\r\n  /**\r\n   * Handle mouse down on seek bar\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        The `mousedown` event that caused this to run.\r\n   *\r\n   * @listens mousedown\r\n   */\r\n\r\n\r\n  SeekBar.prototype.handleMouseDown = function handleMouseDown(event) {\r\n    if (!isSingleLeftClick(event)) {\r\n      return;\r\n    }\r\n\r\n    // Stop event propagation to prevent double fire in progress-control.js\r\n    event.stopPropagation();\r\n    this.player_.scrubbing(true);\r\n\r\n    this.videoWasPlaying = !this.player_.paused();\r\n    this.player_.pause();\r\n\r\n    _Slider.prototype.handleMouseDown.call(this, event);\r\n  };\r\n\r\n  /**\r\n   * Handle mouse move on seek bar\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        The `mousemove` event that caused this to run.\r\n   *\r\n   * @listens mousemove\r\n   */\r\n\r\n\r\n  SeekBar.prototype.handleMouseMove = function handleMouseMove(event) {\r\n    if (!isSingleLeftClick(event)) {\r\n      return;\r\n    }\r\n\r\n    var newTime = this.calculateDistance(event) * this.player_.duration();\r\n\r\n    // Don't let video end while scrubbing.\r\n    if (newTime === this.player_.duration()) {\r\n      newTime = newTime - 0.1;\r\n    }\r\n\r\n    // Set new time (tell player to seek to new time)\r\n    this.player_.currentTime(newTime);\r\n  };\r\n\r\n  SeekBar.prototype.enable = function enable() {\r\n    _Slider.prototype.enable.call(this);\r\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\r\n\r\n    if (!mouseTimeDisplay) {\r\n      return;\r\n    }\r\n\r\n    mouseTimeDisplay.show();\r\n  };\r\n\r\n  SeekBar.prototype.disable = function disable() {\r\n    _Slider.prototype.disable.call(this);\r\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\r\n\r\n    if (!mouseTimeDisplay) {\r\n      return;\r\n    }\r\n\r\n    mouseTimeDisplay.hide();\r\n  };\r\n\r\n  /**\r\n   * Handle mouse up on seek bar\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        The `mouseup` event that caused this to run.\r\n   *\r\n   * @listens mouseup\r\n   */\r\n\r\n\r\n  SeekBar.prototype.handleMouseUp = function handleMouseUp(event) {\r\n    _Slider.prototype.handleMouseUp.call(this, event);\r\n\r\n    // Stop event propagation to prevent double fire in progress-control.js\r\n    if (event) {\r\n      event.stopPropagation();\r\n    }\r\n    this.player_.scrubbing(false);\r\n\r\n    /**\r\n     * Trigger timeupdate because we're done seeking and the time has changed.\r\n     * This is particularly useful for if the player is paused to time the time displays.\r\n     *\r\n     * @event Tech#timeupdate\r\n     * @type {EventTarget~Event}\r\n     */\r\n    this.player_.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\r\n    if (this.videoWasPlaying) {\r\n      silencePromise(this.player_.play());\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Move more quickly fast forward for keyboard-only users\r\n   */\r\n\r\n\r\n  SeekBar.prototype.stepForward = function stepForward() {\r\n    this.player_.currentTime(this.player_.currentTime() + STEP_SECONDS);\r\n  };\r\n\r\n  /**\r\n   * Move more quickly rewind for keyboard-only users\r\n   */\r\n\r\n\r\n  SeekBar.prototype.stepBack = function stepBack() {\r\n    this.player_.currentTime(this.player_.currentTime() - STEP_SECONDS);\r\n  };\r\n\r\n  /**\r\n   * Toggles the playback state of the player\r\n   * This gets called when enter or space is used on the seekbar\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        The `keydown` event that caused this function to be called\r\n   *\r\n   */\r\n\r\n\r\n  SeekBar.prototype.handleAction = function handleAction(event) {\r\n    if (this.player_.paused()) {\r\n      this.player_.play();\r\n    } else {\r\n      this.player_.pause();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Called when this SeekBar has focus and a key gets pressed down. By\r\n   * default it will call `this.handleAction` when the key is space or enter.\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        The `keydown` event that caused this function to be called.\r\n   *\r\n   * @listens keydown\r\n   */\r\n\r\n\r\n  SeekBar.prototype.handleKeyPress = function handleKeyPress(event) {\r\n\r\n    // Support Space (32) or Enter (13) key operation to fire a click event\r\n    if (event.which === 32 || event.which === 13) {\r\n      event.preventDefault();\r\n      this.handleAction(event);\r\n    } else if (_Slider.prototype.handleKeyPress) {\r\n\r\n      // Pass keypress handling up for unsupported keys\r\n      _Slider.prototype.handleKeyPress.call(this, event);\r\n    }\r\n  };\r\n\r\n  return SeekBar;\r\n}(Slider);\r\n\r\n/**\r\n * Default options for the `SeekBar`\r\n *\r\n * @type {Object}\r\n * @private\r\n */\r\n\r\n\r\nSeekBar.prototype.options_ = {\r\n  children: ['loadProgressBar', 'playProgressBar'],\r\n  barName: 'playProgressBar'\r\n};\r\n\r\n// MouseTimeDisplay tooltips should not be added to a player on mobile devices or IE8\r\nif ((!IE_VERSION || IE_VERSION > 8) && !IS_IOS && !IS_ANDROID) {\r\n  SeekBar.prototype.options_.children.splice(1, 0, 'mouseTimeDisplay');\r\n}\r\n\r\n/**\r\n * Call the update event for this Slider when this event happens on the player.\r\n *\r\n * @type {string}\r\n */\r\nSeekBar.prototype.playerEvent = 'timeupdate';\r\n\r\nComponent.registerComponent('SeekBar', SeekBar);\r\n\r\n/**\r\n * @file progress-control.js\r\n */\r\n/**\r\n * The Progress Control component contains the seek bar, load progress,\r\n * and play progress.\r\n *\r\n * @extends Component\r\n */\r\n\r\nvar ProgressControl = function (_Component) {\r\n  inherits(ProgressControl, _Component);\r\n\r\n  /**\r\n   * Creates an instance of this class.\r\n   *\r\n   * @param {Player} player\r\n   *        The `Player` that this class should be attached to.\r\n   *\r\n   * @param {Object} [options]\r\n   *        The key/value store of player options.\r\n   */\r\n  function ProgressControl(player, options) {\r\n    classCallCheck(this, ProgressControl);\r\n\r\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\r\n\r\n    _this.handleMouseMove = throttle(bind(_this, _this.handleMouseMove), 25);\r\n    _this.throttledHandleMouseSeek = throttle(bind(_this, _this.handleMouseSeek), 25);\r\n\r\n    _this.enable();\r\n    return _this;\r\n  }\r\n\r\n  /**\r\n   * Create the `Component`'s DOM element\r\n   *\r\n   * @return {Element}\r\n   *         The element that was created.\r\n   */\r\n\r\n\r\n  ProgressControl.prototype.createEl = function createEl$$1() {\r\n    return _Component.prototype.createEl.call(this, 'div', {\r\n      className: 'vjs-progress-control vjs-control'\r\n    });\r\n  };\r\n\r\n  /**\r\n   * When the mouse moves over the `ProgressControl`, the pointer position\r\n   * gets passed down to the `MouseTimeDisplay` component.\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        The `mousemove` event that caused this function to run.\r\n   *\r\n   * @listen mousemove\r\n   */\r\n\r\n\r\n  ProgressControl.prototype.handleMouseMove = function handleMouseMove(event) {\r\n    var seekBar = this.getChild('seekBar');\r\n\r\n    if (seekBar) {\r\n      var mouseTimeDisplay = seekBar.getChild('mouseTimeDisplay');\r\n      var seekBarEl = seekBar.el();\r\n      var seekBarRect = getBoundingClientRect(seekBarEl);\r\n      var seekBarPoint = getPointerPosition(seekBarEl, event).x;\r\n\r\n      // The default skin has a gap on either side of the `SeekBar`. This means\r\n      // that it's possible to trigger this behavior outside the boundaries of\r\n      // the `SeekBar`. This ensures we stay within it at all times.\r\n      if (seekBarPoint > 1) {\r\n        seekBarPoint = 1;\r\n      } else if (seekBarPoint < 0) {\r\n        seekBarPoint = 0;\r\n      }\r\n\r\n      if (mouseTimeDisplay) {\r\n        mouseTimeDisplay.update(seekBarRect, seekBarPoint);\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * A throttled version of the {@link ProgressControl#handleMouseSeek} listener.\r\n   *\r\n   * @method ProgressControl#throttledHandleMouseSeek\r\n   * @param {EventTarget~Event} event\r\n   *        The `mousemove` event that caused this function to run.\r\n   *\r\n   * @listen mousemove\r\n   * @listen touchmove\r\n   */\r\n\r\n  /**\r\n   * Handle `mousemove` or `touchmove` events on the `ProgressControl`.\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        `mousedown` or `touchstart` event that triggered this function\r\n   *\r\n   * @listens mousemove\r\n   * @listens touchmove\r\n   */\r\n\r\n\r\n  ProgressControl.prototype.handleMouseSeek = function handleMouseSeek(event) {\r\n    var seekBar = this.getChild('seekBar');\r\n\r\n    if (seekBar) {\r\n      seekBar.handleMouseMove(event);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Are controls are currently enabled for this progress control.\r\n   *\r\n   * @return {boolean}\r\n   *         true if controls are enabled, false otherwise\r\n   */\r\n\r\n\r\n  ProgressControl.prototype.enabled = function enabled() {\r\n    return this.enabled_;\r\n  };\r\n\r\n  /**\r\n   * Disable all controls on the progress control and its children\r\n   */\r\n\r\n\r\n  ProgressControl.prototype.disable = function disable() {\r\n    this.children().forEach(function (child) {\r\n      return child.disable && child.disable();\r\n    });\r\n\r\n    if (!this.enabled()) {\r\n      return;\r\n    }\r\n\r\n    this.off(['mousedown', 'touchstart'], this.handleMouseDown);\r\n    this.off(this.el_, 'mousemove', this.handleMouseMove);\r\n    this.handleMouseUp();\r\n\r\n    this.addClass('disabled');\r\n\r\n    this.enabled_ = false;\r\n  };\r\n\r\n  /**\r\n   * Enable all controls on the progress control and its children\r\n   */\r\n\r\n\r\n  ProgressControl.prototype.enable = function enable() {\r\n    this.children().forEach(function (child) {\r\n      return child.enable && child.enable();\r\n    });\r\n\r\n    if (this.enabled()) {\r\n      return;\r\n    }\r\n\r\n    this.on(['mousedown', 'touchstart'], this.handleMouseDown);\r\n    this.on(this.el_, 'mousemove', this.handleMouseMove);\r\n    this.removeClass('disabled');\r\n\r\n    this.enabled_ = true;\r\n  };\r\n\r\n  /**\r\n   * Handle `mousedown` or `touchstart` events on the `ProgressControl`.\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        `mousedown` or `touchstart` event that triggered this function\r\n   *\r\n   * @listens mousedown\r\n   * @listens touchstart\r\n   */\r\n\r\n\r\n  ProgressControl.prototype.handleMouseDown = function handleMouseDown(event) {\r\n    var doc = this.el_.ownerDocument;\r\n    var seekBar = this.getChild('seekBar');\r\n\r\n    if (seekBar) {\r\n      seekBar.handleMouseDown(event);\r\n    }\r\n\r\n    this.on(doc, 'mousemove', this.throttledHandleMouseSeek);\r\n    this.on(doc, 'touchmove', this.throttledHandleMouseSeek);\r\n    this.on(doc, 'mouseup', this.handleMouseUp);\r\n    this.on(doc, 'touchend', this.handleMouseUp);\r\n  };\r\n\r\n  /**\r\n   * Handle `mouseup` or `touchend` events on the `ProgressControl`.\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        `mouseup` or `touchend` event that triggered this function.\r\n   *\r\n   * @listens touchend\r\n   * @listens mouseup\r\n   */\r\n\r\n\r\n  ProgressControl.prototype.handleMouseUp = function handleMouseUp(event) {\r\n    var doc = this.el_.ownerDocument;\r\n    var seekBar = this.getChild('seekBar');\r\n\r\n    if (seekBar) {\r\n      seekBar.handleMouseUp(event);\r\n    }\r\n\r\n    this.off(doc, 'mousemove', this.throttledHandleMouseSeek);\r\n    this.off(doc, 'touchmove', this.throttledHandleMouseSeek);\r\n    this.off(doc, 'mouseup', this.handleMouseUp);\r\n    this.off(doc, 'touchend', this.handleMouseUp);\r\n  };\r\n\r\n  return ProgressControl;\r\n}(Component);\r\n\r\n/**\r\n * Default options for `ProgressControl`\r\n *\r\n * @type {Object}\r\n * @private\r\n */\r\n\r\n\r\nProgressControl.prototype.options_ = {\r\n  children: ['seekBar']\r\n};\r\n\r\nComponent.registerComponent('ProgressControl', ProgressControl);\r\n\r\n/**\r\n * @file fullscreen-toggle.js\r\n */\r\n/**\r\n * Toggle fullscreen video\r\n *\r\n * @extends Button\r\n */\r\n\r\nvar FullscreenToggle = function (_Button) {\r\n  inherits(FullscreenToggle, _Button);\r\n\r\n  /**\r\n   * Creates an instance of this class.\r\n   *\r\n   * @param {Player} player\r\n   *        The `Player` that this class should be attached to.\r\n   *\r\n   * @param {Object} [options]\r\n   *        The key/value store of player options.\r\n   */\r\n  function FullscreenToggle(player, options) {\r\n    classCallCheck(this, FullscreenToggle);\r\n\r\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\r\n\r\n    _this.on(player, 'fullscreenchange', _this.handleFullscreenChange);\r\n\r\n    if (document[FullscreenApi.fullscreenEnabled] === false) {\r\n      _this.disable();\r\n    }\r\n    return _this;\r\n  }\r\n\r\n  /**\r\n   * Builds the default DOM `className`.\r\n   *\r\n   * @return {string}\r\n   *         The DOM `className` for this object.\r\n   */\r\n\r\n\r\n  FullscreenToggle.prototype.buildCSSClass = function buildCSSClass() {\r\n    return 'vjs-fullscreen-control ' + _Button.prototype.buildCSSClass.call(this);\r\n  };\r\n\r\n  /**\r\n   * Handles fullscreenchange on the player and change control text accordingly.\r\n   *\r\n   * @param {EventTarget~Event} [event]\r\n   *        The {@link Player#fullscreenchange} event that caused this function to be\r\n   *        called.\r\n   *\r\n   * @listens Player#fullscreenchange\r\n   */\r\n\r\n\r\n  FullscreenToggle.prototype.handleFullscreenChange = function handleFullscreenChange(event) {\r\n    if (this.player_.isFullscreen()) {\r\n      this.controlText('Non-Fullscreen');\r\n    } else {\r\n      this.controlText('Fullscreen');\r\n    }\r\n  };\r\n\r\n  /**\r\n   * This gets called when an `FullscreenToggle` is \"clicked\". See\r\n   * {@link ClickableComponent} for more detailed information on what a click can be.\r\n   *\r\n   * @param {EventTarget~Event} [event]\r\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\r\n   *        called.\r\n   *\r\n   * @listens tap\r\n   * @listens click\r\n   */\r\n\r\n\r\n  FullscreenToggle.prototype.handleClick = function handleClick(event) {\r\n    if (!this.player_.isFullscreen()) {\r\n      this.player_.requestFullscreen();\r\n    } else {\r\n      this.player_.exitFullscreen();\r\n    }\r\n  };\r\n\r\n  return FullscreenToggle;\r\n}(Button);\r\n\r\n/**\r\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\r\n *\r\n * @type {string}\r\n * @private\r\n */\r\n\r\n\r\nFullscreenToggle.prototype.controlText_ = 'Fullscreen';\r\n\r\nComponent.registerComponent('FullscreenToggle', FullscreenToggle);\r\n\r\n/**\r\n * Check if volume control is supported and if it isn't hide the\r\n * `Component` that was passed  using the `vjs-hidden` class.\r\n *\r\n * @param {Component} self\r\n *        The component that should be hidden if volume is unsupported\r\n *\r\n * @param {Player} player\r\n *        A reference to the player\r\n *\r\n * @private\r\n */\r\nvar checkVolumeSupport = function checkVolumeSupport(self, player) {\r\n  // hide volume controls when they're not supported by the current tech\r\n  if (player.tech_ && !player.tech_.featuresVolumeControl) {\r\n    self.addClass('vjs-hidden');\r\n  }\r\n\r\n  self.on(player, 'loadstart', function () {\r\n    if (!player.tech_.featuresVolumeControl) {\r\n      self.addClass('vjs-hidden');\r\n    } else {\r\n      self.removeClass('vjs-hidden');\r\n    }\r\n  });\r\n};\r\n\r\n/**\r\n * @file volume-level.js\r\n */\r\n/**\r\n * Shows volume level\r\n *\r\n * @extends Component\r\n */\r\n\r\nvar VolumeLevel = function (_Component) {\r\n  inherits(VolumeLevel, _Component);\r\n\r\n  function VolumeLevel() {\r\n    classCallCheck(this, VolumeLevel);\r\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\r\n  }\r\n\r\n  /**\r\n   * Create the `Component`'s DOM element\r\n   *\r\n   * @return {Element}\r\n   *         The element that was created.\r\n   */\r\n  VolumeLevel.prototype.createEl = function createEl() {\r\n    return _Component.prototype.createEl.call(this, 'div', {\r\n      className: 'vjs-volume-level',\r\n      innerHTML: '<span class=\"vjs-control-text\"></span>'\r\n    });\r\n  };\r\n\r\n  return VolumeLevel;\r\n}(Component);\r\n\r\nComponent.registerComponent('VolumeLevel', VolumeLevel);\r\n\r\n/**\r\n * @file volume-bar.js\r\n */\r\n// Required children\r\n/**\r\n * The bar that contains the volume level and can be clicked on to adjust the level\r\n *\r\n * @extends Slider\r\n */\r\n\r\nvar VolumeBar = function (_Slider) {\r\n  inherits(VolumeBar, _Slider);\r\n\r\n  /**\r\n   * Creates an instance of this class.\r\n   *\r\n   * @param {Player} player\r\n   *        The `Player` that this class should be attached to.\r\n   *\r\n   * @param {Object} [options]\r\n   *        The key/value store of player options.\r\n   */\r\n  function VolumeBar(player, options) {\r\n    classCallCheck(this, VolumeBar);\r\n\r\n    var _this = possibleConstructorReturn(this, _Slider.call(this, player, options));\r\n\r\n    _this.on('slideractive', _this.updateLastVolume_);\r\n    _this.on(player, 'volumechange', _this.updateARIAAttributes);\r\n    player.ready(function () {\r\n      return _this.updateARIAAttributes();\r\n    });\r\n    return _this;\r\n  }\r\n\r\n  /**\r\n   * Create the `Component`'s DOM element\r\n   *\r\n   * @return {Element}\r\n   *         The element that was created.\r\n   */\r\n\r\n\r\n  VolumeBar.prototype.createEl = function createEl$$1() {\r\n    return _Slider.prototype.createEl.call(this, 'div', {\r\n      className: 'vjs-volume-bar vjs-slider-bar'\r\n    }, {\r\n      'aria-label': this.localize('Volume Level'),\r\n      'aria-live': 'polite'\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Handle mouse down on volume bar\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        The `mousedown` event that caused this to run.\r\n   *\r\n   * @listens mousedown\r\n   */\r\n\r\n\r\n  VolumeBar.prototype.handleMouseDown = function handleMouseDown(event) {\r\n    if (!isSingleLeftClick(event)) {\r\n      return;\r\n    }\r\n\r\n    _Slider.prototype.handleMouseDown.call(this, event);\r\n  };\r\n\r\n  /**\r\n   * Handle movement events on the {@link VolumeMenuButton}.\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        The event that caused this function to run.\r\n   *\r\n   * @listens mousemove\r\n   */\r\n\r\n\r\n  VolumeBar.prototype.handleMouseMove = function handleMouseMove(event) {\r\n    if (!isSingleLeftClick(event)) {\r\n      return;\r\n    }\r\n\r\n    this.checkMuted();\r\n    this.player_.volume(this.calculateDistance(event));\r\n  };\r\n\r\n  /**\r\n   * If the player is muted unmute it.\r\n   */\r\n\r\n\r\n  VolumeBar.prototype.checkMuted = function checkMuted() {\r\n    if (this.player_.muted()) {\r\n      this.player_.muted(false);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Get percent of volume level\r\n   *\r\n   * @return {number}\r\n   *         Volume level percent as a decimal number.\r\n   */\r\n\r\n\r\n  VolumeBar.prototype.getPercent = function getPercent() {\r\n    if (this.player_.muted()) {\r\n      return 0;\r\n    }\r\n    return this.player_.volume();\r\n  };\r\n\r\n  /**\r\n   * Increase volume level for keyboard users\r\n   */\r\n\r\n\r\n  VolumeBar.prototype.stepForward = function stepForward() {\r\n    this.checkMuted();\r\n    this.player_.volume(this.player_.volume() + 0.1);\r\n  };\r\n\r\n  /**\r\n   * Decrease volume level for keyboard users\r\n   */\r\n\r\n\r\n  VolumeBar.prototype.stepBack = function stepBack() {\r\n    this.checkMuted();\r\n    this.player_.volume(this.player_.volume() - 0.1);\r\n  };\r\n\r\n  /**\r\n   * Update ARIA accessibility attributes\r\n   *\r\n   * @param {EventTarget~Event} [event]\r\n   *        The `volumechange` event that caused this function to run.\r\n   *\r\n   * @listens Player#volumechange\r\n   */\r\n\r\n\r\n  VolumeBar.prototype.updateARIAAttributes = function updateARIAAttributes(event) {\r\n    var ariaValue = this.player_.muted() ? 0 : this.volumeAsPercentage_();\r\n\r\n    this.el_.setAttribute('aria-valuenow', ariaValue);\r\n    this.el_.setAttribute('aria-valuetext', ariaValue + '%');\r\n  };\r\n\r\n  /**\r\n   * Returns the current value of the player volume as a percentage\r\n   *\r\n   * @private\r\n   */\r\n\r\n\r\n  VolumeBar.prototype.volumeAsPercentage_ = function volumeAsPercentage_() {\r\n    return Math.round(this.player_.volume() * 100);\r\n  };\r\n\r\n  /**\r\n   * When user starts dragging the VolumeBar, store the volume and listen for\r\n   * the end of the drag. When the drag ends, if the volume was set to zero,\r\n   * set lastVolume to the stored volume.\r\n   *\r\n   * @listens slideractive\r\n   * @private\r\n   */\r\n\r\n\r\n  VolumeBar.prototype.updateLastVolume_ = function updateLastVolume_() {\r\n    var _this2 = this;\r\n\r\n    var volumeBeforeDrag = this.player_.volume();\r\n\r\n    this.one('sliderinactive', function () {\r\n      if (_this2.player_.volume() === 0) {\r\n        _this2.player_.lastVolume_(volumeBeforeDrag);\r\n      }\r\n    });\r\n  };\r\n\r\n  return VolumeBar;\r\n}(Slider);\r\n\r\n/**\r\n * Default options for the `VolumeBar`\r\n *\r\n * @type {Object}\r\n * @private\r\n */\r\n\r\n\r\nVolumeBar.prototype.options_ = {\r\n  children: ['volumeLevel'],\r\n  barName: 'volumeLevel'\r\n};\r\n\r\n/**\r\n * Call the update event for this Slider when this event happens on the player.\r\n *\r\n * @type {string}\r\n */\r\nVolumeBar.prototype.playerEvent = 'volumechange';\r\n\r\nComponent.registerComponent('VolumeBar', VolumeBar);\r\n\r\n/**\r\n * @file volume-control.js\r\n */\r\n// Required children\r\n/**\r\n * The component for controlling the volume level\r\n *\r\n * @extends Component\r\n */\r\n\r\nvar VolumeControl = function (_Component) {\r\n  inherits(VolumeControl, _Component);\r\n\r\n  /**\r\n   * Creates an instance of this class.\r\n   *\r\n   * @param {Player} player\r\n   *        The `Player` that this class should be attached to.\r\n   *\r\n   * @param {Object} [options={}]\r\n   *        The key/value store of player options.\r\n   */\r\n  function VolumeControl(player) {\r\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n    classCallCheck(this, VolumeControl);\r\n\r\n    options.vertical = options.vertical || false;\r\n\r\n    // Pass the vertical option down to the VolumeBar if\r\n    // the VolumeBar is turned on.\r\n    if (typeof options.volumeBar === 'undefined' || isPlain(options.volumeBar)) {\r\n      options.volumeBar = options.volumeBar || {};\r\n      options.volumeBar.vertical = options.vertical;\r\n    }\r\n\r\n    // hide this control if volume support is missing\r\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\r\n\r\n    checkVolumeSupport(_this, player);\r\n\r\n    _this.throttledHandleMouseMove = throttle(bind(_this, _this.handleMouseMove), 25);\r\n\r\n    _this.on('mousedown', _this.handleMouseDown);\r\n    _this.on('touchstart', _this.handleMouseDown);\r\n\r\n    // while the slider is active (the mouse has been pressed down and\r\n    // is dragging) or in focus we do not want to hide the VolumeBar\r\n    _this.on(_this.volumeBar, ['focus', 'slideractive'], function () {\r\n      _this.volumeBar.addClass('vjs-slider-active');\r\n      _this.addClass('vjs-slider-active');\r\n      _this.trigger('slideractive');\r\n    });\r\n\r\n    _this.on(_this.volumeBar, ['blur', 'sliderinactive'], function () {\r\n      _this.volumeBar.removeClass('vjs-slider-active');\r\n      _this.removeClass('vjs-slider-active');\r\n      _this.trigger('sliderinactive');\r\n    });\r\n    return _this;\r\n  }\r\n\r\n  /**\r\n   * Create the `Component`'s DOM element\r\n   *\r\n   * @return {Element}\r\n   *         The element that was created.\r\n   */\r\n\r\n\r\n  VolumeControl.prototype.createEl = function createEl() {\r\n    var orientationClass = 'vjs-volume-horizontal';\r\n\r\n    if (this.options_.vertical) {\r\n      orientationClass = 'vjs-volume-vertical';\r\n    }\r\n\r\n    return _Component.prototype.createEl.call(this, 'div', {\r\n      className: 'vjs-volume-control vjs-control ' + orientationClass\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        `mousedown` or `touchstart` event that triggered this function\r\n   *\r\n   * @listens mousedown\r\n   * @listens touchstart\r\n   */\r\n\r\n\r\n  VolumeControl.prototype.handleMouseDown = function handleMouseDown(event) {\r\n    var doc = this.el_.ownerDocument;\r\n\r\n    this.on(doc, 'mousemove', this.throttledHandleMouseMove);\r\n    this.on(doc, 'touchmove', this.throttledHandleMouseMove);\r\n    this.on(doc, 'mouseup', this.handleMouseUp);\r\n    this.on(doc, 'touchend', this.handleMouseUp);\r\n  };\r\n\r\n  /**\r\n   * Handle `mouseup` or `touchend` events on the `VolumeControl`.\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        `mouseup` or `touchend` event that triggered this function.\r\n   *\r\n   * @listens touchend\r\n   * @listens mouseup\r\n   */\r\n\r\n\r\n  VolumeControl.prototype.handleMouseUp = function handleMouseUp(event) {\r\n    var doc = this.el_.ownerDocument;\r\n\r\n    this.off(doc, 'mousemove', this.throttledHandleMouseMove);\r\n    this.off(doc, 'touchmove', this.throttledHandleMouseMove);\r\n    this.off(doc, 'mouseup', this.handleMouseUp);\r\n    this.off(doc, 'touchend', this.handleMouseUp);\r\n  };\r\n\r\n  /**\r\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        `mousedown` or `touchstart` event that triggered this function\r\n   *\r\n   * @listens mousedown\r\n   * @listens touchstart\r\n   */\r\n\r\n\r\n  VolumeControl.prototype.handleMouseMove = function handleMouseMove(event) {\r\n    this.volumeBar.handleMouseMove(event);\r\n  };\r\n\r\n  return VolumeControl;\r\n}(Component);\r\n\r\n/**\r\n * Default options for the `VolumeControl`\r\n *\r\n * @type {Object}\r\n * @private\r\n */\r\n\r\n\r\nVolumeControl.prototype.options_ = {\r\n  children: ['volumeBar']\r\n};\r\n\r\nComponent.registerComponent('VolumeControl', VolumeControl);\r\n\r\n/**\r\n * Check if muting volume is supported and if it isn't hide the mute toggle\r\n * button.\r\n *\r\n * @param {Component} self\r\n *        A reference to the mute toggle button\r\n *\r\n * @param {Player} player\r\n *        A reference to the player\r\n *\r\n * @private\r\n */\r\nvar checkMuteSupport = function checkMuteSupport(self, player) {\r\n  // hide mute toggle button if it's not supported by the current tech\r\n  if (player.tech_ && !player.tech_.featuresMuteControl) {\r\n    self.addClass('vjs-hidden');\r\n  }\r\n\r\n  self.on(player, 'loadstart', function () {\r\n    if (!player.tech_.featuresMuteControl) {\r\n      self.addClass('vjs-hidden');\r\n    } else {\r\n      self.removeClass('vjs-hidden');\r\n    }\r\n  });\r\n};\r\n\r\n/**\r\n * @file mute-toggle.js\r\n */\r\n/**\r\n * A button component for muting the audio.\r\n *\r\n * @extends Button\r\n */\r\n\r\nvar MuteToggle = function (_Button) {\r\n  inherits(MuteToggle, _Button);\r\n\r\n  /**\r\n   * Creates an instance of this class.\r\n   *\r\n   * @param {Player} player\r\n   *        The `Player` that this class should be attached to.\r\n   *\r\n   * @param {Object} [options]\r\n   *        The key/value store of player options.\r\n   */\r\n  function MuteToggle(player, options) {\r\n    classCallCheck(this, MuteToggle);\r\n\r\n    // hide this control if volume support is missing\r\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\r\n\r\n    checkMuteSupport(_this, player);\r\n\r\n    _this.on(player, ['loadstart', 'volumechange'], _this.update);\r\n    return _this;\r\n  }\r\n\r\n  /**\r\n   * Builds the default DOM `className`.\r\n   *\r\n   * @return {string}\r\n   *         The DOM `className` for this object.\r\n   */\r\n\r\n\r\n  MuteToggle.prototype.buildCSSClass = function buildCSSClass() {\r\n    return 'vjs-mute-control ' + _Button.prototype.buildCSSClass.call(this);\r\n  };\r\n\r\n  /**\r\n   * This gets called when an `MuteToggle` is \"clicked\". See\r\n   * {@link ClickableComponent} for more detailed information on what a click can be.\r\n   *\r\n   * @param {EventTarget~Event} [event]\r\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\r\n   *        called.\r\n   *\r\n   * @listens tap\r\n   * @listens click\r\n   */\r\n\r\n\r\n  MuteToggle.prototype.handleClick = function handleClick(event) {\r\n    var vol = this.player_.volume();\r\n    var lastVolume = this.player_.lastVolume_();\r\n\r\n    if (vol === 0) {\r\n      var volumeToSet = lastVolume < 0.1 ? 0.1 : lastVolume;\r\n\r\n      this.player_.volume(volumeToSet);\r\n      this.player_.muted(false);\r\n    } else {\r\n      this.player_.muted(this.player_.muted() ? false : true);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Update the `MuteToggle` button based on the state of `volume` and `muted`\r\n   * on the player.\r\n   *\r\n   * @param {EventTarget~Event} [event]\r\n   *        The {@link Player#loadstart} event if this function was called\r\n   *        through an event.\r\n   *\r\n   * @listens Player#loadstart\r\n   * @listens Player#volumechange\r\n   */\r\n\r\n\r\n  MuteToggle.prototype.update = function update(event) {\r\n    this.updateIcon_();\r\n    this.updateControlText_();\r\n  };\r\n\r\n  /**\r\n   * Update the appearance of the `MuteToggle` icon.\r\n   *\r\n   * Possible states (given `level` variable below):\r\n   * - 0: crossed out\r\n   * - 1: zero bars of volume\r\n   * - 2: one bar of volume\r\n   * - 3: two bars of volume\r\n   *\r\n   * @private\r\n   */\r\n\r\n\r\n  MuteToggle.prototype.updateIcon_ = function updateIcon_() {\r\n    var vol = this.player_.volume();\r\n    var level = 3;\r\n\r\n    // in iOS when a player is loaded with muted attribute\r\n    // and volume is changed with a native mute button\r\n    // we want to make sure muted state is updated\r\n    if (IS_IOS) {\r\n      this.player_.muted(this.player_.tech_.el_.muted);\r\n    }\r\n\r\n    if (vol === 0 || this.player_.muted()) {\r\n      level = 0;\r\n    } else if (vol < 0.33) {\r\n      level = 1;\r\n    } else if (vol < 0.67) {\r\n      level = 2;\r\n    }\r\n\r\n    // TODO improve muted icon classes\r\n    for (var i = 0; i < 4; i++) {\r\n      removeClass(this.el_, 'vjs-vol-' + i);\r\n    }\r\n    addClass(this.el_, 'vjs-vol-' + level);\r\n  };\r\n\r\n  /**\r\n   * If `muted` has changed on the player, update the control text\r\n   * (`title` attribute on `vjs-mute-control` element and content of\r\n   * `vjs-control-text` element).\r\n   *\r\n   * @private\r\n   */\r\n\r\n\r\n  MuteToggle.prototype.updateControlText_ = function updateControlText_() {\r\n    var soundOff = this.player_.muted() || this.player_.volume() === 0;\r\n    var text = soundOff ? 'Unmute' : 'Mute';\r\n\r\n    if (this.controlText() !== text) {\r\n      this.controlText(text);\r\n    }\r\n  };\r\n\r\n  return MuteToggle;\r\n}(Button);\r\n\r\n/**\r\n * The text that should display over the `MuteToggle`s controls. Added for localization.\r\n *\r\n * @type {string}\r\n * @private\r\n */\r\n\r\n\r\nMuteToggle.prototype.controlText_ = 'Mute';\r\n\r\nComponent.registerComponent('MuteToggle', MuteToggle);\r\n\r\n/**\r\n * @file volume-control.js\r\n */\r\n// Required children\r\n/**\r\n * A Component to contain the MuteToggle and VolumeControl so that\r\n * they can work together.\r\n *\r\n * @extends Component\r\n */\r\n\r\nvar VolumePanel = function (_Component) {\r\n  inherits(VolumePanel, _Component);\r\n\r\n  /**\r\n   * Creates an instance of this class.\r\n   *\r\n   * @param {Player} player\r\n   *        The `Player` that this class should be attached to.\r\n   *\r\n   * @param {Object} [options={}]\r\n   *        The key/value store of player options.\r\n   */\r\n  function VolumePanel(player) {\r\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n    classCallCheck(this, VolumePanel);\r\n\r\n    if (typeof options.inline !== 'undefined') {\r\n      options.inline = options.inline;\r\n    } else {\r\n      options.inline = true;\r\n    }\r\n\r\n    // pass the inline option down to the VolumeControl as vertical if\r\n    // the VolumeControl is on.\r\n    if (typeof options.volumeControl === 'undefined' || isPlain(options.volumeControl)) {\r\n      options.volumeControl = options.volumeControl || {};\r\n      options.volumeControl.vertical = !options.inline;\r\n    }\r\n\r\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\r\n\r\n    _this.on(player, ['loadstart'], _this.volumePanelState_);\r\n\r\n    // while the slider is active (the mouse has been pressed down and\r\n    // is dragging) we do not want to hide the VolumeBar\r\n    _this.on(_this.volumeControl, ['slideractive'], _this.sliderActive_);\r\n\r\n    _this.on(_this.volumeControl, ['sliderinactive'], _this.sliderInactive_);\r\n    return _this;\r\n  }\r\n\r\n  /**\r\n   * Add vjs-slider-active class to the VolumePanel\r\n   *\r\n   * @listens VolumeControl#slideractive\r\n   * @private\r\n   */\r\n\r\n\r\n  VolumePanel.prototype.sliderActive_ = function sliderActive_() {\r\n    this.addClass('vjs-slider-active');\r\n  };\r\n\r\n  /**\r\n   * Removes vjs-slider-active class to the VolumePanel\r\n   *\r\n   * @listens VolumeControl#sliderinactive\r\n   * @private\r\n   */\r\n\r\n\r\n  VolumePanel.prototype.sliderInactive_ = function sliderInactive_() {\r\n    this.removeClass('vjs-slider-active');\r\n  };\r\n\r\n  /**\r\n   * Adds vjs-hidden or vjs-mute-toggle-only to the VolumePanel\r\n   * depending on MuteToggle and VolumeControl state\r\n   *\r\n   * @listens Player#loadstart\r\n   * @private\r\n   */\r\n\r\n\r\n  VolumePanel.prototype.volumePanelState_ = function volumePanelState_() {\r\n    // hide volume panel if neither volume control or mute toggle\r\n    // are displayed\r\n    if (this.volumeControl.hasClass('vjs-hidden') && this.muteToggle.hasClass('vjs-hidden')) {\r\n      this.addClass('vjs-hidden');\r\n    }\r\n\r\n    // if only mute toggle is visible we don't want\r\n    // volume panel expanding when hovered or active\r\n    if (this.volumeControl.hasClass('vjs-hidden') && !this.muteToggle.hasClass('vjs-hidden')) {\r\n      this.addClass('vjs-mute-toggle-only');\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Create the `Component`'s DOM element\r\n   *\r\n   * @return {Element}\r\n   *         The element that was created.\r\n   */\r\n\r\n\r\n  VolumePanel.prototype.createEl = function createEl() {\r\n    var orientationClass = 'vjs-volume-panel-horizontal';\r\n\r\n    if (!this.options_.inline) {\r\n      orientationClass = 'vjs-volume-panel-vertical';\r\n    }\r\n\r\n    return _Component.prototype.createEl.call(this, 'div', {\r\n      className: 'vjs-volume-panel vjs-control ' + orientationClass\r\n    });\r\n  };\r\n\r\n  return VolumePanel;\r\n}(Component);\r\n\r\n/**\r\n * Default options for the `VolumeControl`\r\n *\r\n * @type {Object}\r\n * @private\r\n */\r\n\r\n\r\nVolumePanel.prototype.options_ = {\r\n  children: ['muteToggle', 'volumeControl']\r\n};\r\n\r\nComponent.registerComponent('VolumePanel', VolumePanel);\r\n\r\n/**\r\n * @file menu.js\r\n */\r\n/**\r\n * The Menu component is used to build popup menus, including subtitle and\r\n * captions selection menus.\r\n *\r\n * @extends Component\r\n */\r\n\r\nvar Menu = function (_Component) {\r\n  inherits(Menu, _Component);\r\n\r\n  /**\r\n   * Create an instance of this class.\r\n   *\r\n   * @param {Player} player\r\n   *        the player that this component should attach to\r\n   *\r\n   * @param {Object} [options]\r\n   *        Object of option names and values\r\n   *\r\n   */\r\n  function Menu(player, options) {\r\n    classCallCheck(this, Menu);\r\n\r\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\r\n\r\n    if (options) {\r\n      _this.menuButton_ = options.menuButton;\r\n    }\r\n\r\n    _this.focusedChild_ = -1;\r\n\r\n    _this.on('keydown', _this.handleKeyPress);\r\n    return _this;\r\n  }\r\n\r\n  /**\r\n   * Add a {@link MenuItem} to the menu.\r\n   *\r\n   * @param {Object|string} component\r\n   *        The name or instance of the `MenuItem` to add.\r\n   *\r\n   */\r\n\r\n\r\n  Menu.prototype.addItem = function addItem(component) {\r\n    this.addChild(component);\r\n    component.on('click', bind(this, function (event) {\r\n      // Unpress the associated MenuButton, and move focus back to it\r\n      if (this.menuButton_) {\r\n        this.menuButton_.unpressButton();\r\n\r\n        // don't focus menu button if item is a caption settings item\r\n        // because focus will move elsewhere and it logs an error on IE8\r\n        if (component.name() !== 'CaptionSettingsMenuItem') {\r\n          this.menuButton_.focus();\r\n        }\r\n      }\r\n    }));\r\n  };\r\n\r\n  /**\r\n   * Create the `Menu`s DOM element.\r\n   *\r\n   * @return {Element}\r\n   *         the element that was created\r\n   */\r\n\r\n\r\n  Menu.prototype.createEl = function createEl$$1() {\r\n    var contentElType = this.options_.contentElType || 'ul';\r\n\r\n    this.contentEl_ = createEl(contentElType, {\r\n      className: 'vjs-menu-content'\r\n    });\r\n\r\n    this.contentEl_.setAttribute('role', 'menu');\r\n\r\n    var el = _Component.prototype.createEl.call(this, 'div', {\r\n      append: this.contentEl_,\r\n      className: 'vjs-menu'\r\n    });\r\n\r\n    el.appendChild(this.contentEl_);\r\n\r\n    // Prevent clicks from bubbling up. Needed for Menu Buttons,\r\n    // where a click on the parent is significant\r\n    on(el, 'click', function (event) {\r\n      event.preventDefault();\r\n      event.stopImmediatePropagation();\r\n    });\r\n\r\n    return el;\r\n  };\r\n\r\n  Menu.prototype.dispose = function dispose() {\r\n    this.contentEl_ = null;\r\n\r\n    _Component.prototype.dispose.call(this);\r\n  };\r\n\r\n  /**\r\n   * Handle a `keydown` event on this menu. This listener is added in the constructor.\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        A `keydown` event that happened on the menu.\r\n   *\r\n   * @listens keydown\r\n   */\r\n\r\n\r\n  Menu.prototype.handleKeyPress = function handleKeyPress(event) {\r\n    // Left and Down Arrows\r\n    if (event.which === 37 || event.which === 40) {\r\n      event.preventDefault();\r\n      this.stepForward();\r\n\r\n      // Up and Right Arrows\r\n    } else if (event.which === 38 || event.which === 39) {\r\n      event.preventDefault();\r\n      this.stepBack();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Move to next (lower) menu item for keyboard users.\r\n   */\r\n\r\n\r\n  Menu.prototype.stepForward = function stepForward() {\r\n    var stepChild = 0;\r\n\r\n    if (this.focusedChild_ !== undefined) {\r\n      stepChild = this.focusedChild_ + 1;\r\n    }\r\n    this.focus(stepChild);\r\n  };\r\n\r\n  /**\r\n   * Move to previous (higher) menu item for keyboard users.\r\n   */\r\n\r\n\r\n  Menu.prototype.stepBack = function stepBack() {\r\n    var stepChild = 0;\r\n\r\n    if (this.focusedChild_ !== undefined) {\r\n      stepChild = this.focusedChild_ - 1;\r\n    }\r\n    this.focus(stepChild);\r\n  };\r\n\r\n  /**\r\n   * Set focus on a {@link MenuItem} in the `Menu`.\r\n   *\r\n   * @param {Object|string} [item=0]\r\n   *        Index of child item set focus on.\r\n   */\r\n\r\n\r\n  Menu.prototype.focus = function focus() {\r\n    var item = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\r\n\r\n    var children = this.children().slice();\r\n    var haveTitle = children.length && children[0].className && /vjs-menu-title/.test(children[0].className);\r\n\r\n    if (haveTitle) {\r\n      children.shift();\r\n    }\r\n\r\n    if (children.length > 0) {\r\n      if (item < 0) {\r\n        item = 0;\r\n      } else if (item >= children.length) {\r\n        item = children.length - 1;\r\n      }\r\n\r\n      this.focusedChild_ = item;\r\n\r\n      children[item].el_.focus();\r\n    }\r\n  };\r\n\r\n  return Menu;\r\n}(Component);\r\n\r\nComponent.registerComponent('Menu', Menu);\r\n\r\n/**\r\n * @file menu-button.js\r\n */\r\n/**\r\n * A `MenuButton` class for any popup {@link Menu}.\r\n *\r\n * @extends Component\r\n */\r\n\r\nvar MenuButton = function (_Component) {\r\n  inherits(MenuButton, _Component);\r\n\r\n  /**\r\n   * Creates an instance of this class.\r\n   *\r\n   * @param {Player} player\r\n   *        The `Player` that this class should be attached to.\r\n   *\r\n   * @param {Object} [options={}]\r\n   *        The key/value store of player options.\r\n   */\r\n  function MenuButton(player) {\r\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n    classCallCheck(this, MenuButton);\r\n\r\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\r\n\r\n    _this.menuButton_ = new Button(player, options);\r\n\r\n    _this.menuButton_.controlText(_this.controlText_);\r\n    _this.menuButton_.el_.setAttribute('aria-haspopup', 'true');\r\n\r\n    // Add buildCSSClass values to the button, not the wrapper\r\n    var buttonClass = Button.prototype.buildCSSClass();\r\n\r\n    _this.menuButton_.el_.className = _this.buildCSSClass() + ' ' + buttonClass;\r\n    _this.menuButton_.removeClass('vjs-control');\r\n\r\n    _this.addChild(_this.menuButton_);\r\n\r\n    _this.update();\r\n\r\n    _this.enabled_ = true;\r\n\r\n    _this.on(_this.menuButton_, 'tap', _this.handleClick);\r\n    _this.on(_this.menuButton_, 'click', _this.handleClick);\r\n    _this.on(_this.menuButton_, 'focus', _this.handleFocus);\r\n    _this.on(_this.menuButton_, 'blur', _this.handleBlur);\r\n\r\n    _this.on('keydown', _this.handleSubmenuKeyPress);\r\n    return _this;\r\n  }\r\n\r\n  /**\r\n   * Update the menu based on the current state of its items.\r\n   */\r\n\r\n\r\n  MenuButton.prototype.update = function update() {\r\n    var menu = this.createMenu();\r\n\r\n    if (this.menu) {\r\n      this.menu.dispose();\r\n      this.removeChild(this.menu);\r\n    }\r\n\r\n    this.menu = menu;\r\n    this.addChild(menu);\r\n\r\n    /**\r\n     * Track the state of the menu button\r\n     *\r\n     * @type {Boolean}\r\n     * @private\r\n     */\r\n    this.buttonPressed_ = false;\r\n    this.menuButton_.el_.setAttribute('aria-expanded', 'false');\r\n\r\n    if (this.items && this.items.length <= this.hideThreshold_) {\r\n      this.hide();\r\n    } else {\r\n      this.show();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Create the menu and add all items to it.\r\n   *\r\n   * @return {Menu}\r\n   *         The constructed menu\r\n   */\r\n\r\n\r\n  MenuButton.prototype.createMenu = function createMenu() {\r\n    var menu = new Menu(this.player_, { menuButton: this });\r\n\r\n    /**\r\n     * Hide the menu if the number of items is less than or equal to this threshold. This defaults\r\n     * to 0 and whenever we add items which can be hidden to the menu we'll increment it. We list\r\n     * it here because every time we run `createMenu` we need to reset the value.\r\n     *\r\n     * @protected\r\n     * @type {Number}\r\n     */\r\n    this.hideThreshold_ = 0;\r\n\r\n    // Add a title list item to the top\r\n    if (this.options_.title) {\r\n      var title = createEl('li', {\r\n        className: 'vjs-menu-title',\r\n        innerHTML: toTitleCase(this.options_.title),\r\n        tabIndex: -1\r\n      });\r\n\r\n      this.hideThreshold_ += 1;\r\n\r\n      menu.children_.unshift(title);\r\n      prependTo(title, menu.contentEl());\r\n    }\r\n\r\n    this.items = this.createItems();\r\n\r\n    if (this.items) {\r\n      // Add menu items to the menu\r\n      for (var i = 0; i < this.items.length; i++) {\r\n        menu.addItem(this.items[i]);\r\n      }\r\n    }\r\n\r\n    return menu;\r\n  };\r\n\r\n  /**\r\n   * Create the list of menu items. Specific to each subclass.\r\n   *\r\n   * @abstract\r\n   */\r\n\r\n\r\n  MenuButton.prototype.createItems = function createItems() {};\r\n\r\n  /**\r\n   * Create the `MenuButtons`s DOM element.\r\n   *\r\n   * @return {Element}\r\n   *         The element that gets created.\r\n   */\r\n\r\n\r\n  MenuButton.prototype.createEl = function createEl$$1() {\r\n    return _Component.prototype.createEl.call(this, 'div', {\r\n      className: this.buildWrapperCSSClass()\r\n    }, {});\r\n  };\r\n\r\n  /**\r\n   * Allow sub components to stack CSS class names for the wrapper element\r\n   *\r\n   * @return {string}\r\n   *         The constructed wrapper DOM `className`\r\n   */\r\n\r\n\r\n  MenuButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\r\n    var menuButtonClass = 'vjs-menu-button';\r\n\r\n    // If the inline option is passed, we want to use different styles altogether.\r\n    if (this.options_.inline === true) {\r\n      menuButtonClass += '-inline';\r\n    } else {\r\n      menuButtonClass += '-popup';\r\n    }\r\n\r\n    // TODO: Fix the CSS so that this isn't necessary\r\n    var buttonClass = Button.prototype.buildCSSClass();\r\n\r\n    return 'vjs-menu-button ' + menuButtonClass + ' ' + buttonClass + ' ' + _Component.prototype.buildCSSClass.call(this);\r\n  };\r\n\r\n  /**\r\n   * Builds the default DOM `className`.\r\n   *\r\n   * @return {string}\r\n   *         The DOM `className` for this object.\r\n   */\r\n\r\n\r\n  MenuButton.prototype.buildCSSClass = function buildCSSClass() {\r\n    var menuButtonClass = 'vjs-menu-button';\r\n\r\n    // If the inline option is passed, we want to use different styles altogether.\r\n    if (this.options_.inline === true) {\r\n      menuButtonClass += '-inline';\r\n    } else {\r\n      menuButtonClass += '-popup';\r\n    }\r\n\r\n    return 'vjs-menu-button ' + menuButtonClass + ' ' + _Component.prototype.buildCSSClass.call(this);\r\n  };\r\n\r\n  /**\r\n   * Get or set the localized control text that will be used for accessibility.\r\n   *\r\n   * > NOTE: This will come from the internal `menuButton_` element.\r\n   *\r\n   * @param {string} [text]\r\n   *        Control text for element.\r\n   *\r\n   * @param {Element} [el=this.menuButton_.el()]\r\n   *        Element to set the title on.\r\n   *\r\n   * @return {string}\r\n   *         - The control text when getting\r\n   */\r\n\r\n\r\n  MenuButton.prototype.controlText = function controlText(text) {\r\n    var el = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.menuButton_.el();\r\n\r\n    return this.menuButton_.controlText(text, el);\r\n  };\r\n\r\n  /**\r\n   * Handle a click on a `MenuButton`.\r\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\r\n   *        called.\r\n   *\r\n   * @listens tap\r\n   * @listens click\r\n   */\r\n\r\n\r\n  MenuButton.prototype.handleClick = function handleClick(event) {\r\n    // When you click the button it adds focus, which will show the menu.\r\n    // So we'll remove focus when the mouse leaves the button. Focus is needed\r\n    // for tab navigation.\r\n\r\n    this.one(this.menu.contentEl(), 'mouseleave', bind(this, function (e) {\r\n      this.unpressButton();\r\n      this.el_.blur();\r\n    }));\r\n    if (this.buttonPressed_) {\r\n      this.unpressButton();\r\n    } else {\r\n      this.pressButton();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Set the focus to the actual button, not to this element\r\n   */\r\n\r\n\r\n  MenuButton.prototype.focus = function focus() {\r\n    this.menuButton_.focus();\r\n  };\r\n\r\n  /**\r\n   * Remove the focus from the actual button, not this element\r\n   */\r\n\r\n\r\n  MenuButton.prototype.blur = function blur() {\r\n    this.menuButton_.blur();\r\n  };\r\n\r\n  /**\r\n   * This gets called when a `MenuButton` gains focus via a `focus` event.\r\n   * Turns on listening for `keydown` events. When they happen it\r\n   * calls `this.handleKeyPress`.\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        The `focus` event that caused this function to be called.\r\n   *\r\n   * @listens focus\r\n   */\r\n\r\n\r\n  MenuButton.prototype.handleFocus = function handleFocus() {\r\n    on(document, 'keydown', bind(this, this.handleKeyPress));\r\n  };\r\n\r\n  /**\r\n   * Called when a `MenuButton` loses focus. Turns off the listener for\r\n   * `keydown` events. Which Stops `this.handleKeyPress` from getting called.\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        The `blur` event that caused this function to be called.\r\n   *\r\n   * @listens blur\r\n   */\r\n\r\n\r\n  MenuButton.prototype.handleBlur = function handleBlur() {\r\n    off(document, 'keydown', bind(this, this.handleKeyPress));\r\n  };\r\n\r\n  /**\r\n   * Handle tab, escape, down arrow, and up arrow keys for `MenuButton`. See\r\n   * {@link ClickableComponent#handleKeyPress} for instances where this is called.\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        The `keydown` event that caused this function to be called.\r\n   *\r\n   * @listens keydown\r\n   */\r\n\r\n\r\n  MenuButton.prototype.handleKeyPress = function handleKeyPress(event) {\r\n\r\n    // Escape (27) key or Tab (9) key unpress the 'button'\r\n    if (event.which === 27 || event.which === 9) {\r\n      if (this.buttonPressed_) {\r\n        this.unpressButton();\r\n      }\r\n      // Don't preventDefault for Tab key - we still want to lose focus\r\n      if (event.which !== 9) {\r\n        event.preventDefault();\r\n        // Set focus back to the menu button's button\r\n        this.menuButton_.el_.focus();\r\n      }\r\n      // Up (38) key or Down (40) key press the 'button'\r\n    } else if (event.which === 38 || event.which === 40) {\r\n      if (!this.buttonPressed_) {\r\n        this.pressButton();\r\n        event.preventDefault();\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handle a `keydown` event on a sub-menu. The listener for this is added in\r\n   * the constructor.\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        Key press event\r\n   *\r\n   * @listens keydown\r\n   */\r\n\r\n\r\n  MenuButton.prototype.handleSubmenuKeyPress = function handleSubmenuKeyPress(event) {\r\n\r\n    // Escape (27) key or Tab (9) key unpress the 'button'\r\n    if (event.which === 27 || event.which === 9) {\r\n      if (this.buttonPressed_) {\r\n        this.unpressButton();\r\n      }\r\n      // Don't preventDefault for Tab key - we still want to lose focus\r\n      if (event.which !== 9) {\r\n        event.preventDefault();\r\n        // Set focus back to the menu button's button\r\n        this.menuButton_.el_.focus();\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Put the current `MenuButton` into a pressed state.\r\n   */\r\n\r\n\r\n  MenuButton.prototype.pressButton = function pressButton() {\r\n    if (this.enabled_) {\r\n      this.buttonPressed_ = true;\r\n      this.menu.lockShowing();\r\n      this.menuButton_.el_.setAttribute('aria-expanded', 'true');\r\n\r\n      // set the focus into the submenu, except on iOS where it is resulting in\r\n      // undesired scrolling behavior when the player is in an iframe\r\n      if (IS_IOS && isInFrame()) {\r\n        // Return early so that the menu isn't focused\r\n        return;\r\n      }\r\n\r\n      this.menu.focus();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Take the current `MenuButton` out of a pressed state.\r\n   */\r\n\r\n\r\n  MenuButton.prototype.unpressButton = function unpressButton() {\r\n    if (this.enabled_) {\r\n      this.buttonPressed_ = false;\r\n      this.menu.unlockShowing();\r\n      this.menuButton_.el_.setAttribute('aria-expanded', 'false');\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Disable the `MenuButton`. Don't allow it to be clicked.\r\n   */\r\n\r\n\r\n  MenuButton.prototype.disable = function disable() {\r\n    this.unpressButton();\r\n\r\n    this.enabled_ = false;\r\n    this.addClass('vjs-disabled');\r\n\r\n    this.menuButton_.disable();\r\n  };\r\n\r\n  /**\r\n   * Enable the `MenuButton`. Allow it to be clicked.\r\n   */\r\n\r\n\r\n  MenuButton.prototype.enable = function enable() {\r\n    this.enabled_ = true;\r\n    this.removeClass('vjs-disabled');\r\n\r\n    this.menuButton_.enable();\r\n  };\r\n\r\n  return MenuButton;\r\n}(Component);\r\n\r\nComponent.registerComponent('MenuButton', MenuButton);\r\n\r\n/**\r\n * @file track-button.js\r\n */\r\n/**\r\n * The base class for buttons that toggle specific  track types (e.g. subtitles).\r\n *\r\n * @extends MenuButton\r\n */\r\n\r\nvar TrackButton = function (_MenuButton) {\r\n  inherits(TrackButton, _MenuButton);\r\n\r\n  /**\r\n   * Creates an instance of this class.\r\n   *\r\n   * @param {Player} player\r\n   *        The `Player` that this class should be attached to.\r\n   *\r\n   * @param {Object} [options]\r\n   *        The key/value store of player options.\r\n   */\r\n  function TrackButton(player, options) {\r\n    classCallCheck(this, TrackButton);\r\n\r\n    var tracks = options.tracks;\r\n\r\n    var _this = possibleConstructorReturn(this, _MenuButton.call(this, player, options));\r\n\r\n    if (_this.items.length <= 1) {\r\n      _this.hide();\r\n    }\r\n\r\n    if (!tracks) {\r\n      return possibleConstructorReturn(_this);\r\n    }\r\n\r\n    var updateHandler = bind(_this, _this.update);\r\n\r\n    tracks.addEventListener('removetrack', updateHandler);\r\n    tracks.addEventListener('addtrack', updateHandler);\r\n    _this.player_.on('ready', updateHandler);\r\n\r\n    _this.player_.on('dispose', function () {\r\n      tracks.removeEventListener('removetrack', updateHandler);\r\n      tracks.removeEventListener('addtrack', updateHandler);\r\n    });\r\n    return _this;\r\n  }\r\n\r\n  return TrackButton;\r\n}(MenuButton);\r\n\r\nComponent.registerComponent('TrackButton', TrackButton);\r\n\r\n/**\r\n * @file menu-item.js\r\n */\r\n/**\r\n * The component for a menu item. `<li>`\r\n *\r\n * @extends ClickableComponent\r\n */\r\n\r\nvar MenuItem = function (_ClickableComponent) {\r\n  inherits(MenuItem, _ClickableComponent);\r\n\r\n  /**\r\n   * Creates an instance of the this class.\r\n   *\r\n   * @param {Player} player\r\n   *        The `Player` that this class should be attached to.\r\n   *\r\n   * @param {Object} [options={}]\r\n   *        The key/value store of player options.\r\n   *\r\n   */\r\n  function MenuItem(player, options) {\r\n    classCallCheck(this, MenuItem);\r\n\r\n    var _this = possibleConstructorReturn(this, _ClickableComponent.call(this, player, options));\r\n\r\n    _this.selectable = options.selectable;\r\n    _this.isSelected_ = options.selected || false;\r\n    _this.multiSelectable = options.multiSelectable;\r\n\r\n    _this.selected(_this.isSelected_);\r\n\r\n    if (_this.selectable) {\r\n      if (_this.multiSelectable) {\r\n        _this.el_.setAttribute('role', 'menuitemcheckbox');\r\n      } else {\r\n        _this.el_.setAttribute('role', 'menuitemradio');\r\n      }\r\n    } else {\r\n      _this.el_.setAttribute('role', 'menuitem');\r\n    }\r\n    return _this;\r\n  }\r\n\r\n  /**\r\n   * Create the `MenuItem's DOM element\r\n   *\r\n   * @param {string} [type=li]\r\n   *        Element's node type, not actually used, always set to `li`.\r\n   *\r\n   * @param {Object} [props={}]\r\n   *        An object of properties that should be set on the element\r\n   *\r\n   * @param {Object} [attrs={}]\r\n   *        An object of attributes that should be set on the element\r\n   *\r\n   * @return {Element}\r\n   *         The element that gets created.\r\n   */\r\n\r\n\r\n  MenuItem.prototype.createEl = function createEl(type, props, attrs) {\r\n    // The control is textual, not just an icon\r\n    this.nonIconControl = true;\r\n\r\n    return _ClickableComponent.prototype.createEl.call(this, 'li', assign({\r\n      className: 'vjs-menu-item',\r\n      innerHTML: '<span class=\"vjs-menu-item-text\">' + this.localize(this.options_.label) + '</span>',\r\n      tabIndex: -1\r\n    }, props), attrs);\r\n  };\r\n\r\n  /**\r\n   * Any click on a `MenuItem` puts it into the selected state.\r\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\r\n   *        called.\r\n   *\r\n   * @listens tap\r\n   * @listens click\r\n   */\r\n\r\n\r\n  MenuItem.prototype.handleClick = function handleClick(event) {\r\n    this.selected(true);\r\n  };\r\n\r\n  /**\r\n   * Set the state for this menu item as selected or not.\r\n   *\r\n   * @param {boolean} selected\r\n   *        if the menu item is selected or not\r\n   */\r\n\r\n\r\n  MenuItem.prototype.selected = function selected(_selected) {\r\n    if (this.selectable) {\r\n      if (_selected) {\r\n        this.addClass('vjs-selected');\r\n        this.el_.setAttribute('aria-checked', 'true');\r\n        // aria-checked isn't fully supported by browsers/screen readers,\r\n        // so indicate selected state to screen reader in the control text.\r\n        this.controlText(', selected');\r\n        this.isSelected_ = true;\r\n      } else {\r\n        this.removeClass('vjs-selected');\r\n        this.el_.setAttribute('aria-checked', 'false');\r\n        // Indicate un-selected state to screen reader\r\n        this.controlText('');\r\n        this.isSelected_ = false;\r\n      }\r\n    }\r\n  };\r\n\r\n  return MenuItem;\r\n}(ClickableComponent);\r\n\r\nComponent.registerComponent('MenuItem', MenuItem);\r\n\r\n/**\r\n * @file text-track-menu-item.js\r\n */\r\n/**\r\n * The specific menu item type for selecting a language within a text track kind\r\n *\r\n * @extends MenuItem\r\n */\r\n\r\nvar TextTrackMenuItem = function (_MenuItem) {\r\n  inherits(TextTrackMenuItem, _MenuItem);\r\n\r\n  /**\r\n   * Creates an instance of this class.\r\n   *\r\n   * @param {Player} player\r\n   *        The `Player` that this class should be attached to.\r\n   *\r\n   * @param {Object} [options]\r\n   *        The key/value store of player options.\r\n   */\r\n  function TextTrackMenuItem(player, options) {\r\n    classCallCheck(this, TextTrackMenuItem);\r\n\r\n    var track = options.track;\r\n    var tracks = player.textTracks();\r\n\r\n    // Modify options for parent MenuItem class's init.\r\n    options.label = track.label || track.language || 'Unknown';\r\n    options.selected = track.mode === 'showing';\r\n\r\n    var _this = possibleConstructorReturn(this, _MenuItem.call(this, player, options));\r\n\r\n    _this.track = track;\r\n    var changeHandler = function changeHandler() {\r\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\r\n        args[_key] = arguments[_key];\r\n      }\r\n\r\n      _this.handleTracksChange.apply(_this, args);\r\n    };\r\n    var selectedLanguageChangeHandler = function selectedLanguageChangeHandler() {\r\n      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\r\n        args[_key2] = arguments[_key2];\r\n      }\r\n\r\n      _this.handleSelectedLanguageChange.apply(_this, args);\r\n    };\r\n\r\n    player.on(['loadstart', 'texttrackchange'], changeHandler);\r\n    tracks.addEventListener('change', changeHandler);\r\n    tracks.addEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\r\n    _this.on('dispose', function () {\r\n      player.off(['loadstart', 'texttrackchange'], changeHandler);\r\n      tracks.removeEventListener('change', changeHandler);\r\n      tracks.removeEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\r\n    });\r\n\r\n    // iOS7 doesn't dispatch change events to TextTrackLists when an\r\n    // associated track's mode changes. Without something like\r\n    // Object.observe() (also not present on iOS7), it's not\r\n    // possible to detect changes to the mode attribute and polyfill\r\n    // the change event. As a poor substitute, we manually dispatch\r\n    // change events whenever the controls modify the mode.\r\n    if (tracks.onchange === undefined) {\r\n      var event = void 0;\r\n\r\n      _this.on(['tap', 'click'], function () {\r\n        if (_typeof(window.Event) !== 'object') {\r\n          // Android 2.3 throws an Illegal Constructor error for window.Event\r\n          try {\r\n            event = new window.Event('change');\r\n          } catch (err) {\r\n            // continue regardless of error\r\n          }\r\n        }\r\n\r\n        if (!event) {\r\n          event = document.createEvent('Event');\r\n          event.initEvent('change', true, true);\r\n        }\r\n\r\n        tracks.dispatchEvent(event);\r\n      });\r\n    }\r\n\r\n    // set the default state based on current tracks\r\n    _this.handleTracksChange();\r\n    return _this;\r\n  }\r\n\r\n  /**\r\n   * This gets called when an `TextTrackMenuItem` is \"clicked\". See\r\n   * {@link ClickableComponent} for more detailed information on what a click can be.\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\r\n   *        called.\r\n   *\r\n   * @listens tap\r\n   * @listens click\r\n   */\r\n\r\n\r\n  TextTrackMenuItem.prototype.handleClick = function handleClick(event) {\r\n    var kind = this.track.kind;\r\n    var kinds = this.track.kinds;\r\n    var tracks = this.player_.textTracks();\r\n\r\n    if (!kinds) {\r\n      kinds = [kind];\r\n    }\r\n\r\n    _MenuItem.prototype.handleClick.call(this, event);\r\n\r\n    if (!tracks) {\r\n      return;\r\n    }\r\n\r\n    for (var i = 0; i < tracks.length; i++) {\r\n      var track = tracks[i];\r\n\r\n      if (track === this.track && kinds.indexOf(track.kind) > -1) {\r\n        if (track.mode !== 'showing') {\r\n          track.mode = 'showing';\r\n        }\r\n      } else if (track.mode !== 'disabled') {\r\n        track.mode = 'disabled';\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handle text track list change\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        The `change` event that caused this function to be called.\r\n   *\r\n   * @listens TextTrackList#change\r\n   */\r\n\r\n\r\n  TextTrackMenuItem.prototype.handleTracksChange = function handleTracksChange(event) {\r\n    var shouldBeSelected = this.track.mode === 'showing';\r\n\r\n    // Prevent redundant selected() calls because they may cause\r\n    // screen readers to read the appended control text unnecessarily\r\n    if (shouldBeSelected !== this.isSelected_) {\r\n      this.selected(shouldBeSelected);\r\n    }\r\n  };\r\n\r\n  TextTrackMenuItem.prototype.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\r\n    if (this.track.mode === 'showing') {\r\n      var selectedLanguage = this.player_.cache_.selectedLanguage;\r\n\r\n      // Don't replace the kind of track across the same language\r\n      if (selectedLanguage && selectedLanguage.enabled && selectedLanguage.language === this.track.language && selectedLanguage.kind !== this.track.kind) {\r\n        return;\r\n      }\r\n\r\n      this.player_.cache_.selectedLanguage = {\r\n        enabled: true,\r\n        language: this.track.language,\r\n        kind: this.track.kind\r\n      };\r\n    }\r\n  };\r\n\r\n  TextTrackMenuItem.prototype.dispose = function dispose() {\r\n    // remove reference to track object on dispose\r\n    this.track = null;\r\n\r\n    _MenuItem.prototype.dispose.call(this);\r\n  };\r\n\r\n  return TextTrackMenuItem;\r\n}(MenuItem);\r\n\r\nComponent.registerComponent('TextTrackMenuItem', TextTrackMenuItem);\r\n\r\n/**\r\n * @file off-text-track-menu-item.js\r\n */\r\n/**\r\n * A special menu item for turning of a specific type of text track\r\n *\r\n * @extends TextTrackMenuItem\r\n */\r\n\r\nvar OffTextTrackMenuItem = function (_TextTrackMenuItem) {\r\n  inherits(OffTextTrackMenuItem, _TextTrackMenuItem);\r\n\r\n  /**\r\n   * Creates an instance of this class.\r\n   *\r\n   * @param {Player} player\r\n   *        The `Player` that this class should be attached to.\r\n   *\r\n   * @param {Object} [options]\r\n   *        The key/value store of player options.\r\n   */\r\n  function OffTextTrackMenuItem(player, options) {\r\n    classCallCheck(this, OffTextTrackMenuItem);\r\n\r\n    // Create pseudo track info\r\n    // Requires options['kind']\r\n    options.track = {\r\n      player: player,\r\n      kind: options.kind,\r\n      kinds: options.kinds,\r\n      'default': false,\r\n      mode: 'disabled'\r\n    };\r\n\r\n    if (!options.kinds) {\r\n      options.kinds = [options.kind];\r\n    }\r\n\r\n    if (options.label) {\r\n      options.track.label = options.label;\r\n    } else {\r\n      options.track.label = options.kinds.join(' and ') + ' off';\r\n    }\r\n\r\n    // MenuItem is selectable\r\n    options.selectable = true;\r\n    // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\r\n    options.multiSelectable = false;\r\n\r\n    return possibleConstructorReturn(this, _TextTrackMenuItem.call(this, player, options));\r\n  }\r\n\r\n  /**\r\n   * Handle text track change\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        The event that caused this function to run\r\n   */\r\n\r\n\r\n  OffTextTrackMenuItem.prototype.handleTracksChange = function handleTracksChange(event) {\r\n    var tracks = this.player().textTracks();\r\n    var shouldBeSelected = true;\r\n\r\n    for (var i = 0, l = tracks.length; i < l; i++) {\r\n      var track = tracks[i];\r\n\r\n      if (this.options_.kinds.indexOf(track.kind) > -1 && track.mode === 'showing') {\r\n        shouldBeSelected = false;\r\n        break;\r\n      }\r\n    }\r\n\r\n    // Prevent redundant selected() calls because they may cause\r\n    // screen readers to read the appended control text unnecessarily\r\n    if (shouldBeSelected !== this.isSelected_) {\r\n      this.selected(shouldBeSelected);\r\n    }\r\n  };\r\n\r\n  OffTextTrackMenuItem.prototype.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\r\n    var tracks = this.player().textTracks();\r\n    var allHidden = true;\r\n\r\n    for (var i = 0, l = tracks.length; i < l; i++) {\r\n      var track = tracks[i];\r\n\r\n      if (['captions', 'descriptions', 'subtitles'].indexOf(track.kind) > -1 && track.mode === 'showing') {\r\n        allHidden = false;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (allHidden) {\r\n      this.player_.cache_.selectedLanguage = {\r\n        enabled: false\r\n      };\r\n    }\r\n  };\r\n\r\n  return OffTextTrackMenuItem;\r\n}(TextTrackMenuItem);\r\n\r\nComponent.registerComponent('OffTextTrackMenuItem', OffTextTrackMenuItem);\r\n\r\n/**\r\n * @file text-track-button.js\r\n */\r\n/**\r\n * The base class for buttons that toggle specific text track types (e.g. subtitles)\r\n *\r\n * @extends MenuButton\r\n */\r\n\r\nvar TextTrackButton = function (_TrackButton) {\r\n  inherits(TextTrackButton, _TrackButton);\r\n\r\n  /**\r\n   * Creates an instance of this class.\r\n   *\r\n   * @param {Player} player\r\n   *        The `Player` that this class should be attached to.\r\n   *\r\n   * @param {Object} [options={}]\r\n   *        The key/value store of player options.\r\n   */\r\n  function TextTrackButton(player) {\r\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n    classCallCheck(this, TextTrackButton);\r\n\r\n    options.tracks = player.textTracks();\r\n\r\n    return possibleConstructorReturn(this, _TrackButton.call(this, player, options));\r\n  }\r\n\r\n  /**\r\n   * Create a menu item for each text track\r\n   *\r\n   * @param {TextTrackMenuItem[]} [items=[]]\r\n   *        Existing array of items to use during creation\r\n   *\r\n   * @return {TextTrackMenuItem[]}\r\n   *         Array of menu items that were created\r\n   */\r\n\r\n\r\n  TextTrackButton.prototype.createItems = function createItems() {\r\n    var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\r\n    var TrackMenuItem = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : TextTrackMenuItem;\r\n\r\n\r\n    // Label is an overide for the [track] off label\r\n    // USed to localise captions/subtitles\r\n    var label = void 0;\r\n\r\n    if (this.label_) {\r\n      label = this.label_ + ' off';\r\n    }\r\n    // Add an OFF menu item to turn all tracks off\r\n    items.push(new OffTextTrackMenuItem(this.player_, {\r\n      kinds: this.kinds_,\r\n      kind: this.kind_,\r\n      label: label\r\n    }));\r\n\r\n    this.hideThreshold_ += 1;\r\n\r\n    var tracks = this.player_.textTracks();\r\n\r\n    if (!Array.isArray(this.kinds_)) {\r\n      this.kinds_ = [this.kind_];\r\n    }\r\n\r\n    for (var i = 0; i < tracks.length; i++) {\r\n      var track = tracks[i];\r\n\r\n      // only add tracks that are of an appropriate kind and have a label\r\n      if (this.kinds_.indexOf(track.kind) > -1) {\r\n\r\n        var item = new TrackMenuItem(this.player_, {\r\n          track: track,\r\n          // MenuItem is selectable\r\n          selectable: true,\r\n          // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\r\n          multiSelectable: false\r\n        });\r\n\r\n        item.addClass('vjs-' + track.kind + '-menu-item');\r\n        items.push(item);\r\n      }\r\n    }\r\n\r\n    return items;\r\n  };\r\n\r\n  return TextTrackButton;\r\n}(TrackButton);\r\n\r\nComponent.registerComponent('TextTrackButton', TextTrackButton);\r\n\r\n/**\r\n * @file chapters-track-menu-item.js\r\n */\r\n/**\r\n * The chapter track menu item\r\n *\r\n * @extends MenuItem\r\n */\r\n\r\nvar ChaptersTrackMenuItem = function (_MenuItem) {\r\n  inherits(ChaptersTrackMenuItem, _MenuItem);\r\n\r\n  /**\r\n   * Creates an instance of this class.\r\n   *\r\n   * @param {Player} player\r\n   *        The `Player` that this class should be attached to.\r\n   *\r\n   * @param {Object} [options]\r\n   *        The key/value store of player options.\r\n   */\r\n  function ChaptersTrackMenuItem(player, options) {\r\n    classCallCheck(this, ChaptersTrackMenuItem);\r\n\r\n    var track = options.track;\r\n    var cue = options.cue;\r\n    var currentTime = player.currentTime();\r\n\r\n    // Modify options for parent MenuItem class's init.\r\n    options.selectable = true;\r\n    options.multiSelectable = false;\r\n    options.label = cue.text;\r\n    options.selected = cue.startTime <= currentTime && currentTime < cue.endTime;\r\n\r\n    var _this = possibleConstructorReturn(this, _MenuItem.call(this, player, options));\r\n\r\n    _this.track = track;\r\n    _this.cue = cue;\r\n    track.addEventListener('cuechange', bind(_this, _this.update));\r\n    return _this;\r\n  }\r\n\r\n  /**\r\n   * This gets called when an `ChaptersTrackMenuItem` is \"clicked\". See\r\n   * {@link ClickableComponent} for more detailed information on what a click can be.\r\n   *\r\n   * @param {EventTarget~Event} [event]\r\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\r\n   *        called.\r\n   *\r\n   * @listens tap\r\n   * @listens click\r\n   */\r\n\r\n\r\n  ChaptersTrackMenuItem.prototype.handleClick = function handleClick(event) {\r\n    _MenuItem.prototype.handleClick.call(this);\r\n    this.player_.currentTime(this.cue.startTime);\r\n    this.update(this.cue.startTime);\r\n  };\r\n\r\n  /**\r\n   * Update chapter menu item\r\n   *\r\n   * @param {EventTarget~Event} [event]\r\n   *        The `cuechange` event that caused this function to run.\r\n   *\r\n   * @listens TextTrack#cuechange\r\n   */\r\n\r\n\r\n  ChaptersTrackMenuItem.prototype.update = function update(event) {\r\n    var cue = this.cue;\r\n    var currentTime = this.player_.currentTime();\r\n\r\n    // vjs.log(currentTime, cue.startTime);\r\n    this.selected(cue.startTime <= currentTime && currentTime < cue.endTime);\r\n  };\r\n\r\n  return ChaptersTrackMenuItem;\r\n}(MenuItem);\r\n\r\nComponent.registerComponent('ChaptersTrackMenuItem', ChaptersTrackMenuItem);\r\n\r\n/**\r\n * @file chapters-button.js\r\n */\r\n/**\r\n * The button component for toggling and selecting chapters\r\n * Chapters act much differently than other text tracks\r\n * Cues are navigation vs. other tracks of alternative languages\r\n *\r\n * @extends TextTrackButton\r\n */\r\n\r\nvar ChaptersButton = function (_TextTrackButton) {\r\n  inherits(ChaptersButton, _TextTrackButton);\r\n\r\n  /**\r\n   * Creates an instance of this class.\r\n   *\r\n   * @param {Player} player\r\n   *        The `Player` that this class should be attached to.\r\n   *\r\n   * @param {Object} [options]\r\n   *        The key/value store of player options.\r\n   *\r\n   * @param {Component~ReadyCallback} [ready]\r\n   *        The function to call when this function is ready.\r\n   */\r\n  function ChaptersButton(player, options, ready) {\r\n    classCallCheck(this, ChaptersButton);\r\n    return possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\r\n  }\r\n\r\n  /**\r\n   * Builds the default DOM `className`.\r\n   *\r\n   * @return {string}\r\n   *         The DOM `className` for this object.\r\n   */\r\n\r\n\r\n  ChaptersButton.prototype.buildCSSClass = function buildCSSClass() {\r\n    return 'vjs-chapters-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\r\n  };\r\n\r\n  ChaptersButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\r\n    return 'vjs-chapters-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\r\n  };\r\n\r\n  /**\r\n   * Update the menu based on the current state of its items.\r\n   *\r\n   * @param {EventTarget~Event} [event]\r\n   *        An event that triggered this function to run.\r\n   *\r\n   * @listens TextTrackList#addtrack\r\n   * @listens TextTrackList#removetrack\r\n   * @listens TextTrackList#change\r\n   */\r\n\r\n\r\n  ChaptersButton.prototype.update = function update(event) {\r\n    if (!this.track_ || event && (event.type === 'addtrack' || event.type === 'removetrack')) {\r\n      this.setTrack(this.findChaptersTrack());\r\n    }\r\n    _TextTrackButton.prototype.update.call(this);\r\n  };\r\n\r\n  /**\r\n   * Set the currently selected track for the chapters button.\r\n   *\r\n   * @param {TextTrack} track\r\n   *        The new track to select. Nothing will change if this is the currently selected\r\n   *        track.\r\n   */\r\n\r\n\r\n  ChaptersButton.prototype.setTrack = function setTrack(track) {\r\n    if (this.track_ === track) {\r\n      return;\r\n    }\r\n\r\n    if (!this.updateHandler_) {\r\n      this.updateHandler_ = this.update.bind(this);\r\n    }\r\n\r\n    // here this.track_ refers to the old track instance\r\n    if (this.track_) {\r\n      var remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\r\n\r\n      if (remoteTextTrackEl) {\r\n        remoteTextTrackEl.removeEventListener('load', this.updateHandler_);\r\n      }\r\n\r\n      this.track_ = null;\r\n    }\r\n\r\n    this.track_ = track;\r\n\r\n    // here this.track_ refers to the new track instance\r\n    if (this.track_) {\r\n      this.track_.mode = 'hidden';\r\n\r\n      var _remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\r\n\r\n      if (_remoteTextTrackEl) {\r\n        _remoteTextTrackEl.addEventListener('load', this.updateHandler_);\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Find the track object that is currently in use by this ChaptersButton\r\n   *\r\n   * @return {TextTrack|undefined}\r\n   *         The current track or undefined if none was found.\r\n   */\r\n\r\n\r\n  ChaptersButton.prototype.findChaptersTrack = function findChaptersTrack() {\r\n    var tracks = this.player_.textTracks() || [];\r\n\r\n    for (var i = tracks.length - 1; i >= 0; i--) {\r\n      // We will always choose the last track as our chaptersTrack\r\n      var track = tracks[i];\r\n\r\n      if (track.kind === this.kind_) {\r\n        return track;\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Get the caption for the ChaptersButton based on the track label. This will also\r\n   * use the current tracks localized kind as a fallback if a label does not exist.\r\n   *\r\n   * @return {string}\r\n   *         The tracks current label or the localized track kind.\r\n   */\r\n\r\n\r\n  ChaptersButton.prototype.getMenuCaption = function getMenuCaption() {\r\n    if (this.track_ && this.track_.label) {\r\n      return this.track_.label;\r\n    }\r\n    return this.localize(toTitleCase(this.kind_));\r\n  };\r\n\r\n  /**\r\n   * Create menu from chapter track\r\n   *\r\n   * @return {Menu}\r\n   *         New menu for the chapter buttons\r\n   */\r\n\r\n\r\n  ChaptersButton.prototype.createMenu = function createMenu() {\r\n    this.options_.title = this.getMenuCaption();\r\n    return _TextTrackButton.prototype.createMenu.call(this);\r\n  };\r\n\r\n  /**\r\n   * Create a menu item for each text track\r\n   *\r\n   * @return {TextTrackMenuItem[]}\r\n   *         Array of menu items\r\n   */\r\n\r\n\r\n  ChaptersButton.prototype.createItems = function createItems() {\r\n    var items = [];\r\n\r\n    if (!this.track_) {\r\n      return items;\r\n    }\r\n\r\n    var cues = this.track_.cues;\r\n\r\n    if (!cues) {\r\n      return items;\r\n    }\r\n\r\n    for (var i = 0, l = cues.length; i < l; i++) {\r\n      var cue = cues[i];\r\n      var mi = new ChaptersTrackMenuItem(this.player_, { track: this.track_, cue: cue });\r\n\r\n      items.push(mi);\r\n    }\r\n\r\n    return items;\r\n  };\r\n\r\n  return ChaptersButton;\r\n}(TextTrackButton);\r\n\r\n/**\r\n * `kind` of TextTrack to look for to associate it with this menu.\r\n *\r\n * @type {string}\r\n * @private\r\n */\r\n\r\n\r\nChaptersButton.prototype.kind_ = 'chapters';\r\n\r\n/**\r\n * The text that should display over the `ChaptersButton`s controls. Added for localization.\r\n *\r\n * @type {string}\r\n * @private\r\n */\r\nChaptersButton.prototype.controlText_ = 'Chapters';\r\n\r\nComponent.registerComponent('ChaptersButton', ChaptersButton);\r\n\r\n/**\r\n * @file descriptions-button.js\r\n */\r\n/**\r\n * The button component for toggling and selecting descriptions\r\n *\r\n * @extends TextTrackButton\r\n */\r\n\r\nvar DescriptionsButton = function (_TextTrackButton) {\r\n  inherits(DescriptionsButton, _TextTrackButton);\r\n\r\n  /**\r\n   * Creates an instance of this class.\r\n   *\r\n   * @param {Player} player\r\n   *        The `Player` that this class should be attached to.\r\n   *\r\n   * @param {Object} [options]\r\n   *        The key/value store of player options.\r\n   *\r\n   * @param {Component~ReadyCallback} [ready]\r\n   *        The function to call when this component is ready.\r\n   */\r\n  function DescriptionsButton(player, options, ready) {\r\n    classCallCheck(this, DescriptionsButton);\r\n\r\n    var _this = possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\r\n\r\n    var tracks = player.textTracks();\r\n    var changeHandler = bind(_this, _this.handleTracksChange);\r\n\r\n    tracks.addEventListener('change', changeHandler);\r\n    _this.on('dispose', function () {\r\n      tracks.removeEventListener('change', changeHandler);\r\n    });\r\n    return _this;\r\n  }\r\n\r\n  /**\r\n   * Handle text track change\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        The event that caused this function to run\r\n   *\r\n   * @listens TextTrackList#change\r\n   */\r\n\r\n\r\n  DescriptionsButton.prototype.handleTracksChange = function handleTracksChange(event) {\r\n    var tracks = this.player().textTracks();\r\n    var disabled = false;\r\n\r\n    // Check whether a track of a different kind is showing\r\n    for (var i = 0, l = tracks.length; i < l; i++) {\r\n      var track = tracks[i];\r\n\r\n      if (track.kind !== this.kind_ && track.mode === 'showing') {\r\n        disabled = true;\r\n        break;\r\n      }\r\n    }\r\n\r\n    // If another track is showing, disable this menu button\r\n    if (disabled) {\r\n      this.disable();\r\n    } else {\r\n      this.enable();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Builds the default DOM `className`.\r\n   *\r\n   * @return {string}\r\n   *         The DOM `className` for this object.\r\n   */\r\n\r\n\r\n  DescriptionsButton.prototype.buildCSSClass = function buildCSSClass() {\r\n    return 'vjs-descriptions-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\r\n  };\r\n\r\n  DescriptionsButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\r\n    return 'vjs-descriptions-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\r\n  };\r\n\r\n  return DescriptionsButton;\r\n}(TextTrackButton);\r\n\r\n/**\r\n * `kind` of TextTrack to look for to associate it with this menu.\r\n *\r\n * @type {string}\r\n * @private\r\n */\r\n\r\n\r\nDescriptionsButton.prototype.kind_ = 'descriptions';\r\n\r\n/**\r\n * The text that should display over the `DescriptionsButton`s controls. Added for localization.\r\n *\r\n * @type {string}\r\n * @private\r\n */\r\nDescriptionsButton.prototype.controlText_ = 'Descriptions';\r\n\r\nComponent.registerComponent('DescriptionsButton', DescriptionsButton);\r\n\r\n/**\r\n * @file subtitles-button.js\r\n */\r\n/**\r\n * The button component for toggling and selecting subtitles\r\n *\r\n * @extends TextTrackButton\r\n */\r\n\r\nvar SubtitlesButton = function (_TextTrackButton) {\r\n  inherits(SubtitlesButton, _TextTrackButton);\r\n\r\n  /**\r\n   * Creates an instance of this class.\r\n   *\r\n   * @param {Player} player\r\n   *        The `Player` that this class should be attached to.\r\n   *\r\n   * @param {Object} [options]\r\n   *        The key/value store of player options.\r\n   *\r\n   * @param {Component~ReadyCallback} [ready]\r\n   *        The function to call when this component is ready.\r\n   */\r\n  function SubtitlesButton(player, options, ready) {\r\n    classCallCheck(this, SubtitlesButton);\r\n    return possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\r\n  }\r\n\r\n  /**\r\n   * Builds the default DOM `className`.\r\n   *\r\n   * @return {string}\r\n   *         The DOM `className` for this object.\r\n   */\r\n\r\n\r\n  SubtitlesButton.prototype.buildCSSClass = function buildCSSClass() {\r\n    return 'vjs-subtitles-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\r\n  };\r\n\r\n  SubtitlesButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\r\n    return 'vjs-subtitles-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\r\n  };\r\n\r\n  return SubtitlesButton;\r\n}(TextTrackButton);\r\n\r\n/**\r\n * `kind` of TextTrack to look for to associate it with this menu.\r\n *\r\n * @type {string}\r\n * @private\r\n */\r\n\r\n\r\nSubtitlesButton.prototype.kind_ = 'subtitles';\r\n\r\n/**\r\n * The text that should display over the `SubtitlesButton`s controls. Added for localization.\r\n *\r\n * @type {string}\r\n * @private\r\n */\r\nSubtitlesButton.prototype.controlText_ = 'Subtitles';\r\n\r\nComponent.registerComponent('SubtitlesButton', SubtitlesButton);\r\n\r\n/**\r\n * @file caption-settings-menu-item.js\r\n */\r\n/**\r\n * The menu item for caption track settings menu\r\n *\r\n * @extends TextTrackMenuItem\r\n */\r\n\r\nvar CaptionSettingsMenuItem = function (_TextTrackMenuItem) {\r\n  inherits(CaptionSettingsMenuItem, _TextTrackMenuItem);\r\n\r\n  /**\r\n   * Creates an instance of this class.\r\n   *\r\n   * @param {Player} player\r\n   *        The `Player` that this class should be attached to.\r\n   *\r\n   * @param {Object} [options]\r\n   *        The key/value store of player options.\r\n   */\r\n  function CaptionSettingsMenuItem(player, options) {\r\n    classCallCheck(this, CaptionSettingsMenuItem);\r\n\r\n    options.track = {\r\n      player: player,\r\n      kind: options.kind,\r\n      label: options.kind + ' settings',\r\n      selectable: false,\r\n      'default': false,\r\n      mode: 'disabled'\r\n    };\r\n\r\n    // CaptionSettingsMenuItem has no concept of 'selected'\r\n    options.selectable = false;\r\n\r\n    options.name = 'CaptionSettingsMenuItem';\r\n\r\n    var _this = possibleConstructorReturn(this, _TextTrackMenuItem.call(this, player, options));\r\n\r\n    _this.addClass('vjs-texttrack-settings');\r\n    _this.controlText(', opens ' + options.kind + ' settings dialog');\r\n    return _this;\r\n  }\r\n\r\n  /**\r\n   * This gets called when an `CaptionSettingsMenuItem` is \"clicked\". See\r\n   * {@link ClickableComponent} for more detailed information on what a click can be.\r\n   *\r\n   * @param {EventTarget~Event} [event]\r\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\r\n   *        called.\r\n   *\r\n   * @listens tap\r\n   * @listens click\r\n   */\r\n\r\n\r\n  CaptionSettingsMenuItem.prototype.handleClick = function handleClick(event) {\r\n    this.player().getChild('textTrackSettings').open();\r\n  };\r\n\r\n  return CaptionSettingsMenuItem;\r\n}(TextTrackMenuItem);\r\n\r\nComponent.registerComponent('CaptionSettingsMenuItem', CaptionSettingsMenuItem);\r\n\r\n/**\r\n * @file captions-button.js\r\n */\r\n/**\r\n * The button component for toggling and selecting captions\r\n *\r\n * @extends TextTrackButton\r\n */\r\n\r\nvar CaptionsButton = function (_TextTrackButton) {\r\n  inherits(CaptionsButton, _TextTrackButton);\r\n\r\n  /**\r\n   * Creates an instance of this class.\r\n   *\r\n   * @param {Player} player\r\n   *        The `Player` that this class should be attached to.\r\n   *\r\n   * @param {Object} [options]\r\n   *        The key/value store of player options.\r\n   *\r\n   * @param {Component~ReadyCallback} [ready]\r\n   *        The function to call when this component is ready.\r\n   */\r\n  function CaptionsButton(player, options, ready) {\r\n    classCallCheck(this, CaptionsButton);\r\n    return possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\r\n  }\r\n\r\n  /**\r\n   * Builds the default DOM `className`.\r\n   *\r\n   * @return {string}\r\n   *         The DOM `className` for this object.\r\n   */\r\n\r\n\r\n  CaptionsButton.prototype.buildCSSClass = function buildCSSClass() {\r\n    return 'vjs-captions-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\r\n  };\r\n\r\n  CaptionsButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\r\n    return 'vjs-captions-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\r\n  };\r\n\r\n  /**\r\n   * Create caption menu items\r\n   *\r\n   * @return {CaptionSettingsMenuItem[]}\r\n   *         The array of current menu items.\r\n   */\r\n\r\n\r\n  CaptionsButton.prototype.createItems = function createItems() {\r\n    var items = [];\r\n\r\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\r\n      items.push(new CaptionSettingsMenuItem(this.player_, { kind: this.kind_ }));\r\n\r\n      this.hideThreshold_ += 1;\r\n    }\r\n\r\n    return _TextTrackButton.prototype.createItems.call(this, items);\r\n  };\r\n\r\n  return CaptionsButton;\r\n}(TextTrackButton);\r\n\r\n/**\r\n * `kind` of TextTrack to look for to associate it with this menu.\r\n *\r\n * @type {string}\r\n * @private\r\n */\r\n\r\n\r\nCaptionsButton.prototype.kind_ = 'captions';\r\n\r\n/**\r\n * The text that should display over the `CaptionsButton`s controls. Added for localization.\r\n *\r\n * @type {string}\r\n * @private\r\n */\r\nCaptionsButton.prototype.controlText_ = 'Captions';\r\n\r\nComponent.registerComponent('CaptionsButton', CaptionsButton);\r\n\r\n/**\r\n * @file subs-caps-menu-item.js\r\n */\r\n/**\r\n * SubsCapsMenuItem has an [cc] icon to distinguish captions from subtitles\r\n * in the SubsCapsMenu.\r\n *\r\n * @extends TextTrackMenuItem\r\n */\r\n\r\nvar SubsCapsMenuItem = function (_TextTrackMenuItem) {\r\n  inherits(SubsCapsMenuItem, _TextTrackMenuItem);\r\n\r\n  function SubsCapsMenuItem() {\r\n    classCallCheck(this, SubsCapsMenuItem);\r\n    return possibleConstructorReturn(this, _TextTrackMenuItem.apply(this, arguments));\r\n  }\r\n\r\n  SubsCapsMenuItem.prototype.createEl = function createEl(type, props, attrs) {\r\n    var innerHTML = '<span class=\"vjs-menu-item-text\">' + this.localize(this.options_.label);\r\n\r\n    if (this.options_.track.kind === 'captions') {\r\n      innerHTML += '\\n        <span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>\\n        <span class=\"vjs-control-text\"> ' + this.localize('Captions') + '</span>\\n      ';\r\n    }\r\n\r\n    innerHTML += '</span>';\r\n\r\n    var el = _TextTrackMenuItem.prototype.createEl.call(this, type, assign({\r\n      innerHTML: innerHTML\r\n    }, props), attrs);\r\n\r\n    return el;\r\n  };\r\n\r\n  return SubsCapsMenuItem;\r\n}(TextTrackMenuItem);\r\n\r\nComponent.registerComponent('SubsCapsMenuItem', SubsCapsMenuItem);\r\n\r\n/**\r\n * @file sub-caps-button.js\r\n */\r\n/**\r\n * The button component for toggling and selecting captions and/or subtitles\r\n *\r\n * @extends TextTrackButton\r\n */\r\n\r\nvar SubsCapsButton = function (_TextTrackButton) {\r\n  inherits(SubsCapsButton, _TextTrackButton);\r\n\r\n  function SubsCapsButton(player) {\r\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n    classCallCheck(this, SubsCapsButton);\r\n\r\n    // Although North America uses \"captions\" in most cases for\r\n    // \"captions and subtitles\" other locales use \"subtitles\"\r\n    var _this = possibleConstructorReturn(this, _TextTrackButton.call(this, player, options));\r\n\r\n    _this.label_ = 'subtitles';\r\n    if (['en', 'en-us', 'en-ca', 'fr-ca'].indexOf(_this.player_.language_) > -1) {\r\n      _this.label_ = 'captions';\r\n    }\r\n    _this.menuButton_.controlText(toTitleCase(_this.label_));\r\n    return _this;\r\n  }\r\n\r\n  /**\r\n   * Builds the default DOM `className`.\r\n   *\r\n   * @return {string}\r\n   *         The DOM `className` for this object.\r\n   */\r\n\r\n\r\n  SubsCapsButton.prototype.buildCSSClass = function buildCSSClass() {\r\n    return 'vjs-subs-caps-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\r\n  };\r\n\r\n  SubsCapsButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\r\n    return 'vjs-subs-caps-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\r\n  };\r\n\r\n  /**\r\n   * Create caption/subtitles menu items\r\n   *\r\n   * @return {CaptionSettingsMenuItem[]}\r\n   *         The array of current menu items.\r\n   */\r\n\r\n\r\n  SubsCapsButton.prototype.createItems = function createItems() {\r\n    var items = [];\r\n\r\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\r\n      items.push(new CaptionSettingsMenuItem(this.player_, { kind: this.label_ }));\r\n\r\n      this.hideThreshold_ += 1;\r\n    }\r\n\r\n    items = _TextTrackButton.prototype.createItems.call(this, items, SubsCapsMenuItem);\r\n    return items;\r\n  };\r\n\r\n  return SubsCapsButton;\r\n}(TextTrackButton);\r\n\r\n/**\r\n * `kind`s of TextTrack to look for to associate it with this menu.\r\n *\r\n * @type {array}\r\n * @private\r\n */\r\n\r\n\r\nSubsCapsButton.prototype.kinds_ = ['captions', 'subtitles'];\r\n\r\n/**\r\n * The text that should display over the `SubsCapsButton`s controls.\r\n *\r\n *\r\n * @type {string}\r\n * @private\r\n */\r\nSubsCapsButton.prototype.controlText_ = 'Subtitles';\r\n\r\nComponent.registerComponent('SubsCapsButton', SubsCapsButton);\r\n\r\n/**\r\n * @file audio-track-menu-item.js\r\n */\r\n/**\r\n * An {@link AudioTrack} {@link MenuItem}\r\n *\r\n * @extends MenuItem\r\n */\r\n\r\nvar AudioTrackMenuItem = function (_MenuItem) {\r\n  inherits(AudioTrackMenuItem, _MenuItem);\r\n\r\n  /**\r\n   * Creates an instance of this class.\r\n   *\r\n   * @param {Player} player\r\n   *        The `Player` that this class should be attached to.\r\n   *\r\n   * @param {Object} [options]\r\n   *        The key/value store of player options.\r\n   */\r\n  function AudioTrackMenuItem(player, options) {\r\n    classCallCheck(this, AudioTrackMenuItem);\r\n\r\n    var track = options.track;\r\n    var tracks = player.audioTracks();\r\n\r\n    // Modify options for parent MenuItem class's init.\r\n    options.label = track.label || track.language || 'Unknown';\r\n    options.selected = track.enabled;\r\n\r\n    var _this = possibleConstructorReturn(this, _MenuItem.call(this, player, options));\r\n\r\n    _this.track = track;\r\n\r\n    _this.addClass('vjs-' + track.kind + '-menu-item');\r\n\r\n    var changeHandler = function changeHandler() {\r\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\r\n        args[_key] = arguments[_key];\r\n      }\r\n\r\n      _this.handleTracksChange.apply(_this, args);\r\n    };\r\n\r\n    tracks.addEventListener('change', changeHandler);\r\n    _this.on('dispose', function () {\r\n      tracks.removeEventListener('change', changeHandler);\r\n    });\r\n    return _this;\r\n  }\r\n\r\n  AudioTrackMenuItem.prototype.createEl = function createEl(type, props, attrs) {\r\n    var innerHTML = '<span class=\"vjs-menu-item-text\">' + this.localize(this.options_.label);\r\n\r\n    if (this.options_.track.kind === 'main-desc') {\r\n      innerHTML += '\\n        <span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>\\n        <span class=\"vjs-control-text\"> ' + this.localize('Descriptions') + '</span>\\n      ';\r\n    }\r\n\r\n    innerHTML += '</span>';\r\n\r\n    var el = _MenuItem.prototype.createEl.call(this, type, assign({\r\n      innerHTML: innerHTML\r\n    }, props), attrs);\r\n\r\n    return el;\r\n  };\r\n\r\n  /**\r\n   * This gets called when an `AudioTrackMenuItem is \"clicked\". See {@link ClickableComponent}\r\n   * for more detailed information on what a click can be.\r\n   *\r\n   * @param {EventTarget~Event} [event]\r\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\r\n   *        called.\r\n   *\r\n   * @listens tap\r\n   * @listens click\r\n   */\r\n\r\n\r\n  AudioTrackMenuItem.prototype.handleClick = function handleClick(event) {\r\n    var tracks = this.player_.audioTracks();\r\n\r\n    _MenuItem.prototype.handleClick.call(this, event);\r\n\r\n    for (var i = 0; i < tracks.length; i++) {\r\n      var track = tracks[i];\r\n\r\n      track.enabled = track === this.track;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handle any {@link AudioTrack} change.\r\n   *\r\n   * @param {EventTarget~Event} [event]\r\n   *        The {@link AudioTrackList#change} event that caused this to run.\r\n   *\r\n   * @listens AudioTrackList#change\r\n   */\r\n\r\n\r\n  AudioTrackMenuItem.prototype.handleTracksChange = function handleTracksChange(event) {\r\n    this.selected(this.track.enabled);\r\n  };\r\n\r\n  return AudioTrackMenuItem;\r\n}(MenuItem);\r\n\r\nComponent.registerComponent('AudioTrackMenuItem', AudioTrackMenuItem);\r\n\r\n/**\r\n * @file audio-track-button.js\r\n */\r\n/**\r\n * The base class for buttons that toggle specific {@link AudioTrack} types.\r\n *\r\n * @extends TrackButton\r\n */\r\n\r\nvar AudioTrackButton = function (_TrackButton) {\r\n  inherits(AudioTrackButton, _TrackButton);\r\n\r\n  /**\r\n   * Creates an instance of this class.\r\n   *\r\n   * @param {Player} player\r\n   *        The `Player` that this class should be attached to.\r\n   *\r\n   * @param {Object} [options={}]\r\n   *        The key/value store of player options.\r\n   */\r\n  function AudioTrackButton(player) {\r\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n    classCallCheck(this, AudioTrackButton);\r\n\r\n    options.tracks = player.audioTracks();\r\n\r\n    return possibleConstructorReturn(this, _TrackButton.call(this, player, options));\r\n  }\r\n\r\n  /**\r\n   * Builds the default DOM `className`.\r\n   *\r\n   * @return {string}\r\n   *         The DOM `className` for this object.\r\n   */\r\n\r\n\r\n  AudioTrackButton.prototype.buildCSSClass = function buildCSSClass() {\r\n    return 'vjs-audio-button ' + _TrackButton.prototype.buildCSSClass.call(this);\r\n  };\r\n\r\n  AudioTrackButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\r\n    return 'vjs-audio-button ' + _TrackButton.prototype.buildWrapperCSSClass.call(this);\r\n  };\r\n\r\n  /**\r\n   * Create a menu item for each audio track\r\n   *\r\n   * @param {AudioTrackMenuItem[]} [items=[]]\r\n   *        An array of existing menu items to use.\r\n   *\r\n   * @return {AudioTrackMenuItem[]}\r\n   *         An array of menu items\r\n   */\r\n\r\n\r\n  AudioTrackButton.prototype.createItems = function createItems() {\r\n    var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\r\n\r\n    // if there's only one audio track, there no point in showing it\r\n    this.hideThreshold_ = 1;\r\n\r\n    var tracks = this.player_.audioTracks();\r\n\r\n    for (var i = 0; i < tracks.length; i++) {\r\n      var track = tracks[i];\r\n\r\n      items.push(new AudioTrackMenuItem(this.player_, {\r\n        track: track,\r\n        // MenuItem is selectable\r\n        selectable: true,\r\n        // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\r\n        multiSelectable: false\r\n      }));\r\n    }\r\n\r\n    return items;\r\n  };\r\n\r\n  return AudioTrackButton;\r\n}(TrackButton);\r\n\r\n/**\r\n * The text that should display over the `AudioTrackButton`s controls. Added for localization.\r\n *\r\n * @type {string}\r\n * @private\r\n */\r\n\r\n\r\nAudioTrackButton.prototype.controlText_ = 'Audio Track';\r\nComponent.registerComponent('AudioTrackButton', AudioTrackButton);\r\n\r\n/**\r\n * @file playback-rate-menu-item.js\r\n */\r\n/**\r\n * The specific menu item type for selecting a playback rate.\r\n *\r\n * @extends MenuItem\r\n */\r\n\r\nvar PlaybackRateMenuItem = function (_MenuItem) {\r\n  inherits(PlaybackRateMenuItem, _MenuItem);\r\n\r\n  /**\r\n   * Creates an instance of this class.\r\n   *\r\n   * @param {Player} player\r\n   *        The `Player` that this class should be attached to.\r\n   *\r\n   * @param {Object} [options]\r\n   *        The key/value store of player options.\r\n   */\r\n  function PlaybackRateMenuItem(player, options) {\r\n    classCallCheck(this, PlaybackRateMenuItem);\r\n\r\n    var label = options.rate;\r\n    var rate = parseFloat(label, 10);\r\n\r\n    // Modify options for parent MenuItem class's init.\r\n    options.label = label;\r\n    options.selected = rate === 1;\r\n    options.selectable = true;\r\n    options.multiSelectable = false;\r\n\r\n    var _this = possibleConstructorReturn(this, _MenuItem.call(this, player, options));\r\n\r\n    _this.label = label;\r\n    _this.rate = rate;\r\n\r\n    _this.on(player, 'ratechange', _this.update);\r\n    return _this;\r\n  }\r\n\r\n  /**\r\n   * This gets called when an `PlaybackRateMenuItem` is \"clicked\". See\r\n   * {@link ClickableComponent} for more detailed information on what a click can be.\r\n   *\r\n   * @param {EventTarget~Event} [event]\r\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\r\n   *        called.\r\n   *\r\n   * @listens tap\r\n   * @listens click\r\n   */\r\n\r\n\r\n  PlaybackRateMenuItem.prototype.handleClick = function handleClick(event) {\r\n    _MenuItem.prototype.handleClick.call(this);\r\n    this.player().playbackRate(this.rate);\r\n  };\r\n\r\n  /**\r\n   * Update the PlaybackRateMenuItem when the playbackrate changes.\r\n   *\r\n   * @param {EventTarget~Event} [event]\r\n   *        The `ratechange` event that caused this function to run.\r\n   *\r\n   * @listens Player#ratechange\r\n   */\r\n\r\n\r\n  PlaybackRateMenuItem.prototype.update = function update(event) {\r\n    this.selected(this.player().playbackRate() === this.rate);\r\n  };\r\n\r\n  return PlaybackRateMenuItem;\r\n}(MenuItem);\r\n\r\n/**\r\n * The text that should display over the `PlaybackRateMenuItem`s controls. Added for localization.\r\n *\r\n * @type {string}\r\n * @private\r\n */\r\n\r\n\r\nPlaybackRateMenuItem.prototype.contentElType = 'button';\r\n\r\nComponent.registerComponent('PlaybackRateMenuItem', PlaybackRateMenuItem);\r\n\r\n/**\r\n * @file playback-rate-menu-button.js\r\n */\r\n/**\r\n * The component for controlling the playback rate.\r\n *\r\n * @extends MenuButton\r\n */\r\n\r\nvar PlaybackRateMenuButton = function (_MenuButton) {\r\n  inherits(PlaybackRateMenuButton, _MenuButton);\r\n\r\n  /**\r\n   * Creates an instance of this class.\r\n   *\r\n   * @param {Player} player\r\n   *        The `Player` that this class should be attached to.\r\n   *\r\n   * @param {Object} [options]\r\n   *        The key/value store of player options.\r\n   */\r\n  function PlaybackRateMenuButton(player, options) {\r\n    classCallCheck(this, PlaybackRateMenuButton);\r\n\r\n    var _this = possibleConstructorReturn(this, _MenuButton.call(this, player, options));\r\n\r\n    _this.updateVisibility();\r\n    _this.updateLabel();\r\n\r\n    _this.on(player, 'loadstart', _this.updateVisibility);\r\n    _this.on(player, 'ratechange', _this.updateLabel);\r\n    return _this;\r\n  }\r\n\r\n  /**\r\n   * Create the `Component`'s DOM element\r\n   *\r\n   * @return {Element}\r\n   *         The element that was created.\r\n   */\r\n\r\n\r\n  PlaybackRateMenuButton.prototype.createEl = function createEl$$1() {\r\n    var el = _MenuButton.prototype.createEl.call(this);\r\n\r\n    this.labelEl_ = createEl('div', {\r\n      className: 'vjs-playback-rate-value',\r\n      innerHTML: '1x'\r\n    });\r\n\r\n    el.appendChild(this.labelEl_);\r\n\r\n    return el;\r\n  };\r\n\r\n  PlaybackRateMenuButton.prototype.dispose = function dispose() {\r\n    this.labelEl_ = null;\r\n\r\n    _MenuButton.prototype.dispose.call(this);\r\n  };\r\n\r\n  /**\r\n   * Builds the default DOM `className`.\r\n   *\r\n   * @return {string}\r\n   *         The DOM `className` for this object.\r\n   */\r\n\r\n\r\n  PlaybackRateMenuButton.prototype.buildCSSClass = function buildCSSClass() {\r\n    return 'vjs-playback-rate ' + _MenuButton.prototype.buildCSSClass.call(this);\r\n  };\r\n\r\n  PlaybackRateMenuButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\r\n    return 'vjs-playback-rate ' + _MenuButton.prototype.buildWrapperCSSClass.call(this);\r\n  };\r\n\r\n  /**\r\n   * Create the playback rate menu\r\n   *\r\n   * @return {Menu}\r\n   *         Menu object populated with {@link PlaybackRateMenuItem}s\r\n   */\r\n\r\n\r\n  PlaybackRateMenuButton.prototype.createMenu = function createMenu() {\r\n    var menu = new Menu(this.player());\r\n    var rates = this.playbackRates();\r\n\r\n    if (rates) {\r\n      for (var i = rates.length - 1; i >= 0; i--) {\r\n        menu.addChild(new PlaybackRateMenuItem(this.player(), { rate: rates[i] + 'x' }));\r\n      }\r\n    }\r\n\r\n    return menu;\r\n  };\r\n\r\n  /**\r\n   * Updates ARIA accessibility attributes\r\n   */\r\n\r\n\r\n  PlaybackRateMenuButton.prototype.updateARIAAttributes = function updateARIAAttributes() {\r\n    // Current playback rate\r\n    this.el().setAttribute('aria-valuenow', this.player().playbackRate());\r\n  };\r\n\r\n  /**\r\n   * This gets called when an `PlaybackRateMenuButton` is \"clicked\". See\r\n   * {@link ClickableComponent} for more detailed information on what a click can be.\r\n   *\r\n   * @param {EventTarget~Event} [event]\r\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\r\n   *        called.\r\n   *\r\n   * @listens tap\r\n   * @listens click\r\n   */\r\n\r\n\r\n  PlaybackRateMenuButton.prototype.handleClick = function handleClick(event) {\r\n    // select next rate option\r\n    var currentRate = this.player().playbackRate();\r\n    var rates = this.playbackRates();\r\n\r\n    // this will select first one if the last one currently selected\r\n    var newRate = rates[0];\r\n\r\n    for (var i = 0; i < rates.length; i++) {\r\n      if (rates[i] > currentRate) {\r\n        newRate = rates[i];\r\n        break;\r\n      }\r\n    }\r\n    this.player().playbackRate(newRate);\r\n  };\r\n\r\n  /**\r\n   * Get possible playback rates\r\n   *\r\n   * @return {Array}\r\n   *         All possible playback rates\r\n   */\r\n\r\n\r\n  PlaybackRateMenuButton.prototype.playbackRates = function playbackRates() {\r\n    return this.options_.playbackRates || this.options_.playerOptions && this.options_.playerOptions.playbackRates;\r\n  };\r\n\r\n  /**\r\n   * Get whether playback rates is supported by the tech\r\n   * and an array of playback rates exists\r\n   *\r\n   * @return {boolean}\r\n   *         Whether changing playback rate is supported\r\n   */\r\n\r\n\r\n  PlaybackRateMenuButton.prototype.playbackRateSupported = function playbackRateSupported() {\r\n    return this.player().tech_ && this.player().tech_.featuresPlaybackRate && this.playbackRates() && this.playbackRates().length > 0;\r\n  };\r\n\r\n  /**\r\n   * Hide playback rate controls when they're no playback rate options to select\r\n   *\r\n   * @param {EventTarget~Event} [event]\r\n   *        The event that caused this function to run.\r\n   *\r\n   * @listens Player#loadstart\r\n   */\r\n\r\n\r\n  PlaybackRateMenuButton.prototype.updateVisibility = function updateVisibility(event) {\r\n    if (this.playbackRateSupported()) {\r\n      this.removeClass('vjs-hidden');\r\n    } else {\r\n      this.addClass('vjs-hidden');\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Update button label when rate changed\r\n   *\r\n   * @param {EventTarget~Event} [event]\r\n   *        The event that caused this function to run.\r\n   *\r\n   * @listens Player#ratechange\r\n   */\r\n\r\n\r\n  PlaybackRateMenuButton.prototype.updateLabel = function updateLabel(event) {\r\n    if (this.playbackRateSupported()) {\r\n      this.labelEl_.innerHTML = this.player().playbackRate() + 'x';\r\n    }\r\n  };\r\n\r\n  return PlaybackRateMenuButton;\r\n}(MenuButton);\r\n\r\n/**\r\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\r\n *\r\n * @type {string}\r\n * @private\r\n */\r\n\r\n\r\nPlaybackRateMenuButton.prototype.controlText_ = 'Playback Rate';\r\n\r\nComponent.registerComponent('PlaybackRateMenuButton', PlaybackRateMenuButton);\r\n\r\n/**\r\n * @file spacer.js\r\n */\r\n/**\r\n * Just an empty spacer element that can be used as an append point for plugins, etc.\r\n * Also can be used to create space between elements when necessary.\r\n *\r\n * @extends Component\r\n */\r\n\r\nvar Spacer = function (_Component) {\r\n  inherits(Spacer, _Component);\r\n\r\n  function Spacer() {\r\n    classCallCheck(this, Spacer);\r\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\r\n  }\r\n\r\n  /**\r\n   * Builds the default DOM `className`.\r\n   *\r\n   * @return {string}\r\n   *         The DOM `className` for this object.\r\n   */\r\n  Spacer.prototype.buildCSSClass = function buildCSSClass() {\r\n    return 'vjs-spacer ' + _Component.prototype.buildCSSClass.call(this);\r\n  };\r\n\r\n  /**\r\n   * Create the `Component`'s DOM element\r\n   *\r\n   * @return {Element}\r\n   *         The element that was created.\r\n   */\r\n\r\n\r\n  Spacer.prototype.createEl = function createEl() {\r\n    return _Component.prototype.createEl.call(this, 'div', {\r\n      className: this.buildCSSClass()\r\n    });\r\n  };\r\n\r\n  return Spacer;\r\n}(Component);\r\n\r\nComponent.registerComponent('Spacer', Spacer);\r\n\r\n/**\r\n * @file custom-control-spacer.js\r\n */\r\n/**\r\n * Spacer specifically meant to be used as an insertion point for new plugins, etc.\r\n *\r\n * @extends Spacer\r\n */\r\n\r\nvar CustomControlSpacer = function (_Spacer) {\r\n  inherits(CustomControlSpacer, _Spacer);\r\n\r\n  function CustomControlSpacer() {\r\n    classCallCheck(this, CustomControlSpacer);\r\n    return possibleConstructorReturn(this, _Spacer.apply(this, arguments));\r\n  }\r\n\r\n  /**\r\n   * Builds the default DOM `className`.\r\n   *\r\n   * @return {string}\r\n   *         The DOM `className` for this object.\r\n   */\r\n  CustomControlSpacer.prototype.buildCSSClass = function buildCSSClass() {\r\n    return 'vjs-custom-control-spacer ' + _Spacer.prototype.buildCSSClass.call(this);\r\n  };\r\n\r\n  /**\r\n   * Create the `Component`'s DOM element\r\n   *\r\n   * @return {Element}\r\n   *         The element that was created.\r\n   */\r\n\r\n\r\n  CustomControlSpacer.prototype.createEl = function createEl() {\r\n    var el = _Spacer.prototype.createEl.call(this, {\r\n      className: this.buildCSSClass()\r\n    });\r\n\r\n    // No-flex/table-cell mode requires there be some content\r\n    // in the cell to fill the remaining space of the table.\r\n    el.innerHTML = '\\xA0';\r\n    return el;\r\n  };\r\n\r\n  return CustomControlSpacer;\r\n}(Spacer);\r\n\r\nComponent.registerComponent('CustomControlSpacer', CustomControlSpacer);\r\n\r\n/**\r\n * @file control-bar.js\r\n */\r\n// Required children\r\n/**\r\n * Container of main controls.\r\n *\r\n * @extends Component\r\n */\r\n\r\nvar ControlBar = function (_Component) {\r\n  inherits(ControlBar, _Component);\r\n\r\n  function ControlBar() {\r\n    classCallCheck(this, ControlBar);\r\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\r\n  }\r\n\r\n  /**\r\n   * Create the `Component`'s DOM element\r\n   *\r\n   * @return {Element}\r\n   *         The element that was created.\r\n   */\r\n  ControlBar.prototype.createEl = function createEl() {\r\n    return _Component.prototype.createEl.call(this, 'div', {\r\n      className: 'vjs-control-bar',\r\n      dir: 'ltr'\r\n    });\r\n  };\r\n\r\n  return ControlBar;\r\n}(Component);\r\n\r\n/**\r\n * Default options for `ControlBar`\r\n *\r\n * @type {Object}\r\n * @private\r\n */\r\n\r\n\r\nControlBar.prototype.options_ = {\r\n  children: ['playToggle', 'volumePanel', 'currentTimeDisplay', 'timeDivider', 'durationDisplay', 'progressControl', 'liveDisplay', 'remainingTimeDisplay', 'customControlSpacer', 'playbackRateMenuButton', 'chaptersButton', 'descriptionsButton', 'subsCapsButton', 'audioTrackButton', 'fullscreenToggle']\r\n};\r\n\r\nComponent.registerComponent('ControlBar', ControlBar);\r\n\r\n/**\r\n * @file error-display.js\r\n */\r\n/**\r\n * A display that indicates an error has occurred. This means that the video\r\n * is unplayable.\r\n *\r\n * @extends ModalDialog\r\n */\r\n\r\nvar ErrorDisplay = function (_ModalDialog) {\r\n  inherits(ErrorDisplay, _ModalDialog);\r\n\r\n  /**\r\n   * Creates an instance of this class.\r\n   *\r\n   * @param  {Player} player\r\n   *         The `Player` that this class should be attached to.\r\n   *\r\n   * @param  {Object} [options]\r\n   *         The key/value store of player options.\r\n   */\r\n  function ErrorDisplay(player, options) {\r\n    classCallCheck(this, ErrorDisplay);\r\n\r\n    var _this = possibleConstructorReturn(this, _ModalDialog.call(this, player, options));\r\n\r\n    _this.on(player, 'error', _this.open);\r\n    return _this;\r\n  }\r\n\r\n  /**\r\n   * Builds the default DOM `className`.\r\n   *\r\n   * @return {string}\r\n   *         The DOM `className` for this object.\r\n   *\r\n   * @deprecated Since version 5.\r\n   */\r\n\r\n\r\n  ErrorDisplay.prototype.buildCSSClass = function buildCSSClass() {\r\n    return 'vjs-error-display ' + _ModalDialog.prototype.buildCSSClass.call(this);\r\n  };\r\n\r\n  /**\r\n   * Gets the localized error message based on the `Player`s error.\r\n   *\r\n   * @return {string}\r\n   *         The `Player`s error message localized or an empty string.\r\n   */\r\n\r\n\r\n  ErrorDisplay.prototype.content = function content() {\r\n    var error = this.player().error();\r\n\r\n    return error ? this.localize(error.message) : '';\r\n  };\r\n\r\n  return ErrorDisplay;\r\n}(ModalDialog);\r\n\r\n/**\r\n * The default options for an `ErrorDisplay`.\r\n *\r\n * @private\r\n */\r\n\r\n\r\nErrorDisplay.prototype.options_ = mergeOptions(ModalDialog.prototype.options_, {\r\n  pauseOnOpen: false,\r\n  fillAlways: true,\r\n  temporary: false,\r\n  uncloseable: true\r\n});\r\n\r\nComponent.registerComponent('ErrorDisplay', ErrorDisplay);\r\n\r\n/**\r\n * @file text-track-settings.js\r\n */\r\nvar LOCAL_STORAGE_KEY = 'vjs-text-track-settings';\r\n\r\nvar COLOR_BLACK = ['#000', 'Black'];\r\nvar COLOR_BLUE = ['#00F', 'Blue'];\r\nvar COLOR_CYAN = ['#0FF', 'Cyan'];\r\nvar COLOR_GREEN = ['#0F0', 'Green'];\r\nvar COLOR_MAGENTA = ['#F0F', 'Magenta'];\r\nvar COLOR_RED = ['#F00', 'Red'];\r\nvar COLOR_WHITE = ['#FFF', 'White'];\r\nvar COLOR_YELLOW = ['#FF0', 'Yellow'];\r\n\r\nvar OPACITY_OPAQUE = ['1', 'Opaque'];\r\nvar OPACITY_SEMI = ['0.5', 'Semi-Transparent'];\r\nvar OPACITY_TRANS = ['0', 'Transparent'];\r\n\r\n// Configuration for the various <select> elements in the DOM of this component.\r\n//\r\n// Possible keys include:\r\n//\r\n// `default`:\r\n//   The default option index. Only needs to be provided if not zero.\r\n// `parser`:\r\n//   A function which is used to parse the value from the selected option in\r\n//   a customized way.\r\n// `selector`:\r\n//   The selector used to find the associated <select> element.\r\nvar selectConfigs = {\r\n  backgroundColor: {\r\n    selector: '.vjs-bg-color > select',\r\n    id: 'captions-background-color-%s',\r\n    label: 'Color',\r\n    options: [COLOR_BLACK, COLOR_WHITE, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\r\n  },\r\n\r\n  backgroundOpacity: {\r\n    selector: '.vjs-bg-opacity > select',\r\n    id: 'captions-background-opacity-%s',\r\n    label: 'Transparency',\r\n    options: [OPACITY_OPAQUE, OPACITY_SEMI, OPACITY_TRANS]\r\n  },\r\n\r\n  color: {\r\n    selector: '.vjs-fg-color > select',\r\n    id: 'captions-foreground-color-%s',\r\n    label: 'Color',\r\n    options: [COLOR_WHITE, COLOR_BLACK, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\r\n  },\r\n\r\n  edgeStyle: {\r\n    selector: '.vjs-edge-style > select',\r\n    id: '%s',\r\n    label: 'Text Edge Style',\r\n    options: [['none', 'None'], ['raised', 'Raised'], ['depressed', 'Depressed'], ['uniform', 'Uniform'], ['dropshadow', 'Dropshadow']]\r\n  },\r\n\r\n  fontFamily: {\r\n    selector: '.vjs-font-family > select',\r\n    id: 'captions-font-family-%s',\r\n    label: 'Font Family',\r\n    options: [['proportionalSansSerif', 'Proportional Sans-Serif'], ['monospaceSansSerif', 'Monospace Sans-Serif'], ['proportionalSerif', 'Proportional Serif'], ['monospaceSerif', 'Monospace Serif'], ['casual', 'Casual'], ['script', 'Script'], ['small-caps', 'Small Caps']]\r\n  },\r\n\r\n  fontPercent: {\r\n    selector: '.vjs-font-percent > select',\r\n    id: 'captions-font-size-%s',\r\n    label: 'Font Size',\r\n    options: [['0.50', '50%'], ['0.75', '75%'], ['1.00', '100%'], ['1.25', '125%'], ['1.50', '150%'], ['1.75', '175%'], ['2.00', '200%'], ['3.00', '300%'], ['4.00', '400%']],\r\n    'default': 2,\r\n    parser: function parser(v) {\r\n      return v === '1.00' ? null : Number(v);\r\n    }\r\n  },\r\n\r\n  textOpacity: {\r\n    selector: '.vjs-text-opacity > select',\r\n    id: 'captions-foreground-opacity-%s',\r\n    label: 'Transparency',\r\n    options: [OPACITY_OPAQUE, OPACITY_SEMI]\r\n  },\r\n\r\n  // Options for this object are defined below.\r\n  windowColor: {\r\n    selector: '.vjs-window-color > select',\r\n    id: 'captions-window-color-%s',\r\n    label: 'Color'\r\n  },\r\n\r\n  // Options for this object are defined below.\r\n  windowOpacity: {\r\n    selector: '.vjs-window-opacity > select',\r\n    id: 'captions-window-opacity-%s',\r\n    label: 'Transparency',\r\n    options: [OPACITY_TRANS, OPACITY_SEMI, OPACITY_OPAQUE]\r\n  }\r\n};\r\n\r\nselectConfigs.windowColor.options = selectConfigs.backgroundColor.options;\r\n\r\n/**\r\n * Get the actual value of an option.\r\n *\r\n * @param  {string} value\r\n *         The value to get\r\n *\r\n * @param  {Function} [parser]\r\n *         Optional function to adjust the value.\r\n *\r\n * @return {Mixed}\r\n *         - Will be `undefined` if no value exists\r\n *         - Will be `undefined` if the given value is \"none\".\r\n *         - Will be the actual value otherwise.\r\n *\r\n * @private\r\n */\r\nfunction parseOptionValue(value, parser) {\r\n  if (parser) {\r\n    value = parser(value);\r\n  }\r\n\r\n  if (value && value !== 'none') {\r\n    return value;\r\n  }\r\n}\r\n\r\n/**\r\n * Gets the value of the selected <option> element within a <select> element.\r\n *\r\n * @param  {Element} el\r\n *         the element to look in\r\n *\r\n * @param  {Function} [parser]\r\n *         Optional function to adjust the value.\r\n *\r\n * @return {Mixed}\r\n *         - Will be `undefined` if no value exists\r\n *         - Will be `undefined` if the given value is \"none\".\r\n *         - Will be the actual value otherwise.\r\n *\r\n * @private\r\n */\r\nfunction getSelectedOptionValue(el, parser) {\r\n  var value = el.options[el.options.selectedIndex].value;\r\n\r\n  return parseOptionValue(value, parser);\r\n}\r\n\r\n/**\r\n * Sets the selected <option> element within a <select> element based on a\r\n * given value.\r\n *\r\n * @param {Element} el\r\n *        The element to look in.\r\n *\r\n * @param {string} value\r\n *        the property to look on.\r\n *\r\n * @param {Function} [parser]\r\n *        Optional function to adjust the value before comparing.\r\n *\r\n * @private\r\n */\r\nfunction setSelectedOption(el, value, parser) {\r\n  if (!value) {\r\n    return;\r\n  }\r\n\r\n  for (var i = 0; i < el.options.length; i++) {\r\n    if (parseOptionValue(el.options[i].value, parser) === value) {\r\n      el.selectedIndex = i;\r\n      break;\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Manipulate Text Tracks settings.\r\n *\r\n * @extends ModalDialog\r\n */\r\n\r\nvar TextTrackSettings = function (_ModalDialog) {\r\n  inherits(TextTrackSettings, _ModalDialog);\r\n\r\n  /**\r\n   * Creates an instance of this class.\r\n   *\r\n   * @param {Player} player\r\n   *         The `Player` that this class should be attached to.\r\n   *\r\n   * @param {Object} [options]\r\n   *         The key/value store of player options.\r\n   */\r\n  function TextTrackSettings(player, options) {\r\n    classCallCheck(this, TextTrackSettings);\r\n\r\n    options.temporary = false;\r\n\r\n    var _this = possibleConstructorReturn(this, _ModalDialog.call(this, player, options));\r\n\r\n    _this.updateDisplay = bind(_this, _this.updateDisplay);\r\n\r\n    // fill the modal and pretend we have opened it\r\n    _this.fill();\r\n    _this.hasBeenOpened_ = _this.hasBeenFilled_ = true;\r\n\r\n    _this.endDialog = createEl('p', {\r\n      className: 'vjs-control-text',\r\n      textContent: _this.localize('End of dialog window.')\r\n    });\r\n    _this.el().appendChild(_this.endDialog);\r\n\r\n    _this.setDefaults();\r\n\r\n    // Grab `persistTextTrackSettings` from the player options if not passed in child options\r\n    if (options.persistTextTrackSettings === undefined) {\r\n      _this.options_.persistTextTrackSettings = _this.options_.playerOptions.persistTextTrackSettings;\r\n    }\r\n\r\n    _this.on(_this.$('.vjs-done-button'), 'click', function () {\r\n      _this.saveSettings();\r\n      _this.close();\r\n    });\r\n\r\n    _this.on(_this.$('.vjs-default-button'), 'click', function () {\r\n      _this.setDefaults();\r\n      _this.updateDisplay();\r\n    });\r\n\r\n    each(selectConfigs, function (config) {\r\n      _this.on(_this.$(config.selector), 'change', _this.updateDisplay);\r\n    });\r\n\r\n    if (_this.options_.persistTextTrackSettings) {\r\n      _this.restoreSettings();\r\n    }\r\n    return _this;\r\n  }\r\n\r\n  TextTrackSettings.prototype.dispose = function dispose() {\r\n    this.endDialog = null;\r\n\r\n    _ModalDialog.prototype.dispose.call(this);\r\n  };\r\n\r\n  /**\r\n   * Create a <select> element with configured options.\r\n   *\r\n   * @param {string} key\r\n   *        Configuration key to use during creation.\r\n   *\r\n   * @return {string}\r\n   *         An HTML string.\r\n   *\r\n   * @private\r\n   */\r\n\r\n\r\n  TextTrackSettings.prototype.createElSelect_ = function createElSelect_(key) {\r\n    var _this2 = this;\r\n\r\n    var legendId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\r\n    var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'label';\r\n\r\n    var config = selectConfigs[key];\r\n    var id = config.id.replace('%s', this.id_);\r\n    var selectLabelledbyIds = [legendId, id].join(' ').trim();\r\n\r\n    return ['<' + type + ' id=\"' + id + '\" class=\"' + (type === 'label' ? 'vjs-label' : '') + '\">', this.localize(config.label), '</' + type + '>', '<select aria-labelledby=\"' + selectLabelledbyIds + '\">'].concat(config.options.map(function (o) {\r\n      var optionId = id + '-' + o[1].replace(/\\W+/g, '');\r\n\r\n      return ['<option id=\"' + optionId + '\" value=\"' + o[0] + '\" ', 'aria-labelledby=\"' + selectLabelledbyIds + ' ' + optionId + '\">', _this2.localize(o[1]), '</option>'].join('');\r\n    })).concat('</select>').join('');\r\n  };\r\n\r\n  /**\r\n   * Create foreground color element for the component\r\n   *\r\n   * @return {string}\r\n   *         An HTML string.\r\n   *\r\n   * @private\r\n   */\r\n\r\n\r\n  TextTrackSettings.prototype.createElFgColor_ = function createElFgColor_() {\r\n    var legendId = 'captions-text-legend-' + this.id_;\r\n\r\n    return ['<fieldset class=\"vjs-fg-color vjs-track-setting\">', '<legend id=\"' + legendId + '\">', this.localize('Text'), '</legend>', this.createElSelect_('color', legendId), '<span class=\"vjs-text-opacity vjs-opacity\">', this.createElSelect_('textOpacity', legendId), '</span>', '</fieldset>'].join('');\r\n  };\r\n\r\n  /**\r\n   * Create background color element for the component\r\n   *\r\n   * @return {string}\r\n   *         An HTML string.\r\n   *\r\n   * @private\r\n   */\r\n\r\n\r\n  TextTrackSettings.prototype.createElBgColor_ = function createElBgColor_() {\r\n    var legendId = 'captions-background-' + this.id_;\r\n\r\n    return ['<fieldset class=\"vjs-bg-color vjs-track-setting\">', '<legend id=\"' + legendId + '\">', this.localize('Background'), '</legend>', this.createElSelect_('backgroundColor', legendId), '<span class=\"vjs-bg-opacity vjs-opacity\">', this.createElSelect_('backgroundOpacity', legendId), '</span>', '</fieldset>'].join('');\r\n  };\r\n\r\n  /**\r\n   * Create window color element for the component\r\n   *\r\n   * @return {string}\r\n   *         An HTML string.\r\n   *\r\n   * @private\r\n   */\r\n\r\n\r\n  TextTrackSettings.prototype.createElWinColor_ = function createElWinColor_() {\r\n    var legendId = 'captions-window-' + this.id_;\r\n\r\n    return ['<fieldset class=\"vjs-window-color vjs-track-setting\">', '<legend id=\"' + legendId + '\">', this.localize('Window'), '</legend>', this.createElSelect_('windowColor', legendId), '<span class=\"vjs-window-opacity vjs-opacity\">', this.createElSelect_('windowOpacity', legendId), '</span>', '</fieldset>'].join('');\r\n  };\r\n\r\n  /**\r\n   * Create color elements for the component\r\n   *\r\n   * @return {Element}\r\n   *         The element that was created\r\n   *\r\n   * @private\r\n   */\r\n\r\n\r\n  TextTrackSettings.prototype.createElColors_ = function createElColors_() {\r\n    return createEl('div', {\r\n      className: 'vjs-track-settings-colors',\r\n      innerHTML: [this.createElFgColor_(), this.createElBgColor_(), this.createElWinColor_()].join('')\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Create font elements for the component\r\n   *\r\n   * @return {Element}\r\n   *         The element that was created.\r\n   *\r\n   * @private\r\n   */\r\n\r\n\r\n  TextTrackSettings.prototype.createElFont_ = function createElFont_() {\r\n    return createEl('div', {\r\n      className: 'vjs-track-settings-font',\r\n      innerHTML: ['<fieldset class=\"vjs-font-percent vjs-track-setting\">', this.createElSelect_('fontPercent', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-edge-style vjs-track-setting\">', this.createElSelect_('edgeStyle', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-font-family vjs-track-setting\">', this.createElSelect_('fontFamily', '', 'legend'), '</fieldset>'].join('')\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Create controls for the component\r\n   *\r\n   * @return {Element}\r\n   *         The element that was created.\r\n   *\r\n   * @private\r\n   */\r\n\r\n\r\n  TextTrackSettings.prototype.createElControls_ = function createElControls_() {\r\n    var defaultsDescription = this.localize('restore all settings to the default values');\r\n\r\n    return createEl('div', {\r\n      className: 'vjs-track-settings-controls',\r\n      innerHTML: ['<button type=\"button\" class=\"vjs-default-button\" title=\"' + defaultsDescription + '\">', this.localize('Reset'), '<span class=\"vjs-control-text\"> ' + defaultsDescription + '</span>', '</button>', '<button type=\"button\" class=\"vjs-done-button\">' + this.localize('Done') + '</button>'].join('')\r\n    });\r\n  };\r\n\r\n  TextTrackSettings.prototype.content = function content() {\r\n    return [this.createElColors_(), this.createElFont_(), this.createElControls_()];\r\n  };\r\n\r\n  TextTrackSettings.prototype.label = function label() {\r\n    return this.localize('Caption Settings Dialog');\r\n  };\r\n\r\n  TextTrackSettings.prototype.description = function description() {\r\n    return this.localize('Beginning of dialog window. Escape will cancel and close the window.');\r\n  };\r\n\r\n  TextTrackSettings.prototype.buildCSSClass = function buildCSSClass() {\r\n    return _ModalDialog.prototype.buildCSSClass.call(this) + ' vjs-text-track-settings';\r\n  };\r\n\r\n  /**\r\n   * Gets an object of text track settings (or null).\r\n   *\r\n   * @return {Object}\r\n   *         An object with config values parsed from the DOM or localStorage.\r\n   */\r\n\r\n\r\n  TextTrackSettings.prototype.getValues = function getValues() {\r\n    var _this3 = this;\r\n\r\n    return reduce(selectConfigs, function (accum, config, key) {\r\n      var value = getSelectedOptionValue(_this3.$(config.selector), config.parser);\r\n\r\n      if (value !== undefined) {\r\n        accum[key] = value;\r\n      }\r\n\r\n      return accum;\r\n    }, {});\r\n  };\r\n\r\n  /**\r\n   * Sets text track settings from an object of values.\r\n   *\r\n   * @param {Object} values\r\n   *        An object with config values parsed from the DOM or localStorage.\r\n   */\r\n\r\n\r\n  TextTrackSettings.prototype.setValues = function setValues(values) {\r\n    var _this4 = this;\r\n\r\n    each(selectConfigs, function (config, key) {\r\n      setSelectedOption(_this4.$(config.selector), values[key], config.parser);\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Sets all `<select>` elements to their default values.\r\n   */\r\n\r\n\r\n  TextTrackSettings.prototype.setDefaults = function setDefaults() {\r\n    var _this5 = this;\r\n\r\n    each(selectConfigs, function (config) {\r\n      var index = config.hasOwnProperty('default') ? config['default'] : 0;\r\n\r\n      _this5.$(config.selector).selectedIndex = index;\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Restore texttrack settings from localStorage\r\n   */\r\n\r\n\r\n  TextTrackSettings.prototype.restoreSettings = function restoreSettings() {\r\n    var values = void 0;\r\n\r\n    try {\r\n      values = JSON.parse(window.localStorage.getItem(LOCAL_STORAGE_KEY));\r\n    } catch (err) {\r\n      log.warn(err);\r\n    }\r\n\r\n    if (values) {\r\n      this.setValues(values);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Save text track settings to localStorage\r\n   */\r\n\r\n\r\n  TextTrackSettings.prototype.saveSettings = function saveSettings() {\r\n    if (!this.options_.persistTextTrackSettings) {\r\n      return;\r\n    }\r\n\r\n    var values = this.getValues();\r\n\r\n    try {\r\n      if (Object.keys(values).length) {\r\n        window.localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(values));\r\n      } else {\r\n        window.localStorage.removeItem(LOCAL_STORAGE_KEY);\r\n      }\r\n    } catch (err) {\r\n      log.warn(err);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Update display of text track settings\r\n   */\r\n\r\n\r\n  TextTrackSettings.prototype.updateDisplay = function updateDisplay() {\r\n    var ttDisplay = this.player_.getChild('textTrackDisplay');\r\n\r\n    if (ttDisplay) {\r\n      ttDisplay.updateDisplay();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * conditionally blur the element and refocus the captions button\r\n   *\r\n   * @private\r\n   */\r\n\r\n\r\n  TextTrackSettings.prototype.conditionalBlur_ = function conditionalBlur_() {\r\n    this.previouslyActiveEl_ = null;\r\n    this.off(document, 'keydown', this.handleKeyDown);\r\n\r\n    var cb = this.player_.controlBar;\r\n    var subsCapsBtn = cb && cb.subsCapsButton;\r\n    var ccBtn = cb && cb.captionsButton;\r\n\r\n    if (subsCapsBtn) {\r\n      subsCapsBtn.focus();\r\n    } else if (ccBtn) {\r\n      ccBtn.focus();\r\n    }\r\n  };\r\n\r\n  return TextTrackSettings;\r\n}(ModalDialog);\r\n\r\nComponent.registerComponent('TextTrackSettings', TextTrackSettings);\r\n\r\n/**\r\n * @file resize-manager.js\r\n */\r\n/**\r\n * A Resize Manager. It is in charge of triggering `playerresize` on the player in the right conditions.\r\n *\r\n * It'll either create an iframe and use a debounced resize handler on it or use the new {@link https://wicg.github.io/ResizeObserver/|ResizeObserver}.\r\n *\r\n * If the ResizeObserver is available natively, it will be used. A polyfill can be passed in as an option.\r\n * If a `playerresize` event is not needed, the ResizeManager component can be removed from the player, see the example below.\r\n * @example <caption>How to disable the resize manager</caption>\r\n * const player = videojs('#vid', {\r\n *   resizeManager: false\r\n * });\r\n *\r\n * @see {@link https://wicg.github.io/ResizeObserver/|ResizeObserver specification}\r\n *\r\n * @extends Component\r\n */\r\n\r\nvar ResizeManager = function (_Component) {\r\n  inherits(ResizeManager, _Component);\r\n\r\n  /**\r\n   * Create the ResizeManager.\r\n   *\r\n   * @param {Object} player\r\n   *        The `Player` that this class should be attached to.\r\n   *\r\n   * @param {Object} [options]\r\n   *        The key/value store of ResizeManager options.\r\n   *\r\n   * @param {Object} [options.ResizeObserver]\r\n   *        A polyfill for ResizeObserver can be passed in here.\r\n   *        If this is set to null it will ignore the native ResizeObserver and fall back to the iframe fallback.\r\n   */\r\n  function ResizeManager(player, options) {\r\n    classCallCheck(this, ResizeManager);\r\n\r\n    var RESIZE_OBSERVER_AVAILABLE = options.ResizeObserver || window.ResizeObserver;\r\n\r\n    // if `null` was passed, we want to disable the ResizeObserver\r\n    if (options.ResizeObserver === null) {\r\n      RESIZE_OBSERVER_AVAILABLE = false;\r\n    }\r\n\r\n    // Only create an element when ResizeObserver isn't available\r\n    var options_ = mergeOptions({ createEl: !RESIZE_OBSERVER_AVAILABLE }, options);\r\n\r\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options_));\r\n\r\n    _this.ResizeObserver = options.ResizeObserver || window.ResizeObserver;\r\n    _this.loadListener_ = null;\r\n    _this.resizeObserver_ = null;\r\n    _this.debouncedHandler_ = debounce(function () {\r\n      _this.resizeHandler();\r\n    }, 100, false, _this);\r\n\r\n    if (RESIZE_OBSERVER_AVAILABLE) {\r\n      _this.resizeObserver_ = new _this.ResizeObserver(_this.debouncedHandler_);\r\n      _this.resizeObserver_.observe(player.el());\r\n    } else {\r\n      _this.loadListener_ = function () {\r\n        if (!_this.el_ || !_this.el_.contentWindow) {\r\n          return;\r\n        }\r\n\r\n        on(_this.el_.contentWindow, 'resize', _this.debouncedHandler_);\r\n      };\r\n\r\n      _this.one('load', _this.loadListener_);\r\n    }\r\n    return _this;\r\n  }\r\n\r\n  ResizeManager.prototype.createEl = function createEl() {\r\n    return _Component.prototype.createEl.call(this, 'iframe', {\r\n      className: 'vjs-resize-manager'\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Called when a resize is triggered on the iframe or a resize is observed via the ResizeObserver\r\n   *\r\n   * @fires Player#playerresize\r\n   */\r\n\r\n\r\n  ResizeManager.prototype.resizeHandler = function resizeHandler() {\r\n    /**\r\n     * Called when the player size has changed\r\n     *\r\n     * @event Player#playerresize\r\n     * @type {EventTarget~Event}\r\n     */\r\n    // make sure player is still around to trigger\r\n    // prevents this from causing an error after dispose\r\n    if (!this.player_ || !this.player_.trigger) {\r\n      return;\r\n    }\r\n\r\n    this.player_.trigger('playerresize');\r\n  };\r\n\r\n  ResizeManager.prototype.dispose = function dispose() {\r\n    if (this.debouncedHandler_) {\r\n      this.debouncedHandler_.cancel();\r\n    }\r\n\r\n    if (this.resizeObserver_) {\r\n      if (this.player_.el()) {\r\n        this.resizeObserver_.unobserve(this.player_.el());\r\n      }\r\n      this.resizeObserver_.disconnect();\r\n    }\r\n\r\n    if (this.el_ && this.el_.contentWindow) {\r\n      off(this.el_.contentWindow, 'resize', this.debouncedHandler_);\r\n    }\r\n\r\n    if (this.loadListener_) {\r\n      this.off('load', this.loadListener_);\r\n    }\r\n\r\n    this.ResizeObserver = null;\r\n    this.resizeObserver = null;\r\n    this.debouncedHandler_ = null;\r\n    this.loadListener_ = null;\r\n  };\r\n\r\n  return ResizeManager;\r\n}(Component);\r\n\r\nComponent.registerComponent('ResizeManager', ResizeManager);\r\n\r\n/**\r\n * This function is used to fire a sourceset when there is something\r\n * similar to `mediaEl.load()` being called. It will try to find the source via\r\n * the `src` attribute and then the `<source>` elements. It will then fire `sourceset`\r\n * with the source that was found or empty string if we cannot know. If it cannot\r\n * find a source then `sourceset` will not be fired.\r\n *\r\n * @param {Html5} tech\r\n *        The tech object that sourceset was setup on\r\n *\r\n * @return {boolean}\r\n *         returns false if the sourceset was not fired and true otherwise.\r\n */\r\nvar sourcesetLoad = function sourcesetLoad(tech) {\r\n  var el = tech.el();\r\n\r\n  // if `el.src` is set, that source will be loaded.\r\n  if (el.hasAttribute('src')) {\r\n    tech.triggerSourceset(el.src);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Since there isn't a src property on the media element, source elements will be used for\r\n   * implementing the source selection algorithm. This happens asynchronously and\r\n   * for most cases were there is more than one source we cannot tell what source will\r\n   * be loaded, without re-implementing the source selection algorithm. At this time we are not\r\n   * going to do that. There are three special cases that we do handle here though:\r\n   *\r\n   * 1. If there are no sources, do not fire `sourceset`.\r\n   * 2. If there is only one `<source>` with a `src` property/attribute that is our `src`\r\n   * 3. If there is more than one `<source>` but all of them have the same `src` url.\r\n   *    That will be our src.\r\n   */\r\n  var sources = tech.$$('source');\r\n  var srcUrls = [];\r\n  var src = '';\r\n\r\n  // if there are no sources, do not fire sourceset\r\n  if (!sources.length) {\r\n    return false;\r\n  }\r\n\r\n  // only count valid/non-duplicate source elements\r\n  for (var i = 0; i < sources.length; i++) {\r\n    var url = sources[i].src;\r\n\r\n    if (url && srcUrls.indexOf(url) === -1) {\r\n      srcUrls.push(url);\r\n    }\r\n  }\r\n\r\n  // there were no valid sources\r\n  if (!srcUrls.length) {\r\n    return false;\r\n  }\r\n\r\n  // there is only one valid source element url\r\n  // use that\r\n  if (srcUrls.length === 1) {\r\n    src = srcUrls[0];\r\n  }\r\n\r\n  tech.triggerSourceset(src);\r\n  return true;\r\n};\r\n\r\n/**\r\n * our implementation of an `innerHTML` descriptor for browsers\r\n * that do not have one.\r\n */\r\nvar innerHTMLDescriptorPolyfill = {};\r\n\r\nif (!IS_IE8) {\r\n  innerHTMLDescriptorPolyfill = Object.defineProperty({}, 'innerHTML', {\r\n    get: function get() {\r\n      return this.cloneNode(true).innerHTML;\r\n    },\r\n    set: function set(v) {\r\n      // make a dummy node to use innerHTML on\r\n      var dummy = document.createElement(this.nodeName.toLowerCase());\r\n\r\n      // set innerHTML to the value provided\r\n      dummy.innerHTML = v;\r\n\r\n      // make a document fragment to hold the nodes from dummy\r\n      var docFrag = document.createDocumentFragment();\r\n\r\n      // copy all of the nodes created by the innerHTML on dummy\r\n      // to the document fragment\r\n      while (dummy.childNodes.length) {\r\n        docFrag.appendChild(dummy.childNodes[0]);\r\n      }\r\n\r\n      // remove content\r\n      this.innerText = '';\r\n\r\n      // now we add all of that html in one by appending the\r\n      // document fragment. This is how innerHTML does it.\r\n      window.Element.prototype.appendChild.call(this, docFrag);\r\n\r\n      // then return the result that innerHTML's setter would\r\n      return this.innerHTML;\r\n    }\r\n  });\r\n}\r\n/**\r\n * Get a property descriptor given a list of priorities and the\r\n * property to get.\r\n */\r\nvar getDescriptor = function getDescriptor(priority, prop) {\r\n  var descriptor = {};\r\n\r\n  for (var i = 0; i < priority.length; i++) {\r\n    descriptor = Object.getOwnPropertyDescriptor(priority[i], prop);\r\n\r\n    if (descriptor && descriptor.set && descriptor.get) {\r\n      break;\r\n    }\r\n  }\r\n\r\n  descriptor.enumerable = true;\r\n  descriptor.configurable = true;\r\n\r\n  return descriptor;\r\n};\r\n\r\nvar getInnerHTMLDescriptor = function getInnerHTMLDescriptor(tech) {\r\n  return getDescriptor([tech.el(), window.HTMLMediaElement.prototype, window.Element.prototype, innerHTMLDescriptorPolyfill], 'innerHTML');\r\n};\r\n\r\n/**\r\n * Patches browser internal functions so that we can tell syncronously\r\n * if a `<source>` was appended to the media element. For some reason this\r\n * causes a `sourceset` if the the media element is ready and has no source.\r\n * This happens when:\r\n * - The page has just loaded and the media element does not have a source.\r\n * - The media element was emptied of all sources, then `load()` was called.\r\n *\r\n * It does this by patching the following functions/properties when they are supported:\r\n *\r\n * - `append()` - can be used to add a `<source>` element to the media element\r\n * - `appendChild()` - can be used to add a `<source>` element to the media element\r\n * - `insertAdjacentHTML()` -  can be used to add a `<source>` element to the media element\r\n * - `innerHTML` -  can be used to add a `<source>` element to the media element\r\n *\r\n * @param {Html5} tech\r\n *        The tech object that sourceset is being setup on.\r\n */\r\nvar firstSourceWatch = function firstSourceWatch(tech) {\r\n  var el = tech.el();\r\n\r\n  // make sure firstSourceWatch isn't setup twice.\r\n  if (el.resetSourceWatch_) {\r\n    return;\r\n  }\r\n\r\n  var old = {};\r\n  var innerDescriptor = getInnerHTMLDescriptor(tech);\r\n  var appendWrapper = function appendWrapper(appendFn) {\r\n    return function () {\r\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\r\n        args[_key] = arguments[_key];\r\n      }\r\n\r\n      var retval = appendFn.apply(el, args);\r\n\r\n      sourcesetLoad(tech);\r\n\r\n      return retval;\r\n    };\r\n  };\r\n\r\n  ['append', 'appendChild', 'insertAdjacentHTML'].forEach(function (k) {\r\n    if (!el[k]) {\r\n      return;\r\n    }\r\n\r\n    // store the old function\r\n    old[k] = el[k];\r\n\r\n    // call the old function with a sourceset if a source\r\n    // was loaded\r\n    el[k] = appendWrapper(old[k]);\r\n  });\r\n\r\n  Object.defineProperty(el, 'innerHTML', mergeOptions(innerDescriptor, {\r\n    set: appendWrapper(innerDescriptor.set)\r\n  }));\r\n\r\n  el.resetSourceWatch_ = function () {\r\n    el.resetSourceWatch_ = null;\r\n    Object.keys(old).forEach(function (k) {\r\n      el[k] = old[k];\r\n    });\r\n\r\n    Object.defineProperty(el, 'innerHTML', innerDescriptor);\r\n  };\r\n\r\n  // on the first sourceset, we need to revert our changes\r\n  tech.one('sourceset', el.resetSourceWatch_);\r\n};\r\n\r\n/**\r\n * our implementation of a `src` descriptor for browsers\r\n * that do not have one.\r\n */\r\n\r\nvar srcDescriptorPolyfill = {};\r\n\r\nif (!IS_IE8) {\r\n  srcDescriptorPolyfill = Object.defineProperty({}, 'src', {\r\n    get: function get() {\r\n      if (this.hasAttribute('src')) {\r\n        return getAbsoluteURL(window.Element.prototype.getAttribute.call(this, 'src'));\r\n      }\r\n\r\n      return '';\r\n    },\r\n    set: function set(v) {\r\n      window.Element.prototype.setAttribute.call(this, 'src', v);\r\n\r\n      return v;\r\n    }\r\n  });\r\n}\r\n\r\nvar getSrcDescriptor = function getSrcDescriptor(tech) {\r\n  return getDescriptor([tech.el(), window.HTMLMediaElement.prototype, srcDescriptorPolyfill], 'src');\r\n};\r\n\r\n/**\r\n * setup `sourceset` handling on the `Html5` tech. This function\r\n * patches the following element properties/functions:\r\n *\r\n * - `src` - to determine when `src` is set\r\n * - `setAttribute()` - to determine when `src` is set\r\n * - `load()` - this re-triggers the source selection algorithm, and can\r\n *              cause a sourceset.\r\n *\r\n * If there is no source when we are adding `sourceset` support or during a `load()`\r\n * we also patch the functions listed in `firstSourceWatch`.\r\n *\r\n * @param {Html5} tech\r\n *        The tech to patch\r\n */\r\nvar setupSourceset = function setupSourceset(tech) {\r\n  if (!tech.featuresSourceset) {\r\n    return;\r\n  }\r\n\r\n  var el = tech.el();\r\n\r\n  // make sure sourceset isn't setup twice.\r\n  if (el.resetSourceset_) {\r\n    return;\r\n  }\r\n\r\n  var srcDescriptor = getSrcDescriptor(tech);\r\n  var oldSetAttribute = el.setAttribute;\r\n  var oldLoad = el.load;\r\n\r\n  Object.defineProperty(el, 'src', mergeOptions(srcDescriptor, {\r\n    set: function set(v) {\r\n      var retval = srcDescriptor.set.call(el, v);\r\n\r\n      // we use the getter here to get the actual value set on src\r\n      tech.triggerSourceset(el.src);\r\n\r\n      return retval;\r\n    }\r\n  }));\r\n\r\n  el.setAttribute = function (n, v) {\r\n    var retval = oldSetAttribute.call(el, n, v);\r\n\r\n    if (/src/i.test(n)) {\r\n      tech.triggerSourceset(el.src);\r\n    }\r\n\r\n    return retval;\r\n  };\r\n\r\n  el.load = function () {\r\n    var retval = oldLoad.call(el);\r\n\r\n    // if load was called, but there was no source to fire\r\n    // sourceset on. We have to watch for a source append\r\n    // as that can trigger a `sourceset` when the media element\r\n    // has no source\r\n    if (!sourcesetLoad(tech)) {\r\n      tech.triggerSourceset('');\r\n      firstSourceWatch(tech);\r\n    }\r\n\r\n    return retval;\r\n  };\r\n\r\n  if (el.currentSrc) {\r\n    tech.triggerSourceset(el.currentSrc);\r\n  } else if (!sourcesetLoad(tech)) {\r\n    firstSourceWatch(tech);\r\n  }\r\n\r\n  el.resetSourceset_ = function () {\r\n    el.resetSourceset_ = null;\r\n    el.load = oldLoad;\r\n    el.setAttribute = oldSetAttribute;\r\n    Object.defineProperty(el, 'src', srcDescriptor);\r\n    if (el.resetSourceWatch_) {\r\n      el.resetSourceWatch_();\r\n    }\r\n  };\r\n};\r\n\r\nvar _templateObject$2 = taggedTemplateLiteralLoose(['Text Tracks are being loaded from another origin but the crossorigin attribute isn\\'t used.\\n            This may prevent text tracks from loading.'], ['Text Tracks are being loaded from another origin but the crossorigin attribute isn\\'t used.\\n            This may prevent text tracks from loading.']);\r\n\r\n/**\r\n * @file html5.js\r\n */\r\n/**\r\n * HTML5 Media Controller - Wrapper for HTML5 Media API\r\n *\r\n * @mixes Tech~SouceHandlerAdditions\r\n * @extends Tech\r\n */\r\n\r\nvar Html5 = function (_Tech) {\r\n  inherits(Html5, _Tech);\r\n\r\n  /**\r\n   * Create an instance of this Tech.\r\n   *\r\n   * @param {Object} [options]\r\n   *        The key/value store of player options.\r\n   *\r\n   * @param {Component~ReadyCallback} ready\r\n   *        Callback function to call when the `HTML5` Tech is ready.\r\n   */\r\n  function Html5(options, ready) {\r\n    classCallCheck(this, Html5);\r\n\r\n    var _this = possibleConstructorReturn(this, _Tech.call(this, options, ready));\r\n\r\n    var source = options.source;\r\n    var crossoriginTracks = false;\r\n\r\n    // Set the source if one is provided\r\n    // 1) Check if the source is new (if not, we want to keep the original so playback isn't interrupted)\r\n    // 2) Check to see if the network state of the tag was failed at init, and if so, reset the source\r\n    // anyway so the error gets fired.\r\n    if (source && (_this.el_.currentSrc !== source.src || options.tag && options.tag.initNetworkState_ === 3)) {\r\n      _this.setSource(source);\r\n    } else {\r\n      _this.handleLateInit_(_this.el_);\r\n    }\r\n\r\n    // setup sourceset after late sourceset/init\r\n    if (options.enableSourceset) {\r\n      _this.setupSourcesetHandling_();\r\n    }\r\n\r\n    if (_this.el_.hasChildNodes()) {\r\n\r\n      var nodes = _this.el_.childNodes;\r\n      var nodesLength = nodes.length;\r\n      var removeNodes = [];\r\n\r\n      while (nodesLength--) {\r\n        var node = nodes[nodesLength];\r\n        var nodeName = node.nodeName.toLowerCase();\r\n\r\n        if (nodeName === 'track') {\r\n          if (!_this.featuresNativeTextTracks) {\r\n            // Empty video tag tracks so the built-in player doesn't use them also.\r\n            // This may not be fast enough to stop HTML5 browsers from reading the tags\r\n            // so we'll need to turn off any default tracks if we're manually doing\r\n            // captions and subtitles. videoElement.textTracks\r\n            removeNodes.push(node);\r\n          } else {\r\n            // store HTMLTrackElement and TextTrack to remote list\r\n            _this.remoteTextTrackEls().addTrackElement_(node);\r\n            _this.remoteTextTracks().addTrack(node.track);\r\n            _this.textTracks().addTrack(node.track);\r\n            if (!crossoriginTracks && !_this.el_.hasAttribute('crossorigin') && isCrossOrigin(node.src)) {\r\n              crossoriginTracks = true;\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      for (var i = 0; i < removeNodes.length; i++) {\r\n        _this.el_.removeChild(removeNodes[i]);\r\n      }\r\n    }\r\n\r\n    _this.proxyNativeTracks_();\r\n    if (_this.featuresNativeTextTracks && crossoriginTracks) {\r\n      log.warn(tsml(_templateObject$2));\r\n    }\r\n\r\n    // prevent iOS Safari from disabling metadata text tracks during native playback\r\n    _this.restoreMetadataTracksInIOSNativePlayer_();\r\n\r\n    // Determine if native controls should be used\r\n    // Our goal should be to get the custom controls on mobile solid everywhere\r\n    // so we can remove this all together. Right now this will block custom\r\n    // controls on touch enabled laptops like the Chrome Pixel\r\n    if ((TOUCH_ENABLED || IS_IPHONE || IS_NATIVE_ANDROID) && options.nativeControlsForTouch === true) {\r\n      _this.setControls(true);\r\n    }\r\n\r\n    // on iOS, we want to proxy `webkitbeginfullscreen` and `webkitendfullscreen`\r\n    // into a `fullscreenchange` event\r\n    _this.proxyWebkitFullscreen_();\r\n\r\n    _this.triggerReady();\r\n    return _this;\r\n  }\r\n\r\n  /**\r\n   * Dispose of `HTML5` media element and remove all tracks.\r\n   */\r\n\r\n\r\n  Html5.prototype.dispose = function dispose() {\r\n    if (this.el_ && this.el_.resetSourceset_) {\r\n      this.el_.resetSourceset_();\r\n    }\r\n    Html5.disposeMediaElement(this.el_);\r\n    this.options_ = null;\r\n\r\n    // tech will handle clearing of the emulated track list\r\n    _Tech.prototype.dispose.call(this);\r\n  };\r\n\r\n  /**\r\n   * Modify the media element so that we can detect when\r\n   * the source is changed. Fires `sourceset` just after the source has changed\r\n   */\r\n\r\n\r\n  Html5.prototype.setupSourcesetHandling_ = function setupSourcesetHandling_() {\r\n    setupSourceset(this);\r\n  };\r\n\r\n  /**\r\n   * When a captions track is enabled in the iOS Safari native player, all other\r\n   * tracks are disabled (including metadata tracks), which nulls all of their\r\n   * associated cue points. This will restore metadata tracks to their pre-fullscreen\r\n   * state in those cases so that cue points are not needlessly lost.\r\n   *\r\n   * @private\r\n   */\r\n\r\n\r\n  Html5.prototype.restoreMetadataTracksInIOSNativePlayer_ = function restoreMetadataTracksInIOSNativePlayer_() {\r\n    var textTracks = this.textTracks();\r\n    var metadataTracksPreFullscreenState = void 0;\r\n\r\n    // captures a snapshot of every metadata track's current state\r\n    var takeMetadataTrackSnapshot = function takeMetadataTrackSnapshot() {\r\n      metadataTracksPreFullscreenState = [];\r\n\r\n      for (var i = 0; i < textTracks.length; i++) {\r\n        var track = textTracks[i];\r\n\r\n        if (track.kind === 'metadata') {\r\n          metadataTracksPreFullscreenState.push({\r\n            track: track,\r\n            storedMode: track.mode\r\n          });\r\n        }\r\n      }\r\n    };\r\n\r\n    // snapshot each metadata track's initial state, and update the snapshot\r\n    // each time there is a track 'change' event\r\n    takeMetadataTrackSnapshot();\r\n    textTracks.addEventListener('change', takeMetadataTrackSnapshot);\r\n\r\n    this.on('dispose', function () {\r\n      return textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\r\n    });\r\n\r\n    var restoreTrackMode = function restoreTrackMode() {\r\n      for (var i = 0; i < metadataTracksPreFullscreenState.length; i++) {\r\n        var storedTrack = metadataTracksPreFullscreenState[i];\r\n\r\n        if (storedTrack.track.mode === 'disabled' && storedTrack.track.mode !== storedTrack.storedMode) {\r\n          storedTrack.track.mode = storedTrack.storedMode;\r\n        }\r\n      }\r\n      // we only want this handler to be executed on the first 'change' event\r\n      textTracks.removeEventListener('change', restoreTrackMode);\r\n    };\r\n\r\n    // when we enter fullscreen playback, stop updating the snapshot and\r\n    // restore all track modes to their pre-fullscreen state\r\n    this.on('webkitbeginfullscreen', function () {\r\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\r\n\r\n      // remove the listener before adding it just in case it wasn't previously removed\r\n      textTracks.removeEventListener('change', restoreTrackMode);\r\n      textTracks.addEventListener('change', restoreTrackMode);\r\n    });\r\n\r\n    // start updating the snapshot again after leaving fullscreen\r\n    this.on('webkitendfullscreen', function () {\r\n      // remove the listener before adding it just in case it wasn't previously removed\r\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\r\n      textTracks.addEventListener('change', takeMetadataTrackSnapshot);\r\n\r\n      // remove the restoreTrackMode handler in case it wasn't triggered during fullscreen playback\r\n      textTracks.removeEventListener('change', restoreTrackMode);\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Proxy all native track list events to our track lists if the browser we are playing\r\n   * in supports that type of track list.\r\n   *\r\n   * @private\r\n   */\r\n\r\n\r\n  Html5.prototype.proxyNativeTracks_ = function proxyNativeTracks_() {\r\n    var _this2 = this;\r\n\r\n    NORMAL.names.forEach(function (name) {\r\n      var props = NORMAL[name];\r\n      var elTracks = _this2.el()[props.getterName];\r\n      var techTracks = _this2[props.getterName]();\r\n\r\n      if (!_this2['featuresNative' + props.capitalName + 'Tracks'] || !elTracks || !elTracks.addEventListener) {\r\n        return;\r\n      }\r\n      var listeners = {\r\n        change: function change(e) {\r\n          techTracks.trigger({\r\n            type: 'change',\r\n            target: techTracks,\r\n            currentTarget: techTracks,\r\n            srcElement: techTracks\r\n          });\r\n        },\r\n        addtrack: function addtrack(e) {\r\n          techTracks.addTrack(e.track);\r\n        },\r\n        removetrack: function removetrack(e) {\r\n          techTracks.removeTrack(e.track);\r\n        }\r\n      };\r\n      var removeOldTracks = function removeOldTracks() {\r\n        var removeTracks = [];\r\n\r\n        for (var i = 0; i < techTracks.length; i++) {\r\n          var found = false;\r\n\r\n          for (var j = 0; j < elTracks.length; j++) {\r\n            if (elTracks[j] === techTracks[i]) {\r\n              found = true;\r\n              break;\r\n            }\r\n          }\r\n\r\n          if (!found) {\r\n            removeTracks.push(techTracks[i]);\r\n          }\r\n        }\r\n\r\n        while (removeTracks.length) {\r\n          techTracks.removeTrack(removeTracks.shift());\r\n        }\r\n      };\r\n\r\n      Object.keys(listeners).forEach(function (eventName) {\r\n        var listener = listeners[eventName];\r\n\r\n        elTracks.addEventListener(eventName, listener);\r\n        _this2.on('dispose', function (e) {\r\n          return elTracks.removeEventListener(eventName, listener);\r\n        });\r\n      });\r\n\r\n      // Remove (native) tracks that are not used anymore\r\n      _this2.on('loadstart', removeOldTracks);\r\n      _this2.on('dispose', function (e) {\r\n        return _this2.off('loadstart', removeOldTracks);\r\n      });\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Create the `Html5` Tech's DOM element.\r\n   *\r\n   * @return {Element}\r\n   *         The element that gets created.\r\n   */\r\n\r\n\r\n  Html5.prototype.createEl = function createEl$$1() {\r\n    var el = this.options_.tag;\r\n\r\n    // Check if this browser supports moving the element into the box.\r\n    // On the iPhone video will break if you move the element,\r\n    // So we have to create a brand new element.\r\n    // If we ingested the player div, we do not need to move the media element.\r\n    if (!el || !(this.options_.playerElIngest || this.movingMediaElementInDOM)) {\r\n\r\n      // If the original tag is still there, clone and remove it.\r\n      if (el) {\r\n        var clone = el.cloneNode(true);\r\n\r\n        if (el.parentNode) {\r\n          el.parentNode.insertBefore(clone, el);\r\n        }\r\n        Html5.disposeMediaElement(el);\r\n        el = clone;\r\n      } else {\r\n        el = document.createElement('video');\r\n\r\n        // determine if native controls should be used\r\n        var tagAttributes = this.options_.tag && getAttributes(this.options_.tag);\r\n        var attributes = mergeOptions({}, tagAttributes);\r\n\r\n        if (!TOUCH_ENABLED || this.options_.nativeControlsForTouch !== true) {\r\n          delete attributes.controls;\r\n        }\r\n\r\n        setAttributes(el, assign(attributes, {\r\n          id: this.options_.techId,\r\n          'class': 'vjs-tech'\r\n        }));\r\n      }\r\n\r\n      el.playerId = this.options_.playerId;\r\n    }\r\n\r\n    if (typeof this.options_.preload !== 'undefined') {\r\n      setAttribute(el, 'preload', this.options_.preload);\r\n    }\r\n\r\n    // Update specific tag settings, in case they were overridden\r\n    // `autoplay` has to be *last* so that `muted` and `playsinline` are present\r\n    // when iOS/Safari or other browsers attempt to autoplay.\r\n    var settingsAttrs = ['loop', 'muted', 'playsinline', 'autoplay'];\r\n\r\n    for (var i = 0; i < settingsAttrs.length; i++) {\r\n      var attr = settingsAttrs[i];\r\n      var value = this.options_[attr];\r\n\r\n      if (typeof value !== 'undefined') {\r\n        if (value) {\r\n          setAttribute(el, attr, attr);\r\n        } else {\r\n          removeAttribute(el, attr);\r\n        }\r\n        el[attr] = value;\r\n      }\r\n    }\r\n\r\n    return el;\r\n  };\r\n\r\n  /**\r\n   * This will be triggered if the loadstart event has already fired, before videojs was\r\n   * ready. Two known examples of when this can happen are:\r\n   * 1. If we're loading the playback object after it has started loading\r\n   * 2. The media is already playing the (often with autoplay on) then\r\n   *\r\n   * This function will fire another loadstart so that videojs can catchup.\r\n   *\r\n   * @fires Tech#loadstart\r\n   *\r\n   * @return {undefined}\r\n   *         returns nothing.\r\n   */\r\n\r\n\r\n  Html5.prototype.handleLateInit_ = function handleLateInit_(el) {\r\n    if (el.networkState === 0 || el.networkState === 3) {\r\n      // The video element hasn't started loading the source yet\r\n      // or didn't find a source\r\n      return;\r\n    }\r\n\r\n    if (el.readyState === 0) {\r\n      // NetworkState is set synchronously BUT loadstart is fired at the\r\n      // end of the current stack, usually before setInterval(fn, 0).\r\n      // So at this point we know loadstart may have already fired or is\r\n      // about to fire, and either way the player hasn't seen it yet.\r\n      // We don't want to fire loadstart prematurely here and cause a\r\n      // double loadstart so we'll wait and see if it happens between now\r\n      // and the next loop, and fire it if not.\r\n      // HOWEVER, we also want to make sure it fires before loadedmetadata\r\n      // which could also happen between now and the next loop, so we'll\r\n      // watch for that also.\r\n      var loadstartFired = false;\r\n      var setLoadstartFired = function setLoadstartFired() {\r\n        loadstartFired = true;\r\n      };\r\n\r\n      this.on('loadstart', setLoadstartFired);\r\n\r\n      var triggerLoadstart = function triggerLoadstart() {\r\n        // We did miss the original loadstart. Make sure the player\r\n        // sees loadstart before loadedmetadata\r\n        if (!loadstartFired) {\r\n          this.trigger('loadstart');\r\n        }\r\n      };\r\n\r\n      this.on('loadedmetadata', triggerLoadstart);\r\n\r\n      this.ready(function () {\r\n        this.off('loadstart', setLoadstartFired);\r\n        this.off('loadedmetadata', triggerLoadstart);\r\n\r\n        if (!loadstartFired) {\r\n          // We did miss the original native loadstart. Fire it now.\r\n          this.trigger('loadstart');\r\n        }\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    // From here on we know that loadstart already fired and we missed it.\r\n    // The other readyState events aren't as much of a problem if we double\r\n    // them, so not going to go to as much trouble as loadstart to prevent\r\n    // that unless we find reason to.\r\n    var eventsToTrigger = ['loadstart'];\r\n\r\n    // loadedmetadata: newly equal to HAVE_METADATA (1) or greater\r\n    eventsToTrigger.push('loadedmetadata');\r\n\r\n    // loadeddata: newly increased to HAVE_CURRENT_DATA (2) or greater\r\n    if (el.readyState >= 2) {\r\n      eventsToTrigger.push('loadeddata');\r\n    }\r\n\r\n    // canplay: newly increased to HAVE_FUTURE_DATA (3) or greater\r\n    if (el.readyState >= 3) {\r\n      eventsToTrigger.push('canplay');\r\n    }\r\n\r\n    // canplaythrough: newly equal to HAVE_ENOUGH_DATA (4)\r\n    if (el.readyState >= 4) {\r\n      eventsToTrigger.push('canplaythrough');\r\n    }\r\n\r\n    // We still need to give the player time to add event listeners\r\n    this.ready(function () {\r\n      eventsToTrigger.forEach(function (type) {\r\n        this.trigger(type);\r\n      }, this);\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Set current time for the `HTML5` tech.\r\n   *\r\n   * @param {number} seconds\r\n   *        Set the current time of the media to this.\r\n   */\r\n\r\n\r\n  Html5.prototype.setCurrentTime = function setCurrentTime(seconds) {\r\n    try {\r\n      this.el_.currentTime = seconds;\r\n    } catch (e) {\r\n      log(e, 'Video is not ready. (Video.js)');\r\n      // this.warning(VideoJS.warnings.videoNotReady);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Get the current duration of the HTML5 media element.\r\n   *\r\n   * @return {number}\r\n   *         The duration of the media or 0 if there is no duration.\r\n   */\r\n\r\n\r\n  Html5.prototype.duration = function duration() {\r\n    var _this3 = this;\r\n\r\n    // Android Chrome will report duration as Infinity for VOD HLS until after\r\n    // playback has started, which triggers the live display erroneously.\r\n    // Return NaN if playback has not started and trigger a durationupdate once\r\n    // the duration can be reliably known.\r\n    if (this.el_.duration === Infinity && IS_ANDROID && IS_CHROME && this.el_.currentTime === 0) {\r\n      // Wait for the first `timeupdate` with currentTime > 0 - there may be\r\n      // several with 0\r\n      var checkProgress = function checkProgress() {\r\n        if (_this3.el_.currentTime > 0) {\r\n          // Trigger durationchange for genuinely live video\r\n          if (_this3.el_.duration === Infinity) {\r\n            _this3.trigger('durationchange');\r\n          }\r\n          _this3.off('timeupdate', checkProgress);\r\n        }\r\n      };\r\n\r\n      this.on('timeupdate', checkProgress);\r\n      return NaN;\r\n    }\r\n    return this.el_.duration || NaN;\r\n  };\r\n\r\n  /**\r\n   * Get the current width of the HTML5 media element.\r\n   *\r\n   * @return {number}\r\n   *         The width of the HTML5 media element.\r\n   */\r\n\r\n\r\n  Html5.prototype.width = function width() {\r\n    return this.el_.offsetWidth;\r\n  };\r\n\r\n  /**\r\n   * Get the current height of the HTML5 media element.\r\n   *\r\n   * @return {number}\r\n   *         The heigth of the HTML5 media element.\r\n   */\r\n\r\n\r\n  Html5.prototype.height = function height() {\r\n    return this.el_.offsetHeight;\r\n  };\r\n\r\n  /**\r\n   * Proxy iOS `webkitbeginfullscreen` and `webkitendfullscreen` into\r\n   * `fullscreenchange` event.\r\n   *\r\n   * @private\r\n   * @fires fullscreenchange\r\n   * @listens webkitendfullscreen\r\n   * @listens webkitbeginfullscreen\r\n   * @listens webkitbeginfullscreen\r\n   */\r\n\r\n\r\n  Html5.prototype.proxyWebkitFullscreen_ = function proxyWebkitFullscreen_() {\r\n    var _this4 = this;\r\n\r\n    if (!('webkitDisplayingFullscreen' in this.el_)) {\r\n      return;\r\n    }\r\n\r\n    var endFn = function endFn() {\r\n      this.trigger('fullscreenchange', { isFullscreen: false });\r\n    };\r\n\r\n    var beginFn = function beginFn() {\r\n      if ('webkitPresentationMode' in this.el_ && this.el_.webkitPresentationMode !== 'picture-in-picture') {\r\n        this.one('webkitendfullscreen', endFn);\r\n\r\n        this.trigger('fullscreenchange', { isFullscreen: true });\r\n      }\r\n    };\r\n\r\n    this.on('webkitbeginfullscreen', beginFn);\r\n    this.on('dispose', function () {\r\n      _this4.off('webkitbeginfullscreen', beginFn);\r\n      _this4.off('webkitendfullscreen', endFn);\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Check if fullscreen is supported on the current playback device.\r\n   *\r\n   * @return {boolean}\r\n   *         - True if fullscreen is supported.\r\n   *         - False if fullscreen is not supported.\r\n   */\r\n\r\n\r\n  Html5.prototype.supportsFullScreen = function supportsFullScreen() {\r\n    if (typeof this.el_.webkitEnterFullScreen === 'function') {\r\n      var userAgent = window.navigator && window.navigator.userAgent || '';\r\n\r\n      // Seems to be broken in Chromium/Chrome && Safari in Leopard\r\n      if (/Android/.test(userAgent) || !/Chrome|Mac OS X 10.5/.test(userAgent)) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  };\r\n\r\n  /**\r\n   * Request that the `HTML5` Tech enter fullscreen.\r\n   */\r\n\r\n\r\n  Html5.prototype.enterFullScreen = function enterFullScreen() {\r\n    var video = this.el_;\r\n\r\n    if (video.paused && video.networkState <= video.HAVE_METADATA) {\r\n      // attempt to prime the video element for programmatic access\r\n      // this isn't necessary on the desktop but shouldn't hurt\r\n      this.el_.play();\r\n\r\n      // playing and pausing synchronously during the transition to fullscreen\r\n      // can get iOS ~6.1 devices into a play/pause loop\r\n      this.setTimeout(function () {\r\n        video.pause();\r\n        video.webkitEnterFullScreen();\r\n      }, 0);\r\n    } else {\r\n      video.webkitEnterFullScreen();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Request that the `HTML5` Tech exit fullscreen.\r\n   */\r\n\r\n\r\n  Html5.prototype.exitFullScreen = function exitFullScreen() {\r\n    this.el_.webkitExitFullScreen();\r\n  };\r\n\r\n  /**\r\n   * A getter/setter for the `Html5` Tech's source object.\r\n   * > Note: Please use {@link Html5#setSource}\r\n   *\r\n   * @param {Tech~SourceObject} [src]\r\n   *        The source object you want to set on the `HTML5` techs element.\r\n   *\r\n   * @return {Tech~SourceObject|undefined}\r\n   *         - The current source object when a source is not passed in.\r\n   *         - undefined when setting\r\n   *\r\n   * @deprecated Since version 5.\r\n   */\r\n\r\n\r\n  Html5.prototype.src = function src(_src) {\r\n    if (_src === undefined) {\r\n      return this.el_.src;\r\n    }\r\n\r\n    // Setting src through `src` instead of `setSrc` will be deprecated\r\n    this.setSrc(_src);\r\n  };\r\n\r\n  /**\r\n   * Reset the tech by removing all sources and then calling\r\n   * {@link Html5.resetMediaElement}.\r\n   */\r\n\r\n\r\n  Html5.prototype.reset = function reset() {\r\n    Html5.resetMediaElement(this.el_);\r\n  };\r\n\r\n  /**\r\n   * Get the current source on the `HTML5` Tech. Falls back to returning the source from\r\n   * the HTML5 media element.\r\n   *\r\n   * @return {Tech~SourceObject}\r\n   *         The current source object from the HTML5 tech. With a fallback to the\r\n   *         elements source.\r\n   */\r\n\r\n\r\n  Html5.prototype.currentSrc = function currentSrc() {\r\n    if (this.currentSource_) {\r\n      return this.currentSource_.src;\r\n    }\r\n    return this.el_.currentSrc;\r\n  };\r\n\r\n  /**\r\n   * Set controls attribute for the HTML5 media Element.\r\n   *\r\n   * @param {string} val\r\n   *        Value to set the controls attribute to\r\n   */\r\n\r\n\r\n  Html5.prototype.setControls = function setControls(val) {\r\n    this.el_.controls = !!val;\r\n  };\r\n\r\n  /**\r\n   * Create and returns a remote {@link TextTrack} object.\r\n   *\r\n   * @param {string} kind\r\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\r\n   *\r\n   * @param {string} [label]\r\n   *        Label to identify the text track\r\n   *\r\n   * @param {string} [language]\r\n   *        Two letter language abbreviation\r\n   *\r\n   * @return {TextTrack}\r\n   *         The TextTrack that gets created.\r\n   */\r\n\r\n\r\n  Html5.prototype.addTextTrack = function addTextTrack(kind, label, language) {\r\n    if (!this.featuresNativeTextTracks) {\r\n      return _Tech.prototype.addTextTrack.call(this, kind, label, language);\r\n    }\r\n\r\n    return this.el_.addTextTrack(kind, label, language);\r\n  };\r\n\r\n  /**\r\n   * Creates either native TextTrack or an emulated TextTrack depending\r\n   * on the value of `featuresNativeTextTracks`\r\n   *\r\n   * @param {Object} options\r\n   *        The object should contain the options to intialize the TextTrack with.\r\n   *\r\n   * @param {string} [options.kind]\r\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\r\n   *\r\n   * @param {string} [options.label].\r\n   *        Label to identify the text track\r\n   *\r\n   * @param {string} [options.language]\r\n   *        Two letter language abbreviation.\r\n   *\r\n   * @param {boolean} [options.default]\r\n   *        Default this track to on.\r\n   *\r\n   * @param {string} [options.id]\r\n   *        The internal id to assign this track.\r\n   *\r\n   * @param {string} [options.src]\r\n   *        A source url for the track.\r\n   *\r\n   * @return {HTMLTrackElement}\r\n   *         The track element that gets created.\r\n   */\r\n\r\n\r\n  Html5.prototype.createRemoteTextTrack = function createRemoteTextTrack(options) {\r\n    if (!this.featuresNativeTextTracks) {\r\n      return _Tech.prototype.createRemoteTextTrack.call(this, options);\r\n    }\r\n    var htmlTrackElement = document.createElement('track');\r\n\r\n    if (options.kind) {\r\n      htmlTrackElement.kind = options.kind;\r\n    }\r\n    if (options.label) {\r\n      htmlTrackElement.label = options.label;\r\n    }\r\n    if (options.language || options.srclang) {\r\n      htmlTrackElement.srclang = options.language || options.srclang;\r\n    }\r\n    if (options['default']) {\r\n      htmlTrackElement['default'] = options['default'];\r\n    }\r\n    if (options.id) {\r\n      htmlTrackElement.id = options.id;\r\n    }\r\n    if (options.src) {\r\n      htmlTrackElement.src = options.src;\r\n    }\r\n\r\n    return htmlTrackElement;\r\n  };\r\n\r\n  /**\r\n   * Creates a remote text track object and returns an html track element.\r\n   *\r\n   * @param {Object} options The object should contain values for\r\n   * kind, language, label, and src (location of the WebVTT file)\r\n   * @param {Boolean} [manualCleanup=true] if set to false, the TextTrack will be\r\n   * automatically removed from the video element whenever the source changes\r\n   * @return {HTMLTrackElement} An Html Track Element.\r\n   * This can be an emulated {@link HTMLTrackElement} or a native one.\r\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\r\n   * to \"false\" in upcoming versions of Video.js\r\n   */\r\n\r\n\r\n  Html5.prototype.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\r\n    var htmlTrackElement = _Tech.prototype.addRemoteTextTrack.call(this, options, manualCleanup);\r\n\r\n    if (this.featuresNativeTextTracks) {\r\n      this.el().appendChild(htmlTrackElement);\r\n    }\r\n\r\n    return htmlTrackElement;\r\n  };\r\n\r\n  /**\r\n   * Remove remote `TextTrack` from `TextTrackList` object\r\n   *\r\n   * @param {TextTrack} track\r\n   *        `TextTrack` object to remove\r\n   */\r\n\r\n\r\n  Html5.prototype.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\r\n    _Tech.prototype.removeRemoteTextTrack.call(this, track);\r\n\r\n    if (this.featuresNativeTextTracks) {\r\n      var tracks = this.$$('track');\r\n\r\n      var i = tracks.length;\r\n\r\n      while (i--) {\r\n        if (track === tracks[i] || track === tracks[i].track) {\r\n          this.el().removeChild(tracks[i]);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Gets available media playback quality metrics as specified by the W3C's Media\r\n   * Playback Quality API.\r\n   *\r\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\r\n   *\r\n   * @return {Object}\r\n   *         An object with supported media playback quality metrics\r\n   */\r\n\r\n\r\n  Html5.prototype.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\r\n    if (typeof this.el().getVideoPlaybackQuality === 'function') {\r\n      return this.el().getVideoPlaybackQuality();\r\n    }\r\n\r\n    var videoPlaybackQuality = {};\r\n\r\n    if (typeof this.el().webkitDroppedFrameCount !== 'undefined' && typeof this.el().webkitDecodedFrameCount !== 'undefined') {\r\n      videoPlaybackQuality.droppedVideoFrames = this.el().webkitDroppedFrameCount;\r\n      videoPlaybackQuality.totalVideoFrames = this.el().webkitDecodedFrameCount;\r\n    }\r\n\r\n    if (window.performance && typeof window.performance.now === 'function') {\r\n      videoPlaybackQuality.creationTime = window.performance.now();\r\n    } else if (window.performance && window.performance.timing && typeof window.performance.timing.navigationStart === 'number') {\r\n      videoPlaybackQuality.creationTime = window.Date.now() - window.performance.timing.navigationStart;\r\n    }\r\n\r\n    return videoPlaybackQuality;\r\n  };\r\n\r\n  return Html5;\r\n}(Tech);\r\n\r\n/* HTML5 Support Testing ---------------------------------------------------- */\r\n\r\nif (isReal()) {\r\n\r\n  /**\r\n   * Element for testing browser HTML5 media capabilities\r\n   *\r\n   * @type {Element}\r\n   * @constant\r\n   * @private\r\n   */\r\n  Html5.TEST_VID = document.createElement('video');\r\n  var track = document.createElement('track');\r\n\r\n  track.kind = 'captions';\r\n  track.srclang = 'en';\r\n  track.label = 'English';\r\n  Html5.TEST_VID.appendChild(track);\r\n}\r\n\r\n/**\r\n * Check if HTML5 media is supported by this browser/device.\r\n *\r\n * @return {boolean}\r\n *         - True if HTML5 media is supported.\r\n *         - False if HTML5 media is not supported.\r\n */\r\nHtml5.isSupported = function () {\r\n  // IE9 with no Media Player is a LIAR! (#984)\r\n  try {\r\n    Html5.TEST_VID.volume = 0.5;\r\n  } catch (e) {\r\n    return false;\r\n  }\r\n\r\n  return !!(Html5.TEST_VID && Html5.TEST_VID.canPlayType);\r\n};\r\n\r\n/**\r\n * Check if the tech can support the given type\r\n *\r\n * @param {string} type\r\n *        The mimetype to check\r\n * @return {string} 'probably', 'maybe', or '' (empty string)\r\n */\r\nHtml5.canPlayType = function (type) {\r\n  return Html5.TEST_VID.canPlayType(type);\r\n};\r\n\r\n/**\r\n * Check if the tech can support the given source\r\n * @param {Object} srcObj\r\n *        The source object\r\n * @param {Object} options\r\n *        The options passed to the tech\r\n * @return {string} 'probably', 'maybe', or '' (empty string)\r\n */\r\nHtml5.canPlaySource = function (srcObj, options) {\r\n  return Html5.canPlayType(srcObj.type);\r\n};\r\n\r\n/**\r\n * Check if the volume can be changed in this browser/device.\r\n * Volume cannot be changed in a lot of mobile devices.\r\n * Specifically, it can't be changed from 1 on iOS.\r\n *\r\n * @return {boolean}\r\n *         - True if volume can be controlled\r\n *         - False otherwise\r\n */\r\nHtml5.canControlVolume = function () {\r\n  // IE will error if Windows Media Player not installed #3315\r\n  try {\r\n    var volume = Html5.TEST_VID.volume;\r\n\r\n    Html5.TEST_VID.volume = volume / 2 + 0.1;\r\n    return volume !== Html5.TEST_VID.volume;\r\n  } catch (e) {\r\n    return false;\r\n  }\r\n};\r\n\r\n/**\r\n * Check if the volume can be muted in this browser/device.\r\n * Some devices, e.g. iOS, don't allow changing volume\r\n * but permits muting/unmuting.\r\n *\r\n * @return {bolean}\r\n *      - True if volume can be muted\r\n *      - False otherwise\r\n */\r\nHtml5.canMuteVolume = function () {\r\n  try {\r\n    var muted = Html5.TEST_VID.muted;\r\n\r\n    // in some versions of iOS muted property doesn't always\r\n    // work, so we want to set both property and attribute\r\n    Html5.TEST_VID.muted = !muted;\r\n    if (Html5.TEST_VID.muted) {\r\n      setAttribute(Html5.TEST_VID, 'muted', 'muted');\r\n    } else {\r\n      removeAttribute(Html5.TEST_VID, 'muted', 'muted');\r\n    }\r\n    return muted !== Html5.TEST_VID.muted;\r\n  } catch (e) {\r\n    return false;\r\n  }\r\n};\r\n\r\n/**\r\n * Check if the playback rate can be changed in this browser/device.\r\n *\r\n * @return {boolean}\r\n *         - True if playback rate can be controlled\r\n *         - False otherwise\r\n */\r\nHtml5.canControlPlaybackRate = function () {\r\n  // Playback rate API is implemented in Android Chrome, but doesn't do anything\r\n  // https://github.com/videojs/video.js/issues/3180\r\n  if (IS_ANDROID && IS_CHROME && CHROME_VERSION < 58) {\r\n    return false;\r\n  }\r\n  // IE will error if Windows Media Player not installed #3315\r\n  try {\r\n    var playbackRate = Html5.TEST_VID.playbackRate;\r\n\r\n    Html5.TEST_VID.playbackRate = playbackRate / 2 + 0.1;\r\n    return playbackRate !== Html5.TEST_VID.playbackRate;\r\n  } catch (e) {\r\n    return false;\r\n  }\r\n};\r\n\r\n/**\r\n * Check if we can override a video/audio elements attributes, with\r\n * Object.defineProperty.\r\n *\r\n * @return {boolean}\r\n *         - True if builtin attributes can be overriden\r\n *         - False otherwise\r\n */\r\nHtml5.canOverrideAttributes = function () {\r\n  if (IS_IE8) {\r\n    return false;\r\n  }\r\n  // if we cannot overwrite the src/innerHTML property, there is no support\r\n  // iOS 7 safari for instance cannot do this.\r\n  try {\r\n    var noop = function noop() {};\r\n\r\n    Object.defineProperty(document.createElement('video'), 'src', { get: noop, set: noop });\r\n    Object.defineProperty(document.createElement('audio'), 'src', { get: noop, set: noop });\r\n    Object.defineProperty(document.createElement('video'), 'innerHTML', { get: noop, set: noop });\r\n    Object.defineProperty(document.createElement('audio'), 'innerHTML', { get: noop, set: noop });\r\n  } catch (e) {\r\n    return false;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\n/**\r\n * Check to see if native `TextTrack`s are supported by this browser/device.\r\n *\r\n * @return {boolean}\r\n *         - True if native `TextTrack`s are supported.\r\n *         - False otherwise\r\n */\r\nHtml5.supportsNativeTextTracks = function () {\r\n  return IS_ANY_SAFARI || IS_IOS && IS_CHROME;\r\n};\r\n\r\n/**\r\n * Check to see if native `VideoTrack`s are supported by this browser/device\r\n *\r\n * @return {boolean}\r\n *        - True if native `VideoTrack`s are supported.\r\n *        - False otherwise\r\n */\r\nHtml5.supportsNativeVideoTracks = function () {\r\n  return !!(Html5.TEST_VID && Html5.TEST_VID.videoTracks);\r\n};\r\n\r\n/**\r\n * Check to see if native `AudioTrack`s are supported by this browser/device\r\n *\r\n * @return {boolean}\r\n *        - True if native `AudioTrack`s are supported.\r\n *        - False otherwise\r\n */\r\nHtml5.supportsNativeAudioTracks = function () {\r\n  return !!(Html5.TEST_VID && Html5.TEST_VID.audioTracks);\r\n};\r\n\r\n/**\r\n * An array of events available on the Html5 tech.\r\n *\r\n * @private\r\n * @type {Array}\r\n */\r\nHtml5.Events = ['loadstart', 'suspend', 'abort', 'error', 'emptied', 'stalled', 'loadedmetadata', 'loadeddata', 'canplay', 'canplaythrough', 'playing', 'waiting', 'seeking', 'seeked', 'ended', 'durationchange', 'timeupdate', 'progress', 'play', 'pause', 'ratechange', 'resize', 'volumechange'];\r\n\r\n/**\r\n * Boolean indicating whether the `Tech` supports volume control.\r\n *\r\n * @type {boolean}\r\n * @default {@link Html5.canControlVolume}\r\n */\r\nHtml5.prototype.featuresVolumeControl = Html5.canControlVolume();\r\n\r\n/**\r\n * Boolean indicating whether the `Tech` supports muting volume.\r\n *\r\n * @type {bolean}\r\n * @default {@link Html5.canMuteVolume}\r\n */\r\nHtml5.prototype.featuresMuteControl = Html5.canMuteVolume();\r\n\r\n/**\r\n * Boolean indicating whether the `Tech` supports changing the speed at which the media\r\n * plays. Examples:\r\n *   - Set player to play 2x (twice) as fast\r\n *   - Set player to play 0.5x (half) as fast\r\n *\r\n * @type {boolean}\r\n * @default {@link Html5.canControlPlaybackRate}\r\n */\r\nHtml5.prototype.featuresPlaybackRate = Html5.canControlPlaybackRate();\r\n\r\n/**\r\n * Boolean indicating wether the `Tech` supports the `sourceset` event.\r\n *\r\n * @type {boolean}\r\n * @default\r\n */\r\nHtml5.prototype.featuresSourceset = Html5.canOverrideAttributes();\r\n\r\n/**\r\n * Boolean indicating whether the `HTML5` tech currently supports the media element\r\n * moving in the DOM. iOS breaks if you move the media element, so this is set this to\r\n * false there. Everywhere else this should be true.\r\n *\r\n * @type {boolean}\r\n * @default\r\n */\r\nHtml5.prototype.movingMediaElementInDOM = !IS_IOS;\r\n\r\n// TODO: Previous comment: No longer appears to be used. Can probably be removed.\r\n//       Is this true?\r\n/**\r\n * Boolean indicating whether the `HTML5` tech currently supports automatic media resize\r\n * when going into fullscreen.\r\n *\r\n * @type {boolean}\r\n * @default\r\n */\r\nHtml5.prototype.featuresFullscreenResize = true;\r\n\r\n/**\r\n * Boolean indicating whether the `HTML5` tech currently supports the progress event.\r\n * If this is false, manual `progress` events will be triggred instead.\r\n *\r\n * @type {boolean}\r\n * @default\r\n */\r\nHtml5.prototype.featuresProgressEvents = true;\r\n\r\n/**\r\n * Boolean indicating whether the `HTML5` tech currently supports the timeupdate event.\r\n * If this is false, manual `timeupdate` events will be triggred instead.\r\n *\r\n * @default\r\n */\r\nHtml5.prototype.featuresTimeupdateEvents = true;\r\n\r\n/**\r\n * Boolean indicating whether the `HTML5` tech currently supports native `TextTrack`s.\r\n *\r\n * @type {boolean}\r\n * @default {@link Html5.supportsNativeTextTracks}\r\n */\r\nHtml5.prototype.featuresNativeTextTracks = Html5.supportsNativeTextTracks();\r\n\r\n/**\r\n * Boolean indicating whether the `HTML5` tech currently supports native `VideoTrack`s.\r\n *\r\n * @type {boolean}\r\n * @default {@link Html5.supportsNativeVideoTracks}\r\n */\r\nHtml5.prototype.featuresNativeVideoTracks = Html5.supportsNativeVideoTracks();\r\n\r\n/**\r\n * Boolean indicating whether the `HTML5` tech currently supports native `AudioTrack`s.\r\n *\r\n * @type {boolean}\r\n * @default {@link Html5.supportsNativeAudioTracks}\r\n */\r\nHtml5.prototype.featuresNativeAudioTracks = Html5.supportsNativeAudioTracks();\r\n\r\n// HTML5 Feature detection and Device Fixes --------------------------------- //\r\nvar canPlayType = Html5.TEST_VID && Html5.TEST_VID.constructor.prototype.canPlayType;\r\nvar mpegurlRE = /^application\\/(?:x-|vnd\\.apple\\.)mpegurl/i;\r\nvar mp4RE = /^video\\/mp4/i;\r\n\r\nHtml5.patchCanPlayType = function () {\r\n\r\n  // Android 4.0 and above can play HLS to some extent but it reports being unable to do so\r\n  // Firefox and Chrome report correctly\r\n  if (ANDROID_VERSION >= 4.0 && !IS_FIREFOX && !IS_CHROME) {\r\n    Html5.TEST_VID.constructor.prototype.canPlayType = function (type) {\r\n      if (type && mpegurlRE.test(type)) {\r\n        return 'maybe';\r\n      }\r\n      return canPlayType.call(this, type);\r\n    };\r\n\r\n    // Override Android 2.2 and less canPlayType method which is broken\r\n  } else if (IS_OLD_ANDROID) {\r\n    Html5.TEST_VID.constructor.prototype.canPlayType = function (type) {\r\n      if (type && mp4RE.test(type)) {\r\n        return 'maybe';\r\n      }\r\n      return canPlayType.call(this, type);\r\n    };\r\n  }\r\n};\r\n\r\nHtml5.unpatchCanPlayType = function () {\r\n  var r = Html5.TEST_VID.constructor.prototype.canPlayType;\r\n\r\n  Html5.TEST_VID.constructor.prototype.canPlayType = canPlayType;\r\n  return r;\r\n};\r\n\r\n// by default, patch the media element\r\nHtml5.patchCanPlayType();\r\n\r\nHtml5.disposeMediaElement = function (el) {\r\n  if (!el) {\r\n    return;\r\n  }\r\n\r\n  if (el.parentNode) {\r\n    el.parentNode.removeChild(el);\r\n  }\r\n\r\n  // remove any child track or source nodes to prevent their loading\r\n  while (el.hasChildNodes()) {\r\n    el.removeChild(el.firstChild);\r\n  }\r\n\r\n  // remove any src reference. not setting `src=''` because that causes a warning\r\n  // in firefox\r\n  el.removeAttribute('src');\r\n\r\n  // force the media element to update its loading state by calling load()\r\n  // however IE on Windows 7N has a bug that throws an error so need a try/catch (#793)\r\n  if (typeof el.load === 'function') {\r\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\r\n    (function () {\r\n      try {\r\n        el.load();\r\n      } catch (e) {\r\n        // not supported\r\n      }\r\n    })();\r\n  }\r\n};\r\n\r\nHtml5.resetMediaElement = function (el) {\r\n  if (!el) {\r\n    return;\r\n  }\r\n\r\n  var sources = el.querySelectorAll('source');\r\n  var i = sources.length;\r\n\r\n  while (i--) {\r\n    el.removeChild(sources[i]);\r\n  }\r\n\r\n  // remove any src reference.\r\n  // not setting `src=''` because that throws an error\r\n  el.removeAttribute('src');\r\n\r\n  if (typeof el.load === 'function') {\r\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\r\n    (function () {\r\n      try {\r\n        el.load();\r\n      } catch (e) {\r\n        // satisfy linter\r\n      }\r\n    })();\r\n  }\r\n};\r\n\r\n/* Native HTML5 element property wrapping ----------------------------------- */\r\n// Wrap native boolean attributes with getters that check both property and attribute\r\n// The list is as followed:\r\n// muted, defaultMuted, autoplay, controls, loop, playsinline\r\n[\r\n/**\r\n * Get the value of `muted` from the media element. `muted` indicates\r\n * that the volume for the media should be set to silent. This does not actually change\r\n * the `volume` attribute.\r\n *\r\n * @method Html5#muted\r\n * @return {boolean}\r\n *         - True if the value of `volume` should be ignored and the audio set to silent.\r\n *         - False if the value of `volume` should be used.\r\n *\r\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\r\n */\r\n'muted',\r\n\r\n/**\r\n * Get the value of `defaultMuted` from the media element. `defaultMuted` indicates\r\n * whether the media should start muted or not. Only changes the default state of the\r\n * media. `muted` and `defaultMuted` can have different values. {@link Html5#muted} indicates the\r\n * current state.\r\n *\r\n * @method Html5#defaultMuted\r\n * @return {boolean}\r\n *         - The value of `defaultMuted` from the media element.\r\n *         - True indicates that the media should start muted.\r\n *         - False indicates that the media should not start muted\r\n *\r\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\r\n */\r\n'defaultMuted',\r\n\r\n/**\r\n * Get the value of `autoplay` from the media element. `autoplay` indicates\r\n * that the media should start to play as soon as the page is ready.\r\n *\r\n * @method Html5#autoplay\r\n * @return {boolean}\r\n *         - The value of `autoplay` from the media element.\r\n *         - True indicates that the media should start as soon as the page loads.\r\n *         - False indicates that the media should not start as soon as the page loads.\r\n *\r\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\r\n */\r\n'autoplay',\r\n\r\n/**\r\n * Get the value of `controls` from the media element. `controls` indicates\r\n * whether the native media controls should be shown or hidden.\r\n *\r\n * @method Html5#controls\r\n * @return {boolean}\r\n *         - The value of `controls` from the media element.\r\n *         - True indicates that native controls should be showing.\r\n *         - False indicates that native controls should be hidden.\r\n *\r\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-controls}\r\n */\r\n'controls',\r\n\r\n/**\r\n * Get the value of `loop` from the media element. `loop` indicates\r\n * that the media should return to the start of the media and continue playing once\r\n * it reaches the end.\r\n *\r\n * @method Html5#loop\r\n * @return {boolean}\r\n *         - The value of `loop` from the media element.\r\n *         - True indicates that playback should seek back to start once\r\n *           the end of a media is reached.\r\n *         - False indicates that playback should not loop back to the start when the\r\n *           end of the media is reached.\r\n *\r\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\r\n */\r\n'loop',\r\n\r\n/**\r\n * Get the value of `playsinline` from the media element. `playsinline` indicates\r\n * to the browser that non-fullscreen playback is preferred when fullscreen\r\n * playback is the native default, such as in iOS Safari.\r\n *\r\n * @method Html5#playsinline\r\n * @return {boolean}\r\n *         - The value of `playsinline` from the media element.\r\n *         - True indicates that the media should play inline.\r\n *         - False indicates that the media should not play inline.\r\n *\r\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\r\n */\r\n'playsinline'].forEach(function (prop) {\r\n  Html5.prototype[prop] = function () {\r\n    return this.el_[prop] || this.el_.hasAttribute(prop);\r\n  };\r\n});\r\n\r\n// Wrap native boolean attributes with setters that set both property and attribute\r\n// The list is as followed:\r\n// setMuted, setDefaultMuted, setAutoplay, setLoop, setPlaysinline\r\n// setControls is special-cased above\r\n[\r\n/**\r\n * Set the value of `muted` on the media element. `muted` indicates that the current\r\n * audio level should be silent.\r\n *\r\n * @method Html5#setMuted\r\n * @param {boolean} muted\r\n *        - True if the audio should be set to silent\r\n *        - False otherwise\r\n *\r\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\r\n */\r\n'muted',\r\n\r\n/**\r\n * Set the value of `defaultMuted` on the media element. `defaultMuted` indicates that the current\r\n * audio level should be silent, but will only effect the muted level on intial playback..\r\n *\r\n * @method Html5.prototype.setDefaultMuted\r\n * @param {boolean} defaultMuted\r\n *        - True if the audio should be set to silent\r\n *        - False otherwise\r\n *\r\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\r\n */\r\n'defaultMuted',\r\n\r\n/**\r\n * Set the value of `autoplay` on the media element. `autoplay` indicates\r\n * that the media should start to play as soon as the page is ready.\r\n *\r\n * @method Html5#setAutoplay\r\n * @param {boolean} autoplay\r\n *         - True indicates that the media should start as soon as the page loads.\r\n *         - False indicates that the media should not start as soon as the page loads.\r\n *\r\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\r\n */\r\n'autoplay',\r\n\r\n/**\r\n * Set the value of `loop` on the media element. `loop` indicates\r\n * that the media should return to the start of the media and continue playing once\r\n * it reaches the end.\r\n *\r\n * @method Html5#setLoop\r\n * @param {boolean} loop\r\n *         - True indicates that playback should seek back to start once\r\n *           the end of a media is reached.\r\n *         - False indicates that playback should not loop back to the start when the\r\n *           end of the media is reached.\r\n *\r\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\r\n */\r\n'loop',\r\n\r\n/**\r\n * Set the value of `playsinline` from the media element. `playsinline` indicates\r\n * to the browser that non-fullscreen playback is preferred when fullscreen\r\n * playback is the native default, such as in iOS Safari.\r\n *\r\n * @method Html5#setPlaysinline\r\n * @param {boolean} playsinline\r\n *         - True indicates that the media should play inline.\r\n *         - False indicates that the media should not play inline.\r\n *\r\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\r\n */\r\n'playsinline'].forEach(function (prop) {\r\n  Html5.prototype['set' + toTitleCase(prop)] = function (v) {\r\n    this.el_[prop] = v;\r\n\r\n    if (v) {\r\n      this.el_.setAttribute(prop, prop);\r\n    } else {\r\n      this.el_.removeAttribute(prop);\r\n    }\r\n  };\r\n});\r\n\r\n// Wrap native properties with a getter\r\n// The list is as followed\r\n// paused, currentTime, buffered, volume, poster, preload, error, seeking\r\n// seekable, ended, playbackRate, defaultPlaybackRate, played, networkState\r\n// readyState, videoWidth, videoHeight\r\n[\r\n/**\r\n * Get the value of `paused` from the media element. `paused` indicates whether the media element\r\n * is currently paused or not.\r\n *\r\n * @method Html5#paused\r\n * @return {boolean}\r\n *         The value of `paused` from the media element.\r\n *\r\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-paused}\r\n */\r\n'paused',\r\n\r\n/**\r\n * Get the value of `currentTime` from the media element. `currentTime` indicates\r\n * the current second that the media is at in playback.\r\n *\r\n * @method Html5#currentTime\r\n * @return {number}\r\n *         The value of `currentTime` from the media element.\r\n *\r\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-currenttime}\r\n */\r\n'currentTime',\r\n\r\n/**\r\n * Get the value of `buffered` from the media element. `buffered` is a `TimeRange`\r\n * object that represents the parts of the media that are already downloaded and\r\n * available for playback.\r\n *\r\n * @method Html5#buffered\r\n * @return {TimeRange}\r\n *         The value of `buffered` from the media element.\r\n *\r\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-buffered}\r\n */\r\n'buffered',\r\n\r\n/**\r\n * Get the value of `volume` from the media element. `volume` indicates\r\n * the current playback volume of audio for a media. `volume` will be a value from 0\r\n * (silent) to 1 (loudest and default).\r\n *\r\n * @method Html5#volume\r\n * @return {number}\r\n *         The value of `volume` from the media element. Value will be between 0-1.\r\n *\r\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\r\n */\r\n'volume',\r\n\r\n/**\r\n * Get the value of `poster` from the media element. `poster` indicates\r\n * that the url of an image file that can/will be shown when no media data is available.\r\n *\r\n * @method Html5#poster\r\n * @return {string}\r\n *         The value of `poster` from the media element. Value will be a url to an\r\n *         image.\r\n *\r\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-video-poster}\r\n */\r\n'poster',\r\n\r\n/**\r\n * Get the value of `preload` from the media element. `preload` indicates\r\n * what should download before the media is interacted with. It can have the following\r\n * values:\r\n * - none: nothing should be downloaded\r\n * - metadata: poster and the first few frames of the media may be downloaded to get\r\n *   media dimensions and other metadata\r\n * - auto: allow the media and metadata for the media to be downloaded before\r\n *    interaction\r\n *\r\n * @method Html5#preload\r\n * @return {string}\r\n *         The value of `preload` from the media element. Will be 'none', 'metadata',\r\n *         or 'auto'.\r\n *\r\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\r\n */\r\n'preload',\r\n\r\n/**\r\n * Get the value of the `error` from the media element. `error` indicates any\r\n * MediaError that may have occured during playback. If error returns null there is no\r\n * current error.\r\n *\r\n * @method Html5#error\r\n * @return {MediaError|null}\r\n *         The value of `error` from the media element. Will be `MediaError` if there\r\n *         is a current error and null otherwise.\r\n *\r\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-error}\r\n */\r\n'error',\r\n\r\n/**\r\n * Get the value of `seeking` from the media element. `seeking` indicates whether the\r\n * media is currently seeking to a new position or not.\r\n *\r\n * @method Html5#seeking\r\n * @return {boolean}\r\n *         - The value of `seeking` from the media element.\r\n *         - True indicates that the media is currently seeking to a new position.\r\n *         - Flase indicates that the media is not seeking to a new position at this time.\r\n *\r\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seeking}\r\n */\r\n'seeking',\r\n\r\n/**\r\n * Get the value of `seekable` from the media element. `seekable` returns a\r\n * `TimeRange` object indicating ranges of time that can currently be `seeked` to.\r\n *\r\n * @method Html5#seekable\r\n * @return {TimeRange}\r\n *         The value of `seekable` from the media element. A `TimeRange` object\r\n *         indicating the current ranges of time that can be seeked to.\r\n *\r\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seekable}\r\n */\r\n'seekable',\r\n\r\n/**\r\n * Get the value of `ended` from the media element. `ended` indicates whether\r\n * the media has reached the end or not.\r\n *\r\n * @method Html5#ended\r\n * @return {boolean}\r\n *         - The value of `ended` from the media element.\r\n *         - True indicates that the media has ended.\r\n *         - False indicates that the media has not ended.\r\n *\r\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-ended}\r\n */\r\n'ended',\r\n\r\n/**\r\n * Get the value of `playbackRate` from the media element. `playbackRate` indicates\r\n * the rate at which the media is currently playing back. Examples:\r\n *   - if playbackRate is set to 2, media will play twice as fast.\r\n *   - if playbackRate is set to 0.5, media will play half as fast.\r\n *\r\n * @method Html5#playbackRate\r\n * @return {number}\r\n *         The value of `playbackRate` from the media element. A number indicating\r\n *         the current playback speed of the media, where 1 is normal speed.\r\n *\r\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\r\n */\r\n'playbackRate',\r\n\r\n/**\r\n * Get the value of `defaultPlaybackRate` from the media element. `defaultPlaybackRate` indicates\r\n * the rate at which the media is currently playing back. This value will not indicate the current\r\n * `playbackRate` after playback has started, use {@link Html5#playbackRate} for that.\r\n *\r\n * Examples:\r\n *   - if defaultPlaybackRate is set to 2, media will play twice as fast.\r\n *   - if defaultPlaybackRate is set to 0.5, media will play half as fast.\r\n *\r\n * @method Html5.prototype.defaultPlaybackRate\r\n * @return {number}\r\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\r\n *         the current playback speed of the media, where 1 is normal speed.\r\n *\r\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\r\n */\r\n'defaultPlaybackRate',\r\n\r\n/**\r\n * Get the value of `played` from the media element. `played` returns a `TimeRange`\r\n * object representing points in the media timeline that have been played.\r\n *\r\n * @method Html5#played\r\n * @return {TimeRange}\r\n *         The value of `played` from the media element. A `TimeRange` object indicating\r\n *         the ranges of time that have been played.\r\n *\r\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-played}\r\n */\r\n'played',\r\n\r\n/**\r\n * Get the value of `networkState` from the media element. `networkState` indicates\r\n * the current network state. It returns an enumeration from the following list:\r\n * - 0: NETWORK_EMPTY\r\n * - 1: NEWORK_IDLE\r\n * - 2: NETWORK_LOADING\r\n * - 3: NETWORK_NO_SOURCE\r\n *\r\n * @method Html5#networkState\r\n * @return {number}\r\n *         The value of `networkState` from the media element. This will be a number\r\n *         from the list in the description.\r\n *\r\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-networkstate}\r\n */\r\n'networkState',\r\n\r\n/**\r\n * Get the value of `readyState` from the media element. `readyState` indicates\r\n * the current state of the media element. It returns an enumeration from the\r\n * following list:\r\n * - 0: HAVE_NOTHING\r\n * - 1: HAVE_METADATA\r\n * - 2: HAVE_CURRENT_DATA\r\n * - 3: HAVE_FUTURE_DATA\r\n * - 4: HAVE_ENOUGH_DATA\r\n *\r\n * @method Html5#readyState\r\n * @return {number}\r\n *         The value of `readyState` from the media element. This will be a number\r\n *         from the list in the description.\r\n *\r\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#ready-states}\r\n */\r\n'readyState',\r\n\r\n/**\r\n * Get the value of `videoWidth` from the video element. `videoWidth` indicates\r\n * the current width of the video in css pixels.\r\n *\r\n * @method Html5#videoWidth\r\n * @return {number}\r\n *         The value of `videoWidth` from the video element. This will be a number\r\n *         in css pixels.\r\n *\r\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\r\n */\r\n'videoWidth',\r\n\r\n/**\r\n * Get the value of `videoHeight` from the video element. `videoHeigth` indicates\r\n * the current height of the video in css pixels.\r\n *\r\n * @method Html5#videoHeight\r\n * @return {number}\r\n *         The value of `videoHeight` from the video element. This will be a number\r\n *         in css pixels.\r\n *\r\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\r\n */\r\n'videoHeight'].forEach(function (prop) {\r\n  Html5.prototype[prop] = function () {\r\n    return this.el_[prop];\r\n  };\r\n});\r\n\r\n// Wrap native properties with a setter in this format:\r\n// set + toTitleCase(name)\r\n// The list is as follows:\r\n// setVolume, setSrc, setPoster, setPreload, setPlaybackRate, setDefaultPlaybackRate\r\n[\r\n/**\r\n * Set the value of `volume` on the media element. `volume` indicates the current\r\n * audio level as a percentage in decimal form. This means that 1 is 100%, 0.5 is 50%, and\r\n * so on.\r\n *\r\n * @method Html5#setVolume\r\n * @param {number} percentAsDecimal\r\n *        The volume percent as a decimal. Valid range is from 0-1.\r\n *\r\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\r\n */\r\n'volume',\r\n\r\n/**\r\n * Set the value of `src` on the media element. `src` indicates the current\r\n * {@link Tech~SourceObject} for the media.\r\n *\r\n * @method Html5#setSrc\r\n * @param {Tech~SourceObject} src\r\n *        The source object to set as the current source.\r\n *\r\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-src}\r\n */\r\n'src',\r\n\r\n/**\r\n * Set the value of `poster` on the media element. `poster` is the url to\r\n * an image file that can/will be shown when no media data is available.\r\n *\r\n * @method Html5#setPoster\r\n * @param {string} poster\r\n *        The url to an image that should be used as the `poster` for the media\r\n *        element.\r\n *\r\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-poster}\r\n */\r\n'poster',\r\n\r\n/**\r\n * Set the value of `preload` on the media element. `preload` indicates\r\n * what should download before the media is interacted with. It can have the following\r\n * values:\r\n * - none: nothing should be downloaded\r\n * - metadata: poster and the first few frames of the media may be downloaded to get\r\n *   media dimensions and other metadata\r\n * - auto: allow the media and metadata for the media to be downloaded before\r\n *    interaction\r\n *\r\n * @method Html5#setPreload\r\n * @param {string} preload\r\n *         The value of `preload` to set on the media element. Must be 'none', 'metadata',\r\n *         or 'auto'.\r\n *\r\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\r\n */\r\n'preload',\r\n\r\n/**\r\n * Set the value of `playbackRate` on the media element. `playbackRate` indicates\r\n * the rate at which the media should play back. Examples:\r\n *   - if playbackRate is set to 2, media will play twice as fast.\r\n *   - if playbackRate is set to 0.5, media will play half as fast.\r\n *\r\n * @method Html5#setPlaybackRate\r\n * @return {number}\r\n *         The value of `playbackRate` from the media element. A number indicating\r\n *         the current playback speed of the media, where 1 is normal speed.\r\n *\r\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\r\n */\r\n'playbackRate',\r\n\r\n/**\r\n * Set the value of `defaultPlaybackRate` on the media element. `defaultPlaybackRate` indicates\r\n * the rate at which the media should play back upon initial startup. Changing this value\r\n * after a video has started will do nothing. Instead you should used {@link Html5#setPlaybackRate}.\r\n *\r\n * Example Values:\r\n *   - if playbackRate is set to 2, media will play twice as fast.\r\n *   - if playbackRate is set to 0.5, media will play half as fast.\r\n *\r\n * @method Html5.prototype.setDefaultPlaybackRate\r\n * @return {number}\r\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\r\n *         the current playback speed of the media, where 1 is normal speed.\r\n *\r\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultplaybackrate}\r\n */\r\n'defaultPlaybackRate'].forEach(function (prop) {\r\n  Html5.prototype['set' + toTitleCase(prop)] = function (v) {\r\n    this.el_[prop] = v;\r\n  };\r\n});\r\n\r\n// wrap native functions with a function\r\n// The list is as follows:\r\n// pause, load play\r\n[\r\n/**\r\n * A wrapper around the media elements `pause` function. This will call the `HTML5`\r\n * media elements `pause` function.\r\n *\r\n * @method Html5#pause\r\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-pause}\r\n */\r\n'pause',\r\n\r\n/**\r\n * A wrapper around the media elements `load` function. This will call the `HTML5`s\r\n * media element `load` function.\r\n *\r\n * @method Html5#load\r\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-load}\r\n */\r\n'load',\r\n\r\n/**\r\n * A wrapper around the media elements `play` function. This will call the `HTML5`s\r\n * media element `play` function.\r\n *\r\n * @method Html5#play\r\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-play}\r\n */\r\n'play'].forEach(function (prop) {\r\n  Html5.prototype[prop] = function () {\r\n    return this.el_[prop]();\r\n  };\r\n});\r\n\r\nTech.withSourceHandlers(Html5);\r\n\r\n/**\r\n * Native source handler for Html5, simply passes the source to the media element.\r\n *\r\n * @proprety {Tech~SourceObject} source\r\n *        The source object\r\n *\r\n * @proprety {Html5} tech\r\n *        The instance of the HTML5 tech.\r\n */\r\nHtml5.nativeSourceHandler = {};\r\n\r\n/**\r\n * Check if the media element can play the given mime type.\r\n *\r\n * @param {string} type\r\n *        The mimetype to check\r\n *\r\n * @return {string}\r\n *         'probably', 'maybe', or '' (empty string)\r\n */\r\nHtml5.nativeSourceHandler.canPlayType = function (type) {\r\n  // IE9 on Windows 7 without MediaPlayer throws an error here\r\n  // https://github.com/videojs/video.js/issues/519\r\n  try {\r\n    return Html5.TEST_VID.canPlayType(type);\r\n  } catch (e) {\r\n    return '';\r\n  }\r\n};\r\n\r\n/**\r\n * Check if the media element can handle a source natively.\r\n *\r\n * @param {Tech~SourceObject} source\r\n *         The source object\r\n *\r\n * @param {Object} [options]\r\n *         Options to be passed to the tech.\r\n *\r\n * @return {string}\r\n *         'probably', 'maybe', or '' (empty string).\r\n */\r\nHtml5.nativeSourceHandler.canHandleSource = function (source, options) {\r\n\r\n  // If a type was provided we should rely on that\r\n  if (source.type) {\r\n    return Html5.nativeSourceHandler.canPlayType(source.type);\r\n\r\n    // If no type, fall back to checking 'video/[EXTENSION]'\r\n  } else if (source.src) {\r\n    var ext = getFileExtension(source.src);\r\n\r\n    return Html5.nativeSourceHandler.canPlayType('video/' + ext);\r\n  }\r\n\r\n  return '';\r\n};\r\n\r\n/**\r\n * Pass the source to the native media element.\r\n *\r\n * @param {Tech~SourceObject} source\r\n *        The source object\r\n *\r\n * @param {Html5} tech\r\n *        The instance of the Html5 tech\r\n *\r\n * @param {Object} [options]\r\n *        The options to pass to the source\r\n */\r\nHtml5.nativeSourceHandler.handleSource = function (source, tech, options) {\r\n  tech.setSrc(source.src);\r\n};\r\n\r\n/**\r\n * A noop for the native dispose function, as cleanup is not needed.\r\n */\r\nHtml5.nativeSourceHandler.dispose = function () {};\r\n\r\n// Register the native source handler\r\nHtml5.registerSourceHandler(Html5.nativeSourceHandler);\r\n\r\nTech.registerTech('Html5', Html5);\r\n\r\nvar _templateObject$1 = taggedTemplateLiteralLoose(['\\n        Using the tech directly can be dangerous. I hope you know what you\\'re doing.\\n        See https://github.com/videojs/video.js/issues/2617 for more info.\\n      '], ['\\n        Using the tech directly can be dangerous. I hope you know what you\\'re doing.\\n        See https://github.com/videojs/video.js/issues/2617 for more info.\\n      ']);\r\n\r\n/**\r\n * @file player.js\r\n */\r\n// Subclasses Component\r\n// The following imports are used only to ensure that the corresponding modules\r\n// are always included in the video.js package. Importing the modules will\r\n// execute them and they will register themselves with video.js.\r\n// Import Html5 tech, at least for disposing the original video tag.\r\n// The following tech events are simply re-triggered\r\n// on the player when they happen\r\nvar TECH_EVENTS_RETRIGGER = [\r\n/**\r\n * Fired while the user agent is downloading media data.\r\n *\r\n * @event Player#progress\r\n * @type {EventTarget~Event}\r\n */\r\n/**\r\n * Retrigger the `progress` event that was triggered by the {@link Tech}.\r\n *\r\n * @private\r\n * @method Player#handleTechProgress_\r\n * @fires Player#progress\r\n * @listens Tech#progress\r\n */\r\n'progress',\r\n\r\n/**\r\n * Fires when the loading of an audio/video is aborted.\r\n *\r\n * @event Player#abort\r\n * @type {EventTarget~Event}\r\n */\r\n/**\r\n * Retrigger the `abort` event that was triggered by the {@link Tech}.\r\n *\r\n * @private\r\n * @method Player#handleTechAbort_\r\n * @fires Player#abort\r\n * @listens Tech#abort\r\n */\r\n'abort',\r\n\r\n/**\r\n * Fires when the browser is intentionally not getting media data.\r\n *\r\n * @event Player#suspend\r\n * @type {EventTarget~Event}\r\n */\r\n/**\r\n * Retrigger the `suspend` event that was triggered by the {@link Tech}.\r\n *\r\n * @private\r\n * @method Player#handleTechSuspend_\r\n * @fires Player#suspend\r\n * @listens Tech#suspend\r\n */\r\n'suspend',\r\n\r\n/**\r\n * Fires when the current playlist is empty.\r\n *\r\n * @event Player#emptied\r\n * @type {EventTarget~Event}\r\n */\r\n/**\r\n * Retrigger the `emptied` event that was triggered by the {@link Tech}.\r\n *\r\n * @private\r\n * @method Player#handleTechEmptied_\r\n * @fires Player#emptied\r\n * @listens Tech#emptied\r\n */\r\n'emptied',\r\n/**\r\n * Fires when the browser is trying to get media data, but data is not available.\r\n *\r\n * @event Player#stalled\r\n * @type {EventTarget~Event}\r\n */\r\n/**\r\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\r\n *\r\n * @private\r\n * @method Player#handleTechStalled_\r\n * @fires Player#stalled\r\n * @listens Tech#stalled\r\n */\r\n'stalled',\r\n\r\n/**\r\n * Fires when the browser has loaded meta data for the audio/video.\r\n *\r\n * @event Player#loadedmetadata\r\n * @type {EventTarget~Event}\r\n */\r\n/**\r\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\r\n *\r\n * @private\r\n * @method Player#handleTechLoadedmetadata_\r\n * @fires Player#loadedmetadata\r\n * @listens Tech#loadedmetadata\r\n */\r\n'loadedmetadata',\r\n\r\n/**\r\n * Fires when the browser has loaded the current frame of the audio/video.\r\n *\r\n * @event Player#loadeddata\r\n * @type {event}\r\n */\r\n/**\r\n * Retrigger the `loadeddata` event that was triggered by the {@link Tech}.\r\n *\r\n * @private\r\n * @method Player#handleTechLoaddeddata_\r\n * @fires Player#loadeddata\r\n * @listens Tech#loadeddata\r\n */\r\n'loadeddata',\r\n\r\n/**\r\n * Fires when the current playback position has changed.\r\n *\r\n * @event Player#timeupdate\r\n * @type {event}\r\n */\r\n/**\r\n * Retrigger the `timeupdate` event that was triggered by the {@link Tech}.\r\n *\r\n * @private\r\n * @method Player#handleTechTimeUpdate_\r\n * @fires Player#timeupdate\r\n * @listens Tech#timeupdate\r\n */\r\n'timeupdate',\r\n\r\n/**\r\n * Fires when the video's intrinsic dimensions change\r\n *\r\n * @event Player#resize\r\n * @type {event}\r\n */\r\n/**\r\n * Retrigger the `resize` event that was triggered by the {@link Tech}.\r\n *\r\n * @private\r\n * @method Player#handleTechResize_\r\n * @fires Player#resize\r\n * @listens Tech#resize\r\n */\r\n'resize',\r\n\r\n/**\r\n * Fires when the volume has been changed\r\n *\r\n * @event Player#volumechange\r\n * @type {event}\r\n */\r\n/**\r\n * Retrigger the `volumechange` event that was triggered by the {@link Tech}.\r\n *\r\n * @private\r\n * @method Player#handleTechVolumechange_\r\n * @fires Player#volumechange\r\n * @listens Tech#volumechange\r\n */\r\n'volumechange',\r\n\r\n/**\r\n * Fires when the text track has been changed\r\n *\r\n * @event Player#texttrackchange\r\n * @type {event}\r\n */\r\n/**\r\n * Retrigger the `texttrackchange` event that was triggered by the {@link Tech}.\r\n *\r\n * @private\r\n * @method Player#handleTechTexttrackchange_\r\n * @fires Player#texttrackchange\r\n * @listens Tech#texttrackchange\r\n */\r\n'texttrackchange'];\r\n\r\n// events to queue when playback rate is zero\r\n// this is a hash for the sole purpose of mapping non-camel-cased event names\r\n// to camel-cased function names\r\nvar TECH_EVENTS_QUEUE = {\r\n  canplay: 'CanPlay',\r\n  canplaythrough: 'CanPlayThrough',\r\n  playing: 'Playing',\r\n  seeked: 'Seeked'\r\n};\r\n\r\nvar BREAKPOINT_ORDER = ['tiny', 'xsmall', 'small', 'medium', 'large', 'xlarge', 'huge'];\r\n\r\nvar BREAKPOINT_CLASSES = {};\r\n\r\n// grep: vjs-layout-tiny\r\n// grep: vjs-layout-x-small\r\n// grep: vjs-layout-small\r\n// grep: vjs-layout-medium\r\n// grep: vjs-layout-large\r\n// grep: vjs-layout-x-large\r\n// grep: vjs-layout-huge\r\nBREAKPOINT_ORDER.forEach(function (k) {\r\n  var v = k.charAt(0) === 'x' ? 'x-' + k.substring(1) : k;\r\n\r\n  BREAKPOINT_CLASSES[k] = 'vjs-layout-' + v;\r\n});\r\n\r\nvar DEFAULT_BREAKPOINTS = {\r\n  tiny: 210,\r\n  xsmall: 320,\r\n  small: 425,\r\n  medium: 768,\r\n  large: 1440,\r\n  xlarge: 2560,\r\n  huge: Infinity\r\n};\r\n\r\n/**\r\n * An instance of the `Player` class is created when any of the Video.js setup methods\r\n * are used to initialize a video.\r\n *\r\n * After an instance has been created it can be accessed globally in two ways:\r\n * 1. By calling `videojs('example_video_1');`\r\n * 2. By using it directly via  `videojs.players.example_video_1;`\r\n *\r\n * @extends Component\r\n */\r\n\r\nvar Player = function (_Component) {\r\n  inherits(Player, _Component);\r\n\r\n  /**\r\n   * Create an instance of this class.\r\n   *\r\n   * @param {Element} tag\r\n   *        The original video DOM element used for configuring options.\r\n   *\r\n   * @param {Object} [options]\r\n   *        Object of option names and values.\r\n   *\r\n   * @param {Component~ReadyCallback} [ready]\r\n   *        Ready callback function.\r\n   */\r\n  function Player(tag, options, ready) {\r\n    classCallCheck(this, Player);\r\n\r\n    // Make sure tag ID exists\r\n    tag.id = tag.id || options.id || 'vjs_video_' + newGUID();\r\n\r\n    // Set Options\r\n    // The options argument overrides options set in the video tag\r\n    // which overrides globally set options.\r\n    // This latter part coincides with the load order\r\n    // (tag must exist before Player)\r\n    options = assign(Player.getTagSettings(tag), options);\r\n\r\n    // Delay the initialization of children because we need to set up\r\n    // player properties first, and can't use `this` before `super()`\r\n    options.initChildren = false;\r\n\r\n    // Same with creating the element\r\n    options.createEl = false;\r\n\r\n    // don't auto mixin the evented mixin\r\n    options.evented = false;\r\n\r\n    // we don't want the player to report touch activity on itself\r\n    // see enableTouchActivity in Component\r\n    options.reportTouchActivity = false;\r\n\r\n    // If language is not set, get the closest lang attribute\r\n    if (!options.language) {\r\n      if (typeof tag.closest === 'function') {\r\n        var closest = tag.closest('[lang]');\r\n\r\n        if (closest && closest.getAttribute) {\r\n          options.language = closest.getAttribute('lang');\r\n        }\r\n      } else {\r\n        var element = tag;\r\n\r\n        while (element && element.nodeType === 1) {\r\n          if (getAttributes(element).hasOwnProperty('lang')) {\r\n            options.language = element.getAttribute('lang');\r\n            break;\r\n          }\r\n          element = element.parentNode;\r\n        }\r\n      }\r\n    }\r\n\r\n    // Run base component initializing with new options\r\n\r\n    // create logger\r\n    var _this = possibleConstructorReturn(this, _Component.call(this, null, options, ready));\r\n\r\n    _this.log = createLogger(_this.id_);\r\n\r\n    // Tracks when a tech changes the poster\r\n    _this.isPosterFromTech_ = false;\r\n\r\n    // Holds callback info that gets queued when playback rate is zero\r\n    // and a seek is happening\r\n    _this.queuedCallbacks_ = [];\r\n\r\n    // Turn off API access because we're loading a new tech that might load asynchronously\r\n    _this.isReady_ = false;\r\n\r\n    // Init state hasStarted_\r\n    _this.hasStarted_ = false;\r\n\r\n    // Init state userActive_\r\n    _this.userActive_ = false;\r\n\r\n    // if the global option object was accidentally blown away by\r\n    // someone, bail early with an informative error\r\n    if (!_this.options_ || !_this.options_.techOrder || !_this.options_.techOrder.length) {\r\n      throw new Error('No techOrder specified. Did you overwrite ' + 'videojs.options instead of just changing the ' + 'properties you want to override?');\r\n    }\r\n\r\n    // Store the original tag used to set options\r\n    _this.tag = tag;\r\n\r\n    // Store the tag attributes used to restore html5 element\r\n    _this.tagAttributes = tag && getAttributes(tag);\r\n\r\n    // Update current language\r\n    _this.language(_this.options_.language);\r\n\r\n    // Update Supported Languages\r\n    if (options.languages) {\r\n      // Normalise player option languages to lowercase\r\n      var languagesToLower = {};\r\n\r\n      Object.getOwnPropertyNames(options.languages).forEach(function (name$$1) {\r\n        languagesToLower[name$$1.toLowerCase()] = options.languages[name$$1];\r\n      });\r\n      _this.languages_ = languagesToLower;\r\n    } else {\r\n      _this.languages_ = Player.prototype.options_.languages;\r\n    }\r\n\r\n    // Cache for video property values.\r\n    _this.cache_ = {};\r\n\r\n    // Set poster\r\n    _this.poster_ = options.poster || '';\r\n\r\n    // Set controls\r\n    _this.controls_ = !!options.controls;\r\n\r\n    // Set default values for lastVolume\r\n    _this.cache_.lastVolume = 1;\r\n\r\n    // Original tag settings stored in options\r\n    // now remove immediately so native controls don't flash.\r\n    // May be turned back on by HTML5 tech if nativeControlsForTouch is true\r\n    tag.controls = false;\r\n    tag.removeAttribute('controls');\r\n\r\n    // the attribute overrides the option\r\n    if (tag.hasAttribute('autoplay')) {\r\n      _this.options_.autoplay = true;\r\n    } else {\r\n      // otherwise use the setter to validate and\r\n      // set the correct value.\r\n      _this.autoplay(_this.options_.autoplay);\r\n    }\r\n\r\n    /*\r\n     * Store the internal state of scrubbing\r\n     *\r\n     * @private\r\n     * @return {Boolean} True if the user is scrubbing\r\n     */\r\n    _this.scrubbing_ = false;\r\n\r\n    _this.el_ = _this.createEl();\r\n\r\n    // Set default value for lastPlaybackRate\r\n    _this.cache_.lastPlaybackRate = _this.defaultPlaybackRate();\r\n\r\n    // Make this an evented object and use `el_` as its event bus.\r\n    evented(_this, { eventBusKey: 'el_' });\r\n\r\n    // We also want to pass the original player options to each component and plugin\r\n    // as well so they don't need to reach back into the player for options later.\r\n    // We also need to do another copy of this.options_ so we don't end up with\r\n    // an infinite loop.\r\n    var playerOptionsCopy = mergeOptions(_this.options_);\r\n\r\n    // Load plugins\r\n    if (options.plugins) {\r\n      var plugins = options.plugins;\r\n\r\n      Object.keys(plugins).forEach(function (name$$1) {\r\n        if (typeof this[name$$1] === 'function') {\r\n          this[name$$1](plugins[name$$1]);\r\n        } else {\r\n          throw new Error('plugin \"' + name$$1 + '\" does not exist');\r\n        }\r\n      }, _this);\r\n    }\r\n\r\n    _this.options_.playerOptions = playerOptionsCopy;\r\n\r\n    _this.middleware_ = [];\r\n\r\n    _this.initChildren();\r\n\r\n    // Set isAudio based on whether or not an audio tag was used\r\n    _this.isAudio(tag.nodeName.toLowerCase() === 'audio');\r\n\r\n    // Update controls className. Can't do this when the controls are initially\r\n    // set because the element doesn't exist yet.\r\n    if (_this.controls()) {\r\n      _this.addClass('vjs-controls-enabled');\r\n    } else {\r\n      _this.addClass('vjs-controls-disabled');\r\n    }\r\n\r\n    // Set ARIA label and region role depending on player type\r\n    _this.el_.setAttribute('role', 'region');\r\n    if (_this.isAudio()) {\r\n      _this.el_.setAttribute('aria-label', _this.localize('Audio Player'));\r\n    } else {\r\n      _this.el_.setAttribute('aria-label', _this.localize('Video Player'));\r\n    }\r\n\r\n    if (_this.isAudio()) {\r\n      _this.addClass('vjs-audio');\r\n    }\r\n\r\n    if (_this.flexNotSupported_()) {\r\n      _this.addClass('vjs-no-flex');\r\n    }\r\n\r\n    // TODO: Make this smarter. Toggle user state between touching/mousing\r\n    // using events, since devices can have both touch and mouse events.\r\n    // if (browser.TOUCH_ENABLED) {\r\n    //   this.addClass('vjs-touch-enabled');\r\n    // }\r\n\r\n    // iOS Safari has broken hover handling\r\n    if (!IS_IOS) {\r\n      _this.addClass('vjs-workinghover');\r\n    }\r\n\r\n    // Make player easily findable by ID\r\n    Player.players[_this.id_] = _this;\r\n\r\n    // Add a major version class to aid css in plugins\r\n    var majorVersion = version.split('.')[0];\r\n\r\n    _this.addClass('vjs-v' + majorVersion);\r\n\r\n    // When the player is first initialized, trigger activity so components\r\n    // like the control bar show themselves if needed\r\n    _this.userActive(true);\r\n    _this.reportUserActivity();\r\n\r\n    _this.one('play', _this.listenForUserActivity_);\r\n    _this.on('fullscreenchange', _this.handleFullscreenChange_);\r\n    _this.on('stageclick', _this.handleStageClick_);\r\n\r\n    _this.breakpoints(_this.options_.breakpoints);\r\n    _this.responsive(_this.options_.responsive);\r\n\r\n    _this.changingSrc_ = false;\r\n    _this.playWaitingForReady_ = false;\r\n    _this.playOnLoadstart_ = null;\r\n    return _this;\r\n  }\r\n\r\n  /**\r\n   * Destroys the video player and does any necessary cleanup.\r\n   *\r\n   * This is especially helpful if you are dynamically adding and removing videos\r\n   * to/from the DOM.\r\n   *\r\n   * @fires Player#dispose\r\n   */\r\n\r\n\r\n  Player.prototype.dispose = function dispose() {\r\n    /**\r\n     * Called when the player is being disposed of.\r\n     *\r\n     * @event Player#dispose\r\n     * @type {EventTarget~Event}\r\n     */\r\n    this.trigger('dispose');\r\n    // prevent dispose from being called twice\r\n    this.off('dispose');\r\n\r\n    if (this.styleEl_ && this.styleEl_.parentNode) {\r\n      this.styleEl_.parentNode.removeChild(this.styleEl_);\r\n      this.styleEl_ = null;\r\n    }\r\n\r\n    // Kill reference to this player\r\n    Player.players[this.id_] = null;\r\n\r\n    if (this.tag && this.tag.player) {\r\n      this.tag.player = null;\r\n    }\r\n\r\n    if (this.el_ && this.el_.player) {\r\n      this.el_.player = null;\r\n    }\r\n\r\n    if (this.tech_) {\r\n      this.tech_.dispose();\r\n      this.isPosterFromTech_ = false;\r\n      this.poster_ = '';\r\n    }\r\n\r\n    if (this.playerElIngest_) {\r\n      this.playerElIngest_ = null;\r\n    }\r\n\r\n    if (this.tag) {\r\n      this.tag = null;\r\n    }\r\n\r\n    clearCacheForPlayer(this);\r\n\r\n    // the actual .el_ is removed here\r\n    _Component.prototype.dispose.call(this);\r\n  };\r\n\r\n  /**\r\n   * Create the `Player`'s DOM element.\r\n   *\r\n   * @return {Element}\r\n   *         The DOM element that gets created.\r\n   */\r\n\r\n\r\n  Player.prototype.createEl = function createEl$$1() {\r\n    var tag = this.tag;\r\n    var el = void 0;\r\n    var playerElIngest = this.playerElIngest_ = tag.parentNode && tag.parentNode.hasAttribute && tag.parentNode.hasAttribute('data-vjs-player');\r\n    var divEmbed = this.tag.tagName.toLowerCase() === 'video-js';\r\n\r\n    if (playerElIngest) {\r\n      el = this.el_ = tag.parentNode;\r\n    } else if (!divEmbed) {\r\n      el = this.el_ = _Component.prototype.createEl.call(this, 'div');\r\n    }\r\n\r\n    // Copy over all the attributes from the tag, including ID and class\r\n    // ID will now reference player box, not the video tag\r\n    var attrs = getAttributes(tag);\r\n\r\n    if (divEmbed) {\r\n      el = this.el_ = tag;\r\n      tag = this.tag = document.createElement('video');\r\n      while (el.children.length) {\r\n        tag.appendChild(el.firstChild);\r\n      }\r\n\r\n      if (!hasClass(el, 'video-js')) {\r\n        addClass(el, 'video-js');\r\n      }\r\n\r\n      el.appendChild(tag);\r\n\r\n      playerElIngest = this.playerElIngest_ = el;\r\n\r\n      // copy over properties from the video-js element\r\n      // ie8 doesn't support Object.keys nor hasOwnProperty\r\n      // on dom elements so we have to specify properties individually\r\n      ['autoplay', 'controls', 'crossOrigin', 'defaultMuted', 'defaultPlaybackRate', 'loop', 'muted', 'playbackRate', 'src', 'volume'].forEach(function (prop) {\r\n        if (typeof el[prop] !== 'undefined') {\r\n          tag[prop] = el[prop];\r\n        }\r\n      });\r\n    }\r\n\r\n    // set tabindex to -1 to remove the video element from the focus order\r\n    tag.setAttribute('tabindex', '-1');\r\n    attrs.tabindex = '-1';\r\n\r\n    // Workaround for #4583 (JAWS+IE doesn't announce BPB or play button)\r\n    // See https://github.com/FreedomScientific/VFO-standards-support/issues/78\r\n    // Note that we can't detect if JAWS is being used, but this ARIA attribute\r\n    //  doesn't change behavior of IE11 if JAWS is not being used\r\n    if (IE_VERSION) {\r\n      tag.setAttribute('role', 'application');\r\n      attrs.role = 'application';\r\n    }\r\n\r\n    // Remove width/height attrs from tag so CSS can make it 100% width/height\r\n    tag.removeAttribute('width');\r\n    tag.removeAttribute('height');\r\n\r\n    if ('width' in attrs) {\r\n      delete attrs.width;\r\n    }\r\n    if ('height' in attrs) {\r\n      delete attrs.height;\r\n    }\r\n\r\n    Object.getOwnPropertyNames(attrs).forEach(function (attr) {\r\n      // workaround so we don't totally break IE7\r\n      // http://stackoverflow.com/questions/3653444/css-styles-not-applied-on-dynamic-elements-in-internet-explorer-7\r\n      if (attr === 'class') {\r\n        el.className += ' ' + attrs[attr];\r\n\r\n        if (divEmbed) {\r\n          tag.className += ' ' + attrs[attr];\r\n        }\r\n      } else {\r\n        el.setAttribute(attr, attrs[attr]);\r\n\r\n        if (divEmbed) {\r\n          tag.setAttribute(attr, attrs[attr]);\r\n        }\r\n      }\r\n    });\r\n\r\n    // Update tag id/class for use as HTML5 playback tech\r\n    // Might think we should do this after embedding in container so .vjs-tech class\r\n    // doesn't flash 100% width/height, but class only applies with .video-js parent\r\n    tag.playerId = tag.id;\r\n    tag.id += '_html5_api';\r\n    tag.className = 'vjs-tech';\r\n\r\n    // Make player findable on elements\r\n    tag.player = el.player = this;\r\n    // Default state of video is paused\r\n    this.addClass('vjs-paused');\r\n\r\n    // Add a style element in the player that we'll use to set the width/height\r\n    // of the player in a way that's still overrideable by CSS, just like the\r\n    // video element\r\n    if (window.VIDEOJS_NO_DYNAMIC_STYLE !== true) {\r\n      this.styleEl_ = createStyleElement('vjs-styles-dimensions');\r\n      var defaultsStyleEl = $('.vjs-styles-defaults');\r\n      var head = $('head');\r\n\r\n      head.insertBefore(this.styleEl_, defaultsStyleEl ? defaultsStyleEl.nextSibling : head.firstChild);\r\n    }\r\n\r\n    this.fill_ = false;\r\n    this.fluid_ = false;\r\n\r\n    // Pass in the width/height/aspectRatio options which will update the style el\r\n    this.width(this.options_.width);\r\n    this.height(this.options_.height);\r\n    this.fill(this.options_.fill);\r\n    this.fluid(this.options_.fluid);\r\n    this.aspectRatio(this.options_.aspectRatio);\r\n\r\n    // Hide any links within the video/audio tag, because IE doesn't hide them completely.\r\n    var links = tag.getElementsByTagName('a');\r\n\r\n    for (var i = 0; i < links.length; i++) {\r\n      var linkEl = links.item(i);\r\n\r\n      addClass(linkEl, 'vjs-hidden');\r\n      linkEl.setAttribute('hidden', 'hidden');\r\n    }\r\n\r\n    // insertElFirst seems to cause the networkState to flicker from 3 to 2, so\r\n    // keep track of the original for later so we can know if the source originally failed\r\n    tag.initNetworkState_ = tag.networkState;\r\n\r\n    // Wrap video tag in div (el/box) container\r\n    if (tag.parentNode && !playerElIngest) {\r\n      tag.parentNode.insertBefore(el, tag);\r\n    }\r\n\r\n    // insert the tag as the first child of the player element\r\n    // then manually add it to the children array so that this.addChild\r\n    // will work properly for other components\r\n    //\r\n    // Breaks iPhone, fixed in HTML5 setup.\r\n    prependTo(tag, el);\r\n    this.children_.unshift(tag);\r\n\r\n    // Set lang attr on player to ensure CSS :lang() in consistent with player\r\n    // if it's been set to something different to the doc\r\n    this.el_.setAttribute('lang', this.language_);\r\n\r\n    this.el_ = el;\r\n\r\n    return el;\r\n  };\r\n\r\n  /**\r\n   * A getter/setter for the `Player`'s width. Returns the player's configured value.\r\n   * To get the current width use `currentWidth()`.\r\n   *\r\n   * @param {number} [value]\r\n   *        The value to set the `Player`'s width to.\r\n   *\r\n   * @return {number}\r\n   *         The current width of the `Player` when getting.\r\n   */\r\n\r\n\r\n  Player.prototype.width = function width(value) {\r\n    return this.dimension('width', value);\r\n  };\r\n\r\n  /**\r\n   * A getter/setter for the `Player`'s height. Returns the player's configured value.\r\n   * To get the current height use `currentheight()`.\r\n   *\r\n   * @param {number} [value]\r\n   *        The value to set the `Player`'s heigth to.\r\n   *\r\n   * @return {number}\r\n   *         The current height of the `Player` when getting.\r\n   */\r\n\r\n\r\n  Player.prototype.height = function height(value) {\r\n    return this.dimension('height', value);\r\n  };\r\n\r\n  /**\r\n   * A getter/setter for the `Player`'s width & height.\r\n   *\r\n   * @param {string} dimension\r\n   *        This string can be:\r\n   *        - 'width'\r\n   *        - 'height'\r\n   *\r\n   * @param {number} [value]\r\n   *        Value for dimension specified in the first argument.\r\n   *\r\n   * @return {number}\r\n   *         The dimension arguments value when getting (width/height).\r\n   */\r\n\r\n\r\n  Player.prototype.dimension = function dimension(_dimension, value) {\r\n    var privDimension = _dimension + '_';\r\n\r\n    if (value === undefined) {\r\n      return this[privDimension] || 0;\r\n    }\r\n\r\n    if (value === '') {\r\n      // If an empty string is given, reset the dimension to be automatic\r\n      this[privDimension] = undefined;\r\n      this.updateStyleEl_();\r\n      return;\r\n    }\r\n\r\n    var parsedVal = parseFloat(value);\r\n\r\n    if (isNaN(parsedVal)) {\r\n      log.error('Improper value \"' + value + '\" supplied for for ' + _dimension);\r\n      return;\r\n    }\r\n\r\n    this[privDimension] = parsedVal;\r\n    this.updateStyleEl_();\r\n  };\r\n\r\n  /**\r\n   * A getter/setter/toggler for the vjs-fluid `className` on the `Player`.\r\n   *\r\n   * Turning this on will turn off fill mode.\r\n   *\r\n   * @param {boolean} [bool]\r\n   *        - A value of true adds the class.\r\n   *        - A value of false removes the class.\r\n   *        - No value will be a getter.\r\n   *\r\n   * @return {boolean|undefined}\r\n   *         - The value of fluid when getting.\r\n   *         - `undefined` when setting.\r\n   */\r\n\r\n\r\n  Player.prototype.fluid = function fluid(bool) {\r\n    if (bool === undefined) {\r\n      return !!this.fluid_;\r\n    }\r\n\r\n    this.fluid_ = !!bool;\r\n\r\n    if (bool) {\r\n      this.addClass('vjs-fluid');\r\n      this.fill(false);\r\n    } else {\r\n      this.removeClass('vjs-fluid');\r\n    }\r\n\r\n    this.updateStyleEl_();\r\n  };\r\n\r\n  /**\r\n   * A getter/setter/toggler for the vjs-fill `className` on the `Player`.\r\n   *\r\n   * Turning this on will turn off fluid mode.\r\n   *\r\n   * @param {boolean} [bool]\r\n   *        - A value of true adds the class.\r\n   *        - A value of false removes the class.\r\n   *        - No value will be a getter.\r\n   *\r\n   * @return {boolean|undefined}\r\n   *         - The value of fluid when getting.\r\n   *         - `undefined` when setting.\r\n   */\r\n\r\n\r\n  Player.prototype.fill = function fill(bool) {\r\n    if (bool === undefined) {\r\n      return !!this.fill_;\r\n    }\r\n\r\n    this.fill_ = !!bool;\r\n\r\n    if (bool) {\r\n      this.addClass('vjs-fill');\r\n      this.fluid(false);\r\n    } else {\r\n      this.removeClass('vjs-fill');\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Get/Set the aspect ratio\r\n   *\r\n   * @param {string} [ratio]\r\n   *        Aspect ratio for player\r\n   *\r\n   * @return {string|undefined}\r\n   *         returns the current aspect ratio when getting\r\n   */\r\n\r\n  /**\r\n   * A getter/setter for the `Player`'s aspect ratio.\r\n   *\r\n   * @param {string} [ratio]\r\n   *        The value to set the `Player's aspect ratio to.\r\n   *\r\n   * @return {string|undefined}\r\n   *         - The current aspect ratio of the `Player` when getting.\r\n   *         - undefined when setting\r\n   */\r\n\r\n\r\n  Player.prototype.aspectRatio = function aspectRatio(ratio) {\r\n    if (ratio === undefined) {\r\n      return this.aspectRatio_;\r\n    }\r\n\r\n    // Check for width:height format\r\n    if (!/^\\d+\\:\\d+$/.test(ratio)) {\r\n      throw new Error('Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.');\r\n    }\r\n    this.aspectRatio_ = ratio;\r\n\r\n    // We're assuming if you set an aspect ratio you want fluid mode,\r\n    // because in fixed mode you could calculate width and height yourself.\r\n    this.fluid(true);\r\n\r\n    this.updateStyleEl_();\r\n  };\r\n\r\n  /**\r\n   * Update styles of the `Player` element (height, width and aspect ratio).\r\n   *\r\n   * @private\r\n   * @listens Tech#loadedmetadata\r\n   */\r\n\r\n\r\n  Player.prototype.updateStyleEl_ = function updateStyleEl_() {\r\n    if (window.VIDEOJS_NO_DYNAMIC_STYLE === true) {\r\n      var _width = typeof this.width_ === 'number' ? this.width_ : this.options_.width;\r\n      var _height = typeof this.height_ === 'number' ? this.height_ : this.options_.height;\r\n      var techEl = this.tech_ && this.tech_.el();\r\n\r\n      if (techEl) {\r\n        if (_width >= 0) {\r\n          techEl.width = _width;\r\n        }\r\n        if (_height >= 0) {\r\n          techEl.height = _height;\r\n        }\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    var width = void 0;\r\n    var height = void 0;\r\n    var aspectRatio = void 0;\r\n    var idClass = void 0;\r\n\r\n    // The aspect ratio is either used directly or to calculate width and height.\r\n    if (this.aspectRatio_ !== undefined && this.aspectRatio_ !== 'auto') {\r\n      // Use any aspectRatio that's been specifically set\r\n      aspectRatio = this.aspectRatio_;\r\n    } else if (this.videoWidth() > 0) {\r\n      // Otherwise try to get the aspect ratio from the video metadata\r\n      aspectRatio = this.videoWidth() + ':' + this.videoHeight();\r\n    } else {\r\n      // Or use a default. The video element's is 2:1, but 16:9 is more common.\r\n      aspectRatio = '16:9';\r\n    }\r\n\r\n    // Get the ratio as a decimal we can use to calculate dimensions\r\n    var ratioParts = aspectRatio.split(':');\r\n    var ratioMultiplier = ratioParts[1] / ratioParts[0];\r\n\r\n    if (this.width_ !== undefined) {\r\n      // Use any width that's been specifically set\r\n      width = this.width_;\r\n    } else if (this.height_ !== undefined) {\r\n      // Or calulate the width from the aspect ratio if a height has been set\r\n      width = this.height_ / ratioMultiplier;\r\n    } else {\r\n      // Or use the video's metadata, or use the video el's default of 300\r\n      width = this.videoWidth() || 300;\r\n    }\r\n\r\n    if (this.height_ !== undefined) {\r\n      // Use any height that's been specifically set\r\n      height = this.height_;\r\n    } else {\r\n      // Otherwise calculate the height from the ratio and the width\r\n      height = width * ratioMultiplier;\r\n    }\r\n\r\n    // Ensure the CSS class is valid by starting with an alpha character\r\n    if (/^[^a-zA-Z]/.test(this.id())) {\r\n      idClass = 'dimensions-' + this.id();\r\n    } else {\r\n      idClass = this.id() + '-dimensions';\r\n    }\r\n\r\n    // Ensure the right class is still on the player for the style element\r\n    this.addClass(idClass);\r\n\r\n    setTextContent(this.styleEl_, '\\n      .' + idClass + ' {\\n        width: ' + width + 'px;\\n        height: ' + height + 'px;\\n      }\\n\\n      .' + idClass + '.vjs-fluid {\\n        padding-top: ' + ratioMultiplier * 100 + '%;\\n      }\\n    ');\r\n  };\r\n\r\n  /**\r\n   * Load/Create an instance of playback {@link Tech} including element\r\n   * and API methods. Then append the `Tech` element in `Player` as a child.\r\n   *\r\n   * @param {string} techName\r\n   *        name of the playback technology\r\n   *\r\n   * @param {string} source\r\n   *        video source\r\n   *\r\n   * @private\r\n   */\r\n\r\n\r\n  Player.prototype.loadTech_ = function loadTech_(techName, source) {\r\n    var _this2 = this;\r\n\r\n    // Pause and remove current playback technology\r\n    if (this.tech_) {\r\n      this.unloadTech_();\r\n    }\r\n\r\n    var titleTechName = toTitleCase(techName);\r\n    var camelTechName = techName.charAt(0).toLowerCase() + techName.slice(1);\r\n\r\n    // get rid of the HTML5 video tag as soon as we are using another tech\r\n    if (titleTechName !== 'Html5' && this.tag) {\r\n      Tech.getTech('Html5').disposeMediaElement(this.tag);\r\n      this.tag.player = null;\r\n      this.tag = null;\r\n    }\r\n\r\n    this.techName_ = titleTechName;\r\n\r\n    // Turn off API access because we're loading a new tech that might load asynchronously\r\n    this.isReady_ = false;\r\n\r\n    // if autoplay is a string we pass false to the tech\r\n    // because the player is going to handle autoplay on `loadstart`\r\n    var autoplay = typeof this.autoplay() === 'string' ? false : this.autoplay();\r\n\r\n    // Grab tech-specific options from player options and add source and parent element to use.\r\n    var techOptions = {\r\n      source: source,\r\n      autoplay: autoplay,\r\n      'nativeControlsForTouch': this.options_.nativeControlsForTouch,\r\n      'playerId': this.id(),\r\n      'techId': this.id() + '_' + camelTechName + '_api',\r\n      'playsinline': this.options_.playsinline,\r\n      'preload': this.options_.preload,\r\n      'loop': this.options_.loop,\r\n      'muted': this.options_.muted,\r\n      'poster': this.poster(),\r\n      'language': this.language(),\r\n      'playerElIngest': this.playerElIngest_ || false,\r\n      'vtt.js': this.options_['vtt.js'],\r\n      'canOverridePoster': !!this.options_.techCanOverridePoster,\r\n      'enableSourceset': this.options_.enableSourceset\r\n    };\r\n\r\n    ALL.names.forEach(function (name$$1) {\r\n      var props = ALL[name$$1];\r\n\r\n      techOptions[props.getterName] = _this2[props.privateName];\r\n    });\r\n\r\n    assign(techOptions, this.options_[titleTechName]);\r\n    assign(techOptions, this.options_[camelTechName]);\r\n    assign(techOptions, this.options_[techName.toLowerCase()]);\r\n\r\n    if (this.tag) {\r\n      techOptions.tag = this.tag;\r\n    }\r\n\r\n    if (source && source.src === this.cache_.src && this.cache_.currentTime > 0) {\r\n      techOptions.startTime = this.cache_.currentTime;\r\n    }\r\n\r\n    // Initialize tech instance\r\n    var TechClass = Tech.getTech(techName);\r\n\r\n    if (!TechClass) {\r\n      throw new Error('No Tech named \\'' + titleTechName + '\\' exists! \\'' + titleTechName + '\\' should be registered using videojs.registerTech()\\'');\r\n    }\r\n\r\n    this.tech_ = new TechClass(techOptions);\r\n\r\n    // player.triggerReady is always async, so don't need this to be async\r\n    this.tech_.ready(bind(this, this.handleTechReady_), true);\r\n\r\n    textTrackConverter.jsonToTextTracks(this.textTracksJson_ || [], this.tech_);\r\n\r\n    // Listen to all HTML5-defined events and trigger them on the player\r\n    TECH_EVENTS_RETRIGGER.forEach(function (event) {\r\n      _this2.on(_this2.tech_, event, _this2['handleTech' + toTitleCase(event) + '_']);\r\n    });\r\n\r\n    Object.keys(TECH_EVENTS_QUEUE).forEach(function (event) {\r\n      _this2.on(_this2.tech_, event, function (eventObj) {\r\n        if (_this2.tech_.playbackRate() === 0 && _this2.tech_.seeking()) {\r\n          _this2.queuedCallbacks_.push({\r\n            callback: _this2['handleTech' + TECH_EVENTS_QUEUE[event] + '_'].bind(_this2),\r\n            event: eventObj\r\n          });\r\n          return;\r\n        }\r\n        _this2['handleTech' + TECH_EVENTS_QUEUE[event] + '_'](eventObj);\r\n      });\r\n    });\r\n\r\n    this.on(this.tech_, 'loadstart', this.handleTechLoadStart_);\r\n    this.on(this.tech_, 'sourceset', this.handleTechSourceset_);\r\n    this.on(this.tech_, 'waiting', this.handleTechWaiting_);\r\n    this.on(this.tech_, 'ended', this.handleTechEnded_);\r\n    this.on(this.tech_, 'seeking', this.handleTechSeeking_);\r\n    this.on(this.tech_, 'play', this.handleTechPlay_);\r\n    this.on(this.tech_, 'firstplay', this.handleTechFirstPlay_);\r\n    this.on(this.tech_, 'pause', this.handleTechPause_);\r\n    this.on(this.tech_, 'durationchange', this.handleTechDurationChange_);\r\n    this.on(this.tech_, 'fullscreenchange', this.handleTechFullscreenChange_);\r\n    this.on(this.tech_, 'error', this.handleTechError_);\r\n    this.on(this.tech_, 'loadedmetadata', this.updateStyleEl_);\r\n    this.on(this.tech_, 'posterchange', this.handleTechPosterChange_);\r\n    this.on(this.tech_, 'textdata', this.handleTechTextData_);\r\n    this.on(this.tech_, 'ratechange', this.handleTechRateChange_);\r\n\r\n    this.usingNativeControls(this.techGet_('controls'));\r\n\r\n    if (this.controls() && !this.usingNativeControls()) {\r\n      this.addTechControlsListeners_();\r\n    }\r\n\r\n    // Add the tech element in the DOM if it was not already there\r\n    // Make sure to not insert the original video element if using Html5\r\n    if (this.tech_.el().parentNode !== this.el() && (titleTechName !== 'Html5' || !this.tag)) {\r\n      prependTo(this.tech_.el(), this.el());\r\n    }\r\n\r\n    // Get rid of the original video tag reference after the first tech is loaded\r\n    if (this.tag) {\r\n      this.tag.player = null;\r\n      this.tag = null;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Unload and dispose of the current playback {@link Tech}.\r\n   *\r\n   * @private\r\n   */\r\n\r\n\r\n  Player.prototype.unloadTech_ = function unloadTech_() {\r\n    var _this3 = this;\r\n\r\n    // Save the current text tracks so that we can reuse the same text tracks with the next tech\r\n    ALL.names.forEach(function (name$$1) {\r\n      var props = ALL[name$$1];\r\n\r\n      _this3[props.privateName] = _this3[props.getterName]();\r\n    });\r\n    this.textTracksJson_ = textTrackConverter.textTracksToJson(this.tech_);\r\n\r\n    this.isReady_ = false;\r\n\r\n    this.tech_.dispose();\r\n\r\n    this.tech_ = false;\r\n\r\n    if (this.isPosterFromTech_) {\r\n      this.poster_ = '';\r\n      this.trigger('posterchange');\r\n    }\r\n\r\n    this.isPosterFromTech_ = false;\r\n  };\r\n\r\n  /**\r\n   * Return a reference to the current {@link Tech}.\r\n   * It will print a warning by default about the danger of using the tech directly\r\n   * but any argument that is passed in will silence the warning.\r\n   *\r\n   * @param {*} [safety]\r\n   *        Anything passed in to silence the warning\r\n   *\r\n   * @return {Tech}\r\n   *         The Tech\r\n   */\r\n\r\n\r\n  Player.prototype.tech = function tech(safety) {\r\n    if (safety === undefined) {\r\n      log.warn(tsml(_templateObject$1));\r\n    }\r\n\r\n    return this.tech_;\r\n  };\r\n\r\n  /**\r\n   * Set up click and touch listeners for the playback element\r\n   *\r\n   * - On desktops: a click on the video itself will toggle playback\r\n   * - On mobile devices: a click on the video toggles controls\r\n   *   which is done by toggling the user state between active and\r\n   *   inactive\r\n   * - A tap can signal that a user has become active or has become inactive\r\n   *   e.g. a quick tap on an iPhone movie should reveal the controls. Another\r\n   *   quick tap should hide them again (signaling the user is in an inactive\r\n   *   viewing state)\r\n   * - In addition to this, we still want the user to be considered inactive after\r\n   *   a few seconds of inactivity.\r\n   *\r\n   * > Note: the only part of iOS interaction we can't mimic with this setup\r\n   * is a touch and hold on the video element counting as activity in order to\r\n   * keep the controls showing, but that shouldn't be an issue. A touch and hold\r\n   * on any controls will still keep the user active\r\n   *\r\n   * @private\r\n   */\r\n\r\n\r\n  Player.prototype.addTechControlsListeners_ = function addTechControlsListeners_() {\r\n    // Make sure to remove all the previous listeners in case we are called multiple times.\r\n    this.removeTechControlsListeners_();\r\n\r\n    // Some browsers (Chrome & IE) don't trigger a click on a flash swf, but do\r\n    // trigger mousedown/up.\r\n    // http://stackoverflow.com/questions/1444562/javascript-onclick-event-over-flash-object\r\n    // Any touch events are set to block the mousedown event from happening\r\n    this.on(this.tech_, 'mousedown', this.handleTechClick_);\r\n\r\n    // If the controls were hidden we don't want that to change without a tap event\r\n    // so we'll check if the controls were already showing before reporting user\r\n    // activity\r\n    this.on(this.tech_, 'touchstart', this.handleTechTouchStart_);\r\n    this.on(this.tech_, 'touchmove', this.handleTechTouchMove_);\r\n    this.on(this.tech_, 'touchend', this.handleTechTouchEnd_);\r\n\r\n    // The tap listener needs to come after the touchend listener because the tap\r\n    // listener cancels out any reportedUserActivity when setting userActive(false)\r\n    this.on(this.tech_, 'tap', this.handleTechTap_);\r\n  };\r\n\r\n  /**\r\n   * Remove the listeners used for click and tap controls. This is needed for\r\n   * toggling to controls disabled, where a tap/touch should do nothing.\r\n   *\r\n   * @private\r\n   */\r\n\r\n\r\n  Player.prototype.removeTechControlsListeners_ = function removeTechControlsListeners_() {\r\n    // We don't want to just use `this.off()` because there might be other needed\r\n    // listeners added by techs that extend this.\r\n    this.off(this.tech_, 'tap', this.handleTechTap_);\r\n    this.off(this.tech_, 'touchstart', this.handleTechTouchStart_);\r\n    this.off(this.tech_, 'touchmove', this.handleTechTouchMove_);\r\n    this.off(this.tech_, 'touchend', this.handleTechTouchEnd_);\r\n    this.off(this.tech_, 'mousedown', this.handleTechClick_);\r\n  };\r\n\r\n  /**\r\n   * Player waits for the tech to be ready\r\n   *\r\n   * @private\r\n   */\r\n\r\n\r\n  Player.prototype.handleTechReady_ = function handleTechReady_() {\r\n    this.triggerReady();\r\n\r\n    // Keep the same volume as before\r\n    if (this.cache_.volume) {\r\n      this.techCall_('setVolume', this.cache_.volume);\r\n    }\r\n\r\n    // Look if the tech found a higher resolution poster while loading\r\n    this.handleTechPosterChange_();\r\n\r\n    // Update the duration if available\r\n    this.handleTechDurationChange_();\r\n\r\n    // Chrome and Safari both have issues with autoplay.\r\n    // In Safari (5.1.1), when we move the video element into the container div, autoplay doesn't work.\r\n    // In Chrome (15), if you have autoplay + a poster + no controls, the video gets hidden (but audio plays)\r\n    // This fixes both issues. Need to wait for API, so it updates displays correctly\r\n    if ((this.src() || this.currentSrc()) && this.tag && this.options_.autoplay && this.paused()) {\r\n      try {\r\n        // Chrome Fix. Fixed in Chrome v16.\r\n        delete this.tag.poster;\r\n      } catch (e) {\r\n        log('deleting tag.poster throws in some browsers', e);\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Retrigger the `loadstart` event that was triggered by the {@link Tech}. This\r\n   * function will also trigger {@link Player#firstplay} if it is the first loadstart\r\n   * for a video.\r\n   *\r\n   * @fires Player#loadstart\r\n   * @fires Player#firstplay\r\n   * @listens Tech#loadstart\r\n   * @private\r\n   */\r\n\r\n\r\n  Player.prototype.handleTechLoadStart_ = function handleTechLoadStart_() {\r\n    // TODO: Update to use `emptied` event instead. See #1277.\r\n\r\n    this.removeClass('vjs-ended');\r\n    this.removeClass('vjs-seeking');\r\n\r\n    // reset the error state\r\n    this.error(null);\r\n\r\n    // If it's already playing we want to trigger a firstplay event now.\r\n    // The firstplay event relies on both the play and loadstart events\r\n    // which can happen in any order for a new source\r\n    if (!this.paused()) {\r\n      /**\r\n       * Fired when the user agent begins looking for media data\r\n       *\r\n       * @event Player#loadstart\r\n       * @type {EventTarget~Event}\r\n       */\r\n      this.trigger('loadstart');\r\n      this.trigger('firstplay');\r\n    } else {\r\n      // reset the hasStarted state\r\n      this.hasStarted(false);\r\n      this.trigger('loadstart');\r\n    }\r\n\r\n    // autoplay happens after loadstart for the browser,\r\n    // so we mimic that behavior\r\n    this.manualAutoplay_(this.autoplay());\r\n  };\r\n\r\n  /**\r\n   * Handle autoplay string values, rather than the typical boolean\r\n   * values that should be handled by the tech. Note that this is not\r\n   * part of any specification. Valid values and what they do can be\r\n   * found on the autoplay getter at Player#autoplay()\r\n   */\r\n\r\n\r\n  Player.prototype.manualAutoplay_ = function manualAutoplay_(type) {\r\n    var _this4 = this;\r\n\r\n    if (!this.tech_ || typeof type !== 'string') {\r\n      return;\r\n    }\r\n\r\n    var muted = function muted() {\r\n      var previouslyMuted = _this4.muted();\r\n\r\n      _this4.muted(true);\r\n\r\n      var playPromise = _this4.play();\r\n\r\n      if (!playPromise || !playPromise.then || !playPromise['catch']) {\r\n        return;\r\n      }\r\n\r\n      return playPromise['catch'](function (e) {\r\n        // restore old value of muted on failure\r\n        _this4.muted(previouslyMuted);\r\n      });\r\n    };\r\n\r\n    var promise = void 0;\r\n\r\n    if (type === 'any') {\r\n      promise = this.play();\r\n\r\n      if (promise && promise.then && promise['catch']) {\r\n        promise['catch'](function () {\r\n          return muted();\r\n        });\r\n      }\r\n    } else if (type === 'muted') {\r\n      promise = muted();\r\n    } else {\r\n      promise = this.play();\r\n    }\r\n\r\n    if (!promise || !promise.then || !promise['catch']) {\r\n      return;\r\n    }\r\n\r\n    return promise.then(function () {\r\n      _this4.trigger({ type: 'autoplay-success', autoplay: type });\r\n    })['catch'](function (e) {\r\n      _this4.trigger({ type: 'autoplay-failure', autoplay: type });\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Update the internal source caches so that we return the correct source from\r\n   * `src()`, `currentSource()`, and `currentSources()`.\r\n   *\r\n   * > Note: `currentSources` will not be updated if the source that is passed in exists\r\n   *         in the current `currentSources` cache.\r\n   *\r\n   *\r\n   * @param {Tech~SourceObject} srcObj\r\n   *        A string or object source to update our caches to.\r\n   */\r\n\r\n\r\n  Player.prototype.updateSourceCaches_ = function updateSourceCaches_() {\r\n    var srcObj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\r\n\r\n\r\n    var src = srcObj;\r\n    var type = '';\r\n\r\n    if (typeof src !== 'string') {\r\n      src = srcObj.src;\r\n      type = srcObj.type;\r\n    }\r\n\r\n    // make sure all the caches are set to default values\r\n    // to prevent null checking\r\n    this.cache_.source = this.cache_.source || {};\r\n    this.cache_.sources = this.cache_.sources || [];\r\n\r\n    // try to get the type of the src that was passed in\r\n    if (src && !type) {\r\n      type = findMimetype(this, src);\r\n    }\r\n\r\n    // update `currentSource` cache always\r\n    this.cache_.source = mergeOptions({}, srcObj, { src: src, type: type });\r\n\r\n    var matchingSources = this.cache_.sources.filter(function (s) {\r\n      return s.src && s.src === src;\r\n    });\r\n    var sourceElSources = [];\r\n    var sourceEls = this.$$('source');\r\n    var matchingSourceEls = [];\r\n\r\n    for (var i = 0; i < sourceEls.length; i++) {\r\n      var sourceObj = getAttributes(sourceEls[i]);\r\n\r\n      sourceElSources.push(sourceObj);\r\n\r\n      if (sourceObj.src && sourceObj.src === src) {\r\n        matchingSourceEls.push(sourceObj.src);\r\n      }\r\n    }\r\n\r\n    // if we have matching source els but not matching sources\r\n    // the current source cache is not up to date\r\n    if (matchingSourceEls.length && !matchingSources.length) {\r\n      this.cache_.sources = sourceElSources;\r\n      // if we don't have matching source or source els set the\r\n      // sources cache to the `currentSource` cache\r\n    } else if (!matchingSources.length) {\r\n      this.cache_.sources = [this.cache_.source];\r\n    }\r\n\r\n    // update the tech `src` cache\r\n    this.cache_.src = src;\r\n  };\r\n\r\n  /**\r\n   * *EXPERIMENTAL* Fired when the source is set or changed on the {@link Tech}\r\n   * causing the media element to reload.\r\n   *\r\n   * It will fire for the initial source and each subsequent source.\r\n   * This event is a custom event from Video.js and is triggered by the {@link Tech}.\r\n   *\r\n   * The event object for this event contains a `src` property that will contain the source\r\n   * that was available when the event was triggered. This is generally only necessary if Video.js\r\n   * is switching techs while the source was being changed.\r\n   *\r\n   * It is also fired when `load` is called on the player (or media element)\r\n   * because the {@link https://html.spec.whatwg.org/multipage/media.html#dom-media-load|specification for `load`}\r\n   * says that the resource selection algorithm needs to be aborted and restarted.\r\n   * In this case, it is very likely that the `src` property will be set to the\r\n   * empty string `\"\"` to indicate we do not know what the source will be but\r\n   * that it is changing.\r\n   *\r\n   * *This event is currently still experimental and may change in minor releases.*\r\n   * __To use this, pass `enableSourceset` option to the player.__\r\n   *\r\n   * @event Player#sourceset\r\n   * @type {EventTarget~Event}\r\n   * @prop {string} src\r\n   *                The source url available when the `sourceset` was triggered.\r\n   *                It will be an empty string if we cannot know what the source is\r\n   *                but know that the source will change.\r\n   */\r\n  /**\r\n   * Retrigger the `sourceset` event that was triggered by the {@link Tech}.\r\n   *\r\n   * @fires Player#sourceset\r\n   * @listens Tech#sourceset\r\n   * @private\r\n   */\r\n\r\n\r\n  Player.prototype.handleTechSourceset_ = function handleTechSourceset_(event) {\r\n    var _this5 = this;\r\n\r\n    // only update the source cache when the source\r\n    // was not updated using the player api\r\n    if (!this.changingSrc_) {\r\n      var updateSourceCaches = function updateSourceCaches(src) {\r\n        return _this5.updateSourceCaches_(src);\r\n      };\r\n      var playerSrc = this.currentSource().src;\r\n      var eventSrc = event.src;\r\n\r\n      // if we have a playerSrc that is not a blob, and a tech src that is a blob\r\n      if (playerSrc && !/^blob:/.test(playerSrc) && /^blob:/.test(eventSrc)) {\r\n\r\n        // if both the tech source and the player source were updated we assume\r\n        // something like @videojs/http-streaming did the sourceset and skip updating the source cache.\r\n        if (!this.lastSource_ || this.lastSource_.tech !== eventSrc && this.lastSource_.player !== playerSrc) {\r\n          updateSourceCaches = function updateSourceCaches() {};\r\n        }\r\n      }\r\n\r\n      // update the source to the intial source right away\r\n      // in some cases this will be empty string\r\n      updateSourceCaches(eventSrc);\r\n\r\n      // if the `sourceset` `src` was an empty string\r\n      // wait for a `loadstart` to update the cache to `currentSrc`.\r\n      // If a sourceset happens before a `loadstart`, we reset the state\r\n      // as this function will be called again.\r\n      if (!event.src) {\r\n        var updateCache = function updateCache(e) {\r\n          if (e.type !== 'sourceset') {\r\n            var techSrc = _this5.techGet('currentSrc');\r\n\r\n            _this5.lastSource_.tech = techSrc;\r\n            _this5.updateSourceCaches_(techSrc);\r\n          }\r\n\r\n          _this5.tech_.off(['sourceset', 'loadstart'], updateCache);\r\n        };\r\n\r\n        this.tech_.one(['sourceset', 'loadstart'], updateCache);\r\n      }\r\n    }\r\n    this.lastSource_ = { player: this.currentSource().src, tech: event.src };\r\n\r\n    this.trigger({\r\n      src: event.src,\r\n      type: 'sourceset'\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Add/remove the vjs-has-started class\r\n   *\r\n   * @fires Player#firstplay\r\n   *\r\n   * @param {boolean} request\r\n   *        - true: adds the class\r\n   *        - false: remove the class\r\n   *\r\n   * @return {boolean}\r\n   *         the boolean value of hasStarted_\r\n   */\r\n\r\n\r\n  Player.prototype.hasStarted = function hasStarted(request) {\r\n    if (request === undefined) {\r\n      // act as getter, if we have no request to change\r\n      return this.hasStarted_;\r\n    }\r\n\r\n    if (request === this.hasStarted_) {\r\n      return;\r\n    }\r\n\r\n    this.hasStarted_ = request;\r\n\r\n    if (this.hasStarted_) {\r\n      this.addClass('vjs-has-started');\r\n      this.trigger('firstplay');\r\n    } else {\r\n      this.removeClass('vjs-has-started');\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Fired whenever the media begins or resumes playback\r\n   *\r\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-play}\r\n   * @fires Player#play\r\n   * @listens Tech#play\r\n   * @private\r\n   */\r\n\r\n\r\n  Player.prototype.handleTechPlay_ = function handleTechPlay_() {\r\n    this.removeClass('vjs-ended');\r\n    this.removeClass('vjs-paused');\r\n    this.addClass('vjs-playing');\r\n\r\n    // hide the poster when the user hits play\r\n    this.hasStarted(true);\r\n    /**\r\n     * Triggered whenever an {@link Tech#play} event happens. Indicates that\r\n     * playback has started or resumed.\r\n     *\r\n     * @event Player#play\r\n     * @type {EventTarget~Event}\r\n     */\r\n    this.trigger('play');\r\n  };\r\n\r\n  /**\r\n   * Retrigger the `ratechange` event that was triggered by the {@link Tech}.\r\n   *\r\n   * If there were any events queued while the playback rate was zero, fire\r\n   * those events now.\r\n   *\r\n   * @private\r\n   * @method Player#handleTechRateChange_\r\n   * @fires Player#ratechange\r\n   * @listens Tech#ratechange\r\n   */\r\n\r\n\r\n  Player.prototype.handleTechRateChange_ = function handleTechRateChange_() {\r\n    if (this.tech_.playbackRate() > 0 && this.cache_.lastPlaybackRate === 0) {\r\n      this.queuedCallbacks_.forEach(function (queued) {\r\n        return queued.callback(queued.event);\r\n      });\r\n      this.queuedCallbacks_ = [];\r\n    }\r\n    this.cache_.lastPlaybackRate = this.tech_.playbackRate();\r\n    /**\r\n     * Fires when the playing speed of the audio/video is changed\r\n     *\r\n     * @event Player#ratechange\r\n     * @type {event}\r\n     */\r\n    this.trigger('ratechange');\r\n  };\r\n\r\n  /**\r\n   * Retrigger the `waiting` event that was triggered by the {@link Tech}.\r\n   *\r\n   * @fires Player#waiting\r\n   * @listens Tech#waiting\r\n   * @private\r\n   */\r\n\r\n\r\n  Player.prototype.handleTechWaiting_ = function handleTechWaiting_() {\r\n    var _this6 = this;\r\n\r\n    this.addClass('vjs-waiting');\r\n    /**\r\n     * A readyState change on the DOM element has caused playback to stop.\r\n     *\r\n     * @event Player#waiting\r\n     * @type {EventTarget~Event}\r\n     */\r\n    this.trigger('waiting');\r\n    this.one('timeupdate', function () {\r\n      return _this6.removeClass('vjs-waiting');\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Retrigger the `canplay` event that was triggered by the {@link Tech}.\r\n   * > Note: This is not consistent between browsers. See #1351\r\n   *\r\n   * @fires Player#canplay\r\n   * @listens Tech#canplay\r\n   * @private\r\n   */\r\n\r\n\r\n  Player.prototype.handleTechCanPlay_ = function handleTechCanPlay_() {\r\n    this.removeClass('vjs-waiting');\r\n    /**\r\n     * The media has a readyState of HAVE_FUTURE_DATA or greater.\r\n     *\r\n     * @event Player#canplay\r\n     * @type {EventTarget~Event}\r\n     */\r\n    this.trigger('canplay');\r\n  };\r\n\r\n  /**\r\n   * Retrigger the `canplaythrough` event that was triggered by the {@link Tech}.\r\n   *\r\n   * @fires Player#canplaythrough\r\n   * @listens Tech#canplaythrough\r\n   * @private\r\n   */\r\n\r\n\r\n  Player.prototype.handleTechCanPlayThrough_ = function handleTechCanPlayThrough_() {\r\n    this.removeClass('vjs-waiting');\r\n    /**\r\n     * The media has a readyState of HAVE_ENOUGH_DATA or greater. This means that the\r\n     * entire media file can be played without buffering.\r\n     *\r\n     * @event Player#canplaythrough\r\n     * @type {EventTarget~Event}\r\n     */\r\n    this.trigger('canplaythrough');\r\n  };\r\n\r\n  /**\r\n   * Retrigger the `playing` event that was triggered by the {@link Tech}.\r\n   *\r\n   * @fires Player#playing\r\n   * @listens Tech#playing\r\n   * @private\r\n   */\r\n\r\n\r\n  Player.prototype.handleTechPlaying_ = function handleTechPlaying_() {\r\n    this.removeClass('vjs-waiting');\r\n    /**\r\n     * The media is no longer blocked from playback, and has started playing.\r\n     *\r\n     * @event Player#playing\r\n     * @type {EventTarget~Event}\r\n     */\r\n    this.trigger('playing');\r\n  };\r\n\r\n  /**\r\n   * Retrigger the `seeking` event that was triggered by the {@link Tech}.\r\n   *\r\n   * @fires Player#seeking\r\n   * @listens Tech#seeking\r\n   * @private\r\n   */\r\n\r\n\r\n  Player.prototype.handleTechSeeking_ = function handleTechSeeking_() {\r\n    this.addClass('vjs-seeking');\r\n    /**\r\n     * Fired whenever the player is jumping to a new time\r\n     *\r\n     * @event Player#seeking\r\n     * @type {EventTarget~Event}\r\n     */\r\n    this.trigger('seeking');\r\n  };\r\n\r\n  /**\r\n   * Retrigger the `seeked` event that was triggered by the {@link Tech}.\r\n   *\r\n   * @fires Player#seeked\r\n   * @listens Tech#seeked\r\n   * @private\r\n   */\r\n\r\n\r\n  Player.prototype.handleTechSeeked_ = function handleTechSeeked_() {\r\n    this.removeClass('vjs-seeking');\r\n    /**\r\n     * Fired when the player has finished jumping to a new time\r\n     *\r\n     * @event Player#seeked\r\n     * @type {EventTarget~Event}\r\n     */\r\n    this.trigger('seeked');\r\n  };\r\n\r\n  /**\r\n   * Retrigger the `firstplay` event that was triggered by the {@link Tech}.\r\n   *\r\n   * @fires Player#firstplay\r\n   * @listens Tech#firstplay\r\n   * @deprecated As of 6.0 firstplay event is deprecated.\r\n   *             As of 6.0 passing the `starttime` option to the player and the firstplay event are deprecated.\r\n   * @private\r\n   */\r\n\r\n\r\n  Player.prototype.handleTechFirstPlay_ = function handleTechFirstPlay_() {\r\n    // If the first starttime attribute is specified\r\n    // then we will start at the given offset in seconds\r\n    if (this.options_.starttime) {\r\n      log.warn('Passing the `starttime` option to the player will be deprecated in 6.0');\r\n      this.currentTime(this.options_.starttime);\r\n    }\r\n\r\n    this.addClass('vjs-has-started');\r\n    /**\r\n     * Fired the first time a video is played. Not part of the HLS spec, and this is\r\n     * probably not the best implementation yet, so use sparingly. If you don't have a\r\n     * reason to prevent playback, use `myPlayer.one('play');` instead.\r\n     *\r\n     * @event Player#firstplay\r\n     * @deprecated As of 6.0 firstplay event is deprecated.\r\n     * @type {EventTarget~Event}\r\n     */\r\n    this.trigger('firstplay');\r\n  };\r\n\r\n  /**\r\n   * Retrigger the `pause` event that was triggered by the {@link Tech}.\r\n   *\r\n   * @fires Player#pause\r\n   * @listens Tech#pause\r\n   * @private\r\n   */\r\n\r\n\r\n  Player.prototype.handleTechPause_ = function handleTechPause_() {\r\n    this.removeClass('vjs-playing');\r\n    this.addClass('vjs-paused');\r\n    /**\r\n     * Fired whenever the media has been paused\r\n     *\r\n     * @event Player#pause\r\n     * @type {EventTarget~Event}\r\n     */\r\n    this.trigger('pause');\r\n  };\r\n\r\n  /**\r\n   * Retrigger the `ended` event that was triggered by the {@link Tech}.\r\n   *\r\n   * @fires Player#ended\r\n   * @listens Tech#ended\r\n   * @private\r\n   */\r\n\r\n\r\n  Player.prototype.handleTechEnded_ = function handleTechEnded_() {\r\n    this.addClass('vjs-ended');\r\n    if (this.options_.loop) {\r\n      this.currentTime(0);\r\n      this.play();\r\n    } else if (!this.paused()) {\r\n      this.pause();\r\n    }\r\n\r\n    /**\r\n     * Fired when the end of the media resource is reached (currentTime == duration)\r\n     *\r\n     * @event Player#ended\r\n     * @type {EventTarget~Event}\r\n     */\r\n    this.trigger('ended');\r\n  };\r\n\r\n  /**\r\n   * Fired when the duration of the media resource is first known or changed\r\n   *\r\n   * @listens Tech#durationchange\r\n   * @private\r\n   */\r\n\r\n\r\n  Player.prototype.handleTechDurationChange_ = function handleTechDurationChange_() {\r\n    this.duration(this.techGet_('duration'));\r\n  };\r\n\r\n  /**\r\n   * Handle a click on the media element to play/pause\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        the event that caused this function to trigger\r\n   *\r\n   * @listens Tech#mousedown\r\n   * @private\r\n   */\r\n\r\n\r\n  Player.prototype.handleTechClick_ = function handleTechClick_(event) {\r\n    if (!isSingleLeftClick(event)) {\r\n      return;\r\n    }\r\n\r\n    // When controls are disabled a click should not toggle playback because\r\n    // the click is considered a control\r\n    if (!this.controls_) {\r\n      return;\r\n    }\r\n\r\n    if (this.paused()) {\r\n      silencePromise(this.play());\r\n    } else {\r\n      this.pause();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handle a tap on the media element. It will toggle the user\r\n   * activity state, which hides and shows the controls.\r\n   *\r\n   * @listens Tech#tap\r\n   * @private\r\n   */\r\n\r\n\r\n  Player.prototype.handleTechTap_ = function handleTechTap_() {\r\n    this.userActive(!this.userActive());\r\n  };\r\n\r\n  /**\r\n   * Handle touch to start\r\n   *\r\n   * @listens Tech#touchstart\r\n   * @private\r\n   */\r\n\r\n\r\n  Player.prototype.handleTechTouchStart_ = function handleTechTouchStart_() {\r\n    this.userWasActive = this.userActive();\r\n  };\r\n\r\n  /**\r\n   * Handle touch to move\r\n   *\r\n   * @listens Tech#touchmove\r\n   * @private\r\n   */\r\n\r\n\r\n  Player.prototype.handleTechTouchMove_ = function handleTechTouchMove_() {\r\n    if (this.userWasActive) {\r\n      this.reportUserActivity();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Handle touch to end\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        the touchend event that triggered\r\n   *        this function\r\n   *\r\n   * @listens Tech#touchend\r\n   * @private\r\n   */\r\n\r\n\r\n  Player.prototype.handleTechTouchEnd_ = function handleTechTouchEnd_(event) {\r\n    // Stop the mouse events from also happening\r\n    event.preventDefault();\r\n  };\r\n\r\n  /**\r\n   * Fired when the player switches in or out of fullscreen mode\r\n   *\r\n   * @private\r\n   * @listens Player#fullscreenchange\r\n   */\r\n\r\n\r\n  Player.prototype.handleFullscreenChange_ = function handleFullscreenChange_() {\r\n    if (this.isFullscreen()) {\r\n      this.addClass('vjs-fullscreen');\r\n    } else {\r\n      this.removeClass('vjs-fullscreen');\r\n    }\r\n  };\r\n\r\n  /**\r\n   * native click events on the SWF aren't triggered on IE11, Win8.1RT\r\n   * use stageclick events triggered from inside the SWF instead\r\n   *\r\n   * @private\r\n   * @listens stageclick\r\n   */\r\n\r\n\r\n  Player.prototype.handleStageClick_ = function handleStageClick_() {\r\n    this.reportUserActivity();\r\n  };\r\n\r\n  /**\r\n   * Handle Tech Fullscreen Change\r\n   *\r\n   * @param {EventTarget~Event} event\r\n   *        the fullscreenchange event that triggered this function\r\n   *\r\n   * @param {Object} data\r\n   *        the data that was sent with the event\r\n   *\r\n   * @private\r\n   * @listens Tech#fullscreenchange\r\n   * @fires Player#fullscreenchange\r\n   */\r\n\r\n\r\n  Player.prototype.handleTechFullscreenChange_ = function handleTechFullscreenChange_(event, data) {\r\n    if (data) {\r\n      this.isFullscreen(data.isFullscreen);\r\n    }\r\n    /**\r\n     * Fired when going in and out of fullscreen.\r\n     *\r\n     * @event Player#fullscreenchange\r\n     * @type {EventTarget~Event}\r\n     */\r\n    this.trigger('fullscreenchange');\r\n  };\r\n\r\n  /**\r\n   * Fires when an error occurred during the loading of an audio/video.\r\n   *\r\n   * @private\r\n   * @listens Tech#error\r\n   */\r\n\r\n\r\n  Player.prototype.handleTechError_ = function handleTechError_() {\r\n    var error = this.tech_.error();\r\n\r\n    this.error(error);\r\n  };\r\n\r\n  /**\r\n   * Retrigger the `textdata` event that was triggered by the {@link Tech}.\r\n   *\r\n   * @fires Player#textdata\r\n   * @listens Tech#textdata\r\n   * @private\r\n   */\r\n\r\n\r\n  Player.prototype.handleTechTextData_ = function handleTechTextData_() {\r\n    var data = null;\r\n\r\n    if (arguments.length > 1) {\r\n      data = arguments[1];\r\n    }\r\n\r\n    /**\r\n     * Fires when we get a textdata event from tech\r\n     *\r\n     * @event Player#textdata\r\n     * @type {EventTarget~Event}\r\n     */\r\n    this.trigger('textdata', data);\r\n  };\r\n\r\n  /**\r\n   * Get object for cached values.\r\n   *\r\n   * @return {Object}\r\n   *         get the current object cache\r\n   */\r\n\r\n\r\n  Player.prototype.getCache = function getCache() {\r\n    return this.cache_;\r\n  };\r\n\r\n  /**\r\n   * Pass values to the playback tech\r\n   *\r\n   * @param {string} [method]\r\n   *        the method to call\r\n   *\r\n   * @param {Object} arg\r\n   *        the argument to pass\r\n   *\r\n   * @private\r\n   */\r\n\r\n\r\n  Player.prototype.techCall_ = function techCall_(method, arg) {\r\n    // If it's not ready yet, call method when it is\r\n\r\n    this.ready(function () {\r\n      if (method in allowedSetters) {\r\n        return set$1(this.middleware_, this.tech_, method, arg);\r\n      } else if (method in allowedMediators) {\r\n        return mediate(this.middleware_, this.tech_, method, arg);\r\n      }\r\n\r\n      try {\r\n        if (this.tech_) {\r\n          this.tech_[method](arg);\r\n        }\r\n      } catch (e) {\r\n        log(e);\r\n        throw e;\r\n      }\r\n    }, true);\r\n  };\r\n\r\n  /**\r\n   * Get calls can't wait for the tech, and sometimes don't need to.\r\n   *\r\n   * @param {string} method\r\n   *        Tech method\r\n   *\r\n   * @return {Function|undefined}\r\n   *         the method or undefined\r\n   *\r\n   * @private\r\n   */\r\n\r\n\r\n  Player.prototype.techGet_ = function techGet_(method) {\r\n    if (!this.tech_ || !this.tech_.isReady_) {\r\n      return;\r\n    }\r\n\r\n    if (method in allowedGetters) {\r\n      return get$1(this.middleware_, this.tech_, method);\r\n    } else if (method in allowedMediators) {\r\n      return mediate(this.middleware_, this.tech_, method);\r\n    }\r\n\r\n    // Flash likes to die and reload when you hide or reposition it.\r\n    // In these cases the object methods go away and we get errors.\r\n    // When that happens we'll catch the errors and inform tech that it's not ready any more.\r\n    try {\r\n      return this.tech_[method]();\r\n    } catch (e) {\r\n\r\n      // When building additional tech libs, an expected method may not be defined yet\r\n      if (this.tech_[method] === undefined) {\r\n        log('Video.js: ' + method + ' method not defined for ' + this.techName_ + ' playback technology.', e);\r\n        throw e;\r\n      }\r\n\r\n      // When a method isn't available on the object it throws a TypeError\r\n      if (e.name === 'TypeError') {\r\n        log('Video.js: ' + method + ' unavailable on ' + this.techName_ + ' playback technology element.', e);\r\n        this.tech_.isReady_ = false;\r\n        throw e;\r\n      }\r\n\r\n      // If error unknown, just log and throw\r\n      log(e);\r\n      throw e;\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Attempt to begin playback at the first opportunity.\r\n   *\r\n   * @return {Promise|undefined}\r\n   *         Returns a promise if the browser supports Promises (or one\r\n   *         was passed in as an option). This promise will be resolved on\r\n   *         the return value of play. If this is undefined it will fulfill the\r\n   *         promise chain otherwise the promise chain will be fulfilled when\r\n   *         the promise from play is fulfilled.\r\n   */\r\n\r\n\r\n  Player.prototype.play = function play() {\r\n    var _this7 = this;\r\n\r\n    var PromiseClass = this.options_.Promise || window.Promise;\r\n\r\n    if (PromiseClass) {\r\n      return new PromiseClass(function (resolve) {\r\n        _this7.play_(resolve);\r\n      });\r\n    }\r\n\r\n    return this.play_();\r\n  };\r\n\r\n  /**\r\n   * The actual logic for play, takes a callback that will be resolved on the\r\n   * return value of play. This allows us to resolve to the play promise if there\r\n   * is one on modern browsers.\r\n   *\r\n   * @private\r\n   * @param {Function} [callback]\r\n   *        The callback that should be called when the techs play is actually called\r\n   */\r\n\r\n\r\n  Player.prototype.play_ = function play_() {\r\n    var _this8 = this;\r\n\r\n    var callback = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : silencePromise;\r\n\r\n    // If this is called while we have a play queued up on a loadstart, remove\r\n    // that listener to avoid getting in a potentially bad state.\r\n    if (this.playOnLoadstart_) {\r\n      this.off('loadstart', this.playOnLoadstart_);\r\n    }\r\n\r\n    // If the player/tech is not ready, queue up another call to `play()` for\r\n    // when it is. This will loop back into this method for another attempt at\r\n    // playback when the tech is ready.\r\n    if (!this.isReady_) {\r\n\r\n      // Bail out if we're already waiting for `ready`!\r\n      if (this.playWaitingForReady_) {\r\n        return;\r\n      }\r\n\r\n      this.playWaitingForReady_ = true;\r\n      this.ready(function () {\r\n        _this8.playWaitingForReady_ = false;\r\n        callback(_this8.play());\r\n      });\r\n\r\n      // If the player/tech is ready and we have a source, we can attempt playback.\r\n    } else if (!this.changingSrc_ && (this.src() || this.currentSrc())) {\r\n      callback(this.techGet_('play'));\r\n      return;\r\n\r\n      // If the tech is ready, but we do not have a source, we'll need to wait\r\n      // for both the `ready` and a `loadstart` when the source is finally\r\n      // resolved by middleware and set on the player.\r\n      //\r\n      // This can happen if `play()` is called while changing sources or before\r\n      // one has been set on the player.\r\n    } else {\r\n\r\n      this.playOnLoadstart_ = function () {\r\n        _this8.playOnLoadstart_ = null;\r\n        callback(_this8.play());\r\n      };\r\n\r\n      this.one('loadstart', this.playOnLoadstart_);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Pause the video playback\r\n   *\r\n   * @return {Player}\r\n   *         A reference to the player object this function was called on\r\n   */\r\n\r\n\r\n  Player.prototype.pause = function pause() {\r\n    this.techCall_('pause');\r\n  };\r\n\r\n  /**\r\n   * Check if the player is paused or has yet to play\r\n   *\r\n   * @return {boolean}\r\n   *         - false: if the media is currently playing\r\n   *         - true: if media is not currently playing\r\n   */\r\n\r\n\r\n  Player.prototype.paused = function paused() {\r\n    // The initial state of paused should be true (in Safari it's actually false)\r\n    return this.techGet_('paused') === false ? false : true;\r\n  };\r\n\r\n  /**\r\n   * Get a TimeRange object representing the current ranges of time that the user\r\n   * has played.\r\n   *\r\n   * @return {TimeRange}\r\n   *         A time range object that represents all the increments of time that have\r\n   *         been played.\r\n   */\r\n\r\n\r\n  Player.prototype.played = function played() {\r\n    return this.techGet_('played') || createTimeRanges(0, 0);\r\n  };\r\n\r\n  /**\r\n   * Returns whether or not the user is \"scrubbing\". Scrubbing is\r\n   * when the user has clicked the progress bar handle and is\r\n   * dragging it along the progress bar.\r\n   *\r\n   * @param {boolean} [isScrubbing]\r\n   *        wether the user is or is not scrubbing\r\n   *\r\n   * @return {boolean}\r\n   *         The value of scrubbing when getting\r\n   */\r\n\r\n\r\n  Player.prototype.scrubbing = function scrubbing(isScrubbing) {\r\n    if (typeof isScrubbing === 'undefined') {\r\n      return this.scrubbing_;\r\n    }\r\n    this.scrubbing_ = !!isScrubbing;\r\n\r\n    if (isScrubbing) {\r\n      this.addClass('vjs-scrubbing');\r\n    } else {\r\n      this.removeClass('vjs-scrubbing');\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Get or set the current time (in seconds)\r\n   *\r\n   * @param {number|string} [seconds]\r\n   *        The time to seek to in seconds\r\n   *\r\n   * @return {number}\r\n   *         - the current time in seconds when getting\r\n   */\r\n\r\n\r\n  Player.prototype.currentTime = function currentTime(seconds) {\r\n    if (typeof seconds !== 'undefined') {\r\n      if (seconds < 0) {\r\n        seconds = 0;\r\n      }\r\n      this.techCall_('setCurrentTime', seconds);\r\n      return;\r\n    }\r\n\r\n    // cache last currentTime and return. default to 0 seconds\r\n    //\r\n    // Caching the currentTime is meant to prevent a massive amount of reads on the tech's\r\n    // currentTime when scrubbing, but may not provide much performance benefit afterall.\r\n    // Should be tested. Also something has to read the actual current time or the cache will\r\n    // never get updated.\r\n    this.cache_.currentTime = this.techGet_('currentTime') || 0;\r\n    return this.cache_.currentTime;\r\n  };\r\n\r\n  /**\r\n   * Normally gets the length in time of the video in seconds;\r\n   * in all but the rarest use cases an argument will NOT be passed to the method\r\n   *\r\n   * > **NOTE**: The video must have started loading before the duration can be\r\n   * known, and in the case of Flash, may not be known until the video starts\r\n   * playing.\r\n   *\r\n   * @fires Player#durationchange\r\n   *\r\n   * @param {number} [seconds]\r\n   *        The duration of the video to set in seconds\r\n   *\r\n   * @return {number}\r\n   *         - The duration of the video in seconds when getting\r\n   */\r\n\r\n\r\n  Player.prototype.duration = function duration(seconds) {\r\n    if (seconds === undefined) {\r\n      // return NaN if the duration is not known\r\n      return this.cache_.duration !== undefined ? this.cache_.duration : NaN;\r\n    }\r\n\r\n    seconds = parseFloat(seconds);\r\n\r\n    // Standardize on Inifity for signaling video is live\r\n    if (seconds < 0) {\r\n      seconds = Infinity;\r\n    }\r\n\r\n    if (seconds !== this.cache_.duration) {\r\n      // Cache the last set value for optimized scrubbing (esp. Flash)\r\n      this.cache_.duration = seconds;\r\n\r\n      if (seconds === Infinity) {\r\n        this.addClass('vjs-live');\r\n      } else {\r\n        this.removeClass('vjs-live');\r\n      }\r\n      /**\r\n       * @event Player#durationchange\r\n       * @type {EventTarget~Event}\r\n       */\r\n      this.trigger('durationchange');\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Calculates how much time is left in the video. Not part\r\n   * of the native video API.\r\n   *\r\n   * @return {number}\r\n   *         The time remaining in seconds\r\n   */\r\n\r\n\r\n  Player.prototype.remainingTime = function remainingTime() {\r\n    return this.duration() - this.currentTime();\r\n  };\r\n\r\n  /**\r\n   * A remaining time function that is intented to be used when\r\n   * the time is to be displayed directly to the user.\r\n   *\r\n   * @return {number}\r\n   *         The rounded time remaining in seconds\r\n   */\r\n\r\n\r\n  Player.prototype.remainingTimeDisplay = function remainingTimeDisplay() {\r\n    return Math.floor(this.duration()) - Math.floor(this.currentTime());\r\n  };\r\n\r\n  //\r\n  // Kind of like an array of portions of the video that have been downloaded.\r\n\r\n  /**\r\n   * Get a TimeRange object with an array of the times of the video\r\n   * that have been downloaded. If you just want the percent of the\r\n   * video that's been downloaded, use bufferedPercent.\r\n   *\r\n   * @see [Buffered Spec]{@link http://dev.w3.org/html5/spec/video.html#dom-media-buffered}\r\n   *\r\n   * @return {TimeRange}\r\n   *         A mock TimeRange object (following HTML spec)\r\n   */\r\n\r\n\r\n  Player.prototype.buffered = function buffered() {\r\n    var buffered = this.techGet_('buffered');\r\n\r\n    if (!buffered || !buffered.length) {\r\n      buffered = createTimeRanges(0, 0);\r\n    }\r\n\r\n    return buffered;\r\n  };\r\n\r\n  /**\r\n   * Get the percent (as a decimal) of the video that's been downloaded.\r\n   * This method is not a part of the native HTML video API.\r\n   *\r\n   * @return {number}\r\n   *         A decimal between 0 and 1 representing the percent\r\n   *         that is bufferred 0 being 0% and 1 being 100%\r\n   */\r\n\r\n\r\n  Player.prototype.bufferedPercent = function bufferedPercent$$1() {\r\n    return bufferedPercent(this.buffered(), this.duration());\r\n  };\r\n\r\n  /**\r\n   * Get the ending time of the last buffered time range\r\n   * This is used in the progress bar to encapsulate all time ranges.\r\n   *\r\n   * @return {number}\r\n   *         The end of the last buffered time range\r\n   */\r\n\r\n\r\n  Player.prototype.bufferedEnd = function bufferedEnd() {\r\n    var buffered = this.buffered();\r\n    var duration = this.duration();\r\n    var end = buffered.end(buffered.length - 1);\r\n\r\n    if (end > duration) {\r\n      end = duration;\r\n    }\r\n\r\n    return end;\r\n  };\r\n\r\n  /**\r\n   * Get or set the current volume of the media\r\n   *\r\n   * @param  {number} [percentAsDecimal]\r\n   *         The new volume as a decimal percent:\r\n   *         - 0 is muted/0%/off\r\n   *         - 1.0 is 100%/full\r\n   *         - 0.5 is half volume or 50%\r\n   *\r\n   * @return {number}\r\n   *         The current volume as a percent when getting\r\n   */\r\n\r\n\r\n  Player.prototype.volume = function volume(percentAsDecimal) {\r\n    var vol = void 0;\r\n\r\n    if (percentAsDecimal !== undefined) {\r\n      // Force value to between 0 and 1\r\n      vol = Math.max(0, Math.min(1, parseFloat(percentAsDecimal)));\r\n      this.cache_.volume = vol;\r\n      this.techCall_('setVolume', vol);\r\n\r\n      if (vol > 0) {\r\n        this.lastVolume_(vol);\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    // Default to 1 when returning current volume.\r\n    vol = parseFloat(this.techGet_('volume'));\r\n    return isNaN(vol) ? 1 : vol;\r\n  };\r\n\r\n  /**\r\n   * Get the current muted state, or turn mute on or off\r\n   *\r\n   * @param {boolean} [muted]\r\n   *        - true to mute\r\n   *        - false to unmute\r\n   *\r\n   * @return {boolean}\r\n   *         - true if mute is on and getting\r\n   *         - false if mute is off and getting\r\n   */\r\n\r\n\r\n  Player.prototype.muted = function muted(_muted) {\r\n    if (_muted !== undefined) {\r\n      this.techCall_('setMuted', _muted);\r\n      return;\r\n    }\r\n    return this.techGet_('muted') || false;\r\n  };\r\n\r\n  /**\r\n   * Get the current defaultMuted state, or turn defaultMuted on or off. defaultMuted\r\n   * indicates the state of muted on intial playback.\r\n   *\r\n   * ```js\r\n   *   var myPlayer = videojs('some-player-id');\r\n   *\r\n   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\r\n   *\r\n   *   // get, should be false\r\n   *   console.log(myPlayer.defaultMuted());\r\n   *   // set to true\r\n   *   myPlayer.defaultMuted(true);\r\n   *   // get should be true\r\n   *   console.log(myPlayer.defaultMuted());\r\n   * ```\r\n   *\r\n   * @param {boolean} [defaultMuted]\r\n   *        - true to mute\r\n   *        - false to unmute\r\n   *\r\n   * @return {boolean|Player}\r\n   *         - true if defaultMuted is on and getting\r\n   *         - false if defaultMuted is off and getting\r\n   *         - A reference to the current player when setting\r\n   */\r\n\r\n\r\n  Player.prototype.defaultMuted = function defaultMuted(_defaultMuted) {\r\n    if (_defaultMuted !== undefined) {\r\n      return this.techCall_('setDefaultMuted', _defaultMuted);\r\n    }\r\n    return this.techGet_('defaultMuted') || false;\r\n  };\r\n\r\n  /**\r\n   * Get the last volume, or set it\r\n   *\r\n   * @param  {number} [percentAsDecimal]\r\n   *         The new last volume as a decimal percent:\r\n   *         - 0 is muted/0%/off\r\n   *         - 1.0 is 100%/full\r\n   *         - 0.5 is half volume or 50%\r\n   *\r\n   * @return {number}\r\n   *         the current value of lastVolume as a percent when getting\r\n   *\r\n   * @private\r\n   */\r\n\r\n\r\n  Player.prototype.lastVolume_ = function lastVolume_(percentAsDecimal) {\r\n    if (percentAsDecimal !== undefined && percentAsDecimal !== 0) {\r\n      this.cache_.lastVolume = percentAsDecimal;\r\n      return;\r\n    }\r\n    return this.cache_.lastVolume;\r\n  };\r\n\r\n  /**\r\n   * Check if current tech can support native fullscreen\r\n   * (e.g. with built in controls like iOS, so not our flash swf)\r\n   *\r\n   * @return {boolean}\r\n   *         if native fullscreen is supported\r\n   */\r\n\r\n\r\n  Player.prototype.supportsFullScreen = function supportsFullScreen() {\r\n    return this.techGet_('supportsFullScreen') || false;\r\n  };\r\n\r\n  /**\r\n   * Check if the player is in fullscreen mode or tell the player that it\r\n   * is or is not in fullscreen mode.\r\n   *\r\n   * > NOTE: As of the latest HTML5 spec, isFullscreen is no longer an official\r\n   * property and instead document.fullscreenElement is used. But isFullscreen is\r\n   * still a valuable property for internal player workings.\r\n   *\r\n   * @param  {boolean} [isFS]\r\n   *         Set the players current fullscreen state\r\n   *\r\n   * @return {boolean}\r\n   *         - true if fullscreen is on and getting\r\n   *         - false if fullscreen is off and getting\r\n   */\r\n\r\n\r\n  Player.prototype.isFullscreen = function isFullscreen(isFS) {\r\n    if (isFS !== undefined) {\r\n      this.isFullscreen_ = !!isFS;\r\n      return;\r\n    }\r\n    return !!this.isFullscreen_;\r\n  };\r\n\r\n  /**\r\n   * Increase the size of the video to full screen\r\n   * In some browsers, full screen is not supported natively, so it enters\r\n   * \"full window mode\", where the video fills the browser window.\r\n   * In browsers and devices that support native full screen, sometimes the\r\n   * browser's default controls will be shown, and not the Video.js custom skin.\r\n   * This includes most mobile devices (iOS, Android) and older versions of\r\n   * Safari.\r\n   *\r\n   * @fires Player#fullscreenchange\r\n   */\r\n\r\n\r\n  Player.prototype.requestFullscreen = function requestFullscreen() {\r\n    var fsApi = FullscreenApi;\r\n\r\n    this.isFullscreen(true);\r\n\r\n    if (fsApi.requestFullscreen) {\r\n      // the browser supports going fullscreen at the element level so we can\r\n      // take the controls fullscreen as well as the video\r\n\r\n      // Trigger fullscreenchange event after change\r\n      // We have to specifically add this each time, and remove\r\n      // when canceling fullscreen. Otherwise if there's multiple\r\n      // players on a page, they would all be reacting to the same fullscreen\r\n      // events\r\n      on(document, fsApi.fullscreenchange, bind(this, function documentFullscreenChange(e) {\r\n        this.isFullscreen(document[fsApi.fullscreenElement]);\r\n\r\n        // If cancelling fullscreen, remove event listener.\r\n        if (this.isFullscreen() === false) {\r\n          off(document, fsApi.fullscreenchange, documentFullscreenChange);\r\n        }\r\n        /**\r\n         * @event Player#fullscreenchange\r\n         * @type {EventTarget~Event}\r\n         */\r\n        this.trigger('fullscreenchange');\r\n      }));\r\n\r\n      this.el_[fsApi.requestFullscreen]();\r\n    } else if (this.tech_.supportsFullScreen()) {\r\n      // we can't take the video.js controls fullscreen but we can go fullscreen\r\n      // with native controls\r\n      this.techCall_('enterFullScreen');\r\n    } else {\r\n      // fullscreen isn't supported so we'll just stretch the video element to\r\n      // fill the viewport\r\n      this.enterFullWindow();\r\n      /**\r\n       * @event Player#fullscreenchange\r\n       * @type {EventTarget~Event}\r\n       */\r\n      this.trigger('fullscreenchange');\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Return the video to its normal size after having been in full screen mode\r\n   *\r\n   * @fires Player#fullscreenchange\r\n   */\r\n\r\n\r\n  Player.prototype.exitFullscreen = function exitFullscreen() {\r\n    var fsApi = FullscreenApi;\r\n\r\n    this.isFullscreen(false);\r\n\r\n    // Check for browser element fullscreen support\r\n    if (fsApi.requestFullscreen) {\r\n      document[fsApi.exitFullscreen]();\r\n    } else if (this.tech_.supportsFullScreen()) {\r\n      this.techCall_('exitFullScreen');\r\n    } else {\r\n      this.exitFullWindow();\r\n      /**\r\n       * @event Player#fullscreenchange\r\n       * @type {EventTarget~Event}\r\n       */\r\n      this.trigger('fullscreenchange');\r\n    }\r\n  };\r\n\r\n  /**\r\n   * When fullscreen isn't supported we can stretch the\r\n   * video container to as wide as the browser will let us.\r\n   *\r\n   * @fires Player#enterFullWindow\r\n   */\r\n\r\n\r\n  Player.prototype.enterFullWindow = function enterFullWindow() {\r\n    this.isFullWindow = true;\r\n\r\n    // Storing original doc overflow value to return to when fullscreen is off\r\n    this.docOrigOverflow = document.documentElement.style.overflow;\r\n\r\n    // Add listener for esc key to exit fullscreen\r\n    on(document, 'keydown', bind(this, this.fullWindowOnEscKey));\r\n\r\n    // Hide any scroll bars\r\n    document.documentElement.style.overflow = 'hidden';\r\n\r\n    // Apply fullscreen styles\r\n    addClass(document.body, 'vjs-full-window');\r\n\r\n    /**\r\n     * @event Player#enterFullWindow\r\n     * @type {EventTarget~Event}\r\n     */\r\n    this.trigger('enterFullWindow');\r\n  };\r\n\r\n  /**\r\n   * Check for call to either exit full window or\r\n   * full screen on ESC key\r\n   *\r\n   * @param {string} event\r\n   *        Event to check for key press\r\n   */\r\n\r\n\r\n  Player.prototype.fullWindowOnEscKey = function fullWindowOnEscKey(event) {\r\n    if (event.keyCode === 27) {\r\n      if (this.isFullscreen() === true) {\r\n        this.exitFullscreen();\r\n      } else {\r\n        this.exitFullWindow();\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Exit full window\r\n   *\r\n   * @fires Player#exitFullWindow\r\n   */\r\n\r\n\r\n  Player.prototype.exitFullWindow = function exitFullWindow() {\r\n    this.isFullWindow = false;\r\n    off(document, 'keydown', this.fullWindowOnEscKey);\r\n\r\n    // Unhide scroll bars.\r\n    document.documentElement.style.overflow = this.docOrigOverflow;\r\n\r\n    // Remove fullscreen styles\r\n    removeClass(document.body, 'vjs-full-window');\r\n\r\n    // Resize the box, controller, and poster to original sizes\r\n    // this.positionAll();\r\n    /**\r\n     * @event Player#exitFullWindow\r\n     * @type {EventTarget~Event}\r\n     */\r\n    this.trigger('exitFullWindow');\r\n  };\r\n\r\n  /**\r\n   * Check whether the player can play a given mimetype\r\n   *\r\n   * @see https://www.w3.org/TR/2011/WD-html5-20110113/video.html#dom-navigator-canplaytype\r\n   *\r\n   * @param {string} type\r\n   *        The mimetype to check\r\n   *\r\n   * @return {string}\r\n   *         'probably', 'maybe', or '' (empty string)\r\n   */\r\n\r\n\r\n  Player.prototype.canPlayType = function canPlayType(type) {\r\n    var can = void 0;\r\n\r\n    // Loop through each playback technology in the options order\r\n    for (var i = 0, j = this.options_.techOrder; i < j.length; i++) {\r\n      var techName = j[i];\r\n      var tech = Tech.getTech(techName);\r\n\r\n      // Support old behavior of techs being registered as components.\r\n      // Remove once that deprecated behavior is removed.\r\n      if (!tech) {\r\n        tech = Component.getComponent(techName);\r\n      }\r\n\r\n      // Check if the current tech is defined before continuing\r\n      if (!tech) {\r\n        log.error('The \"' + techName + '\" tech is undefined. Skipped browser support check for that tech.');\r\n        continue;\r\n      }\r\n\r\n      // Check if the browser supports this technology\r\n      if (tech.isSupported()) {\r\n        can = tech.canPlayType(type);\r\n\r\n        if (can) {\r\n          return can;\r\n        }\r\n      }\r\n    }\r\n\r\n    return '';\r\n  };\r\n\r\n  /**\r\n   * Select source based on tech-order or source-order\r\n   * Uses source-order selection if `options.sourceOrder` is truthy. Otherwise,\r\n   * defaults to tech-order selection\r\n   *\r\n   * @param {Array} sources\r\n   *        The sources for a media asset\r\n   *\r\n   * @return {Object|boolean}\r\n   *         Object of source and tech order or false\r\n   */\r\n\r\n\r\n  Player.prototype.selectSource = function selectSource(sources) {\r\n    var _this9 = this;\r\n\r\n    // Get only the techs specified in `techOrder` that exist and are supported by the\r\n    // current platform\r\n    var techs = this.options_.techOrder.map(function (techName) {\r\n      return [techName, Tech.getTech(techName)];\r\n    }).filter(function (_ref) {\r\n      var techName = _ref[0],\r\n          tech = _ref[1];\r\n\r\n      // Check if the current tech is defined before continuing\r\n      if (tech) {\r\n        // Check if the browser supports this technology\r\n        return tech.isSupported();\r\n      }\r\n\r\n      log.error('The \"' + techName + '\" tech is undefined. Skipped browser support check for that tech.');\r\n      return false;\r\n    });\r\n\r\n    // Iterate over each `innerArray` element once per `outerArray` element and execute\r\n    // `tester` with both. If `tester` returns a non-falsy value, exit early and return\r\n    // that value.\r\n    var findFirstPassingTechSourcePair = function findFirstPassingTechSourcePair(outerArray, innerArray, tester) {\r\n      var found = void 0;\r\n\r\n      outerArray.some(function (outerChoice) {\r\n        return innerArray.some(function (innerChoice) {\r\n          found = tester(outerChoice, innerChoice);\r\n\r\n          if (found) {\r\n            return true;\r\n          }\r\n        });\r\n      });\r\n\r\n      return found;\r\n    };\r\n\r\n    var foundSourceAndTech = void 0;\r\n    var flip = function flip(fn) {\r\n      return function (a, b) {\r\n        return fn(b, a);\r\n      };\r\n    };\r\n    var finder = function finder(_ref2, source) {\r\n      var techName = _ref2[0],\r\n          tech = _ref2[1];\r\n\r\n      if (tech.canPlaySource(source, _this9.options_[techName.toLowerCase()])) {\r\n        return { source: source, tech: techName };\r\n      }\r\n    };\r\n\r\n    // Depending on the truthiness of `options.sourceOrder`, we swap the order of techs and sources\r\n    // to select from them based on their priority.\r\n    if (this.options_.sourceOrder) {\r\n      // Source-first ordering\r\n      foundSourceAndTech = findFirstPassingTechSourcePair(sources, techs, flip(finder));\r\n    } else {\r\n      // Tech-first ordering\r\n      foundSourceAndTech = findFirstPassingTechSourcePair(techs, sources, finder);\r\n    }\r\n\r\n    return foundSourceAndTech || false;\r\n  };\r\n\r\n  /**\r\n   * Get or set the video source.\r\n   *\r\n   * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\r\n   *        A SourceObject, an array of SourceObjects, or a string referencing\r\n   *        a URL to a media source. It is _highly recommended_ that an object\r\n   *        or array of objects is used here, so that source selection\r\n   *        algorithms can take the `type` into account.\r\n   *\r\n   *        If not provided, this method acts as a getter.\r\n   *\r\n   * @return {string|undefined}\r\n   *         If the `source` argument is missing, returns the current source\r\n   *         URL. Otherwise, returns nothing/undefined.\r\n   */\r\n\r\n\r\n  Player.prototype.src = function src(source) {\r\n    var _this10 = this;\r\n\r\n    // getter usage\r\n    if (typeof source === 'undefined') {\r\n      return this.cache_.src || '';\r\n    }\r\n    // filter out invalid sources and turn our source into\r\n    // an array of source objects\r\n    var sources = filterSource(source);\r\n\r\n    // if a source was passed in then it is invalid because\r\n    // it was filtered to a zero length Array. So we have to\r\n    // show an error\r\n    if (!sources.length) {\r\n      this.setTimeout(function () {\r\n        this.error({ code: 4, message: this.localize(this.options_.notSupportedMessage) });\r\n      }, 0);\r\n      return;\r\n    }\r\n\r\n    // intial sources\r\n    this.changingSrc_ = true;\r\n\r\n    this.cache_.sources = sources;\r\n    this.updateSourceCaches_(sources[0]);\r\n\r\n    // middlewareSource is the source after it has been changed by middleware\r\n    setSource(this, sources[0], function (middlewareSource, mws) {\r\n      _this10.middleware_ = mws;\r\n\r\n      // since sourceSet is async we have to update the cache again after we select a source since\r\n      // the source that is selected could be out of order from the cache update above this callback.\r\n      _this10.cache_.sources = sources;\r\n      _this10.updateSourceCaches_(middlewareSource);\r\n\r\n      var err = _this10.src_(middlewareSource);\r\n\r\n      if (err) {\r\n        if (sources.length > 1) {\r\n          return _this10.src(sources.slice(1));\r\n        }\r\n\r\n        _this10.changingSrc_ = false;\r\n\r\n        // We need to wrap this in a timeout to give folks a chance to add error event handlers\r\n        _this10.setTimeout(function () {\r\n          this.error({ code: 4, message: this.localize(this.options_.notSupportedMessage) });\r\n        }, 0);\r\n\r\n        // we could not find an appropriate tech, but let's still notify the delegate that this is it\r\n        // this needs a better comment about why this is needed\r\n        _this10.triggerReady();\r\n\r\n        return;\r\n      }\r\n\r\n      setTech(mws, _this10.tech_);\r\n    });\r\n  };\r\n\r\n  /**\r\n   * Set the source object on the tech, returns a boolean that indicates wether\r\n   * there is a tech that can play the source or not\r\n   *\r\n   * @param {Tech~SourceObject} source\r\n   *        The source object to set on the Tech\r\n   *\r\n   * @return {Boolean}\r\n   *         - True if there is no Tech to playback this source\r\n   *         - False otherwise\r\n   *\r\n   * @private\r\n   */\r\n\r\n\r\n  Player.prototype.src_ = function src_(source) {\r\n    var _this11 = this;\r\n\r\n    var sourceTech = this.selectSource([source]);\r\n\r\n    if (!sourceTech) {\r\n      return true;\r\n    }\r\n\r\n    if (!titleCaseEquals(sourceTech.tech, this.techName_)) {\r\n      this.changingSrc_ = true;\r\n      // load this technology with the chosen source\r\n      this.loadTech_(sourceTech.tech, sourceTech.source);\r\n      this.tech_.ready(function () {\r\n        _this11.changingSrc_ = false;\r\n      });\r\n      return false;\r\n    }\r\n\r\n    // wait until the tech is ready to set the source\r\n    // and set it synchronously if possible (#2326)\r\n    this.ready(function () {\r\n\r\n      // The setSource tech method was added with source handlers\r\n      // so older techs won't support it\r\n      // We need to check the direct prototype for the case where subclasses\r\n      // of the tech do not support source handlers\r\n      if (this.tech_.constructor.prototype.hasOwnProperty('setSource')) {\r\n        this.techCall_('setSource', source);\r\n      } else {\r\n        this.techCall_('src', source.src);\r\n      }\r\n\r\n      this.changingSrc_ = false;\r\n    }, true);\r\n\r\n    return false;\r\n  };\r\n\r\n  /**\r\n   * Begin loading the src data.\r\n   */\r\n\r\n\r\n  Player.prototype.load = function load() {\r\n    this.techCall_('load');\r\n  };\r\n\r\n  /**\r\n   * Reset the player. Loads the first tech in the techOrder,\r\n   * removes all the text tracks in the existing `tech`,\r\n   * and calls `reset` on the `tech`.\r\n   */\r\n\r\n\r\n  Player.prototype.reset = function reset() {\r\n    if (this.tech_) {\r\n      this.tech_.clearTracks('text');\r\n    }\r\n    this.loadTech_(this.options_.techOrder[0], null);\r\n    this.techCall_('reset');\r\n  };\r\n\r\n  /**\r\n   * Returns all of the current source objects.\r\n   *\r\n   * @return {Tech~SourceObject[]}\r\n   *         The current source objects\r\n   */\r\n\r\n\r\n  Player.prototype.currentSources = function currentSources() {\r\n    var source = this.currentSource();\r\n    var sources = [];\r\n\r\n    // assume `{}` or `{ src }`\r\n    if (Object.keys(source).length !== 0) {\r\n      sources.push(source);\r\n    }\r\n\r\n    return this.cache_.sources || sources;\r\n  };\r\n\r\n  /**\r\n   * Returns the current source object.\r\n   *\r\n   * @return {Tech~SourceObject}\r\n   *         The current source object\r\n   */\r\n\r\n\r\n  Player.prototype.currentSource = function currentSource() {\r\n    return this.cache_.source || {};\r\n  };\r\n\r\n  /**\r\n   * Returns the fully qualified URL of the current source value e.g. http://mysite.com/video.mp4\r\n   * Can be used in conjuction with `currentType` to assist in rebuilding the current source object.\r\n   *\r\n   * @return {string}\r\n   *         The current source\r\n   */\r\n\r\n\r\n  Player.prototype.currentSrc = function currentSrc() {\r\n    return this.currentSource() && this.currentSource().src || '';\r\n  };\r\n\r\n  /**\r\n   * Get the current source type e.g. video/mp4\r\n   * This can allow you rebuild the current source object so that you could load the same\r\n   * source and tech later\r\n   *\r\n   * @return {string}\r\n   *         The source MIME type\r\n   */\r\n\r\n\r\n  Player.prototype.currentType = function currentType() {\r\n    return this.currentSource() && this.currentSource().type || '';\r\n  };\r\n\r\n  /**\r\n   * Get or set the preload attribute\r\n   *\r\n   * @param {boolean} [value]\r\n   *        - true means that we should preload\r\n   *        - false maens that we should not preload\r\n   *\r\n   * @return {string}\r\n   *         The preload attribute value when getting\r\n   */\r\n\r\n\r\n  Player.prototype.preload = function preload(value) {\r\n    if (value !== undefined) {\r\n      this.techCall_('setPreload', value);\r\n      this.options_.preload = value;\r\n      return;\r\n    }\r\n    return this.techGet_('preload');\r\n  };\r\n\r\n  /**\r\n   * Get or set the autoplay option. When this is a boolean it will\r\n   * modify the attribute on the tech. When this is a string the attribute on\r\n   * the tech will be removed and `Player` will handle autoplay on loadstarts.\r\n   *\r\n   * @param {boolean|string} [value]\r\n   *        - true: autoplay using the browser behavior\r\n   *        - false: do not autoplay\r\n   *        - 'play': call play() on every loadstart\r\n   *        - 'muted': call muted() then play() on every loadstart\r\n   *        - 'any': call play() on every loadstart. if that fails call muted() then play().\r\n   *        - *: values other than those listed here will be set `autoplay` to true\r\n   *\r\n   * @return {boolean|string}\r\n   *         The current value of autoplay when getting\r\n   */\r\n\r\n\r\n  Player.prototype.autoplay = function autoplay(value) {\r\n    // getter usage\r\n    if (value === undefined) {\r\n      return this.options_.autoplay || false;\r\n    }\r\n\r\n    var techAutoplay = void 0;\r\n\r\n    // if the value is a valid string set it to that\r\n    if (typeof value === 'string' && /(any|play|muted)/.test(value)) {\r\n      this.options_.autoplay = value;\r\n      this.manualAutoplay_(value);\r\n      techAutoplay = false;\r\n\r\n      // any falsy value sets autoplay to false in the browser,\r\n      // lets do the same\r\n    } else if (!value) {\r\n      this.options_.autoplay = false;\r\n\r\n      // any other value (ie truthy) sets autoplay to true\r\n    } else {\r\n      this.options_.autoplay = true;\r\n    }\r\n\r\n    techAutoplay = techAutoplay || this.options_.autoplay;\r\n\r\n    // if we don't have a tech then we do not queue up\r\n    // a setAutoplay call on tech ready. We do this because the\r\n    // autoplay option will be passed in the constructor and we\r\n    // do not need to set it twice\r\n    if (this.tech_) {\r\n      this.techCall_('setAutoplay', techAutoplay);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Set or unset the playsinline attribute.\r\n   * Playsinline tells the browser that non-fullscreen playback is preferred.\r\n   *\r\n   * @param {boolean} [value]\r\n   *        - true means that we should try to play inline by default\r\n   *        - false means that we should use the browser's default playback mode,\r\n   *          which in most cases is inline. iOS Safari is a notable exception\r\n   *          and plays fullscreen by default.\r\n   *\r\n   * @return {string|Player}\r\n   *         - the current value of playsinline\r\n   *         - the player when setting\r\n   *\r\n   * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\r\n   */\r\n\r\n\r\n  Player.prototype.playsinline = function playsinline(value) {\r\n    if (value !== undefined) {\r\n      this.techCall_('setPlaysinline', value);\r\n      this.options_.playsinline = value;\r\n      return this;\r\n    }\r\n    return this.techGet_('playsinline');\r\n  };\r\n\r\n  /**\r\n   * Get or set the loop attribute on the video element.\r\n   *\r\n   * @param {boolean} [value]\r\n   *        - true means that we should loop the video\r\n   *        - false means that we should not loop the video\r\n   *\r\n   * @return {string}\r\n   *         The current value of loop when getting\r\n   */\r\n\r\n\r\n  Player.prototype.loop = function loop(value) {\r\n    if (value !== undefined) {\r\n      this.techCall_('setLoop', value);\r\n      this.options_.loop = value;\r\n      return;\r\n    }\r\n    return this.techGet_('loop');\r\n  };\r\n\r\n  /**\r\n   * Get or set the poster image source url\r\n   *\r\n   * @fires Player#posterchange\r\n   *\r\n   * @param {string} [src]\r\n   *        Poster image source URL\r\n   *\r\n   * @return {string}\r\n   *         The current value of poster when getting\r\n   */\r\n\r\n\r\n  Player.prototype.poster = function poster(src) {\r\n    if (src === undefined) {\r\n      return this.poster_;\r\n    }\r\n\r\n    // The correct way to remove a poster is to set as an empty string\r\n    // other falsey values will throw errors\r\n    if (!src) {\r\n      src = '';\r\n    }\r\n\r\n    if (src === this.poster_) {\r\n      return;\r\n    }\r\n\r\n    // update the internal poster variable\r\n    this.poster_ = src;\r\n\r\n    // update the tech's poster\r\n    this.techCall_('setPoster', src);\r\n\r\n    this.isPosterFromTech_ = false;\r\n\r\n    // alert components that the poster has been set\r\n    /**\r\n     * This event fires when the poster image is changed on the player.\r\n     *\r\n     * @event Player#posterchange\r\n     * @type {EventTarget~Event}\r\n     */\r\n    this.trigger('posterchange');\r\n  };\r\n\r\n  /**\r\n   * Some techs (e.g. YouTube) can provide a poster source in an\r\n   * asynchronous way. We want the poster component to use this\r\n   * poster source so that it covers up the tech's controls.\r\n   * (YouTube's play button). However we only want to use this\r\n   * source if the player user hasn't set a poster through\r\n   * the normal APIs.\r\n   *\r\n   * @fires Player#posterchange\r\n   * @listens Tech#posterchange\r\n   * @private\r\n   */\r\n\r\n\r\n  Player.prototype.handleTechPosterChange_ = function handleTechPosterChange_() {\r\n    if ((!this.poster_ || this.options_.techCanOverridePoster) && this.tech_ && this.tech_.poster) {\r\n      var newPoster = this.tech_.poster() || '';\r\n\r\n      if (newPoster !== this.poster_) {\r\n        this.poster_ = newPoster;\r\n        this.isPosterFromTech_ = true;\r\n\r\n        // Let components know the poster has changed\r\n        this.trigger('posterchange');\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Get or set whether or not the controls are showing.\r\n   *\r\n   * @fires Player#controlsenabled\r\n   *\r\n   * @param {boolean} [bool]\r\n   *        - true to turn controls on\r\n   *        - false to turn controls off\r\n   *\r\n   * @return {boolean}\r\n   *         The current value of controls when getting\r\n   */\r\n\r\n\r\n  Player.prototype.controls = function controls(bool) {\r\n    if (bool === undefined) {\r\n      return !!this.controls_;\r\n    }\r\n\r\n    bool = !!bool;\r\n\r\n    // Don't trigger a change event unless it actually changed\r\n    if (this.controls_ === bool) {\r\n      return;\r\n    }\r\n\r\n    this.controls_ = bool;\r\n\r\n    if (this.usingNativeControls()) {\r\n      this.techCall_('setControls', bool);\r\n    }\r\n\r\n    if (this.controls_) {\r\n      this.removeClass('vjs-controls-disabled');\r\n      this.addClass('vjs-controls-enabled');\r\n      /**\r\n       * @event Player#controlsenabled\r\n       * @type {EventTarget~Event}\r\n       */\r\n      this.trigger('controlsenabled');\r\n      if (!this.usingNativeControls()) {\r\n        this.addTechControlsListeners_();\r\n      }\r\n    } else {\r\n      this.removeClass('vjs-controls-enabled');\r\n      this.addClass('vjs-controls-disabled');\r\n      /**\r\n       * @event Player#controlsdisabled\r\n       * @type {EventTarget~Event}\r\n       */\r\n      this.trigger('controlsdisabled');\r\n      if (!this.usingNativeControls()) {\r\n        this.removeTechControlsListeners_();\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Toggle native controls on/off. Native controls are the controls built into\r\n   * devices (e.g. default iPhone controls), Flash, or other techs\r\n   * (e.g. Vimeo Controls)\r\n   * **This should only be set by the current tech, because only the tech knows\r\n   * if it can support native controls**\r\n   *\r\n   * @fires Player#usingnativecontrols\r\n   * @fires Player#usingcustomcontrols\r\n   *\r\n   * @param {boolean} [bool]\r\n   *        - true to turn native controls on\r\n   *        - false to turn native controls off\r\n   *\r\n   * @return {boolean}\r\n   *         The current value of native controls when getting\r\n   */\r\n\r\n\r\n  Player.prototype.usingNativeControls = function usingNativeControls(bool) {\r\n    if (bool === undefined) {\r\n      return !!this.usingNativeControls_;\r\n    }\r\n\r\n    bool = !!bool;\r\n\r\n    // Don't trigger a change event unless it actually changed\r\n    if (this.usingNativeControls_ === bool) {\r\n      return;\r\n    }\r\n\r\n    this.usingNativeControls_ = bool;\r\n\r\n    if (this.usingNativeControls_) {\r\n      this.addClass('vjs-using-native-controls');\r\n\r\n      /**\r\n       * player is using the native device controls\r\n       *\r\n       * @event Player#usingnativecontrols\r\n       * @type {EventTarget~Event}\r\n       */\r\n      this.trigger('usingnativecontrols');\r\n    } else {\r\n      this.removeClass('vjs-using-native-controls');\r\n\r\n      /**\r\n       * player is using the custom HTML controls\r\n       *\r\n       * @event Player#usingcustomcontrols\r\n       * @type {EventTarget~Event}\r\n       */\r\n      this.trigger('usingcustomcontrols');\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Set or get the current MediaError\r\n   *\r\n   * @fires Player#error\r\n   *\r\n   * @param  {MediaError|string|number} [err]\r\n   *         A MediaError or a string/number to be turned\r\n   *         into a MediaError\r\n   *\r\n   * @return {MediaError|null}\r\n   *         The current MediaError when getting (or null)\r\n   */\r\n\r\n\r\n  Player.prototype.error = function error(err) {\r\n    if (err === undefined) {\r\n      return this.error_ || null;\r\n    }\r\n\r\n    // restoring to default\r\n    if (err === null) {\r\n      this.error_ = err;\r\n      this.removeClass('vjs-error');\r\n      if (this.errorDisplay) {\r\n        this.errorDisplay.close();\r\n      }\r\n      return;\r\n    }\r\n\r\n    this.error_ = new MediaError(err);\r\n\r\n    // add the vjs-error classname to the player\r\n    this.addClass('vjs-error');\r\n\r\n    // log the name of the error type and any message\r\n    // ie8 just logs \"[object object]\" if you just log the error object\r\n    log.error('(CODE:' + this.error_.code + ' ' + MediaError.errorTypes[this.error_.code] + ')', this.error_.message, this.error_);\r\n\r\n    /**\r\n     * @event Player#error\r\n     * @type {EventTarget~Event}\r\n     */\r\n    this.trigger('error');\r\n\r\n    return;\r\n  };\r\n\r\n  /**\r\n   * Report user activity\r\n   *\r\n   * @param {Object} event\r\n   *        Event object\r\n   */\r\n\r\n\r\n  Player.prototype.reportUserActivity = function reportUserActivity(event) {\r\n    this.userActivity_ = true;\r\n  };\r\n\r\n  /**\r\n   * Get/set if user is active\r\n   *\r\n   * @fires Player#useractive\r\n   * @fires Player#userinactive\r\n   *\r\n   * @param {boolean} [bool]\r\n   *        - true if the user is active\r\n   *        - false if the user is inactive\r\n   *\r\n   * @return {boolean}\r\n   *         The current value of userActive when getting\r\n   */\r\n\r\n\r\n  Player.prototype.userActive = function userActive(bool) {\r\n    if (bool === undefined) {\r\n      return this.userActive_;\r\n    }\r\n\r\n    bool = !!bool;\r\n\r\n    if (bool === this.userActive_) {\r\n      return;\r\n    }\r\n\r\n    this.userActive_ = bool;\r\n\r\n    if (this.userActive_) {\r\n      this.userActivity_ = true;\r\n      this.removeClass('vjs-user-inactive');\r\n      this.addClass('vjs-user-active');\r\n      /**\r\n       * @event Player#useractive\r\n       * @type {EventTarget~Event}\r\n       */\r\n      this.trigger('useractive');\r\n      return;\r\n    }\r\n\r\n    // Chrome/Safari/IE have bugs where when you change the cursor it can\r\n    // trigger a mousemove event. This causes an issue when you're hiding\r\n    // the cursor when the user is inactive, and a mousemove signals user\r\n    // activity. Making it impossible to go into inactive mode. Specifically\r\n    // this happens in fullscreen when we really need to hide the cursor.\r\n    //\r\n    // When this gets resolved in ALL browsers it can be removed\r\n    // https://code.google.com/p/chromium/issues/detail?id=103041\r\n    if (this.tech_) {\r\n      this.tech_.one('mousemove', function (e) {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n      });\r\n    }\r\n\r\n    this.userActivity_ = false;\r\n    this.removeClass('vjs-user-active');\r\n    this.addClass('vjs-user-inactive');\r\n    /**\r\n     * @event Player#userinactive\r\n     * @type {EventTarget~Event}\r\n     */\r\n    this.trigger('userinactive');\r\n  };\r\n\r\n  /**\r\n   * Listen for user activity based on timeout value\r\n   *\r\n   * @private\r\n   */\r\n\r\n\r\n  Player.prototype.listenForUserActivity_ = function listenForUserActivity_() {\r\n    var mouseInProgress = void 0;\r\n    var lastMoveX = void 0;\r\n    var lastMoveY = void 0;\r\n    var handleActivity = bind(this, this.reportUserActivity);\r\n\r\n    var handleMouseMove = function handleMouseMove(e) {\r\n      // #1068 - Prevent mousemove spamming\r\n      // Chrome Bug: https://code.google.com/p/chromium/issues/detail?id=366970\r\n      if (e.screenX !== lastMoveX || e.screenY !== lastMoveY) {\r\n        lastMoveX = e.screenX;\r\n        lastMoveY = e.screenY;\r\n        handleActivity();\r\n      }\r\n    };\r\n\r\n    var handleMouseDown = function handleMouseDown() {\r\n      handleActivity();\r\n      // For as long as the they are touching the device or have their mouse down,\r\n      // we consider them active even if they're not moving their finger or mouse.\r\n      // So we want to continue to update that they are active\r\n      this.clearInterval(mouseInProgress);\r\n      // Setting userActivity=true now and setting the interval to the same time\r\n      // as the activityCheck interval (250) should ensure we never miss the\r\n      // next activityCheck\r\n      mouseInProgress = this.setInterval(handleActivity, 250);\r\n    };\r\n\r\n    var handleMouseUp = function handleMouseUp(event) {\r\n      handleActivity();\r\n      // Stop the interval that maintains activity if the mouse/touch is down\r\n      this.clearInterval(mouseInProgress);\r\n    };\r\n\r\n    // Any mouse movement will be considered user activity\r\n    this.on('mousedown', handleMouseDown);\r\n    this.on('mousemove', handleMouseMove);\r\n    this.on('mouseup', handleMouseUp);\r\n\r\n    // Listen for keyboard navigation\r\n    // Shouldn't need to use inProgress interval because of key repeat\r\n    this.on('keydown', handleActivity);\r\n    this.on('keyup', handleActivity);\r\n\r\n    // Run an interval every 250 milliseconds instead of stuffing everything into\r\n    // the mousemove/touchmove function itself, to prevent performance degradation.\r\n    // `this.reportUserActivity` simply sets this.userActivity_ to true, which\r\n    // then gets picked up by this loop\r\n    // http://ejohn.org/blog/learning-from-twitter/\r\n    var inactivityTimeout = void 0;\r\n\r\n    this.setInterval(function () {\r\n      // Check to see if mouse/touch activity has happened\r\n      if (!this.userActivity_) {\r\n        return;\r\n      }\r\n\r\n      // Reset the activity tracker\r\n      this.userActivity_ = false;\r\n\r\n      // If the user state was inactive, set the state to active\r\n      this.userActive(true);\r\n\r\n      // Clear any existing inactivity timeout to start the timer over\r\n      this.clearTimeout(inactivityTimeout);\r\n\r\n      var timeout = this.options_.inactivityTimeout;\r\n\r\n      if (timeout <= 0) {\r\n        return;\r\n      }\r\n\r\n      // In <timeout> milliseconds, if no more activity has occurred the\r\n      // user will be considered inactive\r\n      inactivityTimeout = this.setTimeout(function () {\r\n        // Protect against the case where the inactivityTimeout can trigger just\r\n        // before the next user activity is picked up by the activity check loop\r\n        // causing a flicker\r\n        if (!this.userActivity_) {\r\n          this.userActive(false);\r\n        }\r\n      }, timeout);\r\n    }, 250);\r\n  };\r\n\r\n  /**\r\n   * Gets or sets the current playback rate. A playback rate of\r\n   * 1.0 represents normal speed and 0.5 would indicate half-speed\r\n   * playback, for instance.\r\n   *\r\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-playbackrate\r\n   *\r\n   * @param {number} [rate]\r\n   *       New playback rate to set.\r\n   *\r\n   * @return {number}\r\n   *         The current playback rate when getting or 1.0\r\n   */\r\n\r\n\r\n  Player.prototype.playbackRate = function playbackRate(rate) {\r\n    if (rate !== undefined) {\r\n      // NOTE: this.cache_.lastPlaybackRate is set from the tech handler\r\n      // that is registered above\r\n      this.techCall_('setPlaybackRate', rate);\r\n      return;\r\n    }\r\n\r\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\r\n      return this.cache_.lastPlaybackRate || this.techGet_('playbackRate');\r\n    }\r\n    return 1.0;\r\n  };\r\n\r\n  /**\r\n   * Gets or sets the current default playback rate. A default playback rate of\r\n   * 1.0 represents normal speed and 0.5 would indicate half-speed playback, for instance.\r\n   * defaultPlaybackRate will only represent what the intial playbackRate of a video was, not\r\n   * not the current playbackRate.\r\n   *\r\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-defaultplaybackrate\r\n   *\r\n   * @param {number} [rate]\r\n   *       New default playback rate to set.\r\n   *\r\n   * @return {number|Player}\r\n   *         - The default playback rate when getting or 1.0\r\n   *         - the player when setting\r\n   */\r\n\r\n\r\n  Player.prototype.defaultPlaybackRate = function defaultPlaybackRate(rate) {\r\n    if (rate !== undefined) {\r\n      return this.techCall_('setDefaultPlaybackRate', rate);\r\n    }\r\n\r\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\r\n      return this.techGet_('defaultPlaybackRate');\r\n    }\r\n    return 1.0;\r\n  };\r\n\r\n  /**\r\n   * Gets or sets the audio flag\r\n   *\r\n   * @param {boolean} bool\r\n   *        - true signals that this is an audio player\r\n   *        - false signals that this is not an audio player\r\n   *\r\n   * @return {boolean}\r\n   *         The current value of isAudio when getting\r\n   */\r\n\r\n\r\n  Player.prototype.isAudio = function isAudio(bool) {\r\n    if (bool !== undefined) {\r\n      this.isAudio_ = !!bool;\r\n      return;\r\n    }\r\n\r\n    return !!this.isAudio_;\r\n  };\r\n\r\n  /**\r\n   * A helper method for adding a {@link TextTrack} to our\r\n   * {@link TextTrackList}.\r\n   *\r\n   * In addition to the W3C settings we allow adding additional info through options.\r\n   *\r\n   * @see http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-addtexttrack\r\n   *\r\n   * @param {string} [kind]\r\n   *        the kind of TextTrack you are adding\r\n   *\r\n   * @param {string} [label]\r\n   *        the label to give the TextTrack label\r\n   *\r\n   * @param {string} [language]\r\n   *        the language to set on the TextTrack\r\n   *\r\n   * @return {TextTrack|undefined}\r\n   *         the TextTrack that was added or undefined\r\n   *         if there is no tech\r\n   */\r\n\r\n\r\n  Player.prototype.addTextTrack = function addTextTrack(kind, label, language) {\r\n    if (this.tech_) {\r\n      return this.tech_.addTextTrack(kind, label, language);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Create a remote {@link TextTrack} and an {@link HTMLTrackElement}. It will\r\n   * automatically removed from the video element whenever the source changes, unless\r\n   * manualCleanup is set to false.\r\n   *\r\n   * @param {Object} options\r\n   *        Options to pass to {@link HTMLTrackElement} during creation. See\r\n   *        {@link HTMLTrackElement} for object properties that you should use.\r\n   *\r\n   * @param {boolean} [manualCleanup=true] if set to false, the TextTrack will be\r\n   *\r\n   * @return {HtmlTrackElement}\r\n   *         the HTMLTrackElement that was created and added\r\n   *         to the HtmlTrackElementList and the remote\r\n   *         TextTrackList\r\n   *\r\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\r\n   *             to \"false\" in upcoming versions of Video.js\r\n   */\r\n\r\n\r\n  Player.prototype.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\r\n    if (this.tech_) {\r\n      return this.tech_.addRemoteTextTrack(options, manualCleanup);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Remove a remote {@link TextTrack} from the respective\r\n   * {@link TextTrackList} and {@link HtmlTrackElementList}.\r\n   *\r\n   * @param {Object} track\r\n   *        Remote {@link TextTrack} to remove\r\n   *\r\n   * @return {undefined}\r\n   *         does not return anything\r\n   */\r\n\r\n\r\n  Player.prototype.removeRemoteTextTrack = function removeRemoteTextTrack() {\r\n    var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\r\n        _ref3$track = _ref3.track,\r\n        track = _ref3$track === undefined ? arguments[0] : _ref3$track;\r\n\r\n    // destructure the input into an object with a track argument, defaulting to arguments[0]\r\n    // default the whole argument to an empty object if nothing was passed in\r\n\r\n    if (this.tech_) {\r\n      return this.tech_.removeRemoteTextTrack(track);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Gets available media playback quality metrics as specified by the W3C's Media\r\n   * Playback Quality API.\r\n   *\r\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\r\n   *\r\n   * @return {Object|undefined}\r\n   *         An object with supported media playback quality metrics or undefined if there\r\n   *         is no tech or the tech does not support it.\r\n   */\r\n\r\n\r\n  Player.prototype.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\r\n    return this.techGet_('getVideoPlaybackQuality');\r\n  };\r\n\r\n  /**\r\n   * Get video width\r\n   *\r\n   * @return {number}\r\n   *         current video width\r\n   */\r\n\r\n\r\n  Player.prototype.videoWidth = function videoWidth() {\r\n    return this.tech_ && this.tech_.videoWidth && this.tech_.videoWidth() || 0;\r\n  };\r\n\r\n  /**\r\n   * Get video height\r\n   *\r\n   * @return {number}\r\n   *         current video height\r\n   */\r\n\r\n\r\n  Player.prototype.videoHeight = function videoHeight() {\r\n    return this.tech_ && this.tech_.videoHeight && this.tech_.videoHeight() || 0;\r\n  };\r\n\r\n  /**\r\n   * The player's language code\r\n   * NOTE: The language should be set in the player options if you want the\r\n   * the controls to be built with a specific language. Changing the lanugage\r\n   * later will not update controls text.\r\n   *\r\n   * @param {string} [code]\r\n   *        the language code to set the player to\r\n   *\r\n   * @return {string}\r\n   *         The current language code when getting\r\n   */\r\n\r\n\r\n  Player.prototype.language = function language(code) {\r\n    if (code === undefined) {\r\n      return this.language_;\r\n    }\r\n\r\n    this.language_ = String(code).toLowerCase();\r\n  };\r\n\r\n  /**\r\n   * Get the player's language dictionary\r\n   * Merge every time, because a newly added plugin might call videojs.addLanguage() at any time\r\n   * Languages specified directly in the player options have precedence\r\n   *\r\n   * @return {Array}\r\n   *         An array of of supported languages\r\n   */\r\n\r\n\r\n  Player.prototype.languages = function languages() {\r\n    return mergeOptions(Player.prototype.options_.languages, this.languages_);\r\n  };\r\n\r\n  /**\r\n   * returns a JavaScript object reperesenting the current track\r\n   * information. **DOES not return it as JSON**\r\n   *\r\n   * @return {Object}\r\n   *         Object representing the current of track info\r\n   */\r\n\r\n\r\n  Player.prototype.toJSON = function toJSON() {\r\n    var options = mergeOptions(this.options_);\r\n    var tracks = options.tracks;\r\n\r\n    options.tracks = [];\r\n\r\n    for (var i = 0; i < tracks.length; i++) {\r\n      var track = tracks[i];\r\n\r\n      // deep merge tracks and null out player so no circular references\r\n      track = mergeOptions(track);\r\n      track.player = undefined;\r\n      options.tracks[i] = track;\r\n    }\r\n\r\n    return options;\r\n  };\r\n\r\n  /**\r\n   * Creates a simple modal dialog (an instance of the {@link ModalDialog}\r\n   * component) that immediately overlays the player with arbitrary\r\n   * content and removes itself when closed.\r\n   *\r\n   * @param {string|Function|Element|Array|null} content\r\n   *        Same as {@link ModalDialog#content}'s param of the same name.\r\n   *        The most straight-forward usage is to provide a string or DOM\r\n   *        element.\r\n   *\r\n   * @param {Object} [options]\r\n   *        Extra options which will be passed on to the {@link ModalDialog}.\r\n   *\r\n   * @return {ModalDialog}\r\n   *         the {@link ModalDialog} that was created\r\n   */\r\n\r\n\r\n  Player.prototype.createModal = function createModal(content, options) {\r\n    var _this12 = this;\r\n\r\n    options = options || {};\r\n    options.content = content || '';\r\n\r\n    var modal = new ModalDialog(this, options);\r\n\r\n    this.addChild(modal);\r\n    modal.on('dispose', function () {\r\n      _this12.removeChild(modal);\r\n    });\r\n\r\n    modal.open();\r\n    return modal;\r\n  };\r\n\r\n  /**\r\n   * Change breakpoint classes when the player resizes.\r\n   *\r\n   * @private\r\n   */\r\n\r\n\r\n  Player.prototype.updateCurrentBreakpoint_ = function updateCurrentBreakpoint_() {\r\n    if (!this.responsive()) {\r\n      return;\r\n    }\r\n\r\n    var currentBreakpoint = this.currentBreakpoint();\r\n    var currentWidth = this.currentWidth();\r\n\r\n    for (var i = 0; i < BREAKPOINT_ORDER.length; i++) {\r\n      var candidateBreakpoint = BREAKPOINT_ORDER[i];\r\n      var maxWidth = this.breakpoints_[candidateBreakpoint];\r\n\r\n      if (currentWidth <= maxWidth) {\r\n\r\n        // The current breakpoint did not change, nothing to do.\r\n        if (currentBreakpoint === candidateBreakpoint) {\r\n          return;\r\n        }\r\n\r\n        // Only remove a class if there is a current breakpoint.\r\n        if (currentBreakpoint) {\r\n          this.removeClass(BREAKPOINT_CLASSES[currentBreakpoint]);\r\n        }\r\n\r\n        this.addClass(BREAKPOINT_CLASSES[candidateBreakpoint]);\r\n        this.breakpoint_ = candidateBreakpoint;\r\n        break;\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Removes the current breakpoint.\r\n   *\r\n   * @private\r\n   */\r\n\r\n\r\n  Player.prototype.removeCurrentBreakpoint_ = function removeCurrentBreakpoint_() {\r\n    var className = this.currentBreakpointClass();\r\n\r\n    this.breakpoint_ = '';\r\n\r\n    if (className) {\r\n      this.removeClass(className);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Get or set breakpoints on the player.\r\n   *\r\n   * Calling this method with an object or `true` will remove any previous\r\n   * custom breakpoints and start from the defaults again.\r\n   *\r\n   * @param  {Object|boolean} [breakpoints]\r\n   *         If an object is given, it can be used to provide custom\r\n   *         breakpoints. If `true` is given, will set default breakpoints.\r\n   *         If this argument is not given, will simply return the current\r\n   *         breakpoints.\r\n   *\r\n   * @param  {number} [breakpoints.tiny]\r\n   *         The maximum width for the \"vjs-layout-tiny\" class.\r\n   *\r\n   * @param  {number} [breakpoints.xsmall]\r\n   *         The maximum width for the \"vjs-layout-x-small\" class.\r\n   *\r\n   * @param  {number} [breakpoints.small]\r\n   *         The maximum width for the \"vjs-layout-small\" class.\r\n   *\r\n   * @param  {number} [breakpoints.medium]\r\n   *         The maximum width for the \"vjs-layout-medium\" class.\r\n   *\r\n   * @param  {number} [breakpoints.large]\r\n   *         The maximum width for the \"vjs-layout-large\" class.\r\n   *\r\n   * @param  {number} [breakpoints.xlarge]\r\n   *         The maximum width for the \"vjs-layout-x-large\" class.\r\n   *\r\n   * @param  {number} [breakpoints.huge]\r\n   *         The maximum width for the \"vjs-layout-huge\" class.\r\n   *\r\n   * @return {Object}\r\n   *         An object mapping breakpoint names to maximum width values.\r\n   */\r\n\r\n\r\n  Player.prototype.breakpoints = function breakpoints(_breakpoints) {\r\n\r\n    // Used as a getter.\r\n    if (_breakpoints === undefined) {\r\n      return assign(this.breakpoints_);\r\n    }\r\n\r\n    this.breakpoint_ = '';\r\n    this.breakpoints_ = assign({}, DEFAULT_BREAKPOINTS, _breakpoints);\r\n\r\n    // When breakpoint definitions change, we need to update the currently\r\n    // selected breakpoint.\r\n    this.updateCurrentBreakpoint_();\r\n\r\n    // Clone the breakpoints before returning.\r\n    return assign(this.breakpoints_);\r\n  };\r\n\r\n  /**\r\n   * Get or set a flag indicating whether or not this player should adjust\r\n   * its UI based on its dimensions.\r\n   *\r\n   * @param  {boolean} value\r\n   *         Should be `true` if the player should adjust its UI based on its\r\n   *         dimensions; otherwise, should be `false`.\r\n   *\r\n   * @return {boolean}\r\n   *         Will be `true` if this player should adjust its UI based on its\r\n   *         dimensions; otherwise, will be `false`.\r\n   */\r\n\r\n\r\n  Player.prototype.responsive = function responsive(value) {\r\n\r\n    // Used as a getter.\r\n    if (value === undefined) {\r\n      return this.responsive_;\r\n    }\r\n\r\n    value = Boolean(value);\r\n    var current = this.responsive_;\r\n\r\n    // Nothing changed.\r\n    if (value === current) {\r\n      return;\r\n    }\r\n\r\n    // The value actually changed, set it.\r\n    this.responsive_ = value;\r\n\r\n    // Start listening for breakpoints and set the initial breakpoint if the\r\n    // player is now responsive.\r\n    if (value) {\r\n      this.on('playerresize', this.updateCurrentBreakpoint_);\r\n      this.updateCurrentBreakpoint_();\r\n\r\n      // Stop listening for breakpoints if the player is no longer responsive.\r\n    } else {\r\n      this.off('playerresize', this.updateCurrentBreakpoint_);\r\n      this.removeCurrentBreakpoint_();\r\n    }\r\n\r\n    return value;\r\n  };\r\n\r\n  /**\r\n   * Get current breakpoint name, if any.\r\n   *\r\n   * @return {string}\r\n   *         If there is currently a breakpoint set, returns a the key from the\r\n   *         breakpoints object matching it. Otherwise, returns an empty string.\r\n   */\r\n\r\n\r\n  Player.prototype.currentBreakpoint = function currentBreakpoint() {\r\n    return this.breakpoint_;\r\n  };\r\n\r\n  /**\r\n   * Get the current breakpoint class name.\r\n   *\r\n   * @return {string}\r\n   *         The matching class name (e.g. `\"vjs-layout-tiny\"` or\r\n   *         `\"vjs-layout-large\"`) for the current breakpoint. Empty string if\r\n   *         there is no current breakpoint.\r\n   */\r\n\r\n\r\n  Player.prototype.currentBreakpointClass = function currentBreakpointClass() {\r\n    return BREAKPOINT_CLASSES[this.breakpoint_] || '';\r\n  };\r\n\r\n  /**\r\n   * Gets tag settings\r\n   *\r\n   * @param {Element} tag\r\n   *        The player tag\r\n   *\r\n   * @return {Object}\r\n   *         An object containing all of the settings\r\n   *         for a player tag\r\n   */\r\n\r\n\r\n  Player.getTagSettings = function getTagSettings(tag) {\r\n    var baseOptions = {\r\n      sources: [],\r\n      tracks: []\r\n    };\r\n\r\n    var tagOptions = getAttributes(tag);\r\n    var dataSetup = tagOptions['data-setup'];\r\n\r\n    if (hasClass(tag, 'vjs-fill')) {\r\n      tagOptions.fill = true;\r\n    }\r\n    if (hasClass(tag, 'vjs-fluid')) {\r\n      tagOptions.fluid = true;\r\n    }\r\n\r\n    // Check if data-setup attr exists.\r\n    if (dataSetup !== null) {\r\n      // Parse options JSON\r\n      // If empty string, make it a parsable json object.\r\n      var _safeParseTuple = safeParseTuple(dataSetup || '{}'),\r\n          err = _safeParseTuple[0],\r\n          data = _safeParseTuple[1];\r\n\r\n      if (err) {\r\n        log.error(err);\r\n      }\r\n      assign(tagOptions, data);\r\n    }\r\n\r\n    assign(baseOptions, tagOptions);\r\n\r\n    // Get tag children settings\r\n    if (tag.hasChildNodes()) {\r\n      var children = tag.childNodes;\r\n\r\n      for (var i = 0, j = children.length; i < j; i++) {\r\n        var child = children[i];\r\n        // Change case needed: http://ejohn.org/blog/nodename-case-sensitivity/\r\n        var childName = child.nodeName.toLowerCase();\r\n\r\n        if (childName === 'source') {\r\n          baseOptions.sources.push(getAttributes(child));\r\n        } else if (childName === 'track') {\r\n          baseOptions.tracks.push(getAttributes(child));\r\n        }\r\n      }\r\n    }\r\n\r\n    return baseOptions;\r\n  };\r\n\r\n  /**\r\n   * Determine wether or not flexbox is supported\r\n   *\r\n   * @return {boolean}\r\n   *         - true if flexbox is supported\r\n   *         - false if flexbox is not supported\r\n   */\r\n\r\n\r\n  Player.prototype.flexNotSupported_ = function flexNotSupported_() {\r\n    var elem = document.createElement('i');\r\n\r\n    // Note: We don't actually use flexBasis (or flexOrder), but it's one of the more\r\n    // common flex features that we can rely on when checking for flex support.\r\n    return !('flexBasis' in elem.style || 'webkitFlexBasis' in elem.style || 'mozFlexBasis' in elem.style || 'msFlexBasis' in elem.style ||\r\n    // IE10-specific (2012 flex spec)\r\n    'msFlexOrder' in elem.style);\r\n  };\r\n\r\n  return Player;\r\n}(Component);\r\n\r\n/**\r\n * Get the {@link VideoTrackList}\r\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist\r\n *\r\n * @return {VideoTrackList}\r\n *         the current video track list\r\n *\r\n * @method Player.prototype.videoTracks\r\n */\r\n\r\n/**\r\n * Get the {@link AudioTrackList}\r\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist\r\n *\r\n * @return {AudioTrackList}\r\n *         the current audio track list\r\n *\r\n * @method Player.prototype.audioTracks\r\n */\r\n\r\n/**\r\n * Get the {@link TextTrackList}\r\n *\r\n * @link http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-texttracks\r\n *\r\n * @return {TextTrackList}\r\n *         the current text track list\r\n *\r\n * @method Player.prototype.textTracks\r\n */\r\n\r\n/**\r\n * Get the remote {@link TextTrackList}\r\n *\r\n * @return {TextTrackList}\r\n *         The current remote text track list\r\n *\r\n * @method Player.prototype.remoteTextTracks\r\n */\r\n\r\n/**\r\n * Get the remote {@link HtmlTrackElementList} tracks.\r\n *\r\n * @return {HtmlTrackElementList}\r\n *         The current remote text track element list\r\n *\r\n * @method Player.prototype.remoteTextTrackEls\r\n */\r\n\r\nALL.names.forEach(function (name$$1) {\r\n  var props = ALL[name$$1];\r\n\r\n  Player.prototype[props.getterName] = function () {\r\n    if (this.tech_) {\r\n      return this.tech_[props.getterName]();\r\n    }\r\n\r\n    // if we have not yet loadTech_, we create {video,audio,text}Tracks_\r\n    // these will be passed to the tech during loading\r\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\r\n    return this[props.privateName];\r\n  };\r\n});\r\n\r\n/**\r\n * Global player list\r\n *\r\n * @type {Object}\r\n */\r\nPlayer.players = {};\r\n\r\nvar navigator = window.navigator;\r\n\r\n/*\r\n * Player instance options, surfaced using options\r\n * options = Player.prototype.options_\r\n * Make changes in options, not here.\r\n *\r\n * @type {Object}\r\n * @private\r\n */\r\nPlayer.prototype.options_ = {\r\n  // Default order of fallback technology\r\n  techOrder: Tech.defaultTechOrder_,\r\n\r\n  html5: {},\r\n  flash: {},\r\n\r\n  // default inactivity timeout\r\n  inactivityTimeout: 2000,\r\n\r\n  // default playback rates\r\n  playbackRates: [],\r\n  // Add playback rate selection by adding rates\r\n  // 'playbackRates': [0.5, 1, 1.5, 2],\r\n\r\n  // Included control sets\r\n  children: ['mediaLoader', 'posterImage', 'textTrackDisplay', 'loadingSpinner', 'bigPlayButton', 'controlBar', 'errorDisplay', 'textTrackSettings'],\r\n\r\n  language: navigator && (navigator.languages && navigator.languages[0] || navigator.userLanguage || navigator.language) || 'en',\r\n\r\n  // locales and their language translations\r\n  languages: {},\r\n\r\n  // Default message to show when a video cannot be played.\r\n  notSupportedMessage: 'No compatible source was found for this media.',\r\n\r\n  breakpoints: {},\r\n  responsive: false\r\n};\r\n\r\nif (!IS_IE8) {\r\n  Player.prototype.options_.children.push('resizeManager');\r\n}\r\n\r\n[\r\n/**\r\n * Returns whether or not the player is in the \"ended\" state.\r\n *\r\n * @return {Boolean} True if the player is in the ended state, false if not.\r\n * @method Player#ended\r\n */\r\n'ended',\r\n/**\r\n * Returns whether or not the player is in the \"seeking\" state.\r\n *\r\n * @return {Boolean} True if the player is in the seeking state, false if not.\r\n * @method Player#seeking\r\n */\r\n'seeking',\r\n/**\r\n * Returns the TimeRanges of the media that are currently available\r\n * for seeking to.\r\n *\r\n * @return {TimeRanges} the seekable intervals of the media timeline\r\n * @method Player#seekable\r\n */\r\n'seekable',\r\n/**\r\n * Returns the current state of network activity for the element, from\r\n * the codes in the list below.\r\n * - NETWORK_EMPTY (numeric value 0)\r\n *   The element has not yet been initialised. All attributes are in\r\n *   their initial states.\r\n * - NETWORK_IDLE (numeric value 1)\r\n *   The element's resource selection algorithm is active and has\r\n *   selected a resource, but it is not actually using the network at\r\n *   this time.\r\n * - NETWORK_LOADING (numeric value 2)\r\n *   The user agent is actively trying to download data.\r\n * - NETWORK_NO_SOURCE (numeric value 3)\r\n *   The element's resource selection algorithm is active, but it has\r\n *   not yet found a resource to use.\r\n *\r\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#network-states\r\n * @return {number} the current network activity state\r\n * @method Player#networkState\r\n */\r\n'networkState',\r\n/**\r\n * Returns a value that expresses the current state of the element\r\n * with respect to rendering the current playback position, from the\r\n * codes in the list below.\r\n * - HAVE_NOTHING (numeric value 0)\r\n *   No information regarding the media resource is available.\r\n * - HAVE_METADATA (numeric value 1)\r\n *   Enough of the resource has been obtained that the duration of the\r\n *   resource is available.\r\n * - HAVE_CURRENT_DATA (numeric value 2)\r\n *   Data for the immediate current playback position is available.\r\n * - HAVE_FUTURE_DATA (numeric value 3)\r\n *   Data for the immediate current playback position is available, as\r\n *   well as enough data for the user agent to advance the current\r\n *   playback position in the direction of playback.\r\n * - HAVE_ENOUGH_DATA (numeric value 4)\r\n *   The user agent estimates that enough data is available for\r\n *   playback to proceed uninterrupted.\r\n *\r\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-readystate\r\n * @return {number} the current playback rendering state\r\n * @method Player#readyState\r\n */\r\n'readyState'].forEach(function (fn) {\r\n  Player.prototype[fn] = function () {\r\n    return this.techGet_(fn);\r\n  };\r\n});\r\n\r\nTECH_EVENTS_RETRIGGER.forEach(function (event) {\r\n  Player.prototype['handleTech' + toTitleCase(event) + '_'] = function () {\r\n    return this.trigger(event);\r\n  };\r\n});\r\n\r\n/**\r\n * Fired when the player has initial duration and dimension information\r\n *\r\n * @event Player#loadedmetadata\r\n * @type {EventTarget~Event}\r\n */\r\n\r\n/**\r\n * Fired when the player has downloaded data at the current playback position\r\n *\r\n * @event Player#loadeddata\r\n * @type {EventTarget~Event}\r\n */\r\n\r\n/**\r\n * Fired when the current playback position has changed *\r\n * During playback this is fired every 15-250 milliseconds, depending on the\r\n * playback technology in use.\r\n *\r\n * @event Player#timeupdate\r\n * @type {EventTarget~Event}\r\n */\r\n\r\n/**\r\n * Fired when the volume changes\r\n *\r\n * @event Player#volumechange\r\n * @type {EventTarget~Event}\r\n */\r\n\r\n/**\r\n * Reports whether or not a player has a plugin available.\r\n *\r\n * This does not report whether or not the plugin has ever been initialized\r\n * on this player. For that, [usingPlugin]{@link Player#usingPlugin}.\r\n *\r\n * @method Player#hasPlugin\r\n * @param  {string}  name\r\n *         The name of a plugin.\r\n *\r\n * @return {boolean}\r\n *         Whether or not this player has the requested plugin available.\r\n */\r\n\r\n/**\r\n * Reports whether or not a player is using a plugin by name.\r\n *\r\n * For basic plugins, this only reports whether the plugin has _ever_ been\r\n * initialized on this player.\r\n *\r\n * @method Player#usingPlugin\r\n * @param  {string} name\r\n *         The name of a plugin.\r\n *\r\n * @return {boolean}\r\n *         Whether or not this player is using the requested plugin.\r\n */\r\n\r\nComponent.registerComponent('Player', Player);\r\n\r\n/**\r\n * @file plugin.js\r\n */\r\n/**\r\n * The base plugin name.\r\n *\r\n * @private\r\n * @constant\r\n * @type {string}\r\n */\r\nvar BASE_PLUGIN_NAME = 'plugin';\r\n\r\n/**\r\n * The key on which a player's active plugins cache is stored.\r\n *\r\n * @private\r\n * @constant\r\n * @type     {string}\r\n */\r\nvar PLUGIN_CACHE_KEY = 'activePlugins_';\r\n\r\n/**\r\n * Stores registered plugins in a private space.\r\n *\r\n * @private\r\n * @type    {Object}\r\n */\r\nvar pluginStorage = {};\r\n\r\n/**\r\n * Reports whether or not a plugin has been registered.\r\n *\r\n * @private\r\n * @param   {string} name\r\n *          The name of a plugin.\r\n *\r\n * @returns {boolean}\r\n *          Whether or not the plugin has been registered.\r\n */\r\nvar pluginExists = function pluginExists(name) {\r\n  return pluginStorage.hasOwnProperty(name);\r\n};\r\n\r\n/**\r\n * Get a single registered plugin by name.\r\n *\r\n * @private\r\n * @param   {string} name\r\n *          The name of a plugin.\r\n *\r\n * @returns {Function|undefined}\r\n *          The plugin (or undefined).\r\n */\r\nvar getPlugin = function getPlugin(name) {\r\n  return pluginExists(name) ? pluginStorage[name] : undefined;\r\n};\r\n\r\n/**\r\n * Marks a plugin as \"active\" on a player.\r\n *\r\n * Also, ensures that the player has an object for tracking active plugins.\r\n *\r\n * @private\r\n * @param   {Player} player\r\n *          A Video.js player instance.\r\n *\r\n * @param   {string} name\r\n *          The name of a plugin.\r\n */\r\nvar markPluginAsActive = function markPluginAsActive(player, name) {\r\n  player[PLUGIN_CACHE_KEY] = player[PLUGIN_CACHE_KEY] || {};\r\n  player[PLUGIN_CACHE_KEY][name] = true;\r\n};\r\n\r\n/**\r\n * Triggers a pair of plugin setup events.\r\n *\r\n * @private\r\n * @param  {Player} player\r\n *         A Video.js player instance.\r\n *\r\n * @param  {Plugin~PluginEventHash} hash\r\n *         A plugin event hash.\r\n *\r\n * @param  {Boolean} [before]\r\n *         If true, prefixes the event name with \"before\". In other words,\r\n *         use this to trigger \"beforepluginsetup\" instead of \"pluginsetup\".\r\n */\r\nvar triggerSetupEvent = function triggerSetupEvent(player, hash, before) {\r\n  var eventName = (before ? 'before' : '') + 'pluginsetup';\r\n\r\n  player.trigger(eventName, hash);\r\n  player.trigger(eventName + ':' + hash.name, hash);\r\n};\r\n\r\n/**\r\n * Takes a basic plugin function and returns a wrapper function which marks\r\n * on the player that the plugin has been activated.\r\n *\r\n * @private\r\n * @param   {string} name\r\n *          The name of the plugin.\r\n *\r\n * @param   {Function} plugin\r\n *          The basic plugin.\r\n *\r\n * @returns {Function}\r\n *          A wrapper function for the given plugin.\r\n */\r\nvar createBasicPlugin = function createBasicPlugin(name, plugin) {\r\n  var basicPluginWrapper = function basicPluginWrapper() {\r\n\r\n    // We trigger the \"beforepluginsetup\" and \"pluginsetup\" events on the player\r\n    // regardless, but we want the hash to be consistent with the hash provided\r\n    // for advanced plugins.\r\n    //\r\n    // The only potentially counter-intuitive thing here is the `instance` in\r\n    // the \"pluginsetup\" event is the value returned by the `plugin` function.\r\n    triggerSetupEvent(this, { name: name, plugin: plugin, instance: null }, true);\r\n\r\n    var instance = plugin.apply(this, arguments);\r\n\r\n    markPluginAsActive(this, name);\r\n    triggerSetupEvent(this, { name: name, plugin: plugin, instance: instance });\r\n\r\n    return instance;\r\n  };\r\n\r\n  Object.keys(plugin).forEach(function (prop) {\r\n    basicPluginWrapper[prop] = plugin[prop];\r\n  });\r\n\r\n  return basicPluginWrapper;\r\n};\r\n\r\n/**\r\n * Takes a plugin sub-class and returns a factory function for generating\r\n * instances of it.\r\n *\r\n * This factory function will replace itself with an instance of the requested\r\n * sub-class of Plugin.\r\n *\r\n * @private\r\n * @param   {string} name\r\n *          The name of the plugin.\r\n *\r\n * @param   {Plugin} PluginSubClass\r\n *          The advanced plugin.\r\n *\r\n * @returns {Function}\r\n */\r\nvar createPluginFactory = function createPluginFactory(name, PluginSubClass) {\r\n\r\n  // Add a `name` property to the plugin prototype so that each plugin can\r\n  // refer to itself by name.\r\n  PluginSubClass.prototype.name = name;\r\n\r\n  return function () {\r\n    triggerSetupEvent(this, { name: name, plugin: PluginSubClass, instance: null }, true);\r\n\r\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\r\n      args[_key] = arguments[_key];\r\n    }\r\n\r\n    var instance = new (Function.prototype.bind.apply(PluginSubClass, [null].concat([this].concat(args))))();\r\n\r\n    // The plugin is replaced by a function that returns the current instance.\r\n    this[name] = function () {\r\n      return instance;\r\n    };\r\n\r\n    triggerSetupEvent(this, instance.getEventHash());\r\n\r\n    return instance;\r\n  };\r\n};\r\n\r\n/**\r\n * Parent class for all advanced plugins.\r\n *\r\n * @mixes   module:evented~EventedMixin\r\n * @mixes   module:stateful~StatefulMixin\r\n * @fires   Player#beforepluginsetup\r\n * @fires   Player#beforepluginsetup:$name\r\n * @fires   Player#pluginsetup\r\n * @fires   Player#pluginsetup:$name\r\n * @listens Player#dispose\r\n * @throws  {Error}\r\n *          If attempting to instantiate the base {@link Plugin} class\r\n *          directly instead of via a sub-class.\r\n */\r\n\r\nvar Plugin = function () {\r\n\r\n  /**\r\n   * Creates an instance of this class.\r\n   *\r\n   * Sub-classes should call `super` to ensure plugins are properly initialized.\r\n   *\r\n   * @param {Player} player\r\n   *        A Video.js player instance.\r\n   */\r\n  function Plugin(player) {\r\n    classCallCheck(this, Plugin);\r\n\r\n    if (this.constructor === Plugin) {\r\n      throw new Error('Plugin must be sub-classed; not directly instantiated.');\r\n    }\r\n\r\n    this.player = player;\r\n\r\n    // Make this object evented, but remove the added `trigger` method so we\r\n    // use the prototype version instead.\r\n    evented(this);\r\n    delete this.trigger;\r\n\r\n    stateful(this, this.constructor.defaultState);\r\n    markPluginAsActive(player, this.name);\r\n\r\n    // Auto-bind the dispose method so we can use it as a listener and unbind\r\n    // it later easily.\r\n    this.dispose = bind(this, this.dispose);\r\n\r\n    // If the player is disposed, dispose the plugin.\r\n    player.on('dispose', this.dispose);\r\n  }\r\n\r\n  /**\r\n   * Get the version of the plugin that was set on <pluginName>.VERSION\r\n   */\r\n\r\n\r\n  Plugin.prototype.version = function version() {\r\n    return this.constructor.VERSION;\r\n  };\r\n\r\n  /**\r\n   * Each event triggered by plugins includes a hash of additional data with\r\n   * conventional properties.\r\n   *\r\n   * This returns that object or mutates an existing hash.\r\n   *\r\n   * @param   {Object} [hash={}]\r\n   *          An object to be used as event an event hash.\r\n   *\r\n   * @returns {Plugin~PluginEventHash}\r\n   *          An event hash object with provided properties mixed-in.\r\n   */\r\n\r\n\r\n  Plugin.prototype.getEventHash = function getEventHash() {\r\n    var hash = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\r\n\r\n    hash.name = this.name;\r\n    hash.plugin = this.constructor;\r\n    hash.instance = this;\r\n    return hash;\r\n  };\r\n\r\n  /**\r\n   * Triggers an event on the plugin object and overrides\r\n   * {@link module:evented~EventedMixin.trigger|EventedMixin.trigger}.\r\n   *\r\n   * @param   {string|Object} event\r\n   *          An event type or an object with a type property.\r\n   *\r\n   * @param   {Object} [hash={}]\r\n   *          Additional data hash to merge with a\r\n   *          {@link Plugin~PluginEventHash|PluginEventHash}.\r\n   *\r\n   * @returns {boolean}\r\n   *          Whether or not default was prevented.\r\n   */\r\n\r\n\r\n  Plugin.prototype.trigger = function trigger$$1(event) {\r\n    var hash = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n\r\n    return trigger(this.eventBusEl_, event, this.getEventHash(hash));\r\n  };\r\n\r\n  /**\r\n   * Handles \"statechanged\" events on the plugin. No-op by default, override by\r\n   * subclassing.\r\n   *\r\n   * @abstract\r\n   * @param    {Event} e\r\n   *           An event object provided by a \"statechanged\" event.\r\n   *\r\n   * @param    {Object} e.changes\r\n   *           An object describing changes that occurred with the \"statechanged\"\r\n   *           event.\r\n   */\r\n\r\n\r\n  Plugin.prototype.handleStateChanged = function handleStateChanged(e) {};\r\n\r\n  /**\r\n   * Disposes a plugin.\r\n   *\r\n   * Subclasses can override this if they want, but for the sake of safety,\r\n   * it's probably best to subscribe the \"dispose\" event.\r\n   *\r\n   * @fires Plugin#dispose\r\n   */\r\n\r\n\r\n  Plugin.prototype.dispose = function dispose() {\r\n    var name = this.name,\r\n        player = this.player;\r\n\r\n    /**\r\n     * Signals that a advanced plugin is about to be disposed.\r\n     *\r\n     * @event Plugin#dispose\r\n     * @type  {EventTarget~Event}\r\n     */\r\n\r\n    this.trigger('dispose');\r\n    this.off();\r\n    player.off('dispose', this.dispose);\r\n\r\n    // Eliminate any possible sources of leaking memory by clearing up\r\n    // references between the player and the plugin instance and nulling out\r\n    // the plugin's state and replacing methods with a function that throws.\r\n    player[PLUGIN_CACHE_KEY][name] = false;\r\n    this.player = this.state = null;\r\n\r\n    // Finally, replace the plugin name on the player with a new factory\r\n    // function, so that the plugin is ready to be set up again.\r\n    player[name] = createPluginFactory(name, pluginStorage[name]);\r\n  };\r\n\r\n  /**\r\n   * Determines if a plugin is a basic plugin (i.e. not a sub-class of `Plugin`).\r\n   *\r\n   * @param   {string|Function} plugin\r\n   *          If a string, matches the name of a plugin. If a function, will be\r\n   *          tested directly.\r\n   *\r\n   * @returns {boolean}\r\n   *          Whether or not a plugin is a basic plugin.\r\n   */\r\n\r\n\r\n  Plugin.isBasic = function isBasic(plugin) {\r\n    var p = typeof plugin === 'string' ? getPlugin(plugin) : plugin;\r\n\r\n    return typeof p === 'function' && !Plugin.prototype.isPrototypeOf(p.prototype);\r\n  };\r\n\r\n  /**\r\n   * Register a Video.js plugin.\r\n   *\r\n   * @param   {string} name\r\n   *          The name of the plugin to be registered. Must be a string and\r\n   *          must not match an existing plugin or a method on the `Player`\r\n   *          prototype.\r\n   *\r\n   * @param   {Function} plugin\r\n   *          A sub-class of `Plugin` or a function for basic plugins.\r\n   *\r\n   * @returns {Function}\r\n   *          For advanced plugins, a factory function for that plugin. For\r\n   *          basic plugins, a wrapper function that initializes the plugin.\r\n   */\r\n\r\n\r\n  Plugin.registerPlugin = function registerPlugin(name, plugin) {\r\n    if (typeof name !== 'string') {\r\n      throw new Error('Illegal plugin name, \"' + name + '\", must be a string, was ' + (typeof name === 'undefined' ? 'undefined' : _typeof(name)) + '.');\r\n    }\r\n\r\n    if (pluginExists(name)) {\r\n      log.warn('A plugin named \"' + name + '\" already exists. You may want to avoid re-registering plugins!');\r\n    } else if (Player.prototype.hasOwnProperty(name)) {\r\n      throw new Error('Illegal plugin name, \"' + name + '\", cannot share a name with an existing player method!');\r\n    }\r\n\r\n    if (typeof plugin !== 'function') {\r\n      throw new Error('Illegal plugin for \"' + name + '\", must be a function, was ' + (typeof plugin === 'undefined' ? 'undefined' : _typeof(plugin)) + '.');\r\n    }\r\n\r\n    pluginStorage[name] = plugin;\r\n\r\n    // Add a player prototype method for all sub-classed plugins (but not for\r\n    // the base Plugin class).\r\n    if (name !== BASE_PLUGIN_NAME) {\r\n      if (Plugin.isBasic(plugin)) {\r\n        Player.prototype[name] = createBasicPlugin(name, plugin);\r\n      } else {\r\n        Player.prototype[name] = createPluginFactory(name, plugin);\r\n      }\r\n    }\r\n\r\n    return plugin;\r\n  };\r\n\r\n  /**\r\n   * De-register a Video.js plugin.\r\n   *\r\n   * @param {string} name\r\n   *        The name of the plugin to be deregistered.\r\n   */\r\n\r\n\r\n  Plugin.deregisterPlugin = function deregisterPlugin(name) {\r\n    if (name === BASE_PLUGIN_NAME) {\r\n      throw new Error('Cannot de-register base plugin.');\r\n    }\r\n    if (pluginExists(name)) {\r\n      delete pluginStorage[name];\r\n      delete Player.prototype[name];\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Gets an object containing multiple Video.js plugins.\r\n   *\r\n   * @param   {Array} [names]\r\n   *          If provided, should be an array of plugin names. Defaults to _all_\r\n   *          plugin names.\r\n   *\r\n   * @returns {Object|undefined}\r\n   *          An object containing plugin(s) associated with their name(s) or\r\n   *          `undefined` if no matching plugins exist).\r\n   */\r\n\r\n\r\n  Plugin.getPlugins = function getPlugins() {\r\n    var names = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Object.keys(pluginStorage);\r\n\r\n    var result = void 0;\r\n\r\n    names.forEach(function (name) {\r\n      var plugin = getPlugin(name);\r\n\r\n      if (plugin) {\r\n        result = result || {};\r\n        result[name] = plugin;\r\n      }\r\n    });\r\n\r\n    return result;\r\n  };\r\n\r\n  /**\r\n   * Gets a plugin's version, if available\r\n   *\r\n   * @param   {string} name\r\n   *          The name of a plugin.\r\n   *\r\n   * @returns {string}\r\n   *          The plugin's version or an empty string.\r\n   */\r\n\r\n\r\n  Plugin.getPluginVersion = function getPluginVersion(name) {\r\n    var plugin = getPlugin(name);\r\n\r\n    return plugin && plugin.VERSION || '';\r\n  };\r\n\r\n  return Plugin;\r\n}();\r\n\r\n/**\r\n * Gets a plugin by name if it exists.\r\n *\r\n * @static\r\n * @method   getPlugin\r\n * @memberOf Plugin\r\n * @param    {string} name\r\n *           The name of a plugin.\r\n *\r\n * @returns  {Function|undefined}\r\n *           The plugin (or `undefined`).\r\n */\r\n\r\n\r\nPlugin.getPlugin = getPlugin;\r\n\r\n/**\r\n * The name of the base plugin class as it is registered.\r\n *\r\n * @type {string}\r\n */\r\nPlugin.BASE_PLUGIN_NAME = BASE_PLUGIN_NAME;\r\n\r\nPlugin.registerPlugin(BASE_PLUGIN_NAME, Plugin);\r\n\r\n/**\r\n * Documented in player.js\r\n *\r\n * @ignore\r\n */\r\nPlayer.prototype.usingPlugin = function (name) {\r\n  return !!this[PLUGIN_CACHE_KEY] && this[PLUGIN_CACHE_KEY][name] === true;\r\n};\r\n\r\n/**\r\n * Documented in player.js\r\n *\r\n * @ignore\r\n */\r\nPlayer.prototype.hasPlugin = function (name) {\r\n  return !!pluginExists(name);\r\n};\r\n\r\n/**\r\n * Signals that a plugin is about to be set up on a player.\r\n *\r\n * @event    Player#beforepluginsetup\r\n * @type     {Plugin~PluginEventHash}\r\n */\r\n\r\n/**\r\n * Signals that a plugin is about to be set up on a player - by name. The name\r\n * is the name of the plugin.\r\n *\r\n * @event    Player#beforepluginsetup:$name\r\n * @type     {Plugin~PluginEventHash}\r\n */\r\n\r\n/**\r\n * Signals that a plugin has just been set up on a player.\r\n *\r\n * @event    Player#pluginsetup\r\n * @type     {Plugin~PluginEventHash}\r\n */\r\n\r\n/**\r\n * Signals that a plugin has just been set up on a player - by name. The name\r\n * is the name of the plugin.\r\n *\r\n * @event    Player#pluginsetup:$name\r\n * @type     {Plugin~PluginEventHash}\r\n */\r\n\r\n/**\r\n * @typedef  {Object} Plugin~PluginEventHash\r\n *\r\n * @property {string} instance\r\n *           For basic plugins, the return value of the plugin function. For\r\n *           advanced plugins, the plugin instance on which the event is fired.\r\n *\r\n * @property {string} name\r\n *           The name of the plugin.\r\n *\r\n * @property {string} plugin\r\n *           For basic plugins, the plugin function. For advanced plugins, the\r\n *           plugin class/constructor.\r\n */\r\n\r\n/**\r\n * @file extend.js\r\n * @module extend\r\n */\r\n\r\n/**\r\n * A combination of node inherits and babel's inherits (after transpile).\r\n * Both work the same but node adds `super_` to the subClass\r\n * and Bable adds the superClass as __proto__. Both seem useful.\r\n *\r\n * @param {Object} subClass\r\n *        The class to inherit to\r\n *\r\n * @param {Object} superClass\r\n *        The class to inherit from\r\n *\r\n * @private\r\n */\r\nvar _inherits = function _inherits(subClass, superClass) {\r\n  if (typeof superClass !== 'function' && superClass !== null) {\r\n    throw new TypeError('Super expression must either be null or a function, not ' + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));\r\n  }\r\n\r\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\r\n    constructor: {\r\n      value: subClass,\r\n      enumerable: false,\r\n      writable: true,\r\n      configurable: true\r\n    }\r\n  });\r\n\r\n  if (superClass) {\r\n    // node\r\n    subClass.super_ = superClass;\r\n  }\r\n};\r\n\r\n/**\r\n * Function for subclassing using the same inheritance that\r\n * videojs uses internally\r\n *\r\n * @static\r\n * @const\r\n *\r\n * @param {Object} superClass\r\n *        The class to inherit from\r\n *\r\n * @param {Object} [subClassMethods={}]\r\n *        The class to inherit to\r\n *\r\n * @return {Object}\r\n *         The new object with subClassMethods that inherited superClass.\r\n */\r\nvar extendFn = function extendFn(superClass) {\r\n  var subClassMethods = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\r\n\r\n  var subClass = function subClass() {\r\n    superClass.apply(this, arguments);\r\n  };\r\n\r\n  var methods = {};\r\n\r\n  if ((typeof subClassMethods === 'undefined' ? 'undefined' : _typeof(subClassMethods)) === 'object') {\r\n    if (subClassMethods.constructor !== Object.prototype.constructor) {\r\n      subClass = subClassMethods.constructor;\r\n    }\r\n    methods = subClassMethods;\r\n  } else if (typeof subClassMethods === 'function') {\r\n    subClass = subClassMethods;\r\n  }\r\n\r\n  _inherits(subClass, superClass);\r\n\r\n  // Extend subObj's prototype with functions and other properties from props\r\n  for (var name in methods) {\r\n    if (methods.hasOwnProperty(name)) {\r\n      subClass.prototype[name] = methods[name];\r\n    }\r\n  }\r\n\r\n  return subClass;\r\n};\r\n\r\n/**\r\n * @file video.js\r\n * @module videojs\r\n */\r\n// Include the built-in techs\r\n// HTML5 Element Shim for IE8\r\nif (typeof HTMLVideoElement === 'undefined' && isReal()) {\r\n  document.createElement('video');\r\n  document.createElement('audio');\r\n  document.createElement('track');\r\n  document.createElement('video-js');\r\n}\r\n\r\n/**\r\n * Normalize an `id` value by trimming off a leading `#`\r\n *\r\n * @param   {string} id\r\n *          A string, maybe with a leading `#`.\r\n *\r\n * @returns {string}\r\n *          The string, without any leading `#`.\r\n */\r\nvar normalizeId = function normalizeId(id) {\r\n  return id.indexOf('#') === 0 ? id.slice(1) : id;\r\n};\r\n\r\n/**\r\n * Doubles as the main function for users to create a player instance and also\r\n * the main library object.\r\n * The `videojs` function can be used to initialize or retrieve a player.\r\n  *\r\n * @param {string|Element} id\r\n *        Video element or video element ID\r\n *\r\n * @param {Object} [options]\r\n *        Optional options object for config/settings\r\n *\r\n * @param {Component~ReadyCallback} [ready]\r\n *        Optional ready callback\r\n *\r\n * @return {Player}\r\n *         A player instance\r\n */\r\nfunction videojs(id, options, ready) {\r\n  var player = videojs.getPlayer(id);\r\n\r\n  if (player) {\r\n    if (options) {\r\n      log.warn('Player \"' + id + '\" is already initialised. Options will not be applied.');\r\n    }\r\n    if (ready) {\r\n      player.ready(ready);\r\n    }\r\n    return player;\r\n  }\r\n\r\n  var el = typeof id === 'string' ? $('#' + normalizeId(id)) : id;\r\n\r\n  if (!isEl(el)) {\r\n    throw new TypeError('The element or ID supplied is not valid. (videojs)');\r\n  }\r\n\r\n  if (!document.body.contains(el)) {\r\n    log.warn('The element supplied is not included in the DOM');\r\n  }\r\n\r\n  options = options || {};\r\n\r\n  videojs.hooks('beforesetup').forEach(function (hookFunction) {\r\n    var opts = hookFunction(el, mergeOptions(options));\r\n\r\n    if (!isObject(opts) || Array.isArray(opts)) {\r\n      log.error('please return an object in beforesetup hooks');\r\n      return;\r\n    }\r\n\r\n    options = mergeOptions(options, opts);\r\n  });\r\n\r\n  // We get the current \"Player\" component here in case an integration has\r\n  // replaced it with a custom player.\r\n  var PlayerComponent = Component.getComponent('Player');\r\n\r\n  player = new PlayerComponent(el, options, ready);\r\n\r\n  videojs.hooks('setup').forEach(function (hookFunction) {\r\n    return hookFunction(player);\r\n  });\r\n\r\n  return player;\r\n}\r\n\r\n/**\r\n * An Object that contains lifecycle hooks as keys which point to an array\r\n * of functions that are run when a lifecycle is triggered\r\n */\r\nvideojs.hooks_ = {};\r\n\r\n/**\r\n * Get a list of hooks for a specific lifecycle\r\n * @function videojs.hooks\r\n *\r\n * @param {string} type\r\n *        the lifecyle to get hooks from\r\n *\r\n * @param {Function|Function[]} [fn]\r\n *        Optionally add a hook (or hooks) to the lifecycle that your are getting.\r\n *\r\n * @return {Array}\r\n *         an array of hooks, or an empty array if there are none.\r\n */\r\nvideojs.hooks = function (type, fn) {\r\n  videojs.hooks_[type] = videojs.hooks_[type] || [];\r\n  if (fn) {\r\n    videojs.hooks_[type] = videojs.hooks_[type].concat(fn);\r\n  }\r\n  return videojs.hooks_[type];\r\n};\r\n\r\n/**\r\n * Add a function hook to a specific videojs lifecycle.\r\n *\r\n * @param {string} type\r\n *        the lifecycle to hook the function to.\r\n *\r\n * @param {Function|Function[]}\r\n *        The function or array of functions to attach.\r\n */\r\nvideojs.hook = function (type, fn) {\r\n  videojs.hooks(type, fn);\r\n};\r\n\r\n/**\r\n * Add a function hook that will only run once to a specific videojs lifecycle.\r\n *\r\n * @param {string} type\r\n *        the lifecycle to hook the function to.\r\n *\r\n * @param {Function|Function[]}\r\n *        The function or array of functions to attach.\r\n */\r\nvideojs.hookOnce = function (type, fn) {\r\n  videojs.hooks(type, [].concat(fn).map(function (original) {\r\n    var wrapper = function wrapper() {\r\n      videojs.removeHook(type, wrapper);\r\n      return original.apply(undefined, arguments);\r\n    };\r\n\r\n    return wrapper;\r\n  }));\r\n};\r\n\r\n/**\r\n * Remove a hook from a specific videojs lifecycle.\r\n *\r\n * @param {string} type\r\n *        the lifecycle that the function hooked to\r\n *\r\n * @param {Function} fn\r\n *        The hooked function to remove\r\n *\r\n * @return {boolean}\r\n *         The function that was removed or undef\r\n */\r\nvideojs.removeHook = function (type, fn) {\r\n  var index = videojs.hooks(type).indexOf(fn);\r\n\r\n  if (index <= -1) {\r\n    return false;\r\n  }\r\n\r\n  videojs.hooks_[type] = videojs.hooks_[type].slice();\r\n  videojs.hooks_[type].splice(index, 1);\r\n\r\n  return true;\r\n};\r\n\r\n// Add default styles\r\nif (window.VIDEOJS_NO_DYNAMIC_STYLE !== true && isReal()) {\r\n  var style = $('.vjs-styles-defaults');\r\n\r\n  if (!style) {\r\n    style = createStyleElement('vjs-styles-defaults');\r\n    var head = $('head');\r\n\r\n    if (head) {\r\n      head.insertBefore(style, head.firstChild);\r\n    }\r\n    setTextContent(style, '\\n      .video-js {\\n        width: 300px;\\n        height: 150px;\\n      }\\n\\n      .vjs-fluid {\\n        padding-top: 56.25%\\n      }\\n    ');\r\n  }\r\n}\r\n\r\n// Run Auto-load players\r\n// You have to wait at least once in case this script is loaded after your\r\n// video in the DOM (weird behavior only with minified version)\r\nautoSetupTimeout(1, videojs);\r\n\r\n/**\r\n * Current software version. Follows semver.\r\n *\r\n * @type {string}\r\n */\r\nvideojs.VERSION = version;\r\n\r\n/**\r\n * The global options object. These are the settings that take effect\r\n * if no overrides are specified when the player is created.\r\n *\r\n * @type {Object}\r\n */\r\nvideojs.options = Player.prototype.options_;\r\n\r\n/**\r\n * Get an object with the currently created players, keyed by player ID\r\n *\r\n * @return {Object}\r\n *         The created players\r\n */\r\nvideojs.getPlayers = function () {\r\n  return Player.players;\r\n};\r\n\r\n/**\r\n * Get a single player based on an ID or DOM element.\r\n *\r\n * This is useful if you want to check if an element or ID has an associated\r\n * Video.js player, but not create one if it doesn't.\r\n *\r\n * @param   {string|Element} id\r\n *          An HTML element - `<video>`, `<audio>`, or `<video-js>` -\r\n *          or a string matching the `id` of such an element.\r\n *\r\n * @returns {Player|undefined}\r\n *          A player instance or `undefined` if there is no player instance\r\n *          matching the argument.\r\n */\r\nvideojs.getPlayer = function (id) {\r\n  var players = Player.players;\r\n  var tag = void 0;\r\n\r\n  if (typeof id === 'string') {\r\n    var nId = normalizeId(id);\r\n    var player = players[nId];\r\n\r\n    if (player) {\r\n      return player;\r\n    }\r\n\r\n    tag = $('#' + nId);\r\n  } else {\r\n    tag = id;\r\n  }\r\n\r\n  if (isEl(tag)) {\r\n    var _tag = tag,\r\n        _player = _tag.player,\r\n        playerId = _tag.playerId;\r\n\r\n    // Element may have a `player` property referring to an already created\r\n    // player instance. If so, return that.\r\n\r\n    if (_player || players[playerId]) {\r\n      return _player || players[playerId];\r\n    }\r\n  }\r\n};\r\n\r\n/**\r\n * Returns an array of all current players.\r\n *\r\n * @return {Array}\r\n *         An array of all players. The array will be in the order that\r\n *         `Object.keys` provides, which could potentially vary between\r\n *         JavaScript engines.\r\n *\r\n */\r\nvideojs.getAllPlayers = function () {\r\n  return (\r\n\r\n    // Disposed players leave a key with a `null` value, so we need to make sure\r\n    // we filter those out.\r\n    Object.keys(Player.players).map(function (k) {\r\n      return Player.players[k];\r\n    }).filter(Boolean)\r\n  );\r\n};\r\n\r\n/**\r\n * Expose players object.\r\n *\r\n * @memberOf videojs\r\n * @property {Object} players\r\n */\r\nvideojs.players = Player.players;\r\n\r\n/**\r\n * Get a component class object by name\r\n *\r\n * @borrows Component.getComponent as videojs.getComponent\r\n */\r\nvideojs.getComponent = Component.getComponent;\r\n\r\n/**\r\n * Register a component so it can referred to by name. Used when adding to other\r\n * components, either through addChild `component.addChild('myComponent')` or through\r\n * default children options  `{ children: ['myComponent'] }`.\r\n *\r\n * > NOTE: You could also just initialize the component before adding.\r\n * `component.addChild(new MyComponent());`\r\n *\r\n * @param {string} name\r\n *        The class name of the component\r\n *\r\n * @param {Component} comp\r\n *        The component class\r\n *\r\n * @return {Component}\r\n *         The newly registered component\r\n */\r\nvideojs.registerComponent = function (name$$1, comp) {\r\n  if (Tech.isTech(comp)) {\r\n    log.warn('The ' + name$$1 + ' tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)');\r\n  }\r\n\r\n  Component.registerComponent.call(Component, name$$1, comp);\r\n};\r\n\r\n/**\r\n * Get a Tech class object by name\r\n *\r\n * @borrows Tech.getTech as videojs.getTech\r\n */\r\nvideojs.getTech = Tech.getTech;\r\n\r\n/**\r\n * Register a Tech so it can referred to by name.\r\n * This is used in the tech order for the player.\r\n *\r\n * @borrows Tech.registerTech as videojs.registerTech\r\n */\r\nvideojs.registerTech = Tech.registerTech;\r\n\r\n/**\r\n * Register a middleware to a source type.\r\n *\r\n * @param {String} type A string representing a MIME type.\r\n * @param {function(player):object} middleware A middleware factory that takes a player.\r\n */\r\nvideojs.use = use;\r\n\r\n/**\r\n * An object that can be returned by a middleware to signify\r\n * that the middleware is being terminated.\r\n *\r\n * @type {object}\r\n * @memberOf {videojs}\r\n * @property {object} middleware.TERMINATOR\r\n */\r\n// Object.defineProperty is not available in IE8\r\nif (!IS_IE8 && Object.defineProperty) {\r\n  Object.defineProperty(videojs, 'middleware', {\r\n    value: {},\r\n    writeable: false,\r\n    enumerable: true\r\n  });\r\n\r\n  Object.defineProperty(videojs.middleware, 'TERMINATOR', {\r\n    value: TERMINATOR,\r\n    writeable: false,\r\n    enumerable: true\r\n  });\r\n} else {\r\n  videojs.middleware = { TERMINATOR: TERMINATOR };\r\n}\r\n\r\n/**\r\n * A suite of browser and device tests from {@link browser}.\r\n *\r\n * @type {Object}\r\n * @private\r\n */\r\nvideojs.browser = browser;\r\n\r\n/**\r\n * Whether or not the browser supports touch events. Included for backward\r\n * compatibility with 4.x, but deprecated. Use `videojs.browser.TOUCH_ENABLED`\r\n * instead going forward.\r\n *\r\n * @deprecated since version 5.0\r\n * @type {boolean}\r\n */\r\nvideojs.TOUCH_ENABLED = TOUCH_ENABLED;\r\n\r\n/**\r\n * Subclass an existing class\r\n * Mimics ES6 subclassing with the `extend` keyword\r\n *\r\n * @borrows extend:extendFn as videojs.extend\r\n */\r\nvideojs.extend = extendFn;\r\n\r\n/**\r\n * Merge two options objects recursively\r\n * Performs a deep merge like lodash.merge but **only merges plain objects**\r\n * (not arrays, elements, anything else)\r\n * Other values will be copied directly from the second object.\r\n *\r\n * @borrows merge-options:mergeOptions as videojs.mergeOptions\r\n */\r\nvideojs.mergeOptions = mergeOptions;\r\n\r\n/**\r\n * Change the context (this) of a function\r\n *\r\n * > NOTE: as of v5.0 we require an ES5 shim, so you should use the native\r\n * `function() {}.bind(newContext);` instead of this.\r\n *\r\n * @borrows fn:bind as videojs.bind\r\n */\r\nvideojs.bind = bind;\r\n\r\n/**\r\n * Register a Video.js plugin.\r\n *\r\n * @borrows plugin:registerPlugin as videojs.registerPlugin\r\n * @method registerPlugin\r\n *\r\n * @param  {string} name\r\n *         The name of the plugin to be registered. Must be a string and\r\n *         must not match an existing plugin or a method on the `Player`\r\n *         prototype.\r\n *\r\n * @param  {Function} plugin\r\n *         A sub-class of `Plugin` or a function for basic plugins.\r\n *\r\n * @return {Function}\r\n *         For advanced plugins, a factory function for that plugin. For\r\n *         basic plugins, a wrapper function that initializes the plugin.\r\n */\r\nvideojs.registerPlugin = Plugin.registerPlugin;\r\n\r\n/**\r\n * Deregister a Video.js plugin.\r\n *\r\n * @borrows plugin:deregisterPlugin as videojs.deregisterPlugin\r\n * @method deregisterPlugin\r\n *\r\n * @param  {string} name\r\n *         The name of the plugin to be deregistered. Must be a string and\r\n *         must match an existing plugin or a method on the `Player`\r\n *         prototype.\r\n *\r\n */\r\nvideojs.deregisterPlugin = Plugin.deregisterPlugin;\r\n\r\n/**\r\n * Deprecated method to register a plugin with Video.js\r\n *\r\n * @deprecated\r\n *        videojs.plugin() is deprecated; use videojs.registerPlugin() instead\r\n *\r\n * @param {string} name\r\n *        The plugin name\r\n *\r\n * @param {Plugin|Function} plugin\r\n *         The plugin sub-class or function\r\n */\r\nvideojs.plugin = function (name$$1, plugin) {\r\n  log.warn('videojs.plugin() is deprecated; use videojs.registerPlugin() instead');\r\n  return Plugin.registerPlugin(name$$1, plugin);\r\n};\r\n\r\n/**\r\n * Gets an object containing multiple Video.js plugins.\r\n *\r\n * @param  {Array} [names]\r\n *         If provided, should be an array of plugin names. Defaults to _all_\r\n *         plugin names.\r\n *\r\n * @return {Object|undefined}\r\n *         An object containing plugin(s) associated with their name(s) or\r\n *         `undefined` if no matching plugins exist).\r\n */\r\nvideojs.getPlugins = Plugin.getPlugins;\r\n\r\n/**\r\n * Gets a plugin by name if it exists.\r\n *\r\n * @param  {string} name\r\n *         The name of a plugin.\r\n *\r\n * @return {Function|undefined}\r\n *         The plugin (or `undefined`).\r\n */\r\nvideojs.getPlugin = Plugin.getPlugin;\r\n\r\n/**\r\n * Gets a plugin's version, if available\r\n *\r\n * @param  {string} name\r\n *         The name of a plugin.\r\n *\r\n * @return {string}\r\n *         The plugin's version or an empty string.\r\n */\r\nvideojs.getPluginVersion = Plugin.getPluginVersion;\r\n\r\n/**\r\n * Adding languages so that they're available to all players.\r\n * Example: `videojs.addLanguage('es', { 'Hello': 'Hola' });`\r\n *\r\n * @param {string} code\r\n *        The language code or dictionary property\r\n *\r\n * @param {Object} data\r\n *        The data values to be translated\r\n *\r\n * @return {Object}\r\n *         The resulting language dictionary object\r\n */\r\nvideojs.addLanguage = function (code, data) {\r\n  var _mergeOptions;\r\n\r\n  code = ('' + code).toLowerCase();\r\n\r\n  videojs.options.languages = mergeOptions(videojs.options.languages, (_mergeOptions = {}, _mergeOptions[code] = data, _mergeOptions));\r\n\r\n  return videojs.options.languages[code];\r\n};\r\n\r\n/**\r\n * Log messages\r\n *\r\n * @borrows log:log as videojs.log\r\n */\r\nvideojs.log = log;\r\nvideojs.createLogger = createLogger;\r\n\r\n/**\r\n * Creates an emulated TimeRange object.\r\n *\r\n * @borrows time-ranges:createTimeRanges as videojs.createTimeRange\r\n */\r\n/**\r\n * @borrows time-ranges:createTimeRanges as videojs.createTimeRanges\r\n */\r\nvideojs.createTimeRange = videojs.createTimeRanges = createTimeRanges;\r\n\r\n/**\r\n * Format seconds as a time string, H:MM:SS or M:SS\r\n * Supplying a guide (in seconds) will force a number of leading zeros\r\n * to cover the length of the guide\r\n *\r\n * @borrows format-time:formatTime as videojs.formatTime\r\n */\r\nvideojs.formatTime = formatTime;\r\n\r\n/**\r\n * Replaces format-time with a custom implementation, to be used in place of the default.\r\n *\r\n * @borrows format-time:setFormatTime as videojs.setFormatTime\r\n *\r\n * @method setFormatTime\r\n *\r\n * @param {Function} customFn\r\n *        A custom format-time function which will be called with the current time and guide (in seconds) as arguments.\r\n *        Passed fn should return a string.\r\n */\r\nvideojs.setFormatTime = setFormatTime;\r\n\r\n/**\r\n * Resets format-time to the default implementation.\r\n *\r\n * @borrows format-time:resetFormatTime as videojs.resetFormatTime\r\n *\r\n * @method resetFormatTime\r\n */\r\nvideojs.resetFormatTime = resetFormatTime;\r\n\r\n/**\r\n * Resolve and parse the elements of a URL\r\n *\r\n * @borrows url:parseUrl as videojs.parseUrl\r\n *\r\n */\r\nvideojs.parseUrl = parseUrl;\r\n\r\n/**\r\n * Returns whether the url passed is a cross domain request or not.\r\n *\r\n * @borrows url:isCrossOrigin as videojs.isCrossOrigin\r\n */\r\nvideojs.isCrossOrigin = isCrossOrigin;\r\n\r\n/**\r\n * Event target class.\r\n *\r\n * @borrows EventTarget as videojs.EventTarget\r\n */\r\nvideojs.EventTarget = EventTarget;\r\n\r\n/**\r\n * Add an event listener to element\r\n * It stores the handler function in a separate cache object\r\n * and adds a generic handler to the element's event,\r\n * along with a unique id (guid) to the element.\r\n *\r\n * @borrows events:on as videojs.on\r\n */\r\nvideojs.on = on;\r\n\r\n/**\r\n * Trigger a listener only once for an event\r\n *\r\n * @borrows events:one as videojs.one\r\n */\r\nvideojs.one = one;\r\n\r\n/**\r\n * Removes event listeners from an element\r\n *\r\n * @borrows events:off as videojs.off\r\n */\r\nvideojs.off = off;\r\n\r\n/**\r\n * Trigger an event for an element\r\n *\r\n * @borrows events:trigger as videojs.trigger\r\n */\r\nvideojs.trigger = trigger;\r\n\r\n/**\r\n * A cross-browser XMLHttpRequest wrapper. Here's a simple example:\r\n *\r\n * @param {Object} options\r\n *        settings for the request.\r\n *\r\n * @return {XMLHttpRequest|XDomainRequest}\r\n *         The request object.\r\n *\r\n * @see https://github.com/Raynos/xhr\r\n */\r\nvideojs.xhr = xhr;\r\n\r\n/**\r\n * TextTrack class\r\n *\r\n * @borrows TextTrack as videojs.TextTrack\r\n */\r\nvideojs.TextTrack = TextTrack;\r\n\r\n/**\r\n * export the AudioTrack class so that source handlers can create\r\n * AudioTracks and then add them to the players AudioTrackList\r\n *\r\n * @borrows AudioTrack as videojs.AudioTrack\r\n */\r\nvideojs.AudioTrack = AudioTrack;\r\n\r\n/**\r\n * export the VideoTrack class so that source handlers can create\r\n * VideoTracks and then add them to the players VideoTrackList\r\n *\r\n * @borrows VideoTrack as videojs.VideoTrack\r\n */\r\nvideojs.VideoTrack = VideoTrack;\r\n\r\n/**\r\n * Determines, via duck typing, whether or not a value is a DOM element.\r\n *\r\n * @borrows dom:isEl as videojs.isEl\r\n * @deprecated Use videojs.dom.isEl() instead\r\n */\r\n\r\n/**\r\n * Determines, via duck typing, whether or not a value is a text node.\r\n *\r\n * @borrows dom:isTextNode as videojs.isTextNode\r\n * @deprecated Use videojs.dom.isTextNode() instead\r\n */\r\n\r\n/**\r\n * Creates an element and applies properties.\r\n *\r\n * @borrows dom:createEl as videojs.createEl\r\n * @deprecated Use videojs.dom.createEl() instead\r\n */\r\n\r\n/**\r\n * Check if an element has a CSS class\r\n *\r\n * @borrows dom:hasElClass as videojs.hasClass\r\n * @deprecated Use videojs.dom.hasClass() instead\r\n */\r\n\r\n/**\r\n * Add a CSS class name to an element\r\n *\r\n * @borrows dom:addElClass as videojs.addClass\r\n * @deprecated Use videojs.dom.addClass() instead\r\n */\r\n\r\n/**\r\n * Remove a CSS class name from an element\r\n *\r\n * @borrows dom:removeElClass as videojs.removeClass\r\n * @deprecated Use videojs.dom.removeClass() instead\r\n */\r\n\r\n/**\r\n * Adds or removes a CSS class name on an element depending on an optional\r\n * condition or the presence/absence of the class name.\r\n *\r\n * @borrows dom:toggleElClass as videojs.toggleClass\r\n * @deprecated Use videojs.dom.toggleClass() instead\r\n */\r\n\r\n/**\r\n * Apply attributes to an HTML element.\r\n *\r\n * @borrows dom:setElAttributes as videojs.setAttribute\r\n * @deprecated Use videojs.dom.setAttributes() instead\r\n */\r\n\r\n/**\r\n * Get an element's attribute values, as defined on the HTML tag\r\n * Attributes are not the same as properties. They're defined on the tag\r\n * or with setAttribute (which shouldn't be used with HTML)\r\n * This will return true or false for boolean attributes.\r\n *\r\n * @borrows dom:getElAttributes as videojs.getAttributes\r\n * @deprecated Use videojs.dom.getAttributes() instead\r\n */\r\n\r\n/**\r\n * Empties the contents of an element.\r\n *\r\n * @borrows dom:emptyEl as videojs.emptyEl\r\n * @deprecated Use videojs.dom.emptyEl() instead\r\n */\r\n\r\n/**\r\n * Normalizes and appends content to an element.\r\n *\r\n * The content for an element can be passed in multiple types and\r\n * combinations, whose behavior is as follows:\r\n *\r\n * - String\r\n *   Normalized into a text node.\r\n *\r\n * - Element, TextNode\r\n *   Passed through.\r\n *\r\n * - Array\r\n *   A one-dimensional array of strings, elements, nodes, or functions (which\r\n *   return single strings, elements, or nodes).\r\n *\r\n * - Function\r\n *   If the sole argument, is expected to produce a string, element,\r\n *   node, or array.\r\n *\r\n * @borrows dom:appendContents as videojs.appendContet\r\n * @deprecated Use videojs.dom.appendContent() instead\r\n */\r\n\r\n/**\r\n * Normalizes and inserts content into an element; this is identical to\r\n * `appendContent()`, except it empties the element first.\r\n *\r\n * The content for an element can be passed in multiple types and\r\n * combinations, whose behavior is as follows:\r\n *\r\n * - String\r\n *   Normalized into a text node.\r\n *\r\n * - Element, TextNode\r\n *   Passed through.\r\n *\r\n * - Array\r\n *   A one-dimensional array of strings, elements, nodes, or functions (which\r\n *   return single strings, elements, or nodes).\r\n *\r\n * - Function\r\n *   If the sole argument, is expected to produce a string, element,\r\n *   node, or array.\r\n *\r\n * @borrows dom:insertContent as videojs.insertContent\r\n * @deprecated Use videojs.dom.insertContent() instead\r\n */\r\n['isEl', 'isTextNode', 'createEl', 'hasClass', 'addClass', 'removeClass', 'toggleClass', 'setAttributes', 'getAttributes', 'emptyEl', 'appendContent', 'insertContent'].forEach(function (k) {\r\n  videojs[k] = function () {\r\n    log.warn('videojs.' + k + '() is deprecated; use videojs.dom.' + k + '() instead');\r\n    return Dom[k].apply(null, arguments);\r\n  };\r\n});\r\n\r\n/**\r\n * A safe getComputedStyle with an IE8 fallback.\r\n *\r\n * This is because in Firefox, if the player is loaded in an iframe with `display:none`,\r\n * then `getComputedStyle` returns `null`, so, we do a null-check to make sure\r\n * that the player doesn't break in these cases.\r\n * See https://bugzilla.mozilla.org/show_bug.cgi?id=548397 for more details.\r\n *\r\n * @borrows computed-style:computedStyle as videojs.computedStyle\r\n */\r\nvideojs.computedStyle = computedStyle;\r\n\r\n/**\r\n * Export the Dom utilities for use in external plugins\r\n * and Tech's\r\n */\r\nvideojs.dom = Dom;\r\n\r\n/**\r\n * Export the Url utilities for use in external plugins\r\n * and Tech's\r\n */\r\nvideojs.url = Url;\r\n\r\nmodule.exports = videojs;\r\n","module.exports = function isPrimitive(value) {\r\n\treturn value === null || (typeof value !== 'function' && typeof value !== 'object');\r\n};\r\n","module.exports = extend\r\n\r\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\r\n\r\nfunction extend() {\r\n    var target = {}\r\n\r\n    for (var i = 0; i < arguments.length; i++) {\r\n        var source = arguments[i]\r\n\r\n        for (var key in source) {\r\n            if (hasOwnProperty.call(source, key)) {\r\n                target[key] = source[key]\r\n            }\r\n        }\r\n    }\r\n\r\n    return target\r\n}\r\n","'use strict';\r\n\r\nvar bind = require('function-bind');\r\nvar ES = require('es-abstract/es5');\r\nvar replace = bind.call(Function.call, String.prototype.replace);\r\n\r\n/* eslint-disable no-control-regex */\r\nvar leftWhitespace = /^[\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF]+/;\r\nvar rightWhitespace = /[\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF]+$/;\r\n/* eslint-enable no-control-regex */\r\n\r\nmodule.exports = function trim() {\r\n\tvar S = ES.ToString(ES.CheckObjectCoercible(this));\r\n\treturn replace(replace(S, leftWhitespace, ''), rightWhitespace, '');\r\n};\r\n","module.exports = function sign(number) {\r\n\treturn number >= 0 ? 1 : -1;\r\n};\r\n","var trim = require('string.prototype.trim')\r\n  , forEach = require('for-each')\r\n  , isArray = function(arg) {\r\n      return Object.prototype.toString.call(arg) === '[object Array]';\r\n    }\r\n\r\nmodule.exports = function (headers) {\r\n  if (!headers)\r\n    return {}\r\n\r\n  var result = {}\r\n\r\n  forEach(\r\n      trim(headers).split('\\n')\r\n    , function (row) {\r\n        var index = row.indexOf(':')\r\n          , key = trim(row.slice(0, index)).toLowerCase()\r\n          , value = trim(row.slice(index + 1))\r\n\r\n        if (typeof(result[key]) === 'undefined') {\r\n          result[key] = value\r\n        } else if (isArray(result[key])) {\r\n          result[key].push(value)\r\n        } else {\r\n          result[key] = [ result[key], value ]\r\n        }\r\n      }\r\n  )\r\n\r\n  return result\r\n}\r\n","var win;\r\n\r\nif (typeof window !== \"undefined\") {\r\n    win = window;\r\n} else if (typeof global !== \"undefined\") {\r\n    win = global;\r\n} else if (typeof self !== \"undefined\"){\r\n    win = self;\r\n} else {\r\n    win = {};\r\n}\r\n\r\nmodule.exports = win;\r\n","'use strict';\r\n\r\n/* eslint no-invalid-this: 1 */\r\n\r\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\r\nvar slice = Array.prototype.slice;\r\nvar toStr = Object.prototype.toString;\r\nvar funcType = '[object Function]';\r\n\r\nmodule.exports = function bind(that) {\r\n    var target = this;\r\n    if (typeof target !== 'function' || toStr.call(target) !== funcType) {\r\n        throw new TypeError(ERROR_MESSAGE + target);\r\n    }\r\n    var args = slice.call(arguments, 1);\r\n\r\n    var bound;\r\n    var binder = function () {\r\n        if (this instanceof bound) {\r\n            var result = target.apply(\r\n                this,\r\n                args.concat(slice.call(arguments))\r\n            );\r\n            if (Object(result) === result) {\r\n                return result;\r\n            }\r\n            return this;\r\n        } else {\r\n            return target.apply(\r\n                that,\r\n                args.concat(slice.call(arguments))\r\n            );\r\n        }\r\n    };\r\n\r\n    var boundLength = Math.max(0, target.length - args.length);\r\n    var boundArgs = [];\r\n    for (var i = 0; i < boundLength; i++) {\r\n        boundArgs.push('$' + i);\r\n    }\r\n\r\n    bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this,arguments); }')(binder);\r\n\r\n    if (target.prototype) {\r\n        var Empty = function Empty() {};\r\n        Empty.prototype = target.prototype;\r\n        bound.prototype = new Empty();\r\n        Empty.prototype = null;\r\n    }\r\n\r\n    return bound;\r\n};\r\n","module.exports = isFunction\r\n\r\nvar toString = Object.prototype.toString\r\n\r\nfunction isFunction (fn) {\r\n  var string = toString.call(fn)\r\n  return string === '[object Function]' ||\r\n    (typeof fn === 'function' && string !== '[object RegExp]') ||\r\n    (typeof window !== 'undefined' &&\r\n     // IE8 and below\r\n     (fn === window.setTimeout ||\r\n      fn === window.alert ||\r\n      fn === window.confirm ||\r\n      fn === window.prompt))\r\n};\r\n","module.exports = SafeParseTuple\r\n\r\nfunction SafeParseTuple(obj, reviver) {\r\n    var json\r\n    var error = null\r\n\r\n    try {\r\n        json = JSON.parse(obj, reviver)\r\n    } catch (err) {\r\n        error = err\r\n    }\r\n\r\n    return [error, json]\r\n}\r\n","'use strict';\r\n\r\nvar bind = require('function-bind');\r\n\r\nmodule.exports = bind.call(Function.call, Object.prototype.hasOwnProperty);\r\n","/**\r\n * Copyright 2013 vtt.js Contributors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nvar autoKeyword = \"auto\";\r\nvar directionSetting = {\r\n  \"\": true,\r\n  \"lr\": true,\r\n  \"rl\": true\r\n};\r\nvar alignSetting = {\r\n  \"start\": true,\r\n  \"middle\": true,\r\n  \"end\": true,\r\n  \"left\": true,\r\n  \"right\": true\r\n};\r\n\r\nfunction findDirectionSetting(value) {\r\n  if (typeof value !== \"string\") {\r\n    return false;\r\n  }\r\n  var dir = directionSetting[value.toLowerCase()];\r\n  return dir ? value.toLowerCase() : false;\r\n}\r\n\r\nfunction findAlignSetting(value) {\r\n  if (typeof value !== \"string\") {\r\n    return false;\r\n  }\r\n  var align = alignSetting[value.toLowerCase()];\r\n  return align ? value.toLowerCase() : false;\r\n}\r\n\r\nfunction extend(obj) {\r\n  var i = 1;\r\n  for (; i < arguments.length; i++) {\r\n    var cobj = arguments[i];\r\n    for (var p in cobj) {\r\n      obj[p] = cobj[p];\r\n    }\r\n  }\r\n\r\n  return obj;\r\n}\r\n\r\nfunction VTTCue(startTime, endTime, text) {\r\n  var cue = this;\r\n  var isIE8 = (/MSIE\\s8\\.0/).test(navigator.userAgent);\r\n  var baseObj = {};\r\n\r\n  if (isIE8) {\r\n    cue = document.createElement('custom');\r\n  } else {\r\n    baseObj.enumerable = true;\r\n  }\r\n\r\n  /**\r\n   * Shim implementation specific properties. These properties are not in\r\n   * the spec.\r\n   */\r\n\r\n  // Lets us know when the VTTCue's data has changed in such a way that we need\r\n  // to recompute its display state. This lets us compute its display state\r\n  // lazily.\r\n  cue.hasBeenReset = false;\r\n\r\n  /**\r\n   * VTTCue and TextTrackCue properties\r\n   * http://dev.w3.org/html5/webvtt/#vttcue-interface\r\n   */\r\n\r\n  var _id = \"\";\r\n  var _pauseOnExit = false;\r\n  var _startTime = startTime;\r\n  var _endTime = endTime;\r\n  var _text = text;\r\n  var _region = null;\r\n  var _vertical = \"\";\r\n  var _snapToLines = true;\r\n  var _line = \"auto\";\r\n  var _lineAlign = \"start\";\r\n  var _position = 50;\r\n  var _positionAlign = \"middle\";\r\n  var _size = 50;\r\n  var _align = \"middle\";\r\n\r\n  Object.defineProperty(cue,\r\n    \"id\", extend({}, baseObj, {\r\n      get: function() {\r\n        return _id;\r\n      },\r\n      set: function(value) {\r\n        _id = \"\" + value;\r\n      }\r\n    }));\r\n\r\n  Object.defineProperty(cue,\r\n    \"pauseOnExit\", extend({}, baseObj, {\r\n      get: function() {\r\n        return _pauseOnExit;\r\n      },\r\n      set: function(value) {\r\n        _pauseOnExit = !!value;\r\n      }\r\n    }));\r\n\r\n  Object.defineProperty(cue,\r\n    \"startTime\", extend({}, baseObj, {\r\n      get: function() {\r\n        return _startTime;\r\n      },\r\n      set: function(value) {\r\n        if (typeof value !== \"number\") {\r\n          throw new TypeError(\"Start time must be set to a number.\");\r\n        }\r\n        _startTime = value;\r\n        this.hasBeenReset = true;\r\n      }\r\n    }));\r\n\r\n  Object.defineProperty(cue,\r\n    \"endTime\", extend({}, baseObj, {\r\n      get: function() {\r\n        return _endTime;\r\n      },\r\n      set: function(value) {\r\n        if (typeof value !== \"number\") {\r\n          throw new TypeError(\"End time must be set to a number.\");\r\n        }\r\n        _endTime = value;\r\n        this.hasBeenReset = true;\r\n      }\r\n    }));\r\n\r\n  Object.defineProperty(cue,\r\n    \"text\", extend({}, baseObj, {\r\n      get: function() {\r\n        return _text;\r\n      },\r\n      set: function(value) {\r\n        _text = \"\" + value;\r\n        this.hasBeenReset = true;\r\n      }\r\n    }));\r\n\r\n  Object.defineProperty(cue,\r\n    \"region\", extend({}, baseObj, {\r\n      get: function() {\r\n        return _region;\r\n      },\r\n      set: function(value) {\r\n        _region = value;\r\n        this.hasBeenReset = true;\r\n      }\r\n    }));\r\n\r\n  Object.defineProperty(cue,\r\n    \"vertical\", extend({}, baseObj, {\r\n      get: function() {\r\n        return _vertical;\r\n      },\r\n      set: function(value) {\r\n        var setting = findDirectionSetting(value);\r\n        // Have to check for false because the setting an be an empty string.\r\n        if (setting === false) {\r\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\r\n        }\r\n        _vertical = setting;\r\n        this.hasBeenReset = true;\r\n      }\r\n    }));\r\n\r\n  Object.defineProperty(cue,\r\n    \"snapToLines\", extend({}, baseObj, {\r\n      get: function() {\r\n        return _snapToLines;\r\n      },\r\n      set: function(value) {\r\n        _snapToLines = !!value;\r\n        this.hasBeenReset = true;\r\n      }\r\n    }));\r\n\r\n  Object.defineProperty(cue,\r\n    \"line\", extend({}, baseObj, {\r\n      get: function() {\r\n        return _line;\r\n      },\r\n      set: function(value) {\r\n        if (typeof value !== \"number\" && value !== autoKeyword) {\r\n          throw new SyntaxError(\"An invalid number or illegal string was specified.\");\r\n        }\r\n        _line = value;\r\n        this.hasBeenReset = true;\r\n      }\r\n    }));\r\n\r\n  Object.defineProperty(cue,\r\n    \"lineAlign\", extend({}, baseObj, {\r\n      get: function() {\r\n        return _lineAlign;\r\n      },\r\n      set: function(value) {\r\n        var setting = findAlignSetting(value);\r\n        if (!setting) {\r\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\r\n        }\r\n        _lineAlign = setting;\r\n        this.hasBeenReset = true;\r\n      }\r\n    }));\r\n\r\n  Object.defineProperty(cue,\r\n    \"position\", extend({}, baseObj, {\r\n      get: function() {\r\n        return _position;\r\n      },\r\n      set: function(value) {\r\n        if (value < 0 || value > 100) {\r\n          throw new Error(\"Position must be between 0 and 100.\");\r\n        }\r\n        _position = value;\r\n        this.hasBeenReset = true;\r\n      }\r\n    }));\r\n\r\n  Object.defineProperty(cue,\r\n    \"positionAlign\", extend({}, baseObj, {\r\n      get: function() {\r\n        return _positionAlign;\r\n      },\r\n      set: function(value) {\r\n        var setting = findAlignSetting(value);\r\n        if (!setting) {\r\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\r\n        }\r\n        _positionAlign = setting;\r\n        this.hasBeenReset = true;\r\n      }\r\n    }));\r\n\r\n  Object.defineProperty(cue,\r\n    \"size\", extend({}, baseObj, {\r\n      get: function() {\r\n        return _size;\r\n      },\r\n      set: function(value) {\r\n        if (value < 0 || value > 100) {\r\n          throw new Error(\"Size must be between 0 and 100.\");\r\n        }\r\n        _size = value;\r\n        this.hasBeenReset = true;\r\n      }\r\n    }));\r\n\r\n  Object.defineProperty(cue,\r\n    \"align\", extend({}, baseObj, {\r\n      get: function() {\r\n        return _align;\r\n      },\r\n      set: function(value) {\r\n        var setting = findAlignSetting(value);\r\n        if (!setting) {\r\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\r\n        }\r\n        _align = setting;\r\n        this.hasBeenReset = true;\r\n      }\r\n    }));\r\n\r\n  /**\r\n   * Other <track> spec defined properties\r\n   */\r\n\r\n  // http://www.whatwg.org/specs/web-apps/current-work/multipage/the-video-element.html#text-track-cue-display-state\r\n  cue.displayState = undefined;\r\n\r\n  if (isIE8) {\r\n    return cue;\r\n  }\r\n}\r\n\r\n/**\r\n * VTTCue methods\r\n */\r\n\r\nVTTCue.prototype.getCueAsHTML = function() {\r\n  // Assume WebVTT.convertCueToDOMTree is on the global.\r\n  return WebVTT.convertCueToDOMTree(window, this.text);\r\n};\r\n\r\nmodule.exports = VTTCue;\r\n","'use strict';\r\n\r\nvar keysShim;\r\nif (!Object.keys) {\r\n\t// modified from https://github.com/es-shims/es5-shim\r\n\tvar has = Object.prototype.hasOwnProperty;\r\n\tvar toStr = Object.prototype.toString;\r\n\tvar isArgs = require('./isArguments'); // eslint-disable-line global-require\r\n\tvar isEnumerable = Object.prototype.propertyIsEnumerable;\r\n\tvar hasDontEnumBug = !isEnumerable.call({ toString: null }, 'toString');\r\n\tvar hasProtoEnumBug = isEnumerable.call(function () {}, 'prototype');\r\n\tvar dontEnums = [\r\n\t\t'toString',\r\n\t\t'toLocaleString',\r\n\t\t'valueOf',\r\n\t\t'hasOwnProperty',\r\n\t\t'isPrototypeOf',\r\n\t\t'propertyIsEnumerable',\r\n\t\t'constructor'\r\n\t];\r\n\tvar equalsConstructorPrototype = function (o) {\r\n\t\tvar ctor = o.constructor;\r\n\t\treturn ctor && ctor.prototype === o;\r\n\t};\r\n\tvar excludedKeys = {\r\n\t\t$applicationCache: true,\r\n\t\t$console: true,\r\n\t\t$external: true,\r\n\t\t$frame: true,\r\n\t\t$frameElement: true,\r\n\t\t$frames: true,\r\n\t\t$innerHeight: true,\r\n\t\t$innerWidth: true,\r\n\t\t$onmozfullscreenchange: true,\r\n\t\t$onmozfullscreenerror: true,\r\n\t\t$outerHeight: true,\r\n\t\t$outerWidth: true,\r\n\t\t$pageXOffset: true,\r\n\t\t$pageYOffset: true,\r\n\t\t$parent: true,\r\n\t\t$scrollLeft: true,\r\n\t\t$scrollTop: true,\r\n\t\t$scrollX: true,\r\n\t\t$scrollY: true,\r\n\t\t$self: true,\r\n\t\t$webkitIndexedDB: true,\r\n\t\t$webkitStorageInfo: true,\r\n\t\t$window: true\r\n\t};\r\n\tvar hasAutomationEqualityBug = (function () {\r\n\t\t/* global window */\r\n\t\tif (typeof window === 'undefined') { return false; }\r\n\t\tfor (var k in window) {\r\n\t\t\ttry {\r\n\t\t\t\tif (!excludedKeys['$' + k] && has.call(window, k) && window[k] !== null && typeof window[k] === 'object') {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tequalsConstructorPrototype(window[k]);\r\n\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} catch (e) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}());\r\n\tvar equalsConstructorPrototypeIfNotBuggy = function (o) {\r\n\t\t/* global window */\r\n\t\tif (typeof window === 'undefined' || !hasAutomationEqualityBug) {\r\n\t\t\treturn equalsConstructorPrototype(o);\r\n\t\t}\r\n\t\ttry {\r\n\t\t\treturn equalsConstructorPrototype(o);\r\n\t\t} catch (e) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t};\r\n\r\n\tkeysShim = function keys(object) {\r\n\t\tvar isObject = object !== null && typeof object === 'object';\r\n\t\tvar isFunction = toStr.call(object) === '[object Function]';\r\n\t\tvar isArguments = isArgs(object);\r\n\t\tvar isString = isObject && toStr.call(object) === '[object String]';\r\n\t\tvar theKeys = [];\r\n\r\n\t\tif (!isObject && !isFunction && !isArguments) {\r\n\t\t\tthrow new TypeError('Object.keys called on a non-object');\r\n\t\t}\r\n\r\n\t\tvar skipProto = hasProtoEnumBug && isFunction;\r\n\t\tif (isString && object.length > 0 && !has.call(object, 0)) {\r\n\t\t\tfor (var i = 0; i < object.length; ++i) {\r\n\t\t\t\ttheKeys.push(String(i));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (isArguments && object.length > 0) {\r\n\t\t\tfor (var j = 0; j < object.length; ++j) {\r\n\t\t\t\ttheKeys.push(String(j));\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tfor (var name in object) {\r\n\t\t\t\tif (!(skipProto && name === 'prototype') && has.call(object, name)) {\r\n\t\t\t\t\ttheKeys.push(String(name));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (hasDontEnumBug) {\r\n\t\t\tvar skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);\r\n\r\n\t\t\tfor (var k = 0; k < dontEnums.length; ++k) {\r\n\t\t\t\tif (!(skipConstructor && dontEnums[k] === 'constructor') && has.call(object, dontEnums[k])) {\r\n\t\t\t\t\ttheKeys.push(dontEnums[k]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn theKeys;\r\n\t};\r\n}\r\nmodule.exports = keysShim;\r\n","'use strict';\r\n\r\nvar define = require('define-properties');\r\nvar getPolyfill = require('./polyfill');\r\n\r\nmodule.exports = function shimStringTrim() {\r\n\tvar polyfill = getPolyfill();\r\n\tdefine(String.prototype, { trim: polyfill }, {\r\n\t\ttrim: function testTrim() {\r\n\t\t\treturn String.prototype.trim !== polyfill;\r\n\t\t}\r\n\t});\r\n\treturn polyfill;\r\n};\r\n","module.exports = function mod(number, modulo) {\r\n\tvar remain = number % modulo;\r\n\treturn Math.floor(remain >= 0 ? remain : remain + modulo);\r\n};\r\n","var win;\r\n\r\nif (typeof window !== \"undefined\") {\r\n    win = window;\r\n} else if (typeof global !== \"undefined\") {\r\n    win = global;\r\n} else if (typeof self !== \"undefined\"){\r\n    win = self;\r\n} else {\r\n    win = {};\r\n}\r\n\r\nmodule.exports = win;\r\n","'use strict';\r\n\r\nvar GetIntrinsic = require('../GetIntrinsic');\r\n\r\nvar $TypeError = GetIntrinsic('%TypeError%');\r\nvar $SyntaxError = GetIntrinsic('%SyntaxError%');\r\n\r\nvar has = require('has');\r\n\r\nvar predicates = {\r\n  // https://ecma-international.org/ecma-262/6.0/#sec-property-descriptor-specification-type\r\n  'Property Descriptor': function isPropertyDescriptor(ES, Desc) {\r\n    if (ES.Type(Desc) !== 'Object') {\r\n      return false;\r\n    }\r\n    var allowed = {\r\n      '[[Configurable]]': true,\r\n      '[[Enumerable]]': true,\r\n      '[[Get]]': true,\r\n      '[[Set]]': true,\r\n      '[[Value]]': true,\r\n      '[[Writable]]': true\r\n    };\r\n\r\n    for (var key in Desc) { // eslint-disable-line\r\n      if (has(Desc, key) && !allowed[key]) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    var isData = has(Desc, '[[Value]]');\r\n    var IsAccessor = has(Desc, '[[Get]]') || has(Desc, '[[Set]]');\r\n    if (isData && IsAccessor) {\r\n      throw new $TypeError('Property Descriptors may not be both accessor and data descriptors');\r\n    }\r\n    return true;\r\n  }\r\n};\r\n\r\nmodule.exports = function assertRecord(ES, recordType, argumentName, value) {\r\n  var predicate = predicates[recordType];\r\n  if (typeof predicate !== 'function') {\r\n    throw new $SyntaxError('unknown record type: ' + recordType);\r\n  }\r\n  if (!predicate(ES, value)) {\r\n    throw new $TypeError(argumentName + ' must be a ' + recordType);\r\n  }\r\n  console.log(predicate(ES, value), value);\r\n};\r\n","var $isNaN = Number.isNaN || function (a) { return a !== a; };\r\n\r\nmodule.exports = Number.isFinite || function (x) { return typeof x === 'number' && !$isNaN(x) && x !== Infinity && x !== -Infinity; };\r\n","'use strict';\r\n\r\nvar bind = require('function-bind');\r\nvar define = require('define-properties');\r\n\r\nvar implementation = require('./implementation');\r\nvar getPolyfill = require('./polyfill');\r\nvar shim = require('./shim');\r\n\r\nvar boundTrim = bind.call(Function.call, getPolyfill());\r\n\r\ndefine(boundTrim, {\r\n\tgetPolyfill: getPolyfill,\r\n\timplementation: implementation,\r\n\tshim: shim\r\n});\r\n\r\nmodule.exports = boundTrim;\r\n","var topLevel = typeof global !== 'undefined' ? global :\r\n    typeof window !== 'undefined' ? window : {}\r\nvar minDoc = require('min-document');\r\n\r\nvar doccy;\r\n\r\nif (typeof document !== 'undefined') {\r\n    doccy = document;\r\n} else {\r\n    doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];\r\n\r\n    if (!doccy) {\r\n        doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;\r\n    }\r\n}\r\n\r\nmodule.exports = doccy;\r\n","'use strict';\r\n\r\nvar isCallable = require('is-callable');\r\n\r\nvar toStr = Object.prototype.toString;\r\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\r\n\r\nvar forEachArray = function forEachArray(array, iterator, receiver) {\r\n    for (var i = 0, len = array.length; i < len; i++) {\r\n        if (hasOwnProperty.call(array, i)) {\r\n            if (receiver == null) {\r\n                iterator(array[i], i, array);\r\n            } else {\r\n                iterator.call(receiver, array[i], i, array);\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nvar forEachString = function forEachString(string, iterator, receiver) {\r\n    for (var i = 0, len = string.length; i < len; i++) {\r\n        // no such thing as a sparse string.\r\n        if (receiver == null) {\r\n            iterator(string.charAt(i), i, string);\r\n        } else {\r\n            iterator.call(receiver, string.charAt(i), i, string);\r\n        }\r\n    }\r\n};\r\n\r\nvar forEachObject = function forEachObject(object, iterator, receiver) {\r\n    for (var k in object) {\r\n        if (hasOwnProperty.call(object, k)) {\r\n            if (receiver == null) {\r\n                iterator(object[k], k, object);\r\n            } else {\r\n                iterator.call(receiver, object[k], k, object);\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nvar forEach = function forEach(list, iterator, thisArg) {\r\n    if (!isCallable(iterator)) {\r\n        throw new TypeError('iterator must be a function');\r\n    }\r\n\r\n    var receiver;\r\n    if (arguments.length >= 3) {\r\n        receiver = thisArg;\r\n    }\r\n\r\n    if (toStr.call(list) === '[object Array]') {\r\n        forEachArray(list, iterator, receiver);\r\n    } else if (typeof list === 'string') {\r\n        forEachString(list, iterator, receiver);\r\n    } else {\r\n        forEachObject(list, iterator, receiver);\r\n    }\r\n};\r\n\r\nmodule.exports = forEach;\r\n","/**\r\n * Copyright 2013 vtt.js Contributors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n/* -*- Mode: Java; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\r\n/* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */\r\nvar _objCreate = Object.create || (function() {\r\n  function F() {}\r\n  return function(o) {\r\n    if (arguments.length !== 1) {\r\n      throw new Error('Object.create shim only accepts one parameter.');\r\n    }\r\n    F.prototype = o;\r\n    return new F();\r\n  };\r\n})();\r\n\r\n// Creates a new ParserError object from an errorData object. The errorData\r\n// object should have default code and message properties. The default message\r\n// property can be overriden by passing in a message parameter.\r\n// See ParsingError.Errors below for acceptable errors.\r\nfunction ParsingError(errorData, message) {\r\n  this.name = \"ParsingError\";\r\n  this.code = errorData.code;\r\n  this.message = message || errorData.message;\r\n}\r\nParsingError.prototype = _objCreate(Error.prototype);\r\nParsingError.prototype.constructor = ParsingError;\r\n\r\n// ParsingError metadata for acceptable ParsingErrors.\r\nParsingError.Errors = {\r\n  BadSignature: {\r\n    code: 0,\r\n    message: \"Malformed WebVTT signature.\"\r\n  },\r\n  BadTimeStamp: {\r\n    code: 1,\r\n    message: \"Malformed time stamp.\"\r\n  }\r\n};\r\n\r\n// Try to parse input as a time stamp.\r\nfunction parseTimeStamp(input) {\r\n\r\n  function computeSeconds(h, m, s, f) {\r\n    return (h | 0) * 3600 + (m | 0) * 60 + (s | 0) + (f | 0) / 1000;\r\n  }\r\n\r\n  var m = input.match(/^(\\d+):(\\d{2})(:\\d{2})?\\.(\\d{3})/);\r\n  if (!m) {\r\n    return null;\r\n  }\r\n\r\n  if (m[3]) {\r\n    // Timestamp takes the form of [hours]:[minutes]:[seconds].[milliseconds]\r\n    return computeSeconds(m[1], m[2], m[3].replace(\":\", \"\"), m[4]);\r\n  } else if (m[1] > 59) {\r\n    // Timestamp takes the form of [hours]:[minutes].[milliseconds]\r\n    // First position is hours as it's over 59.\r\n    return computeSeconds(m[1], m[2], 0,  m[4]);\r\n  } else {\r\n    // Timestamp takes the form of [minutes]:[seconds].[milliseconds]\r\n    return computeSeconds(0, m[1], m[2], m[4]);\r\n  }\r\n}\r\n\r\n// A settings object holds key/value pairs and will ignore anything but the first\r\n// assignment to a specific key.\r\nfunction Settings() {\r\n  this.values = _objCreate(null);\r\n}\r\n\r\nSettings.prototype = {\r\n  // Only accept the first assignment to any key.\r\n  set: function(k, v) {\r\n    if (!this.get(k) && v !== \"\") {\r\n      this.values[k] = v;\r\n    }\r\n  },\r\n  // Return the value for a key, or a default value.\r\n  // If 'defaultKey' is passed then 'dflt' is assumed to be an object with\r\n  // a number of possible default values as properties where 'defaultKey' is\r\n  // the key of the property that will be chosen; otherwise it's assumed to be\r\n  // a single value.\r\n  get: function(k, dflt, defaultKey) {\r\n    if (defaultKey) {\r\n      return this.has(k) ? this.values[k] : dflt[defaultKey];\r\n    }\r\n    return this.has(k) ? this.values[k] : dflt;\r\n  },\r\n  // Check whether we have a value for a key.\r\n  has: function(k) {\r\n    return k in this.values;\r\n  },\r\n  // Accept a setting if its one of the given alternatives.\r\n  alt: function(k, v, a) {\r\n    for (var n = 0; n < a.length; ++n) {\r\n      if (v === a[n]) {\r\n        this.set(k, v);\r\n        break;\r\n      }\r\n    }\r\n  },\r\n  // Accept a setting if its a valid (signed) integer.\r\n  integer: function(k, v) {\r\n    if (/^-?\\d+$/.test(v)) { // integer\r\n      this.set(k, parseInt(v, 10));\r\n    }\r\n  },\r\n  // Accept a setting if its a valid percentage.\r\n  percent: function(k, v) {\r\n    var m;\r\n    if ((m = v.match(/^([\\d]{1,3})(\\.[\\d]*)?%$/))) {\r\n      v = parseFloat(v);\r\n      if (v >= 0 && v <= 100) {\r\n        this.set(k, v);\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n};\r\n\r\n// Helper function to parse input into groups separated by 'groupDelim', and\r\n// interprete each group as a key/value pair separated by 'keyValueDelim'.\r\nfunction parseOptions(input, callback, keyValueDelim, groupDelim) {\r\n  var groups = groupDelim ? input.split(groupDelim) : [input];\r\n  for (var i in groups) {\r\n    if (typeof groups[i] !== \"string\") {\r\n      continue;\r\n    }\r\n    var kv = groups[i].split(keyValueDelim);\r\n    if (kv.length !== 2) {\r\n      continue;\r\n    }\r\n    var k = kv[0];\r\n    var v = kv[1];\r\n    callback(k, v);\r\n  }\r\n}\r\n\r\nfunction parseCue(input, cue, regionList) {\r\n  // Remember the original input if we need to throw an error.\r\n  var oInput = input;\r\n  // 4.1 WebVTT timestamp\r\n  function consumeTimeStamp() {\r\n    var ts = parseTimeStamp(input);\r\n    if (ts === null) {\r\n      throw new ParsingError(ParsingError.Errors.BadTimeStamp,\r\n                            \"Malformed timestamp: \" + oInput);\r\n    }\r\n    // Remove time stamp from input.\r\n    input = input.replace(/^[^\\sa-zA-Z-]+/, \"\");\r\n    return ts;\r\n  }\r\n\r\n  // 4.4.2 WebVTT cue settings\r\n  function consumeCueSettings(input, cue) {\r\n    var settings = new Settings();\r\n\r\n    parseOptions(input, function (k, v) {\r\n      switch (k) {\r\n      case \"region\":\r\n        // Find the last region we parsed with the same region id.\r\n        for (var i = regionList.length - 1; i >= 0; i--) {\r\n          if (regionList[i].id === v) {\r\n            settings.set(k, regionList[i].region);\r\n            break;\r\n          }\r\n        }\r\n        break;\r\n      case \"vertical\":\r\n        settings.alt(k, v, [\"rl\", \"lr\"]);\r\n        break;\r\n      case \"line\":\r\n        var vals = v.split(\",\"),\r\n            vals0 = vals[0];\r\n        settings.integer(k, vals0);\r\n        settings.percent(k, vals0) ? settings.set(\"snapToLines\", false) : null;\r\n        settings.alt(k, vals0, [\"auto\"]);\r\n        if (vals.length === 2) {\r\n          settings.alt(\"lineAlign\", vals[1], [\"start\", \"middle\", \"end\"]);\r\n        }\r\n        break;\r\n      case \"position\":\r\n        vals = v.split(\",\");\r\n        settings.percent(k, vals[0]);\r\n        if (vals.length === 2) {\r\n          settings.alt(\"positionAlign\", vals[1], [\"start\", \"middle\", \"end\"]);\r\n        }\r\n        break;\r\n      case \"size\":\r\n        settings.percent(k, v);\r\n        break;\r\n      case \"align\":\r\n        settings.alt(k, v, [\"start\", \"middle\", \"end\", \"left\", \"right\"]);\r\n        break;\r\n      }\r\n    }, /:/, /\\s/);\r\n\r\n    // Apply default values for any missing fields.\r\n    cue.region = settings.get(\"region\", null);\r\n    cue.vertical = settings.get(\"vertical\", \"\");\r\n    cue.line = settings.get(\"line\", \"auto\");\r\n    cue.lineAlign = settings.get(\"lineAlign\", \"start\");\r\n    cue.snapToLines = settings.get(\"snapToLines\", true);\r\n    cue.size = settings.get(\"size\", 100);\r\n    cue.align = settings.get(\"align\", \"middle\");\r\n    cue.position = settings.get(\"position\", {\r\n      start: 0,\r\n      left: 0,\r\n      middle: 50,\r\n      end: 100,\r\n      right: 100\r\n    }, cue.align);\r\n    cue.positionAlign = settings.get(\"positionAlign\", {\r\n      start: \"start\",\r\n      left: \"start\",\r\n      middle: \"middle\",\r\n      end: \"end\",\r\n      right: \"end\"\r\n    }, cue.align);\r\n  }\r\n\r\n  function skipWhitespace() {\r\n    input = input.replace(/^\\s+/, \"\");\r\n  }\r\n\r\n  // 4.1 WebVTT cue timings.\r\n  skipWhitespace();\r\n  cue.startTime = consumeTimeStamp();   // (1) collect cue start time\r\n  skipWhitespace();\r\n  if (input.substr(0, 3) !== \"-->\") {     // (3) next characters must match \"-->\"\r\n    throw new ParsingError(ParsingError.Errors.BadTimeStamp,\r\n                           \"Malformed time stamp (time stamps must be separated by '-->'): \" +\r\n                           oInput);\r\n  }\r\n  input = input.substr(3);\r\n  skipWhitespace();\r\n  cue.endTime = consumeTimeStamp();     // (5) collect cue end time\r\n\r\n  // 4.1 WebVTT cue settings list.\r\n  skipWhitespace();\r\n  consumeCueSettings(input, cue);\r\n}\r\n\r\nvar ESCAPE = {\r\n  \"&amp;\": \"&\",\r\n  \"&lt;\": \"<\",\r\n  \"&gt;\": \">\",\r\n  \"&lrm;\": \"\\u200e\",\r\n  \"&rlm;\": \"\\u200f\",\r\n  \"&nbsp;\": \"\\u00a0\"\r\n};\r\n\r\nvar TAG_NAME = {\r\n  c: \"span\",\r\n  i: \"i\",\r\n  b: \"b\",\r\n  u: \"u\",\r\n  ruby: \"ruby\",\r\n  rt: \"rt\",\r\n  v: \"span\",\r\n  lang: \"span\"\r\n};\r\n\r\nvar TAG_ANNOTATION = {\r\n  v: \"title\",\r\n  lang: \"lang\"\r\n};\r\n\r\nvar NEEDS_PARENT = {\r\n  rt: \"ruby\"\r\n};\r\n\r\n// Parse content into a document fragment.\r\nfunction parseContent(window, input) {\r\n  function nextToken() {\r\n    // Check for end-of-string.\r\n    if (!input) {\r\n      return null;\r\n    }\r\n\r\n    // Consume 'n' characters from the input.\r\n    function consume(result) {\r\n      input = input.substr(result.length);\r\n      return result;\r\n    }\r\n\r\n    var m = input.match(/^([^<]*)(<[^>]*>?)?/);\r\n    // If there is some text before the next tag, return it, otherwise return\r\n    // the tag.\r\n    return consume(m[1] ? m[1] : m[2]);\r\n  }\r\n\r\n  // Unescape a string 's'.\r\n  function unescape1(e) {\r\n    return ESCAPE[e];\r\n  }\r\n  function unescape(s) {\r\n    while ((m = s.match(/&(amp|lt|gt|lrm|rlm|nbsp);/))) {\r\n      s = s.replace(m[0], unescape1);\r\n    }\r\n    return s;\r\n  }\r\n\r\n  function shouldAdd(current, element) {\r\n    return !NEEDS_PARENT[element.localName] ||\r\n           NEEDS_PARENT[element.localName] === current.localName;\r\n  }\r\n\r\n  // Create an element for this tag.\r\n  function createElement(type, annotation) {\r\n    var tagName = TAG_NAME[type];\r\n    if (!tagName) {\r\n      return null;\r\n    }\r\n    var element = window.document.createElement(tagName);\r\n    element.localName = tagName;\r\n    var name = TAG_ANNOTATION[type];\r\n    if (name && annotation) {\r\n      element[name] = annotation.trim();\r\n    }\r\n    return element;\r\n  }\r\n\r\n  var rootDiv = window.document.createElement(\"div\"),\r\n      current = rootDiv,\r\n      t,\r\n      tagStack = [];\r\n\r\n  while ((t = nextToken()) !== null) {\r\n    if (t[0] === '<') {\r\n      if (t[1] === \"/\") {\r\n        // If the closing tag matches, move back up to the parent node.\r\n        if (tagStack.length &&\r\n            tagStack[tagStack.length - 1] === t.substr(2).replace(\">\", \"\")) {\r\n          tagStack.pop();\r\n          current = current.parentNode;\r\n        }\r\n        // Otherwise just ignore the end tag.\r\n        continue;\r\n      }\r\n      var ts = parseTimeStamp(t.substr(1, t.length - 2));\r\n      var node;\r\n      if (ts) {\r\n        // Timestamps are lead nodes as well.\r\n        node = window.document.createProcessingInstruction(\"timestamp\", ts);\r\n        current.appendChild(node);\r\n        continue;\r\n      }\r\n      var m = t.match(/^<([^.\\s/0-9>]+)(\\.[^\\s\\\\>]+)?([^>\\\\]+)?(\\\\?)>?$/);\r\n      // If we can't parse the tag, skip to the next tag.\r\n      if (!m) {\r\n        continue;\r\n      }\r\n      // Try to construct an element, and ignore the tag if we couldn't.\r\n      node = createElement(m[1], m[3]);\r\n      if (!node) {\r\n        continue;\r\n      }\r\n      // Determine if the tag should be added based on the context of where it\r\n      // is placed in the cuetext.\r\n      if (!shouldAdd(current, node)) {\r\n        continue;\r\n      }\r\n      // Set the class list (as a list of classes, separated by space).\r\n      if (m[2]) {\r\n        node.className = m[2].substr(1).replace('.', ' ');\r\n      }\r\n      // Append the node to the current node, and enter the scope of the new\r\n      // node.\r\n      tagStack.push(m[1]);\r\n      current.appendChild(node);\r\n      current = node;\r\n      continue;\r\n    }\r\n\r\n    // Text nodes are leaf nodes.\r\n    current.appendChild(window.document.createTextNode(unescape(t)));\r\n  }\r\n\r\n  return rootDiv;\r\n}\r\n\r\n// This is a list of all the Unicode characters that have a strong\r\n// right-to-left category. What this means is that these characters are\r\n// written right-to-left for sure. It was generated by pulling all the strong\r\n// right-to-left characters out of the Unicode data table. That table can\r\n// found at: http://www.unicode.org/Public/UNIDATA/UnicodeData.txt\r\nvar strongRTLRanges = [[0x5be, 0x5be], [0x5c0, 0x5c0], [0x5c3, 0x5c3], [0x5c6, 0x5c6],\r\n [0x5d0, 0x5ea], [0x5f0, 0x5f4], [0x608, 0x608], [0x60b, 0x60b], [0x60d, 0x60d],\r\n [0x61b, 0x61b], [0x61e, 0x64a], [0x66d, 0x66f], [0x671, 0x6d5], [0x6e5, 0x6e6],\r\n [0x6ee, 0x6ef], [0x6fa, 0x70d], [0x70f, 0x710], [0x712, 0x72f], [0x74d, 0x7a5],\r\n [0x7b1, 0x7b1], [0x7c0, 0x7ea], [0x7f4, 0x7f5], [0x7fa, 0x7fa], [0x800, 0x815],\r\n [0x81a, 0x81a], [0x824, 0x824], [0x828, 0x828], [0x830, 0x83e], [0x840, 0x858],\r\n [0x85e, 0x85e], [0x8a0, 0x8a0], [0x8a2, 0x8ac], [0x200f, 0x200f],\r\n [0xfb1d, 0xfb1d], [0xfb1f, 0xfb28], [0xfb2a, 0xfb36], [0xfb38, 0xfb3c],\r\n [0xfb3e, 0xfb3e], [0xfb40, 0xfb41], [0xfb43, 0xfb44], [0xfb46, 0xfbc1],\r\n [0xfbd3, 0xfd3d], [0xfd50, 0xfd8f], [0xfd92, 0xfdc7], [0xfdf0, 0xfdfc],\r\n [0xfe70, 0xfe74], [0xfe76, 0xfefc], [0x10800, 0x10805], [0x10808, 0x10808],\r\n [0x1080a, 0x10835], [0x10837, 0x10838], [0x1083c, 0x1083c], [0x1083f, 0x10855],\r\n [0x10857, 0x1085f], [0x10900, 0x1091b], [0x10920, 0x10939], [0x1093f, 0x1093f],\r\n [0x10980, 0x109b7], [0x109be, 0x109bf], [0x10a00, 0x10a00], [0x10a10, 0x10a13],\r\n [0x10a15, 0x10a17], [0x10a19, 0x10a33], [0x10a40, 0x10a47], [0x10a50, 0x10a58],\r\n [0x10a60, 0x10a7f], [0x10b00, 0x10b35], [0x10b40, 0x10b55], [0x10b58, 0x10b72],\r\n [0x10b78, 0x10b7f], [0x10c00, 0x10c48], [0x1ee00, 0x1ee03], [0x1ee05, 0x1ee1f],\r\n [0x1ee21, 0x1ee22], [0x1ee24, 0x1ee24], [0x1ee27, 0x1ee27], [0x1ee29, 0x1ee32],\r\n [0x1ee34, 0x1ee37], [0x1ee39, 0x1ee39], [0x1ee3b, 0x1ee3b], [0x1ee42, 0x1ee42],\r\n [0x1ee47, 0x1ee47], [0x1ee49, 0x1ee49], [0x1ee4b, 0x1ee4b], [0x1ee4d, 0x1ee4f],\r\n [0x1ee51, 0x1ee52], [0x1ee54, 0x1ee54], [0x1ee57, 0x1ee57], [0x1ee59, 0x1ee59],\r\n [0x1ee5b, 0x1ee5b], [0x1ee5d, 0x1ee5d], [0x1ee5f, 0x1ee5f], [0x1ee61, 0x1ee62],\r\n [0x1ee64, 0x1ee64], [0x1ee67, 0x1ee6a], [0x1ee6c, 0x1ee72], [0x1ee74, 0x1ee77],\r\n [0x1ee79, 0x1ee7c], [0x1ee7e, 0x1ee7e], [0x1ee80, 0x1ee89], [0x1ee8b, 0x1ee9b],\r\n [0x1eea1, 0x1eea3], [0x1eea5, 0x1eea9], [0x1eeab, 0x1eebb], [0x10fffd, 0x10fffd]];\r\n\r\nfunction isStrongRTLChar(charCode) {\r\n  for (var i = 0; i < strongRTLRanges.length; i++) {\r\n    var currentRange = strongRTLRanges[i];\r\n    if (charCode >= currentRange[0] && charCode <= currentRange[1]) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nfunction determineBidi(cueDiv) {\r\n  var nodeStack = [],\r\n      text = \"\",\r\n      charCode;\r\n\r\n  if (!cueDiv || !cueDiv.childNodes) {\r\n    return \"ltr\";\r\n  }\r\n\r\n  function pushNodes(nodeStack, node) {\r\n    for (var i = node.childNodes.length - 1; i >= 0; i--) {\r\n      nodeStack.push(node.childNodes[i]);\r\n    }\r\n  }\r\n\r\n  function nextTextNode(nodeStack) {\r\n    if (!nodeStack || !nodeStack.length) {\r\n      return null;\r\n    }\r\n\r\n    var node = nodeStack.pop(),\r\n        text = node.textContent || node.innerText;\r\n    if (text) {\r\n      // TODO: This should match all unicode type B characters (paragraph\r\n      // separator characters). See issue #115.\r\n      var m = text.match(/^.*(\\n|\\r)/);\r\n      if (m) {\r\n        nodeStack.length = 0;\r\n        return m[0];\r\n      }\r\n      return text;\r\n    }\r\n    if (node.tagName === \"ruby\") {\r\n      return nextTextNode(nodeStack);\r\n    }\r\n    if (node.childNodes) {\r\n      pushNodes(nodeStack, node);\r\n      return nextTextNode(nodeStack);\r\n    }\r\n  }\r\n\r\n  pushNodes(nodeStack, cueDiv);\r\n  while ((text = nextTextNode(nodeStack))) {\r\n    for (var i = 0; i < text.length; i++) {\r\n      charCode = text.charCodeAt(i);\r\n      if (isStrongRTLChar(charCode)) {\r\n        return \"rtl\";\r\n      }\r\n    }\r\n  }\r\n  return \"ltr\";\r\n}\r\n\r\nfunction computeLinePos(cue) {\r\n  if (typeof cue.line === \"number\" &&\r\n      (cue.snapToLines || (cue.line >= 0 && cue.line <= 100))) {\r\n    return cue.line;\r\n  }\r\n  if (!cue.track || !cue.track.textTrackList ||\r\n      !cue.track.textTrackList.mediaElement) {\r\n    return -1;\r\n  }\r\n  var track = cue.track,\r\n      trackList = track.textTrackList,\r\n      count = 0;\r\n  for (var i = 0; i < trackList.length && trackList[i] !== track; i++) {\r\n    if (trackList[i].mode === \"showing\") {\r\n      count++;\r\n    }\r\n  }\r\n  return ++count * -1;\r\n}\r\n\r\nfunction StyleBox() {\r\n}\r\n\r\n// Apply styles to a div. If there is no div passed then it defaults to the\r\n// div on 'this'.\r\nStyleBox.prototype.applyStyles = function(styles, div) {\r\n  div = div || this.div;\r\n  for (var prop in styles) {\r\n    if (styles.hasOwnProperty(prop)) {\r\n      div.style[prop] = styles[prop];\r\n    }\r\n  }\r\n};\r\n\r\nStyleBox.prototype.formatStyle = function(val, unit) {\r\n  return val === 0 ? 0 : val + unit;\r\n};\r\n\r\n// Constructs the computed display state of the cue (a div). Places the div\r\n// into the overlay which should be a block level element (usually a div).\r\nfunction CueStyleBox(window, cue, styleOptions) {\r\n  var isIE8 = (/MSIE\\s8\\.0/).test(navigator.userAgent);\r\n  var color = \"rgba(255, 255, 255, 1)\";\r\n  var backgroundColor = \"rgba(0, 0, 0, 0.8)\";\r\n\r\n  if (isIE8) {\r\n    color = \"rgb(255, 255, 255)\";\r\n    backgroundColor = \"rgb(0, 0, 0)\";\r\n  }\r\n\r\n  StyleBox.call(this);\r\n  this.cue = cue;\r\n\r\n  // Parse our cue's text into a DOM tree rooted at 'cueDiv'. This div will\r\n  // have inline positioning and will function as the cue background box.\r\n  this.cueDiv = parseContent(window, cue.text);\r\n  var styles = {\r\n    color: color,\r\n    backgroundColor: backgroundColor,\r\n    position: \"relative\",\r\n    left: 0,\r\n    right: 0,\r\n    top: 0,\r\n    bottom: 0,\r\n    display: \"inline\"\r\n  };\r\n\r\n  if (!isIE8) {\r\n    styles.writingMode = cue.vertical === \"\" ? \"horizontal-tb\"\r\n                                             : cue.vertical === \"lr\" ? \"vertical-lr\"\r\n                                                                     : \"vertical-rl\";\r\n    styles.unicodeBidi = \"plaintext\";\r\n  }\r\n  this.applyStyles(styles, this.cueDiv);\r\n\r\n  // Create an absolutely positioned div that will be used to position the cue\r\n  // div. Note, all WebVTT cue-setting alignments are equivalent to the CSS\r\n  // mirrors of them except \"middle\" which is \"center\" in CSS.\r\n  this.div = window.document.createElement(\"div\");\r\n  styles = {\r\n    textAlign: cue.align === \"middle\" ? \"center\" : cue.align,\r\n    font: styleOptions.font,\r\n    whiteSpace: \"pre-line\",\r\n    position: \"absolute\"\r\n  };\r\n\r\n  if (!isIE8) {\r\n    styles.direction = determineBidi(this.cueDiv);\r\n    styles.writingMode = cue.vertical === \"\" ? \"horizontal-tb\"\r\n                                             : cue.vertical === \"lr\" ? \"vertical-lr\"\r\n                                                                     : \"vertical-rl\".\r\n    stylesunicodeBidi =  \"plaintext\";\r\n  }\r\n\r\n  this.applyStyles(styles);\r\n\r\n  this.div.appendChild(this.cueDiv);\r\n\r\n  // Calculate the distance from the reference edge of the viewport to the text\r\n  // position of the cue box. The reference edge will be resolved later when\r\n  // the box orientation styles are applied.\r\n  var textPos = 0;\r\n  switch (cue.positionAlign) {\r\n  case \"start\":\r\n    textPos = cue.position;\r\n    break;\r\n  case \"middle\":\r\n    textPos = cue.position - (cue.size / 2);\r\n    break;\r\n  case \"end\":\r\n    textPos = cue.position - cue.size;\r\n    break;\r\n  }\r\n\r\n  // Horizontal box orientation; textPos is the distance from the left edge of the\r\n  // area to the left edge of the box and cue.size is the distance extending to\r\n  // the right from there.\r\n  if (cue.vertical === \"\") {\r\n    this.applyStyles({\r\n      left:  this.formatStyle(textPos, \"%\"),\r\n      width: this.formatStyle(cue.size, \"%\")\r\n    });\r\n  // Vertical box orientation; textPos is the distance from the top edge of the\r\n  // area to the top edge of the box and cue.size is the height extending\r\n  // downwards from there.\r\n  } else {\r\n    this.applyStyles({\r\n      top: this.formatStyle(textPos, \"%\"),\r\n      height: this.formatStyle(cue.size, \"%\")\r\n    });\r\n  }\r\n\r\n  this.move = function(box) {\r\n    this.applyStyles({\r\n      top: this.formatStyle(box.top, \"px\"),\r\n      bottom: this.formatStyle(box.bottom, \"px\"),\r\n      left: this.formatStyle(box.left, \"px\"),\r\n      right: this.formatStyle(box.right, \"px\"),\r\n      height: this.formatStyle(box.height, \"px\"),\r\n      width: this.formatStyle(box.width, \"px\")\r\n    });\r\n  };\r\n}\r\nCueStyleBox.prototype = _objCreate(StyleBox.prototype);\r\nCueStyleBox.prototype.constructor = CueStyleBox;\r\n\r\n// Represents the co-ordinates of an Element in a way that we can easily\r\n// compute things with such as if it overlaps or intersects with another Element.\r\n// Can initialize it with either a StyleBox or another BoxPosition.\r\nfunction BoxPosition(obj) {\r\n  var isIE8 = (/MSIE\\s8\\.0/).test(navigator.userAgent);\r\n\r\n  // Either a BoxPosition was passed in and we need to copy it, or a StyleBox\r\n  // was passed in and we need to copy the results of 'getBoundingClientRect'\r\n  // as the object returned is readonly. All co-ordinate values are in reference\r\n  // to the viewport origin (top left).\r\n  var lh, height, width, top;\r\n  if (obj.div) {\r\n    height = obj.div.offsetHeight;\r\n    width = obj.div.offsetWidth;\r\n    top = obj.div.offsetTop;\r\n\r\n    var rects = (rects = obj.div.childNodes) && (rects = rects[0]) &&\r\n                rects.getClientRects && rects.getClientRects();\r\n    obj = obj.div.getBoundingClientRect();\r\n    // In certain cases the outter div will be slightly larger then the sum of\r\n    // the inner div's lines. This could be due to bold text, etc, on some platforms.\r\n    // In this case we should get the average line height and use that. This will\r\n    // result in the desired behaviour.\r\n    lh = rects ? Math.max((rects[0] && rects[0].height) || 0, obj.height / rects.length)\r\n               : 0;\r\n\r\n  }\r\n  this.left = obj.left;\r\n  this.right = obj.right;\r\n  this.top = obj.top || top;\r\n  this.height = obj.height || height;\r\n  this.bottom = obj.bottom || (top + (obj.height || height));\r\n  this.width = obj.width || width;\r\n  this.lineHeight = lh !== undefined ? lh : obj.lineHeight;\r\n\r\n  if (isIE8 && !this.lineHeight) {\r\n    this.lineHeight = 13;\r\n  }\r\n}\r\n\r\n// Move the box along a particular axis. Optionally pass in an amount to move\r\n// the box. If no amount is passed then the default is the line height of the\r\n// box.\r\nBoxPosition.prototype.move = function(axis, toMove) {\r\n  toMove = toMove !== undefined ? toMove : this.lineHeight;\r\n  switch (axis) {\r\n  case \"+x\":\r\n    this.left += toMove;\r\n    this.right += toMove;\r\n    break;\r\n  case \"-x\":\r\n    this.left -= toMove;\r\n    this.right -= toMove;\r\n    break;\r\n  case \"+y\":\r\n    this.top += toMove;\r\n    this.bottom += toMove;\r\n    break;\r\n  case \"-y\":\r\n    this.top -= toMove;\r\n    this.bottom -= toMove;\r\n    break;\r\n  }\r\n};\r\n\r\n// Check if this box overlaps another box, b2.\r\nBoxPosition.prototype.overlaps = function(b2) {\r\n  return this.left < b2.right &&\r\n         this.right > b2.left &&\r\n         this.top < b2.bottom &&\r\n         this.bottom > b2.top;\r\n};\r\n\r\n// Check if this box overlaps any other boxes in boxes.\r\nBoxPosition.prototype.overlapsAny = function(boxes) {\r\n  for (var i = 0; i < boxes.length; i++) {\r\n    if (this.overlaps(boxes[i])) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n};\r\n\r\n// Check if this box is within another box.\r\nBoxPosition.prototype.within = function(container) {\r\n  return this.top >= container.top &&\r\n         this.bottom <= container.bottom &&\r\n         this.left >= container.left &&\r\n         this.right <= container.right;\r\n};\r\n\r\n// Check if this box is entirely within the container or it is overlapping\r\n// on the edge opposite of the axis direction passed. For example, if \"+x\" is\r\n// passed and the box is overlapping on the left edge of the container, then\r\n// return true.\r\nBoxPosition.prototype.overlapsOppositeAxis = function(container, axis) {\r\n  switch (axis) {\r\n  case \"+x\":\r\n    return this.left < container.left;\r\n  case \"-x\":\r\n    return this.right > container.right;\r\n  case \"+y\":\r\n    return this.top < container.top;\r\n  case \"-y\":\r\n    return this.bottom > container.bottom;\r\n  }\r\n};\r\n\r\n// Find the percentage of the area that this box is overlapping with another\r\n// box.\r\nBoxPosition.prototype.intersectPercentage = function(b2) {\r\n  var x = Math.max(0, Math.min(this.right, b2.right) - Math.max(this.left, b2.left)),\r\n      y = Math.max(0, Math.min(this.bottom, b2.bottom) - Math.max(this.top, b2.top)),\r\n      intersectArea = x * y;\r\n  return intersectArea / (this.height * this.width);\r\n};\r\n\r\n// Convert the positions from this box to CSS compatible positions using\r\n// the reference container's positions. This has to be done because this\r\n// box's positions are in reference to the viewport origin, whereas, CSS\r\n// values are in referecne to their respective edges.\r\nBoxPosition.prototype.toCSSCompatValues = function(reference) {\r\n  return {\r\n    top: this.top - reference.top,\r\n    bottom: reference.bottom - this.bottom,\r\n    left: this.left - reference.left,\r\n    right: reference.right - this.right,\r\n    height: this.height,\r\n    width: this.width\r\n  };\r\n};\r\n\r\n// Get an object that represents the box's position without anything extra.\r\n// Can pass a StyleBox, HTMLElement, or another BoxPositon.\r\nBoxPosition.getSimpleBoxPosition = function(obj) {\r\n  var height = obj.div ? obj.div.offsetHeight : obj.tagName ? obj.offsetHeight : 0;\r\n  var width = obj.div ? obj.div.offsetWidth : obj.tagName ? obj.offsetWidth : 0;\r\n  var top = obj.div ? obj.div.offsetTop : obj.tagName ? obj.offsetTop : 0;\r\n\r\n  obj = obj.div ? obj.div.getBoundingClientRect() :\r\n                obj.tagName ? obj.getBoundingClientRect() : obj;\r\n  var ret = {\r\n    left: obj.left,\r\n    right: obj.right,\r\n    top: obj.top || top,\r\n    height: obj.height || height,\r\n    bottom: obj.bottom || (top + (obj.height || height)),\r\n    width: obj.width || width\r\n  };\r\n  return ret;\r\n};\r\n\r\n// Move a StyleBox to its specified, or next best, position. The containerBox\r\n// is the box that contains the StyleBox, such as a div. boxPositions are\r\n// a list of other boxes that the styleBox can't overlap with.\r\nfunction moveBoxToLinePosition(window, styleBox, containerBox, boxPositions) {\r\n\r\n  // Find the best position for a cue box, b, on the video. The axis parameter\r\n  // is a list of axis, the order of which, it will move the box along. For example:\r\n  // Passing [\"+x\", \"-x\"] will move the box first along the x axis in the positive\r\n  // direction. If it doesn't find a good position for it there it will then move\r\n  // it along the x axis in the negative direction.\r\n  function findBestPosition(b, axis) {\r\n    var bestPosition,\r\n        specifiedPosition = new BoxPosition(b),\r\n        percentage = 1; // Highest possible so the first thing we get is better.\r\n\r\n    for (var i = 0; i < axis.length; i++) {\r\n      while (b.overlapsOppositeAxis(containerBox, axis[i]) ||\r\n             (b.within(containerBox) && b.overlapsAny(boxPositions))) {\r\n        b.move(axis[i]);\r\n      }\r\n      // We found a spot where we aren't overlapping anything. This is our\r\n      // best position.\r\n      if (b.within(containerBox)) {\r\n        return b;\r\n      }\r\n      var p = b.intersectPercentage(containerBox);\r\n      // If we're outside the container box less then we were on our last try\r\n      // then remember this position as the best position.\r\n      if (percentage > p) {\r\n        bestPosition = new BoxPosition(b);\r\n        percentage = p;\r\n      }\r\n      // Reset the box position to the specified position.\r\n      b = new BoxPosition(specifiedPosition);\r\n    }\r\n    return bestPosition || specifiedPosition;\r\n  }\r\n\r\n  var boxPosition = new BoxPosition(styleBox),\r\n      cue = styleBox.cue,\r\n      linePos = computeLinePos(cue),\r\n      axis = [];\r\n\r\n  // If we have a line number to align the cue to.\r\n  if (cue.snapToLines) {\r\n    var size;\r\n    switch (cue.vertical) {\r\n    case \"\":\r\n      axis = [ \"+y\", \"-y\" ];\r\n      size = \"height\";\r\n      break;\r\n    case \"rl\":\r\n      axis = [ \"+x\", \"-x\" ];\r\n      size = \"width\";\r\n      break;\r\n    case \"lr\":\r\n      axis = [ \"-x\", \"+x\" ];\r\n      size = \"width\";\r\n      break;\r\n    }\r\n\r\n    var step = boxPosition.lineHeight,\r\n        position = step * Math.round(linePos),\r\n        maxPosition = containerBox[size] + step,\r\n        initialAxis = axis[0];\r\n\r\n    // If the specified intial position is greater then the max position then\r\n    // clamp the box to the amount of steps it would take for the box to\r\n    // reach the max position.\r\n    if (Math.abs(position) > maxPosition) {\r\n      position = position < 0 ? -1 : 1;\r\n      position *= Math.ceil(maxPosition / step) * step;\r\n    }\r\n\r\n    // If computed line position returns negative then line numbers are\r\n    // relative to the bottom of the video instead of the top. Therefore, we\r\n    // need to increase our initial position by the length or width of the\r\n    // video, depending on the writing direction, and reverse our axis directions.\r\n    if (linePos < 0) {\r\n      position += cue.vertical === \"\" ? containerBox.height : containerBox.width;\r\n      axis = axis.reverse();\r\n    }\r\n\r\n    // Move the box to the specified position. This may not be its best\r\n    // position.\r\n    boxPosition.move(initialAxis, position);\r\n\r\n  } else {\r\n    // If we have a percentage line value for the cue.\r\n    var calculatedPercentage = (boxPosition.lineHeight / containerBox.height) * 100;\r\n\r\n    switch (cue.lineAlign) {\r\n    case \"middle\":\r\n      linePos -= (calculatedPercentage / 2);\r\n      break;\r\n    case \"end\":\r\n      linePos -= calculatedPercentage;\r\n      break;\r\n    }\r\n\r\n    // Apply initial line position to the cue box.\r\n    switch (cue.vertical) {\r\n    case \"\":\r\n      styleBox.applyStyles({\r\n        top: styleBox.formatStyle(linePos, \"%\")\r\n      });\r\n      break;\r\n    case \"rl\":\r\n      styleBox.applyStyles({\r\n        left: styleBox.formatStyle(linePos, \"%\")\r\n      });\r\n      break;\r\n    case \"lr\":\r\n      styleBox.applyStyles({\r\n        right: styleBox.formatStyle(linePos, \"%\")\r\n      });\r\n      break;\r\n    }\r\n\r\n    axis = [ \"+y\", \"-x\", \"+x\", \"-y\" ];\r\n\r\n    // Get the box position again after we've applied the specified positioning\r\n    // to it.\r\n    boxPosition = new BoxPosition(styleBox);\r\n  }\r\n\r\n  var bestPosition = findBestPosition(boxPosition, axis);\r\n  styleBox.move(bestPosition.toCSSCompatValues(containerBox));\r\n}\r\n\r\nfunction WebVTT() {\r\n  // Nothing\r\n}\r\n\r\n// Helper to allow strings to be decoded instead of the default binary utf8 data.\r\nWebVTT.StringDecoder = function() {\r\n  return {\r\n    decode: function(data) {\r\n      if (!data) {\r\n        return \"\";\r\n      }\r\n      if (typeof data !== \"string\") {\r\n        throw new Error(\"Error - expected string data.\");\r\n      }\r\n      return decodeURIComponent(encodeURIComponent(data));\r\n    }\r\n  };\r\n};\r\n\r\nWebVTT.convertCueToDOMTree = function(window, cuetext) {\r\n  if (!window || !cuetext) {\r\n    return null;\r\n  }\r\n  return parseContent(window, cuetext);\r\n};\r\n\r\nvar FONT_SIZE_PERCENT = 0.05;\r\nvar FONT_STYLE = \"sans-serif\";\r\nvar CUE_BACKGROUND_PADDING = \"1.5%\";\r\n\r\n// Runs the processing model over the cues and regions passed to it.\r\n// @param overlay A block level element (usually a div) that the computed cues\r\n//                and regions will be placed into.\r\nWebVTT.processCues = function(window, cues, overlay) {\r\n  if (!window || !cues || !overlay) {\r\n    return null;\r\n  }\r\n\r\n  // Remove all previous children.\r\n  while (overlay.firstChild) {\r\n    overlay.removeChild(overlay.firstChild);\r\n  }\r\n\r\n  var paddedOverlay = window.document.createElement(\"div\");\r\n  paddedOverlay.style.position = \"absolute\";\r\n  paddedOverlay.style.left = \"0\";\r\n  paddedOverlay.style.right = \"0\";\r\n  paddedOverlay.style.top = \"0\";\r\n  paddedOverlay.style.bottom = \"0\";\r\n  paddedOverlay.style.margin = CUE_BACKGROUND_PADDING;\r\n  overlay.appendChild(paddedOverlay);\r\n\r\n  // Determine if we need to compute the display states of the cues. This could\r\n  // be the case if a cue's state has been changed since the last computation or\r\n  // if it has not been computed yet.\r\n  function shouldCompute(cues) {\r\n    for (var i = 0; i < cues.length; i++) {\r\n      if (cues[i].hasBeenReset || !cues[i].displayState) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  // We don't need to recompute the cues' display states. Just reuse them.\r\n  if (!shouldCompute(cues)) {\r\n    for (var i = 0; i < cues.length; i++) {\r\n      paddedOverlay.appendChild(cues[i].displayState);\r\n    }\r\n    return;\r\n  }\r\n\r\n  var boxPositions = [],\r\n      containerBox = BoxPosition.getSimpleBoxPosition(paddedOverlay),\r\n      fontSize = Math.round(containerBox.height * FONT_SIZE_PERCENT * 100) / 100;\r\n  var styleOptions = {\r\n    font: fontSize + \"px \" + FONT_STYLE\r\n  };\r\n\r\n  (function() {\r\n    var styleBox, cue;\r\n\r\n    for (var i = 0; i < cues.length; i++) {\r\n      cue = cues[i];\r\n\r\n      // Compute the intial position and styles of the cue div.\r\n      styleBox = new CueStyleBox(window, cue, styleOptions);\r\n      paddedOverlay.appendChild(styleBox.div);\r\n\r\n      // Move the cue div to it's correct line position.\r\n      moveBoxToLinePosition(window, styleBox, containerBox, boxPositions);\r\n\r\n      // Remember the computed div so that we don't have to recompute it later\r\n      // if we don't have too.\r\n      cue.displayState = styleBox.div;\r\n\r\n      boxPositions.push(BoxPosition.getSimpleBoxPosition(styleBox));\r\n    }\r\n  })();\r\n};\r\n\r\nWebVTT.Parser = function(window, vttjs, decoder) {\r\n  if (!decoder) {\r\n    decoder = vttjs;\r\n    vttjs = {};\r\n  }\r\n  if (!vttjs) {\r\n    vttjs = {};\r\n  }\r\n\r\n  this.window = window;\r\n  this.vttjs = vttjs;\r\n  this.state = \"INITIAL\";\r\n  this.buffer = \"\";\r\n  this.decoder = decoder || new TextDecoder(\"utf8\");\r\n  this.regionList = [];\r\n};\r\n\r\nWebVTT.Parser.prototype = {\r\n  // If the error is a ParsingError then report it to the consumer if\r\n  // possible. If it's not a ParsingError then throw it like normal.\r\n  reportOrThrowError: function(e) {\r\n    if (e instanceof ParsingError) {\r\n      this.onparsingerror && this.onparsingerror(e);\r\n    } else {\r\n      throw e;\r\n    }\r\n  },\r\n  parse: function (data) {\r\n    var self = this;\r\n\r\n    // If there is no data then we won't decode it, but will just try to parse\r\n    // whatever is in buffer already. This may occur in circumstances, for\r\n    // example when flush() is called.\r\n    if (data) {\r\n      // Try to decode the data that we received.\r\n      self.buffer += self.decoder.decode(data, {stream: true});\r\n    }\r\n\r\n    function collectNextLine() {\r\n      var buffer = self.buffer;\r\n      var pos = 0;\r\n      while (pos < buffer.length && buffer[pos] !== '\\r' && buffer[pos] !== '\\n') {\r\n        ++pos;\r\n      }\r\n      var line = buffer.substr(0, pos);\r\n      // Advance the buffer early in case we fail below.\r\n      if (buffer[pos] === '\\r') {\r\n        ++pos;\r\n      }\r\n      if (buffer[pos] === '\\n') {\r\n        ++pos;\r\n      }\r\n      self.buffer = buffer.substr(pos);\r\n      return line;\r\n    }\r\n\r\n    // 3.4 WebVTT region and WebVTT region settings syntax\r\n    function parseRegion(input) {\r\n      var settings = new Settings();\r\n\r\n      parseOptions(input, function (k, v) {\r\n        switch (k) {\r\n        case \"id\":\r\n          settings.set(k, v);\r\n          break;\r\n        case \"width\":\r\n          settings.percent(k, v);\r\n          break;\r\n        case \"lines\":\r\n          settings.integer(k, v);\r\n          break;\r\n        case \"regionanchor\":\r\n        case \"viewportanchor\":\r\n          var xy = v.split(',');\r\n          if (xy.length !== 2) {\r\n            break;\r\n          }\r\n          // We have to make sure both x and y parse, so use a temporary\r\n          // settings object here.\r\n          var anchor = new Settings();\r\n          anchor.percent(\"x\", xy[0]);\r\n          anchor.percent(\"y\", xy[1]);\r\n          if (!anchor.has(\"x\") || !anchor.has(\"y\")) {\r\n            break;\r\n          }\r\n          settings.set(k + \"X\", anchor.get(\"x\"));\r\n          settings.set(k + \"Y\", anchor.get(\"y\"));\r\n          break;\r\n        case \"scroll\":\r\n          settings.alt(k, v, [\"up\"]);\r\n          break;\r\n        }\r\n      }, /=/, /\\s/);\r\n\r\n      // Create the region, using default values for any values that were not\r\n      // specified.\r\n      if (settings.has(\"id\")) {\r\n        var region = new (self.vttjs.VTTRegion || self.window.VTTRegion)();\r\n        region.width = settings.get(\"width\", 100);\r\n        region.lines = settings.get(\"lines\", 3);\r\n        region.regionAnchorX = settings.get(\"regionanchorX\", 0);\r\n        region.regionAnchorY = settings.get(\"regionanchorY\", 100);\r\n        region.viewportAnchorX = settings.get(\"viewportanchorX\", 0);\r\n        region.viewportAnchorY = settings.get(\"viewportanchorY\", 100);\r\n        region.scroll = settings.get(\"scroll\", \"\");\r\n        // Register the region.\r\n        self.onregion && self.onregion(region);\r\n        // Remember the VTTRegion for later in case we parse any VTTCues that\r\n        // reference it.\r\n        self.regionList.push({\r\n          id: settings.get(\"id\"),\r\n          region: region\r\n        });\r\n      }\r\n    }\r\n\r\n    // draft-pantos-http-live-streaming-20\r\n    // https://tools.ietf.org/html/draft-pantos-http-live-streaming-20#section-3.5\r\n    // 3.5 WebVTT\r\n    function parseTimestampMap(input) {\r\n      var settings = new Settings();\r\n\r\n      parseOptions(input, function(k, v) {\r\n        switch(k) {\r\n        case \"MPEGT\":\r\n          settings.integer(k + 'S', v);\r\n          break;\r\n        case \"LOCA\":\r\n          settings.set(k + 'L', parseTimeStamp(v));\r\n          break;\r\n        }\r\n      }, /[^\\d]:/, /,/);\r\n\r\n      self.ontimestampmap && self.ontimestampmap({\r\n        \"MPEGTS\": settings.get(\"MPEGTS\"),\r\n        \"LOCAL\": settings.get(\"LOCAL\")\r\n      });\r\n    }\r\n\r\n    // 3.2 WebVTT metadata header syntax\r\n    function parseHeader(input) {\r\n      if (input.match(/X-TIMESTAMP-MAP/)) {\r\n        // This line contains HLS X-TIMESTAMP-MAP metadata\r\n        parseOptions(input, function(k, v) {\r\n          switch(k) {\r\n          case \"X-TIMESTAMP-MAP\":\r\n            parseTimestampMap(v);\r\n            break;\r\n          }\r\n        }, /=/);\r\n      } else {\r\n        parseOptions(input, function (k, v) {\r\n          switch (k) {\r\n          case \"Region\":\r\n            // 3.3 WebVTT region metadata header syntax\r\n            parseRegion(v);\r\n            break;\r\n          }\r\n        }, /:/);\r\n      }\r\n\r\n    }\r\n\r\n    // 5.1 WebVTT file parsing.\r\n    try {\r\n      var line;\r\n      if (self.state === \"INITIAL\") {\r\n        // We can't start parsing until we have the first line.\r\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\r\n          return this;\r\n        }\r\n\r\n        line = collectNextLine();\r\n\r\n        var m = line.match(/^WEBVTT([ \\t].*)?$/);\r\n        if (!m || !m[0]) {\r\n          throw new ParsingError(ParsingError.Errors.BadSignature);\r\n        }\r\n\r\n        self.state = \"HEADER\";\r\n      }\r\n\r\n      var alreadyCollectedLine = false;\r\n      while (self.buffer) {\r\n        // We can't parse a line until we have the full line.\r\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\r\n          return this;\r\n        }\r\n\r\n        if (!alreadyCollectedLine) {\r\n          line = collectNextLine();\r\n        } else {\r\n          alreadyCollectedLine = false;\r\n        }\r\n\r\n        switch (self.state) {\r\n        case \"HEADER\":\r\n          // 13-18 - Allow a header (metadata) under the WEBVTT line.\r\n          if (/:/.test(line)) {\r\n            parseHeader(line);\r\n          } else if (!line) {\r\n            // An empty line terminates the header and starts the body (cues).\r\n            self.state = \"ID\";\r\n          }\r\n          continue;\r\n        case \"NOTE\":\r\n          // Ignore NOTE blocks.\r\n          if (!line) {\r\n            self.state = \"ID\";\r\n          }\r\n          continue;\r\n        case \"ID\":\r\n          // Check for the start of NOTE blocks.\r\n          if (/^NOTE($|[ \\t])/.test(line)) {\r\n            self.state = \"NOTE\";\r\n            break;\r\n          }\r\n          // 19-29 - Allow any number of line terminators, then initialize new cue values.\r\n          if (!line) {\r\n            continue;\r\n          }\r\n          self.cue = new (self.vttjs.VTTCue || self.window.VTTCue)(0, 0, \"\");\r\n          self.state = \"CUE\";\r\n          // 30-39 - Check if self line contains an optional identifier or timing data.\r\n          if (line.indexOf(\"-->\") === -1) {\r\n            self.cue.id = line;\r\n            continue;\r\n          }\r\n          // Process line as start of a cue.\r\n          /*falls through*/\r\n        case \"CUE\":\r\n          // 40 - Collect cue timings and settings.\r\n          try {\r\n            parseCue(line, self.cue, self.regionList);\r\n          } catch (e) {\r\n            self.reportOrThrowError(e);\r\n            // In case of an error ignore rest of the cue.\r\n            self.cue = null;\r\n            self.state = \"BADCUE\";\r\n            continue;\r\n          }\r\n          self.state = \"CUETEXT\";\r\n          continue;\r\n        case \"CUETEXT\":\r\n          var hasSubstring = line.indexOf(\"-->\") !== -1;\r\n          // 34 - If we have an empty line then report the cue.\r\n          // 35 - If we have the special substring '-->' then report the cue,\r\n          // but do not collect the line as we need to process the current\r\n          // one as a new cue.\r\n          if (!line || hasSubstring && (alreadyCollectedLine = true)) {\r\n            // We are done parsing self cue.\r\n            self.oncue && self.oncue(self.cue);\r\n            self.cue = null;\r\n            self.state = \"ID\";\r\n            continue;\r\n          }\r\n          if (self.cue.text) {\r\n            self.cue.text += \"\\n\";\r\n          }\r\n          self.cue.text += line;\r\n          continue;\r\n        case \"BADCUE\": // BADCUE\r\n          // 54-62 - Collect and discard the remaining cue.\r\n          if (!line) {\r\n            self.state = \"ID\";\r\n          }\r\n          continue;\r\n        }\r\n      }\r\n    } catch (e) {\r\n      self.reportOrThrowError(e);\r\n\r\n      // If we are currently parsing a cue, report what we have.\r\n      if (self.state === \"CUETEXT\" && self.cue && self.oncue) {\r\n        self.oncue(self.cue);\r\n      }\r\n      self.cue = null;\r\n      // Enter BADWEBVTT state if header was not parsed correctly otherwise\r\n      // another exception occurred so enter BADCUE state.\r\n      self.state = self.state === \"INITIAL\" ? \"BADWEBVTT\" : \"BADCUE\";\r\n    }\r\n    return this;\r\n  },\r\n  flush: function () {\r\n    var self = this;\r\n    try {\r\n      // Finish decoding the stream.\r\n      self.buffer += self.decoder.decode();\r\n      // Synthesize the end of the current cue or region.\r\n      if (self.cue || self.state === \"HEADER\") {\r\n        self.buffer += \"\\n\\n\";\r\n        self.parse();\r\n      }\r\n      // If we've flushed, parsed, and we're still on the INITIAL state then\r\n      // that means we don't have enough of the stream to parse the first\r\n      // line.\r\n      if (self.state === \"INITIAL\") {\r\n        throw new ParsingError(ParsingError.Errors.BadSignature);\r\n      }\r\n    } catch(e) {\r\n      self.reportOrThrowError(e);\r\n    }\r\n    self.onflush && self.onflush();\r\n    return this;\r\n  }\r\n};\r\n\r\nmodule.exports = WebVTT;\r\n","'use strict';\r\n\r\nvar toStr = Object.prototype.toString;\r\n\r\nmodule.exports = function isArguments(value) {\r\n\tvar str = toStr.call(value);\r\n\tvar isArgs = str === '[object Arguments]';\r\n\tif (!isArgs) {\r\n\t\tisArgs = str !== '[object Array]' &&\r\n\t\t\tvalue !== null &&\r\n\t\t\ttypeof value === 'object' &&\r\n\t\t\ttypeof value.length === 'number' &&\r\n\t\t\tvalue.length >= 0 &&\r\n\t\t\ttoStr.call(value.callee) === '[object Function]';\r\n\t}\r\n\treturn isArgs;\r\n};\r\n","'use strict';\r\n\r\nvar slice = Array.prototype.slice;\r\nvar isArgs = require('./isArguments');\r\n\r\nvar origKeys = Object.keys;\r\nvar keysShim = origKeys ? function keys(o) { return origKeys(o); } : require('./implementation');\r\n\r\nvar originalKeys = Object.keys;\r\n\r\nkeysShim.shim = function shimObjectKeys() {\r\n\tif (Object.keys) {\r\n\t\tvar keysWorksWithArguments = (function () {\r\n\t\t\t// Safari 5.0 bug\r\n\t\t\tvar args = Object.keys(arguments);\r\n\t\t\treturn args && args.length === arguments.length;\r\n\t\t}(1, 2));\r\n\t\tif (!keysWorksWithArguments) {\r\n\t\t\tObject.keys = function keys(object) { // eslint-disable-line func-name-matching\r\n\t\t\t\tif (isArgs(object)) {\r\n\t\t\t\t\treturn originalKeys(slice.call(object));\r\n\t\t\t\t}\r\n\t\t\t\treturn originalKeys(object);\r\n\t\t\t};\r\n\t\t}\r\n\t} else {\r\n\t\tObject.keys = keysShim;\r\n\t}\r\n\treturn Object.keys || keysShim;\r\n};\r\n\r\nmodule.exports = keysShim;\r\n","!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t(require(\"video.js\")):\"function\"==typeof define&&define.amd?define([\"videojs\"],t):\"object\"==typeof exports?exports.VueVideoPlayer=t(require(\"video.js\")):e.VueVideoPlayer=t(e.videojs)}(this,function(e){return function(e){function t(i){if(n[i])return n[i].exports;var r=n[i]={i:i,l:!1,exports:{}};return e[i].call(r.exports,r,r.exports,t),r.l=!0,r.exports}var n={};return t.m=e,t.c=n,t.i=function(e){return e},t.d=function(e,n,i){t.o(e,n)||Object.defineProperty(e,n,{configurable:!1,enumerable:!0,get:i})},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,\"a\",n),n},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p=\"/\",t(t.s=3)}([function(t,n){t.exports=e},function(e,t,n){\"use strict\";function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}Object.defineProperty(t,\"__esModule\",{value:!0});var r=n(0),o=function(e){return e&&e.__esModule?e:{default:e}}(r),s=window.videojs||o.default;\"function\"!=typeof Object.assign&&Object.defineProperty(Object,\"assign\",{value:function(e,t){if(null==e)throw new TypeError(\"Cannot convert undefined or null to object\");for(var n=Object(e),i=1;i<arguments.length;i++){var r=arguments[i];if(null!=r)for(var o in r)Object.prototype.hasOwnProperty.call(r,o)&&(n[o]=r[o])}return n},writable:!0,configurable:!0});var a=[\"loadeddata\",\"canplay\",\"canplaythrough\",\"play\",\"pause\",\"waiting\",\"playing\",\"ended\",\"error\"];t.default={name:\"video-player\",props:{start:{type:Number,default:0},crossOrigin:{type:String,default:\"\"},playsinline:{type:Boolean,default:!1},customEventName:{type:String,default:\"statechanged\"},options:{type:Object,required:!0},events:{type:Array,default:function(){return[]}},globalOptions:{type:Object,default:function(){return{controls:!0,controlBar:{remainingTimeDisplay:!1,playToggle:{},progressControl:{},fullscreenToggle:{},volumeMenuButton:{inline:!1,vertical:!0}},techOrder:[\"html5\"],plugins:{}}}},globalEvents:{type:Array,default:function(){return[]}}},data:function(){return{player:null,reseted:!0}},mounted:function(){this.player||this.initialize()},beforeDestroy:function(){this.player&&this.dispose()},methods:{initialize:function(){var e=this,t=Object.assign({},this.globalOptions,this.options);this.playsinline&&(this.$refs.video.setAttribute(\"playsinline\",this.playsinline),this.$refs.video.setAttribute(\"webkit-playsinline\",this.playsinline),this.$refs.video.setAttribute(\"x5-playsinline\",this.playsinline),this.$refs.video.setAttribute(\"x5-video-player-type\",\"h5\"),this.$refs.video.setAttribute(\"x5-video-player-fullscreen\",!1)),\"\"!==this.crossOrigin&&(this.$refs.video.crossOrigin=this.crossOrigin,this.$refs.video.setAttribute(\"crossOrigin\",this.crossOrigin));var n=function(t,n){t&&e.$emit(t,e.player),n&&e.$emit(e.customEventName,i({},t,n))};t.plugins&&delete t.plugins.__ob__;var r=this;this.player=s(this.$refs.video,t,function(){for(var e=this,t=a.concat(r.events).concat(r.globalEvents),i={},o=0;o<t.length;o++)\"string\"==typeof t[o]&&void 0===i[t[o]]&&function(t){i[t]=null,e.on(t,function(){n(t,!0)})}(t[o]);this.on(\"timeupdate\",function(){n(\"timeupdate\",this.currentTime())}),r.$emit(\"ready\",this)})},dispose:function(e){var t=this;this.player&&this.player.dispose&&(\"Flash\"!==this.player.techName_&&this.player.pause&&this.player.pause(),this.player.dispose(),this.player=null,this.$nextTick(function(){t.reseted=!1,t.$nextTick(function(){t.reseted=!0,t.$nextTick(function(){e&&e()})})}))}},watch:{options:{deep:!0,handler:function(e,t){var n=this;this.dispose(function(){e&&e.sources&&e.sources.length&&n.initialize()})}}}}},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var i=n(1),r=n.n(i);for(var o in i)[\"default\",\"default\"].indexOf(o)<0&&function(e){n.d(t,e,function(){return i[e]})}(o);var s=n(5),a=n(4),l=a(r.a,s.a,!1,null,null,null);t.default=l.exports},function(e,t,n){\"use strict\";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,\"__esModule\",{value:!0}),t.install=t.videoPlayer=t.videojs=void 0;var r=n(0),o=i(r),s=n(2),a=i(s),l=window.videojs||o.default,u=function(e,t){t&&(t.options&&(a.default.props.globalOptions.default=function(){return t.options}),t.events&&(a.default.props.globalEvents.default=function(){return t.events})),e.component(a.default.name,a.default)},d={videojs:l,videoPlayer:a.default,install:u};t.default=d,t.videojs=l,t.videoPlayer=a.default,t.install=u},function(e,t){e.exports=function(e,t,n,i,r,o){var s,a=e=e||{},l=typeof e.default;\"object\"!==l&&\"function\"!==l||(s=e,a=e.default);var u=\"function\"==typeof a?a.options:a;t&&(u.render=t.render,u.staticRenderFns=t.staticRenderFns,u._compiled=!0),n&&(u.functional=!0),r&&(u._scopeId=r);var d;if(o?(d=function(e){e=e||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext,e||\"undefined\"==typeof __VUE_SSR_CONTEXT__||(e=__VUE_SSR_CONTEXT__),i&&i.call(this,e),e&&e._registeredComponents&&e._registeredComponents.add(o)},u._ssrRegister=d):i&&(d=i),d){var c=u.functional,f=c?u.render:u.beforeCreate;c?(u._injectStyles=d,u.render=function(e,t){return d.call(t),f(e,t)}):u.beforeCreate=f?[].concat(f,d):[d]}return{esModule:s,exports:a,options:u}}},function(e,t,n){\"use strict\";var i=function(){var e=this,t=e.$createElement,n=e._self._c||t;return e.reseted?n(\"div\",{staticClass:\"video-player\"},[n(\"video\",{ref:\"video\",staticClass:\"video-js\"})]):e._e()},r=[],o={render:i,staticRenderFns:r};t.a=o}])});","'use strict';\r\n\r\n/* globals\r\n\tSet,\r\n\tMap,\r\n\tWeakSet,\r\n\tWeakMap,\r\n\r\n\tPromise,\r\n\r\n\tSymbol,\r\n\tProxy,\r\n\r\n\tAtomics,\r\n\tSharedArrayBuffer,\r\n\r\n\tArrayBuffer,\r\n\tDataView,\r\n\tUint8Array,\r\n\tFloat32Array,\r\n\tFloat64Array,\r\n\tInt8Array,\r\n\tInt16Array,\r\n\tInt32Array,\r\n\tUint8ClampedArray,\r\n\tUint16Array,\r\n\tUint32Array,\r\n*/\r\n\r\nvar undefined; // eslint-disable-line no-shadow-restricted-names\r\n\r\nvar ThrowTypeError = Object.getOwnPropertyDescriptor\r\n\t? (function () { return Object.getOwnPropertyDescriptor(arguments, 'callee').get; }())\r\n\t: function () { throw new TypeError(); };\r\n\r\nvar hasSymbols = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol';\r\n\r\nvar getProto = Object.getPrototypeOf || function (x) { return x.__proto__; }; // eslint-disable-line no-proto\r\n\r\nvar generator; // = function * () {};\r\nvar generatorFunction = generator ? getProto(generator) : undefined;\r\nvar asyncFn; // async function() {};\r\nvar asyncFunction = asyncFn ? asyncFn.constructor : undefined;\r\nvar asyncGen; // async function * () {};\r\nvar asyncGenFunction = asyncGen ? getProto(asyncGen) : undefined;\r\nvar asyncGenIterator = asyncGen ? asyncGen() : undefined;\r\n\r\nvar TypedArray = typeof Uint8Array === 'undefined' ? undefined : getProto(Uint8Array);\r\n\r\nvar INTRINSICS = {\r\n\t'$ %Array%': Array,\r\n\t'$ %ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,\r\n\t'$ %ArrayBufferPrototype%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer.prototype,\r\n\t'$ %ArrayIteratorPrototype%': hasSymbols ? getProto([][Symbol.iterator]()) : undefined,\r\n\t'$ %ArrayPrototype%': Array.prototype,\r\n\t'$ %ArrayProto_entries%': Array.prototype.entries,\r\n\t'$ %ArrayProto_forEach%': Array.prototype.forEach,\r\n\t'$ %ArrayProto_keys%': Array.prototype.keys,\r\n\t'$ %ArrayProto_values%': Array.prototype.values,\r\n\t'$ %AsyncFromSyncIteratorPrototype%': undefined,\r\n\t'$ %AsyncFunction%': asyncFunction,\r\n\t'$ %AsyncFunctionPrototype%': asyncFunction ? asyncFunction.prototype : undefined,\r\n\t'$ %AsyncGenerator%': asyncGen ? getProto(asyncGenIterator) : undefined,\r\n\t'$ %AsyncGeneratorFunction%': asyncGenFunction,\r\n\t'$ %AsyncGeneratorPrototype%': asyncGenFunction ? asyncGenFunction.prototype : undefined,\r\n\t'$ %AsyncIteratorPrototype%': asyncGenIterator && hasSymbols && Symbol.asyncIterator ? asyncGenIterator[Symbol.asyncIterator]() : undefined,\r\n\t'$ %Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,\r\n\t'$ %Boolean%': Boolean,\r\n\t'$ %BooleanPrototype%': Boolean.prototype,\r\n\t'$ %DataView%': typeof DataView === 'undefined' ? undefined : DataView,\r\n\t'$ %DataViewPrototype%': typeof DataView === 'undefined' ? undefined : DataView.prototype,\r\n\t'$ %Date%': Date,\r\n\t'$ %DatePrototype%': Date.prototype,\r\n\t'$ %decodeURI%': decodeURI,\r\n\t'$ %decodeURIComponent%': decodeURIComponent,\r\n\t'$ %encodeURI%': encodeURI,\r\n\t'$ %encodeURIComponent%': encodeURIComponent,\r\n\t'$ %Error%': Error,\r\n\t'$ %ErrorPrototype%': Error.prototype,\r\n\t'$ %eval%': eval, // eslint-disable-line no-eval\r\n\t'$ %EvalError%': EvalError,\r\n\t'$ %EvalErrorPrototype%': EvalError.prototype,\r\n\t'$ %Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,\r\n\t'$ %Float32ArrayPrototype%': typeof Float32Array === 'undefined' ? undefined : Float32Array.prototype,\r\n\t'$ %Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,\r\n\t'$ %Float64ArrayPrototype%': typeof Float64Array === 'undefined' ? undefined : Float64Array.prototype,\r\n\t'$ %Function%': Function,\r\n\t'$ %FunctionPrototype%': Function.prototype,\r\n\t'$ %Generator%': generator ? getProto(generator()) : undefined,\r\n\t'$ %GeneratorFunction%': generatorFunction,\r\n\t'$ %GeneratorPrototype%': generatorFunction ? generatorFunction.prototype : undefined,\r\n\t'$ %Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,\r\n\t'$ %Int8ArrayPrototype%': typeof Int8Array === 'undefined' ? undefined : Int8Array.prototype,\r\n\t'$ %Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,\r\n\t'$ %Int16ArrayPrototype%': typeof Int16Array === 'undefined' ? undefined : Int8Array.prototype,\r\n\t'$ %Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,\r\n\t'$ %Int32ArrayPrototype%': typeof Int32Array === 'undefined' ? undefined : Int32Array.prototype,\r\n\t'$ %isFinite%': isFinite,\r\n\t'$ %isNaN%': isNaN,\r\n\t'$ %IteratorPrototype%': hasSymbols ? getProto(getProto([][Symbol.iterator]())) : undefined,\r\n\t'$ %JSON%': JSON,\r\n\t'$ %JSONParse%': JSON.parse,\r\n\t'$ %Map%': typeof Map === 'undefined' ? undefined : Map,\r\n\t'$ %MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols ? undefined : getProto(new Map()[Symbol.iterator]()),\r\n\t'$ %MapPrototype%': typeof Map === 'undefined' ? undefined : Map.prototype,\r\n\t'$ %Math%': Math,\r\n\t'$ %Number%': Number,\r\n\t'$ %NumberPrototype%': Number.prototype,\r\n\t'$ %Object%': Object,\r\n\t'$ %ObjectPrototype%': Object.prototype,\r\n\t'$ %ObjProto_toString%': Object.prototype.toString,\r\n\t'$ %ObjProto_valueOf%': Object.prototype.valueOf,\r\n\t'$ %parseFloat%': parseFloat,\r\n\t'$ %parseInt%': parseInt,\r\n\t'$ %Promise%': typeof Promise === 'undefined' ? undefined : Promise,\r\n\t'$ %PromisePrototype%': typeof Promise === 'undefined' ? undefined : Promise.prototype,\r\n\t'$ %PromiseProto_then%': typeof Promise === 'undefined' ? undefined : Promise.prototype.then,\r\n\t'$ %Promise_all%': typeof Promise === 'undefined' ? undefined : Promise.all,\r\n\t'$ %Promise_reject%': typeof Promise === 'undefined' ? undefined : Promise.reject,\r\n\t'$ %Promise_resolve%': typeof Promise === 'undefined' ? undefined : Promise.resolve,\r\n\t'$ %Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,\r\n\t'$ %RangeError%': RangeError,\r\n\t'$ %RangeErrorPrototype%': RangeError.prototype,\r\n\t'$ %ReferenceError%': ReferenceError,\r\n\t'$ %ReferenceErrorPrototype%': ReferenceError.prototype,\r\n\t'$ %Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,\r\n\t'$ %RegExp%': RegExp,\r\n\t'$ %RegExpPrototype%': RegExp.prototype,\r\n\t'$ %Set%': typeof Set === 'undefined' ? undefined : Set,\r\n\t'$ %SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols ? undefined : getProto(new Set()[Symbol.iterator]()),\r\n\t'$ %SetPrototype%': typeof Set === 'undefined' ? undefined : Set.prototype,\r\n\t'$ %SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,\r\n\t'$ %SharedArrayBufferPrototype%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer.prototype,\r\n\t'$ %String%': String,\r\n\t'$ %StringIteratorPrototype%': hasSymbols ? getProto(''[Symbol.iterator]()) : undefined,\r\n\t'$ %StringPrototype%': String.prototype,\r\n\t'$ %Symbol%': hasSymbols ? Symbol : undefined,\r\n\t'$ %SymbolPrototype%': hasSymbols ? Symbol.prototype : undefined,\r\n\t'$ %SyntaxError%': SyntaxError,\r\n\t'$ %SyntaxErrorPrototype%': SyntaxError.prototype,\r\n\t'$ %ThrowTypeError%': ThrowTypeError,\r\n\t'$ %TypedArray%': TypedArray,\r\n\t'$ %TypedArrayPrototype%': TypedArray ? TypedArray.prototype : undefined,\r\n\t'$ %TypeError%': TypeError,\r\n\t'$ %TypeErrorPrototype%': TypeError.prototype,\r\n\t'$ %Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,\r\n\t'$ %Uint8ArrayPrototype%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array.prototype,\r\n\t'$ %Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,\r\n\t'$ %Uint8ClampedArrayPrototype%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray.prototype,\r\n\t'$ %Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,\r\n\t'$ %Uint16ArrayPrototype%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array.prototype,\r\n\t'$ %Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,\r\n\t'$ %Uint32ArrayPrototype%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array.prototype,\r\n\t'$ %URIError%': URIError,\r\n\t'$ %URIErrorPrototype%': URIError.prototype,\r\n\t'$ %WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,\r\n\t'$ %WeakMapPrototype%': typeof WeakMap === 'undefined' ? undefined : WeakMap.prototype,\r\n\t'$ %WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet,\r\n\t'$ %WeakSetPrototype%': typeof WeakSet === 'undefined' ? undefined : WeakSet.prototype\r\n};\r\n\r\nmodule.exports = function GetIntrinsic(name, allowMissing) {\r\n\tif (arguments.length > 1 && typeof allowMissing !== 'boolean') {\r\n\t\tthrow new TypeError('\"allowMissing\" argument must be a boolean');\r\n\t}\r\n\r\n\tvar key = '$ ' + name;\r\n\tif (!(key in INTRINSICS)) {\r\n\t\tthrow new SyntaxError('intrinsic ' + name + ' does not exist!');\r\n\t}\r\n\r\n\t// istanbul ignore if // hopefully this is impossible to test :-)\r\n\tif (typeof INTRINSICS[key] === 'undefined' && !allowMissing) {\r\n\t\tthrow new TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');\r\n\t}\r\n\treturn INTRINSICS[key];\r\n};\r\n","var win;\r\n\r\nif (typeof window !== \"undefined\") {\r\n    win = window;\r\n} else if (typeof global !== \"undefined\") {\r\n    win = global;\r\n} else if (typeof self !== \"undefined\"){\r\n    win = self;\r\n} else {\r\n    win = {};\r\n}\r\n\r\nmodule.exports = win;\r\n","\"use strict\";\r\nvar window = require(\"global/window\")\r\nvar isFunction = require(\"is-function\")\r\nvar parseHeaders = require(\"parse-headers\")\r\nvar xtend = require(\"xtend\")\r\n\r\nmodule.exports = createXHR\r\ncreateXHR.XMLHttpRequest = window.XMLHttpRequest || noop\r\ncreateXHR.XDomainRequest = \"withCredentials\" in (new createXHR.XMLHttpRequest()) ? createXHR.XMLHttpRequest : window.XDomainRequest\r\n\r\nforEachArray([\"get\", \"put\", \"post\", \"patch\", \"head\", \"delete\"], function(method) {\r\n    createXHR[method === \"delete\" ? \"del\" : method] = function(uri, options, callback) {\r\n        options = initParams(uri, options, callback)\r\n        options.method = method.toUpperCase()\r\n        return _createXHR(options)\r\n    }\r\n})\r\n\r\nfunction forEachArray(array, iterator) {\r\n    for (var i = 0; i < array.length; i++) {\r\n        iterator(array[i])\r\n    }\r\n}\r\n\r\nfunction isEmpty(obj){\r\n    for(var i in obj){\r\n        if(obj.hasOwnProperty(i)) return false\r\n    }\r\n    return true\r\n}\r\n\r\nfunction initParams(uri, options, callback) {\r\n    var params = uri\r\n\r\n    if (isFunction(options)) {\r\n        callback = options\r\n        if (typeof uri === \"string\") {\r\n            params = {uri:uri}\r\n        }\r\n    } else {\r\n        params = xtend(options, {uri: uri})\r\n    }\r\n\r\n    params.callback = callback\r\n    return params\r\n}\r\n\r\nfunction createXHR(uri, options, callback) {\r\n    options = initParams(uri, options, callback)\r\n    return _createXHR(options)\r\n}\r\n\r\nfunction _createXHR(options) {\r\n    if(typeof options.callback === \"undefined\"){\r\n        throw new Error(\"callback argument missing\")\r\n    }\r\n\r\n    var called = false\r\n    var callback = function cbOnce(err, response, body){\r\n        if(!called){\r\n            called = true\r\n            options.callback(err, response, body)\r\n        }\r\n    }\r\n\r\n    function readystatechange() {\r\n        if (xhr.readyState === 4) {\r\n            setTimeout(loadFunc, 0)\r\n        }\r\n    }\r\n\r\n    function getBody() {\r\n        // Chrome with requestType=blob throws errors arround when even testing access to responseText\r\n        var body = undefined\r\n\r\n        if (xhr.response) {\r\n            body = xhr.response\r\n        } else {\r\n            body = xhr.responseText || getXml(xhr)\r\n        }\r\n\r\n        if (isJson) {\r\n            try {\r\n                body = JSON.parse(body)\r\n            } catch (e) {}\r\n        }\r\n\r\n        return body\r\n    }\r\n\r\n    function errorFunc(evt) {\r\n        clearTimeout(timeoutTimer)\r\n        if(!(evt instanceof Error)){\r\n            evt = new Error(\"\" + (evt || \"Unknown XMLHttpRequest Error\") )\r\n        }\r\n        evt.statusCode = 0\r\n        return callback(evt, failureResponse)\r\n    }\r\n\r\n    // will load the data & process the response in a special response object\r\n    function loadFunc() {\r\n        if (aborted) return\r\n        var status\r\n        clearTimeout(timeoutTimer)\r\n        if(options.useXDR && xhr.status===undefined) {\r\n            //IE8 CORS GET successful response doesn't have a status field, but body is fine\r\n            status = 200\r\n        } else {\r\n            status = (xhr.status === 1223 ? 204 : xhr.status)\r\n        }\r\n        var response = failureResponse\r\n        var err = null\r\n\r\n        if (status !== 0){\r\n            response = {\r\n                body: getBody(),\r\n                statusCode: status,\r\n                method: method,\r\n                headers: {},\r\n                url: uri,\r\n                rawRequest: xhr\r\n            }\r\n            if(xhr.getAllResponseHeaders){ //remember xhr can in fact be XDR for CORS in IE\r\n                response.headers = parseHeaders(xhr.getAllResponseHeaders())\r\n            }\r\n        } else {\r\n            err = new Error(\"Internal XMLHttpRequest Error\")\r\n        }\r\n        return callback(err, response, response.body)\r\n    }\r\n\r\n    var xhr = options.xhr || null\r\n\r\n    if (!xhr) {\r\n        if (options.cors || options.useXDR) {\r\n            xhr = new createXHR.XDomainRequest()\r\n        }else{\r\n            xhr = new createXHR.XMLHttpRequest()\r\n        }\r\n    }\r\n\r\n    var key\r\n    var aborted\r\n    var uri = xhr.url = options.uri || options.url\r\n    var method = xhr.method = options.method || \"GET\"\r\n    var body = options.body || options.data\r\n    var headers = xhr.headers = options.headers || {}\r\n    var sync = !!options.sync\r\n    var isJson = false\r\n    var timeoutTimer\r\n    var failureResponse = {\r\n        body: undefined,\r\n        headers: {},\r\n        statusCode: 0,\r\n        method: method,\r\n        url: uri,\r\n        rawRequest: xhr\r\n    }\r\n\r\n    if (\"json\" in options && options.json !== false) {\r\n        isJson = true\r\n        headers[\"accept\"] || headers[\"Accept\"] || (headers[\"Accept\"] = \"application/json\") //Don't override existing accept header declared by user\r\n        if (method !== \"GET\" && method !== \"HEAD\") {\r\n            headers[\"content-type\"] || headers[\"Content-Type\"] || (headers[\"Content-Type\"] = \"application/json\") //Don't override existing accept header declared by user\r\n            body = JSON.stringify(options.json === true ? body : options.json)\r\n        }\r\n    }\r\n\r\n    xhr.onreadystatechange = readystatechange\r\n    xhr.onload = loadFunc\r\n    xhr.onerror = errorFunc\r\n    // IE9 must have onprogress be set to a unique function.\r\n    xhr.onprogress = function () {\r\n        // IE must die\r\n    }\r\n    xhr.onabort = function(){\r\n        aborted = true;\r\n    }\r\n    xhr.ontimeout = errorFunc\r\n    xhr.open(method, uri, !sync, options.username, options.password)\r\n    //has to be after open\r\n    if(!sync) {\r\n        xhr.withCredentials = !!options.withCredentials\r\n    }\r\n    // Cannot set timeout with sync request\r\n    // not setting timeout on the xhr object, because of old webkits etc. not handling that correctly\r\n    // both npm's request and jquery 1.x use this kind of timeout, so this is being consistent\r\n    if (!sync && options.timeout > 0 ) {\r\n        timeoutTimer = setTimeout(function(){\r\n            if (aborted) return\r\n            aborted = true//IE9 may still call readystatechange\r\n            xhr.abort(\"timeout\")\r\n            var e = new Error(\"XMLHttpRequest timeout\")\r\n            e.code = \"ETIMEDOUT\"\r\n            errorFunc(e)\r\n        }, options.timeout )\r\n    }\r\n\r\n    if (xhr.setRequestHeader) {\r\n        for(key in headers){\r\n            if(headers.hasOwnProperty(key)){\r\n                xhr.setRequestHeader(key, headers[key])\r\n            }\r\n        }\r\n    } else if (options.headers && !isEmpty(options.headers)) {\r\n        throw new Error(\"Headers cannot be set on an XDomainRequest object\")\r\n    }\r\n\r\n    if (\"responseType\" in options) {\r\n        xhr.responseType = options.responseType\r\n    }\r\n\r\n    if (\"beforeSend\" in options &&\r\n        typeof options.beforeSend === \"function\"\r\n    ) {\r\n        options.beforeSend(xhr)\r\n    }\r\n\r\n    // Microsoft Edge browser sends \"undefined\" when send is called with undefined value.\r\n    // XMLHttpRequest spec says to pass null as body to indicate no body\r\n    // See https://github.com/naugtur/xhr/issues/100.\r\n    xhr.send(body || null)\r\n\r\n    return xhr\r\n\r\n\r\n}\r\n\r\nfunction getXml(xhr) {\r\n    if (xhr.responseType === \"document\") {\r\n        return xhr.responseXML\r\n    }\r\n    var firefoxBugTakenEffect = xhr.responseXML && xhr.responseXML.documentElement.nodeName === \"parsererror\"\r\n    if (xhr.responseType === \"\" && !firefoxBugTakenEffect) {\r\n        return xhr.responseXML\r\n    }\r\n\r\n    return null\r\n}\r\n\r\nfunction noop() {}\r\n","'use strict';\r\n\r\nvar keys = require('object-keys');\r\nvar hasSymbols = typeof Symbol === 'function' && typeof Symbol('foo') === 'symbol';\r\n\r\nvar toStr = Object.prototype.toString;\r\nvar concat = Array.prototype.concat;\r\nvar origDefineProperty = Object.defineProperty;\r\n\r\nvar isFunction = function (fn) {\r\n\treturn typeof fn === 'function' && toStr.call(fn) === '[object Function]';\r\n};\r\n\r\nvar arePropertyDescriptorsSupported = function () {\r\n\tvar obj = {};\r\n\ttry {\r\n\t\torigDefineProperty(obj, 'x', { enumerable: false, value: obj });\r\n\t\t// eslint-disable-next-line no-unused-vars, no-restricted-syntax\r\n\t\tfor (var _ in obj) { // jscs:ignore disallowUnusedVariables\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\treturn obj.x === obj;\r\n\t} catch (e) { /* this is IE 8. */\r\n\t\treturn false;\r\n\t}\r\n};\r\nvar supportsDescriptors = origDefineProperty && arePropertyDescriptorsSupported();\r\n\r\nvar defineProperty = function (object, name, value, predicate) {\r\n\tif (name in object && (!isFunction(predicate) || !predicate())) {\r\n\t\treturn;\r\n\t}\r\n\tif (supportsDescriptors) {\r\n\t\torigDefineProperty(object, name, {\r\n\t\t\tconfigurable: true,\r\n\t\t\tenumerable: false,\r\n\t\t\tvalue: value,\r\n\t\t\twritable: true\r\n\t\t});\r\n\t} else {\r\n\t\tobject[name] = value;\r\n\t}\r\n};\r\n\r\nvar defineProperties = function (object, map) {\r\n\tvar predicates = arguments.length > 2 ? arguments[2] : {};\r\n\tvar props = keys(map);\r\n\tif (hasSymbols) {\r\n\t\tprops = concat.call(props, Object.getOwnPropertySymbols(map));\r\n\t}\r\n\tfor (var i = 0; i < props.length; i += 1) {\r\n\t\tdefineProperty(object, props[i], map[props[i]], predicates[props[i]]);\r\n\t}\r\n};\r\n\r\ndefineProperties.supportsDescriptors = !!supportsDescriptors;\r\n\r\nmodule.exports = defineProperties;\r\n","/**\r\n * Copyright 2013 vtt.js Contributors\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nvar scrollSetting = {\r\n  \"\": true,\r\n  \"up\": true\r\n};\r\n\r\nfunction findScrollSetting(value) {\r\n  if (typeof value !== \"string\") {\r\n    return false;\r\n  }\r\n  var scroll = scrollSetting[value.toLowerCase()];\r\n  return scroll ? value.toLowerCase() : false;\r\n}\r\n\r\nfunction isValidPercentValue(value) {\r\n  return typeof value === \"number\" && (value >= 0 && value <= 100);\r\n}\r\n\r\n// VTTRegion shim http://dev.w3.org/html5/webvtt/#vttregion-interface\r\nfunction VTTRegion() {\r\n  var _width = 100;\r\n  var _lines = 3;\r\n  var _regionAnchorX = 0;\r\n  var _regionAnchorY = 100;\r\n  var _viewportAnchorX = 0;\r\n  var _viewportAnchorY = 100;\r\n  var _scroll = \"\";\r\n\r\n  Object.defineProperties(this, {\r\n    \"width\": {\r\n      enumerable: true,\r\n      get: function() {\r\n        return _width;\r\n      },\r\n      set: function(value) {\r\n        if (!isValidPercentValue(value)) {\r\n          throw new Error(\"Width must be between 0 and 100.\");\r\n        }\r\n        _width = value;\r\n      }\r\n    },\r\n    \"lines\": {\r\n      enumerable: true,\r\n      get: function() {\r\n        return _lines;\r\n      },\r\n      set: function(value) {\r\n        if (typeof value !== \"number\") {\r\n          throw new TypeError(\"Lines must be set to a number.\");\r\n        }\r\n        _lines = value;\r\n      }\r\n    },\r\n    \"regionAnchorY\": {\r\n      enumerable: true,\r\n      get: function() {\r\n        return _regionAnchorY;\r\n      },\r\n      set: function(value) {\r\n        if (!isValidPercentValue(value)) {\r\n          throw new Error(\"RegionAnchorX must be between 0 and 100.\");\r\n        }\r\n        _regionAnchorY = value;\r\n      }\r\n    },\r\n    \"regionAnchorX\": {\r\n      enumerable: true,\r\n      get: function() {\r\n        return _regionAnchorX;\r\n      },\r\n      set: function(value) {\r\n        if(!isValidPercentValue(value)) {\r\n          throw new Error(\"RegionAnchorY must be between 0 and 100.\");\r\n        }\r\n        _regionAnchorX = value;\r\n      }\r\n    },\r\n    \"viewportAnchorY\": {\r\n      enumerable: true,\r\n      get: function() {\r\n        return _viewportAnchorY;\r\n      },\r\n      set: function(value) {\r\n        if (!isValidPercentValue(value)) {\r\n          throw new Error(\"ViewportAnchorY must be between 0 and 100.\");\r\n        }\r\n        _viewportAnchorY = value;\r\n      }\r\n    },\r\n    \"viewportAnchorX\": {\r\n      enumerable: true,\r\n      get: function() {\r\n        return _viewportAnchorX;\r\n      },\r\n      set: function(value) {\r\n        if (!isValidPercentValue(value)) {\r\n          throw new Error(\"ViewportAnchorX must be between 0 and 100.\");\r\n        }\r\n        _viewportAnchorX = value;\r\n      }\r\n    },\r\n    \"scroll\": {\r\n      enumerable: true,\r\n      get: function() {\r\n        return _scroll;\r\n      },\r\n      set: function(value) {\r\n        var setting = findScrollSetting(value);\r\n        // Have to check for false as an empty string is a legal value.\r\n        if (setting === false) {\r\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\r\n        }\r\n        _scroll = setting;\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nmodule.exports = VTTRegion;\r\n"],"sourceRoot":""}