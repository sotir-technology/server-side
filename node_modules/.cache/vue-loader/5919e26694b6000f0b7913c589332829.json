{"remainingRequest":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xampp\\htdocs\\GIT\\server-side\\src\\views\\apps\\email\\Email.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\src\\views\\apps\\email\\Email.vue","mtime":1567376724883},{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\css-loader\\index.js","mtime":1567428509669},{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1567523031840},{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\postcss-loader\\lib\\index.js","mtime":1567428647793},{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\sass-loader\\lib\\loader.js","mtime":1567428680299},{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1567428497170},{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\vue-loader\\lib\\index.js","mtime":1567428708565}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n@import \"@/assets/scss/vuesax/apps/email.scss\";\r\n",{"version":3,"sources":["Email.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgRA","file":"Email.vue","sourceRoot":"src/views/apps/email","sourcesContent":["<!-- =========================================================================================\r\n    File Name: Email.vue\r\n    Description: Email Application (Inbox)\r\n    ----------------------------------------------------------------------------------------\r\n    Item Name: Vuesax Admin - VueJS Dashboard Admin Template\r\n      Author: Pixinvent\r\n    Author URL: http://www.themeforest.net/user/pixinvent\r\n========================================================================================== -->\r\n\r\n\r\n<template>\r\n    <div id=\"email-app\" class=\"border border-solid border-grey-light rounded relative overflow-hidden\">\r\n\r\n        <vs-sidebar class=\"items-no-padding\" parent=\"#email-app\" :click-not-close=\"clickNotClose\" :hidden-background=\"clickNotClose\" v-model=\"isEmailSidebarActive\">\r\n            <email-sidebar :emailTags=\"emailTags\" @closeSidebar=\"toggleEmailSidebar\" :mailFilter=\"mailFilter\"></email-sidebar>\r\n        </vs-sidebar>\r\n\r\n        <div :class=\"{'sidebar-spacer': clickNotClose}\" class=\"app-fixed-height border border-solid border-grey-light border-r-0 border-t-0 border-b-0\">\r\n\r\n            <!-- SEARCH BAR -->\r\n            <div class=\"flex border items-center app-search-container\">\r\n                <feather-icon class=\"md:inline-flex lg:hidden ml-4 mr-4 cursor-pointer\" icon=\"MenuIcon\" @click.stop=\"toggleEmailSidebar(true)\"></feather-icon>\r\n                <vs-input icon=\"icon-search\" size=\"large\" icon-pack=\"feather\" placeholder=\"Search Mail\" v-model=\"searchQuery\" class=\"vs-input-no-border vs-input-no-shdow-focus w-full no-icon-border\" />\r\n            </div>\r\n\r\n            <!-- EMAIL ACTION BAR -->\r\n            <div class=\"email__actions flex flex-wrap justify-between p-4 border border-r-0 border-l-0 border-solid border-grey-light\">\r\n                <div>\r\n                    <vs-checkbox v-model=\"selectAllCheckBox\" icon-pack=\"feather\" :icon=\"selectAllIcon\" class=\"select-all-chexkbox ml-0\">Select All</vs-checkbox>\r\n                </div>\r\n                <div class=\"flex\">\r\n\r\n                    <vs-dropdown vs-custom-content vs-trigger-click class=\"cursor-pointer\">\r\n\r\n                        <feather-icon icon=\"FolderIcon\" class=\"cursor-pointer\" svg-classes=\"h-6 w-6\"></feather-icon>\r\n\r\n                        <vs-dropdown-menu>\r\n                            <ul class=\"my-2\">\r\n                                <li class=\"px-4 mb-2 flex items-start cursor-pointer hover:text-primary\" @click=\"moveTo('inboxed')\" v-if=\"mailFilter != 'inbox'\">\r\n                                    <feather-icon icon=\"MailIcon\" svg-classes=\"h-5 w-5\" />\r\n                                    <span class=\"ml-3\">Inbox</span>\r\n                                </li>\r\n                                <li class=\"px-4 mb-2 flex items-start cursor-pointer hover:text-primary\" @click=\"moveTo('drafted')\" v-if=\"mailFilter != 'draft'\">\r\n                                    <feather-icon icon=\"Edit2Icon\" svg-classes=\"h-5 w-5\"></feather-icon>\r\n                                    <span class=\"ml-3\">Draft</span>\r\n                                </li>\r\n                                <li class=\"px-4 mb-2 flex items-start cursor-pointer hover:text-primary\" @click=\"moveTo('spam')\" v-if=\"mailFilter != 'spam'\">\r\n                                    <feather-icon icon=\"InfoIcon\" svg-classes=\"h-5 w-5\"></feather-icon>\r\n                                    <span class=\"ml-3\">Spam</span>\r\n                                </li>\r\n                                <li class=\"px-4 flex items-start cursor-pointer hover:text-primary\" @click=\"moveTo('trashed')\" v-if=\"mailFilter != 'trash'\">\r\n                                    <feather-icon icon=\"TrashIcon\" svg-classes=\"h-5 w-5\"></feather-icon>\r\n                                    <span class=\"ml-3\">Trash</span>\r\n                                </li>\r\n                            </ul>\r\n                        </vs-dropdown-menu>\r\n                    </vs-dropdown>\r\n\r\n                    <vs-dropdown vs-custom-content vs-trigger-click class=\"cursor-pointer\">\r\n\r\n                        <feather-icon icon=\"TagIcon\" class=\"cursor-pointer ml-5\" svg-classes=\"h-6 w-6\"></feather-icon>\r\n\r\n                        <vs-dropdown-menu >\r\n                                <ul>\r\n                                    <li v-for=\"(label, index) in emailTags\" :key=\"index\" class=\"px-2 py-1 cursor-pointer\" @click=\"addLabelToMails(label.value)\">\r\n                                        <div class=\"h-3 w-3 inline-block rounded-full mr-3\" :class=\"'bg-' + label.color\"></div>\r\n                                        <span>{{ label.text }}</span>\r\n                                    </li>\r\n                                </ul>\r\n                        </vs-dropdown-menu>\r\n                    </vs-dropdown>\r\n\r\n                    <feather-icon icon=\"MailIcon\" class=\"ml-5 cursor-pointer\" svg-classes=\"h-6 w-6\" @click=\"updateMarkUnread\"></feather-icon>\r\n\r\n                    <feather-icon icon=\"TrashIcon\" class=\"cursor-pointer ml-5\" svg-classes=\"h-6 w-6\" @click=\"moveTo('trashed')\"></feather-icon>\r\n                </div>\r\n            </div>\r\n\r\n            <!-- EMAILS LIST -->\r\n            <VuePerfectScrollbar class=\"email-content-scroll-area\" :settings=\"settings\" ref=\"mailListPS\">\r\n                <transition-group name=\"list-enter-up\" class=\"email__mails\" tag=\"ul\" appear>\r\n                    <li class=\"cursor-pointer email__mail-item\" v-for=\"(mail, index) in mails\" :key=\"String(mailFilter) + String(mail.id)\" @click.stop=\"updateOpenMail(mail.id)\" :style=\"{transitionDelay: (index * 0.1) + 's'}\">\r\n                        <mail-item :mail=\"mail\" :isMailOpen=\"isMailOpen(mail.id)\" :isSelected=\"isMailSelected(mail.id)\" @addToSelected=\"addToSelectedMails\" @removeSelected=\"removeSelectedMail\"></mail-item>\r\n                    </li>\r\n                </transition-group>\r\n            </VuePerfectScrollbar>\r\n        </div>\r\n\r\n        <!-- EMAIL VIEW SIDEBAR -->\r\n        <email-view\r\n            :emailTags = \"emailTags\"\r\n            :openMailId = \"openMailId\"\r\n            :isSidebarActive = \"isSidebarActive\"\r\n            @markUnread = \"updateSingleMarkUnread\"\r\n            @removeMail = \"removeOpenMail\"\r\n            @previousMail = \"previousMail\"\r\n            @nextMail = \"nextMail\"\r\n            @moveTo = \"moveCurrentTo\"\r\n            @closeSidebar = \"closeMailViewSidebar\">\r\n        </email-view>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport EmailSidebar from './EmailSidebar.vue'\r\nimport MailItem from './MailItem.vue'\r\nimport EmailView from './EmailView.vue'\r\nimport VuePerfectScrollbar from 'vue-perfect-scrollbar'\r\n\r\nexport default{\r\n    data() {\r\n        return {\r\n            openMailId: null,\r\n            selectedMails: [],\r\n            isSidebarActive: false,\r\n            showThread: false,\r\n            clickNotClose: true,\r\n            isEmailSidebarActive: true,\r\n            windowWidth: window.innerWidth,\r\n            settings: {\r\n                maxScrollbarLength: 60,\r\n                wheelSpeed: 0.30,\r\n            },\r\n        }\r\n    },\r\n    watch: {\r\n        isSidebarActive(value) {\r\n            if(!value) this.showThread = false\r\n        },\r\n        mailFilter() {\r\n            this.selectedMails = [];\r\n            this.$refs.mailListPS.$el.scrollTop = 0;\r\n        }\r\n    },\r\n    computed: {\r\n        mailFilter() {\r\n            return this.$store.state.email.mail_filter;\r\n        },\r\n        emailTags() {\r\n            return this.$store.state.email.mailTags;\r\n        },\r\n        searchQuery: {\r\n            get() {\r\n                return this.$store.state.email.mailSearchQuery;\r\n            },\r\n            set(val) {\r\n                this.$store.dispatch('email/setMailSearchQuery', val);\r\n            }\r\n        },\r\n        selectAllCheckBox: {\r\n            get() {\r\n                return this.selectedMails.length;\r\n            },\r\n            set(value) {\r\n                if(value) this.selectedMails = this.mails.map(mail => mail.id)\r\n                else this.selectedMails = [];\r\n            }\r\n        },\r\n        mails() {\r\n            return this.$store.getters['email/filteredMails'];\r\n        },\r\n        isMailOpen() {\r\n            return (mailId) => mailId == this.openMailId;\r\n        },\r\n        selectAllIcon() {\r\n            if(this.selectedMails.length == this.mails.length) return 'icon-check'\r\n            else return 'icon-minus'\r\n        },\r\n        isMailSelected() {\r\n            return (mailId) => this.selectedMails.indexOf(mailId) == -1 ? false : true;\r\n        },\r\n    },\r\n    methods: {\r\n        updateOpenMail(mailId) {\r\n            this.openMailId = mailId;\r\n            const payload = {mails: [mailId], unread: false};\r\n            this.$store.dispatch('email/updateMailUnread', payload);\r\n            this.isSidebarActive = true;\r\n        },\r\n        addToSelectedMails(mailId) {\r\n            this.selectedMails.push(mailId)\r\n        },\r\n        removeSelectedMail(mailId) {\r\n            const mailIndex = this.selectedMails.indexOf(mailId);\r\n            if(mailIndex > -1) {\r\n                this.selectedMails.splice(mailIndex, 1)\r\n            }\r\n        },\r\n        moveTo(to) {\r\n            const payload = {mails: this.selectedMails, to: to}\r\n            this.$store.dispatch('email/moveMailsTo', payload)\r\n            this.selectedMails = [];\r\n        },\r\n        moveCurrentTo(to) {\r\n            this.selectedMails = [this.openMailId];\r\n            this.moveTo(to)\r\n        },\r\n        updateMarkUnread() {\r\n            const payload = {mails: this.selectedMails, unread: true}\r\n            this.$store.dispatch('email/updateMailUnread', payload)\r\n            this.selectedMails = [];\r\n        },\r\n        removeOpenMail() {\r\n            this.selectedMails = [this.openMailId];\r\n            this.moveTo('trashed');\r\n            this.isSidebarActive = false;\r\n        },\r\n        toggleIsStarred() {\r\n            const payload = {mailId: this.currentMail.id, value : !this.currentMail.isStarred}\r\n            this.$store.dispatch('email/toggleIsMailStarred', payload)\r\n        },\r\n        nextMail() {\r\n            const currentMailIndex = this.mails.findIndex((mail) => mail.id == this.openMailId)\r\n            if(this.mails[currentMailIndex + 1]) this.openMailId = this.mails[currentMailIndex + 1].id\r\n        },\r\n        previousMail() {\r\n            const currentMailIndex = this.mails.findIndex((mail) => mail.id == this.openMailId)\r\n            if(this.mails[currentMailIndex - 1]) this.openMailId = this.mails[currentMailIndex - 1].id\r\n        },\r\n        updateSingleMarkUnread() {\r\n            this.selectedMails = [this.openMailId];\r\n            this.updateMarkUnread();\r\n            this.isSidebarActive = false;\r\n        },\r\n        addLabelToMails(label) {\r\n            const payload = {mails: this.selectedMails, label: label}\r\n            this.$store.dispatch('email/addLabelToMails', payload);\r\n            this.selectedMails = [];\r\n        },\r\n        closeMailViewSidebar() {\r\n            this.isSidebarActive = false;\r\n        },\r\n        handleWindowResize(event) {\r\n            this.windowWidth = event.currentTarget.innerWidth;\r\n            this.setSidebarWidth();\r\n        },\r\n        setSidebarWidth() {\r\n            if(this.windowWidth < 992) {\r\n                this.isEmailSidebarActive = this.clickNotClose = false;\r\n            }else {\r\n                this.isEmailSidebarActive = this.clickNotClose = true;\r\n            }\r\n        },\r\n        toggleEmailSidebar(value = false) {\r\n            if(!value) {\r\n                this.closeMailViewSidebar()\r\n                if(this.clickNotClose) {\r\n                    return\r\n                }\r\n            }\r\n            this.isEmailSidebarActive = value;\r\n        },\r\n    },\r\n    components: {\r\n        MailItem,\r\n        EmailSidebar,\r\n        EmailView,\r\n        VuePerfectScrollbar\r\n    },\r\n    created() {\r\n        this.$nextTick(() => {\r\n            window.addEventListener('resize', this.handleWindowResize);\r\n        })\r\n        this.setSidebarWidth();\r\n    },\r\n    beforeDestroy: function () {\r\n        window.removeEventListener('resize', this.handleWindowResize)\r\n    },\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import \"@/assets/scss/vuesax/apps/email.scss\";\r\n</style>\r\n"]}]}