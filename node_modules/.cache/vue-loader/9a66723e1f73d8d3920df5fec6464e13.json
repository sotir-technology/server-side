{"remainingRequest":"C:\\Users\\Message Akunna\\Documents\\workspace\\vuejs\\sotire technology\\new\\server-side\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Message Akunna\\Documents\\workspace\\vuejs\\sotire technology\\new\\server-side\\src\\views\\churcha2z\\pages\\Register.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Message Akunna\\Documents\\workspace\\vuejs\\sotire technology\\new\\server-side\\src\\views\\churcha2z\\pages\\Register.vue","mtime":1567769939777},{"path":"C:\\Users\\Message Akunna\\Documents\\workspace\\vuejs\\sotire technology\\new\\server-side\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1567769201670},{"path":"C:\\Users\\Message Akunna\\Documents\\workspace\\vuejs\\sotire technology\\new\\server-side\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1567769166513},{"path":"C:\\Users\\Message Akunna\\Documents\\workspace\\vuejs\\sotire technology\\new\\server-side\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1567769201670},{"path":"C:\\Users\\Message Akunna\\Documents\\workspace\\vuejs\\sotire technology\\new\\server-side\\node_modules\\vue-loader\\lib\\index.js","mtime":1567769589298}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport firebase from 'firebase/app'\n\nexport default {\n    data() {\n        return {\n            username: '',\n            email: '',\n            password: '',\n            confirm_password: '',\n            isTermsConditionAccepted: true\n        }\n    },\n    computed: {\n        validateForm() {\n            return !this.errors.any() && this.username != '' && this.email != '' && this.password != '' && this.confirm_password != '' && this.isTermsConditionAccepted === true;\n        }\n    },\n    methods: {\n        registerUser() {\n            if (!this.validateForm) return false\n            if(this.$store.state.auth.isUserLoggedIn()) {\n              this.notifyAlreadyLogedIn();\n              return\n            }\n\n            // create user using firebase\n            firebase.auth().createUserWithEmailAndPassword(this.email, this.password)\n                .then(() => {\n                    this.$vs.notify({\n                        title: 'Account Created',\n                        text: 'You are successfully registered!',\n                        iconPack: 'feather',\n                        icon: 'icon-check',\n                        color: 'success'\n                    });\n                }, (error) => {\n                    this.$vs.notify({\n                        title: 'Error',\n                        text: error.message,\n                        iconPack: 'feather',\n                        icon: 'icon-alert-circle',\n                        color: 'danger'\n                    });\n                })\n\n            // update user profile. In this case add username\n            const username = this.username;\n            const loginPayload = {\n                userDetails: {\n                    email: this.email,\n                    password: this.password\n                },\n                notify: this.$vs.notify\n            }\n            const store = this.$store;\n            firebase.auth().onAuthStateChanged(function(user) {\n                if (user) {\n                    user.updateProfile({\n                        displayName: username,\n                    }).then(function() {\n                        // Profile updated successfully!\n                        // Login user\n                        store.dispatch('auth/login', loginPayload)\n                    }, function(error) {\n                        this.$vs.notify({\n                            title: 'Error',\n                            text: error.message,\n                            iconPack: 'feather',\n                            icon: 'icon-alert-circle',\n                            color: 'danger'\n                        });\n                    });\n\n                }\n            });\n        },\n        notifyAlreadyLogedIn() {\n            this.$vs.notify({\n                title: 'Login Attempt',\n                text: 'You are already logged in!',\n                iconPack: 'feather',\n                icon: 'icon-alert-circle',\n                color: 'warning'\n            });\n        },\n    }\n}\n",{"version":3,"sources":["Register.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqFA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Register.vue","sourceRoot":"src/views/churcha2z/pages","sourcesContent":["<!-- =========================================================================================\n    File Name: Register.vue\n    Description: Register Page\n    ----------------------------------------------------------------------------------------\n    Item Name: Vuesax Admin - VueJS Dashboard Admin Template\n      Author: Pixinvent\n    Author URL: http://www.themeforest.net/user/pixinvent\n========================================================================================== -->\n\n\n<template>\n    <div class=\"h-screen flex w-full bg-img\">\n        <div class=\"vx-col sm:w-1/2 md:w-1/2 lg:w-3/4 xl:w-3/5 mx-auto self-center\">\n            <vx-card>\n                <div slot=\"no-body\" class=\"full-page-bg-color\">\n                    <div class=\"vx-row\">\n                        <div class=\"vx-col hidden sm:hidden md:hidden lg:block lg:w-1/2 mx-auto self-center\">\n                            <img src=\"@/assets/images/pages/register.jpg\" alt=\"register\" class=\"mx-auto\">\n                        </div>\n                        <div class=\"vx-col sm:w-full md:w-full lg:w-1/2 mx-auto self-center  d-theme-dark-bg\">\n                            <div class=\"p-8\">\n                                <div class=\"vx-card__title\">\n                                    <h4 class=\"mb-4\">Create Account</h4>\n                                    <p>Fill the below form to create a new account.</p>\n                                </div>\n                                <div class=\"clearfix\">\n                                    <vs-input\n                                        v-validate=\"'required|alpha_dash|min:3'\"\n                                        data-vv-validate-on=\"blur\"\n                                        label-placeholder=\"Username\"\n                                        name=\"username\"\n                                        placeholder=\"Church\"\n                                        v-model=\"church_name\"\n                                        class=\"w-full\" />\n                                    <span class=\"text-danger text-sm\">{{ errors.first('church_name') }}</span>\n\n                                    <vs-input\n                                        v-validate=\"'required|email'\"\n                                        data-vv-validate-on=\"blur\"\n                                        name=\"email\"\n                                        type=\"email\"\n                                        label-placeholder=\"Church Email\"\n                                        placeholder=\"Email\"\n                                        v-model=\"email\"\n                                        class=\"w-full mt-6\" />\n                                    <span class=\"text-danger text-sm\">{{ errors.first('email') }}</span>\n\n                                    <vs-input\n                                        ref=\"password\"\n                                        type=\"password\"\n                                        data-vv-validate-on=\"blur\"\n                                        v-validate=\"'required|min:6|max:10'\"\n                                        name=\"password\"\n                                        label-placeholder=\"Password\"\n                                        placeholder=\"Password\"\n                                        v-model=\"password\"\n                                        class=\"w-full mt-6\" />\n                                    <span class=\"text-danger text-sm\">{{ errors.first('password') }}</span>\n\n                                    <vs-input\n                                        type=\"password\"\n                                        v-validate=\"'min:6|max:10|confirmed:password'\"\n                                        data-vv-validate-on=\"blur\"\n                                        data-vv-as=\"password\"\n                                        name=\"confirm_password\"\n                                        label-placeholder=\"Confirm Password\"\n                                        placeholder=\"Confirm Password\"\n                                        v-model=\"confirm_password\"\n                                        class=\"w-full mt-6\" />\n                                    <span class=\"text-danger text-sm\">{{ errors.first('confirm_password') }}</span>\n\n                                    <vs-checkbox v-model=\"isTermsConditionAccepted\" class=\"mt-6\">I accept the terms & conditions.</vs-checkbox>\n                                    <vs-button  type=\"border\" to=\"/church/login\" class=\"mt-6\">Login</vs-button>\n                                    <vs-button class=\"float-right mt-6\" @click=\"registerUser\" :disabled=\"!validateForm\">Register</vs-button>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </vx-card>\n        </div>\n    </div>\n</template>\n\n<script>\nimport firebase from 'firebase/app'\n\nexport default {\n    data() {\n        return {\n            username: '',\n            email: '',\n            password: '',\n            confirm_password: '',\n            isTermsConditionAccepted: true\n        }\n    },\n    computed: {\n        validateForm() {\n            return !this.errors.any() && this.username != '' && this.email != '' && this.password != '' && this.confirm_password != '' && this.isTermsConditionAccepted === true;\n        }\n    },\n    methods: {\n        registerUser() {\n            if (!this.validateForm) return false\n            if(this.$store.state.auth.isUserLoggedIn()) {\n              this.notifyAlreadyLogedIn();\n              return\n            }\n\n            // create user using firebase\n            firebase.auth().createUserWithEmailAndPassword(this.email, this.password)\n                .then(() => {\n                    this.$vs.notify({\n                        title: 'Account Created',\n                        text: 'You are successfully registered!',\n                        iconPack: 'feather',\n                        icon: 'icon-check',\n                        color: 'success'\n                    });\n                }, (error) => {\n                    this.$vs.notify({\n                        title: 'Error',\n                        text: error.message,\n                        iconPack: 'feather',\n                        icon: 'icon-alert-circle',\n                        color: 'danger'\n                    });\n                })\n\n            // update user profile. In this case add username\n            const username = this.username;\n            const loginPayload = {\n                userDetails: {\n                    email: this.email,\n                    password: this.password\n                },\n                notify: this.$vs.notify\n            }\n            const store = this.$store;\n            firebase.auth().onAuthStateChanged(function(user) {\n                if (user) {\n                    user.updateProfile({\n                        displayName: username,\n                    }).then(function() {\n                        // Profile updated successfully!\n                        // Login user\n                        store.dispatch('auth/login', loginPayload)\n                    }, function(error) {\n                        this.$vs.notify({\n                            title: 'Error',\n                            text: error.message,\n                            iconPack: 'feather',\n                            icon: 'icon-alert-circle',\n                            color: 'danger'\n                        });\n                    });\n\n                }\n            });\n        },\n        notifyAlreadyLogedIn() {\n            this.$vs.notify({\n                title: 'Login Attempt',\n                text: 'You are already logged in!',\n                iconPack: 'feather',\n                icon: 'icon-alert-circle',\n                color: 'warning'\n            });\n        },\n    }\n}\n</script>\n"]}]}