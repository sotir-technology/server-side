{"remainingRequest":"C:\\Users\\Message Akunna\\Documents\\workspace\\vuejs\\sotire technology\\new\\server-side\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Message Akunna\\Documents\\workspace\\vuejs\\sotire technology\\new\\server-side\\src\\layouts\\churcha2z\\components\\vx-sidebar\\VxSidebarGroup.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"C:\\Users\\Message Akunna\\Documents\\workspace\\vuejs\\sotire technology\\new\\server-side\\src\\layouts\\churcha2z\\components\\vx-sidebar\\VxSidebarGroup.vue","mtime":1567769939388},{"path":"C:\\Users\\Message Akunna\\Documents\\workspace\\vuejs\\sotire technology\\new\\server-side\\node_modules\\css-loader\\index.js","mtime":1567769221123},{"path":"C:\\Users\\Message Akunna\\Documents\\workspace\\vuejs\\sotire technology\\new\\server-side\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1567769939134},{"path":"C:\\Users\\Message Akunna\\Documents\\workspace\\vuejs\\sotire technology\\new\\server-side\\node_modules\\postcss-loader\\lib\\index.js","mtime":1567769465578},{"path":"C:\\Users\\Message Akunna\\Documents\\workspace\\vuejs\\sotire technology\\new\\server-side\\node_modules\\sass-loader\\lib\\loader.js","mtime":1567769523140},{"path":"C:\\Users\\Message Akunna\\Documents\\workspace\\vuejs\\sotire technology\\new\\server-side\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1567769201670},{"path":"C:\\Users\\Message Akunna\\Documents\\workspace\\vuejs\\sotire technology\\new\\server-side\\node_modules\\vue-loader\\lib\\index.js","mtime":1567769589298}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@import \"@/assets/scss/vuesax/components/vxSidebarGroup.scss\"\n",{"version":3,"sources":["VxSidebarGroup.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqMA","file":"VxSidebarGroup.vue","sourceRoot":"src/layouts/churcha2z/components/vx-sidebar","sourcesContent":["<!-- =========================================================================================\n\tFile Name: VxSidebarGroup.vue\n\tDescription: Sidebar Group Component. Extends vuesax framework's 'vs-sidebar-group' component\n\tComponent Name: VxSidebarGroup\n\t----------------------------------------------------------------------------------------\n\tItem Name: Vuesax Admin - VueJS Dashboard Admin Template\n\tAuthor: Pixinvent\n\tAuthor URL: http://www.themeforest.net/user/pixinvent\n========================================================================================== -->\n\n\n<template>\n  <div\n    :class=\"[{'vs-sidebar-group-open' : openItems}, {'vs-sidebar-group-active': open}, {'disabled-item pointer-events-none': group.isDisabled}]\"\n    class=\"vs-sidebar-group\"\n    @mouseover=\"mouseover\"\n    @mouseout=\"mouseout\">\n\t<div @click=\"clickGroup\" class=\"group-header w-full\">\n\t\t<span class=\"flex items-center w-full\">\n\t\t\t<feather-icon :icon=\"group.icon || 'CircleIcon'\" :svgClasses=\"{ 'w-3 h-3' : this.groupIndex % 1 != 0 }\" v-if=\"group.icon || (this.groupIndex > Math.floor(this.groupIndex))\" />\n\t\t\t<span v-show=\"!sidebarItemsMin\" class=\"truncate mr-3\">{{ $t(group.i18n) || group.name }}</span>\n\t\t\t<vs-chip class=\"ml-auto mr-4\" :color=\"group.tagColor\" v-if=\"group.tag && !sidebarItemsMin\">{{ group.tag }}</vs-chip>\n\t\t</span>\n\t\t<feather-icon icon=\"ChevronRightIcon\" svg-classes=\"w-4 h-4\" :class=\"[{'rotate90' : openItems}, 'feather-grp-header-arrow']\" v-show=\"!sidebarItemsMin\" />\n\t\t<span class=\"vs-sidebar--tooltip\">{{ $t(group.i18n) || group.name }}</span>\n    </div>\n    <ul ref=\"items\" :style=\"styleItems\" class=\"vs-sidebar-group-items\">\n      <li v-for=\"(groupItem, index) in group.submenu\" :key=\"index\">\n\t\t<vx-sidebar-group :group=\"groupItem\" :groupIndex=\"Number(`${groupIndex}.${index}`)\" :open=\"isGroupActive(groupItem)\" :openHover=\"openHover\" v-if=\"groupItem.submenu\" />\n\t\t<vx-sidebar-item :index=\"groupIndex + '.' + index\" :to=\"groupItem.url\" :icon=\"itemIcon(groupIndex + '.' + index)\" icon-small :target=\"groupItem.target\" v-else>\n\t\t\t<span class=\"truncate\">{{ $t(groupItem.i18n) || groupItem.name }}</span>\n\t\t\t<vs-chip class=\"ml-auto\" :color=\"groupItem.tagColor\" v-if=\"groupItem.tag\">{{ groupItem.tag }}</vs-chip>\n\t\t</vx-sidebar-item>\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport VxSidebarItem from './VxSidebarItem.vue'\n\nexport default {\n    name: 'vx-sidebar-group',\n    props: {\n        openHover: {\n            default: false,\n            type: Boolean\n        },\n        open: {\n            default: false,\n            type: Boolean\n        },\n        group: {\n            type: Object\n        },\n        groupIndex: {\n            type: Number,\n        },\n    },\n    data: () => ({\n        maxHeight: '0px',\n        openItems: false\n    }),\n    computed: {\n        sidebarItemsMin() {\n            return this.$store.state.sidebarItemsMin;\n        },\n        styleItems() {\n            return {\n                maxHeight: this.maxHeight\n            }\n        },\n        itemIcon() {\n            return (index) => {\n                if (!((index.match(/\\./g) || []).length > 1)) return \"CircleIcon\"\n            }\n        },\n        isGroupActive() {\n            return (sidebarItem) => {\n\n                const path = this.$route.fullPath;\n                let open = false;\n                let func = function(sidebarItem) {\n                    if (sidebarItem.submenu) {\n                        sidebarItem.submenu.forEach((item) => {\n                            if (path == item.url) {\n                                open = true\n                            } else if (item.submenu) {\n                                func(item)\n                            }\n                        })\n                    }\n                }\n\n                func(sidebarItem)\n                return open\n            }\n        },\n    },\n    watch: {\n        // OPEN & CLOSES DROPDOWN ON ROUTE CHANGE\n        '$route'() {\n\t\t\tif(this.sidebarItemsMin) return\n            let scrollHeight = this.scrollHeight\n            if (this.openItems && !this.open) {\n                this.maxHeight = `${scrollHeight}px`\n                setTimeout(() => {\n                    this.maxHeight = `${0}px`\n                }, 50)\n            } else if (this.open) {\n                this.maxHeight = `${scrollHeight}px`\n                setTimeout(() => {\n                    this.maxHeight = 'none'\n                }, 300)\n            }\n        },\n        maxHeight() {\n            this.openItems = this.maxHeight != '0px'\n        },\n        // OPEN AND CLOSES DROPDOWN MENU ON SIDEBAR COLLAPSE AND DEFAULT VIEW\n        '$store.state.sidebarItemsMin'(val) {\n            let scrollHeight = this.$refs.items.scrollHeight\n            if (!val && this.open) {\n                this.maxHeight = `${scrollHeight}px`\n                setTimeout(() => {\n                    this.maxHeight = 'none'\n                }, 300)\n            } else {\n                this.maxHeight = `${scrollHeight}px`\n                setTimeout(() => {\n                    this.maxHeight = '0px'\n                }, 50)\n            }\n            if(val && this.open) {\n\t\t\t\tthis.maxHeight = `${scrollHeight}px`\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tthis.maxHeight = '0px'\n\t\t\t\t}, 250)\n            }\n        }\n    },\n    methods: {\n        clickGroup() {\n            if (!this.openHover) {\n                let thisScrollHeight = this.$refs.items.scrollHeight\n                if (this.maxHeight == '0px') {\n                    this.maxHeight = `${thisScrollHeight}px`\n                    setTimeout(() => {\n                        this.maxHeight = 'none'\n                    }, 300)\n                } else {\n                    this.maxHeight = `${thisScrollHeight}px`\n                    setTimeout(() => {\n                        this.maxHeight = `${0}px`\n                    }, 50)\n                }\n\n                this.$parent.$children.map((child) => {\n                    if (child.isGroupActive) {\n\n                        if (child !== this && (!child.open) && child.maxHeight != '0px') {\n                            setTimeout(() => {\n                                child.maxHeight = `${0}px`\n                            }, 50)\n                        }\n                    }\n                })\n\n\n            }\n        },\n        mouseover() {\n            if (this.openHover) {\n                let scrollHeight = this.$refs.items.scrollHeight\n                this.maxHeight = `${scrollHeight}px`\n            }\n        },\n        mouseout() {\n            if (this.openHover) {\n                let scrollHeight = 0\n                this.maxHeight = `${scrollHeight}px`\n            }\n        }\n    },\n    components: {\n        VxSidebarItem\n    },\n    mounted() {\n        this.openItems = this.open\n        if (this.open) {\n            this.maxHeight = 'none'\n        }\n    },\n}\n</script>\n\n<style lang=\"scss\">\n@import \"@/assets/scss/vuesax/components/vxSidebarGroup.scss\"\n</style>"]}]}