{"remainingRequest":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xampp\\htdocs\\GIT\\server-side\\src\\views\\apps\\chat\\Chat.vue?vue&type=template&id=56675fe8&","dependencies":[{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\src\\views\\apps\\chat\\Chat.vue","mtime":1567376724788},{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    {\n      staticClass:\n        \"border border-solid border-grey-light rounded relative overflow-hidden\",\n      attrs: { id: \"chat-app\" }\n    },\n    [\n      _c(\n        \"vs-sidebar\",\n        {\n          staticClass: \"items-no-padding\",\n          attrs: {\n            parent: \"#chat-app\",\n            \"click-not-close\": _vm.clickNotClose,\n            \"hidden-background\": _vm.clickNotClose,\n            id: \"chat-list-sidebar\"\n          },\n          model: {\n            value: _vm.isChatSidebarActive,\n            callback: function($$v) {\n              _vm.isChatSidebarActive = $$v\n            },\n            expression: \"isChatSidebarActive\"\n          }\n        },\n        [\n          _c(\"user-profile\", {\n            staticClass: \"user-profile-container\",\n            attrs: {\n              active: _vm.activeProfileSidebar,\n              userId: _vm.userProfileId\n            },\n            on: { closeProfileSidebar: _vm.closeProfileSidebar }\n          }),\n          _c(\n            \"div\",\n            { staticClass: \"chat__profile-search flex p-4\" },\n            [\n              _c(\n                \"div\",\n                { staticClass: \"relative inline-flex\" },\n                [\n                  _c(\"vs-avatar\", {\n                    staticClass: \"m-0\",\n                    attrs: {\n                      src: require(\"@/assets/images/portrait/small/\" +\n                        _vm.activeUserImg),\n                      size: \"40px\"\n                    },\n                    on: {\n                      click: function($event) {\n                        return _vm.showProfileSidebar(_vm.activeUserId)\n                      }\n                    }\n                  }),\n                  _c(\"div\", {\n                    staticClass:\n                      \"h-3 w-3 border-white border border-solid rounded-full absolute pin-r pin-b\",\n                    class: \"bg-\" + _vm.getStatusColor(true)\n                  })\n                ],\n                1\n              ),\n              _c(\"vs-input\", {\n                staticClass: \"w-full mx-5 input-rounded-full no-icon-border\",\n                attrs: {\n                  icon: \"icon-search\",\n                  \"icon-pack\": \"feather\",\n                  placeholder: \"Search or start a new chat\"\n                },\n                model: {\n                  value: _vm.searchQuery,\n                  callback: function($$v) {\n                    _vm.searchQuery = $$v\n                  },\n                  expression: \"searchQuery\"\n                }\n              })\n            ],\n            1\n          ),\n          _c(\"vs-divider\", { staticClass: \"border-grey-light m-0\" }),\n          _c(\n            \"VuePerfectScrollbar\",\n            {\n              staticClass: \"chat-scroll-area pt-4\",\n              attrs: { settings: _vm.settings }\n            },\n            [\n              _c(\"div\", { staticClass: \"chat__chats-list mb-8\" }, [\n                _c(\"h3\", { staticClass: \"text-primary mb-5 px-4\" }, [\n                  _vm._v(\"Chats\")\n                ]),\n                _c(\n                  \"ul\",\n                  { staticClass: \"chat__active-chats bordered-items\" },\n                  _vm._l(_vm.sorted, function(contact, index) {\n                    return _c(\n                      \"li\",\n                      {\n                        key: index,\n                        staticClass: \"cursor-pointer\",\n                        on: {\n                          click: function($event) {\n                            return _vm.updateActiveChatUser(contact.id)\n                          }\n                        }\n                      },\n                      [\n                        _c(\"chat-contact\", {\n                          attrs: {\n                            contact: contact,\n                            lastMessaged: _vm.chatLastMessaged(contact.id).time,\n                            unseenMsg: _vm.chatUnseenMessages(contact.id),\n                            isActiveChatUser: _vm.isActiveChatUser(contact.id)\n                          }\n                        })\n                      ],\n                      1\n                    )\n                  }),\n                  0\n                )\n              ]),\n              _c(\"div\", { staticClass: \"chat__contacts\" }, [\n                _c(\"h3\", { staticClass: \"text-primary mb-5 px-4\" }, [\n                  _vm._v(\"Contacts\")\n                ]),\n                _c(\n                  \"ul\",\n                  { staticClass: \"chat__contacts bordered-items\" },\n                  _vm._l(_vm.chatContacts, function(contact) {\n                    return _c(\n                      \"li\",\n                      {\n                        key: contact.id,\n                        staticClass: \"cursor-pointer\",\n                        on: {\n                          click: function($event) {\n                            return _vm.updateActiveChatUser(contact.id)\n                          }\n                        }\n                      },\n                      [_c(\"chat-contact\", { attrs: { contact: contact } })],\n                      1\n                    )\n                  }),\n                  0\n                )\n              ])\n            ]\n          )\n        ],\n        1\n      ),\n      _c(\n        \"div\",\n        {\n          staticClass:\n            \"chat__bg app-fixed-height chat-content-area border border-solid border-grey-light border-t-0 border-r-0 border-b-0\",\n          class: {\n            \"sidebar-spacer--wide\": _vm.clickNotClose,\n            \"flex items-center justify-center\": _vm.activeChatUser === null\n          }\n        },\n        [\n          _vm.activeChatUser\n            ? [\n                _c(\n                  \"div\",\n                  { staticClass: \"chat__navbar\" },\n                  [\n                    _c(\"chat-navbar\", {\n                      attrs: {\n                        isSidebarCollapsed: !_vm.clickNotClose,\n                        \"user-id\": _vm.activeChatUser,\n                        isPinnedProp: _vm.isChatPinned\n                      },\n                      on: {\n                        openContactsSidebar: function($event) {\n                          return _vm.toggleChatSidebar(true)\n                        },\n                        showProfileSidebar: _vm.updateUserProfileId,\n                        toggleIsChatPinned: _vm.toggleIsChatPinned\n                      }\n                    })\n                  ],\n                  1\n                ),\n                _c(\n                  \"VuePerfectScrollbar\",\n                  {\n                    ref: \"chatLogPS\",\n                    staticClass:\n                      \"chat-content-scroll-area border border-solid border-grey-light\",\n                    attrs: { settings: _vm.settings }\n                  },\n                  [\n                    _c(\n                      \"div\",\n                      { ref: \"chatLog\", staticClass: \"chat__log\" },\n                      [\n                        _vm.activeChatUser\n                          ? _c(\"chat-log\", {\n                              attrs: { userId: _vm.activeChatUser }\n                            })\n                          : _vm._e()\n                      ],\n                      1\n                    )\n                  ]\n                ),\n                _c(\n                  \"div\",\n                  { staticClass: \"chat__input flex p-4 bg-white\" },\n                  [\n                    _c(\"vs-input\", {\n                      staticClass: \"flex-1\",\n                      attrs: { placeholder: \"Type Your Message\" },\n                      on: {\n                        keyup: function($event) {\n                          if (\n                            !$event.type.indexOf(\"key\") &&\n                            _vm._k(\n                              $event.keyCode,\n                              \"enter\",\n                              13,\n                              $event.key,\n                              \"Enter\"\n                            )\n                          ) {\n                            return null\n                          }\n                          return _vm.sendMsg($event)\n                        }\n                      },\n                      model: {\n                        value: _vm.typedMessage,\n                        callback: function($$v) {\n                          _vm.typedMessage = $$v\n                        },\n                        expression: \"typedMessage\"\n                      }\n                    }),\n                    _c(\n                      \"vs-button\",\n                      {\n                        staticClass: \"bg-primary-gradient ml-4\",\n                        attrs: { type: \"filled\" },\n                        on: { click: _vm.sendMsg }\n                      },\n                      [_vm._v(\"Send\")]\n                    )\n                  ],\n                  1\n                )\n              ]\n            : [\n                _c(\n                  \"div\",\n                  { staticClass: \"flex flex-col items-center\" },\n                  [\n                    _c(\"feather-icon\", {\n                      staticClass: \"mb-4 bg-white p-8 shadow-md rounded-full\",\n                      attrs: {\n                        icon: \"MessageSquareIcon\",\n                        svgClasses: \"w-16 h-16\"\n                      }\n                    }),\n                    _c(\n                      \"h4\",\n                      {\n                        staticClass:\n                          \" py-2 px-4 bg-white shadow-md rounded-full cursor-pointer\",\n                        on: {\n                          click: function($event) {\n                            $event.stopPropagation()\n                            return _vm.toggleChatSidebar(true)\n                          }\n                        }\n                      },\n                      [_vm._v(\"Start Conversation\")]\n                    )\n                  ],\n                  1\n                )\n              ]\n        ],\n        2\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}