{"remainingRequest":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xampp\\htdocs\\GIT\\server-side\\src\\views\\pages\\Register.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\src\\views\\pages\\Register.vue","mtime":1567376725649},{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1567428497170},{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1567428476521},{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1567428497170},{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\vue-loader\\lib\\index.js","mtime":1567428708565}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport firebase from 'firebase/app'\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            username: '',\r\n            email: '',\r\n            password: '',\r\n            confirm_password: '',\r\n            isTermsConditionAccepted: true\r\n        }\r\n    },\r\n    computed: {\r\n        validateForm() {\r\n            return !this.errors.any() && this.username != '' && this.email != '' && this.password != '' && this.confirm_password != '' && this.isTermsConditionAccepted === true;\r\n        }\r\n    },\r\n    methods: {\r\n        registerUser() {\r\n            if (!this.validateForm) return false\r\n            if(this.$store.state.auth.isUserLoggedIn()) {\r\n              this.notifyAlreadyLogedIn();\r\n              return\r\n            }\r\n\r\n            // create user using firebase\r\n            firebase.auth().createUserWithEmailAndPassword(this.email, this.password)\r\n                .then(() => {\r\n                    this.$vs.notify({\r\n                        title: 'Account Created',\r\n                        text: 'You are successfully registered!',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-check',\r\n                        color: 'success'\r\n                    });\r\n                }, (error) => {\r\n                    this.$vs.notify({\r\n                        title: 'Error',\r\n                        text: error.message,\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-alert-circle',\r\n                        color: 'danger'\r\n                    });\r\n                })\r\n\r\n            // update user profile. In this case add username\r\n            const username = this.username;\r\n            const loginPayload = {\r\n                userDetails: {\r\n                    email: this.email,\r\n                    password: this.password\r\n                },\r\n                notify: this.$vs.notify\r\n            }\r\n            const store = this.$store;\r\n            firebase.auth().onAuthStateChanged(function(user) {\r\n                if (user) {\r\n                    user.updateProfile({\r\n                        displayName: username,\r\n                    }).then(function() {\r\n                        // Profile updated successfully!\r\n                        // Login user\r\n                        store.dispatch('auth/login', loginPayload)\r\n                    }, function(error) {\r\n                        this.$vs.notify({\r\n                            title: 'Error',\r\n                            text: error.message,\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-alert-circle',\r\n                            color: 'danger'\r\n                        });\r\n                    });\r\n\r\n                }\r\n            });\r\n        },\r\n        notifyAlreadyLogedIn() {\r\n            this.$vs.notify({\r\n                title: 'Login Attempt',\r\n                text: 'You are already logged in!',\r\n                iconPack: 'feather',\r\n                icon: 'icon-alert-circle',\r\n                color: 'warning'\r\n            });\r\n        },\r\n    }\r\n}\r\n",{"version":3,"sources":["Register.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqFA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Register.vue","sourceRoot":"src/views/pages","sourcesContent":["<!-- =========================================================================================\r\n    File Name: Register.vue\r\n    Description: Register Page\r\n    ----------------------------------------------------------------------------------------\r\n    Item Name: Vuesax Admin - VueJS Dashboard Admin Template\r\n      Author: Pixinvent\r\n    Author URL: http://www.themeforest.net/user/pixinvent\r\n========================================================================================== -->\r\n\r\n\r\n<template>\r\n    <div class=\"h-screen flex w-full bg-img\">\r\n        <div class=\"vx-col sm:w-1/2 md:w-1/2 lg:w-3/4 xl:w-3/5 mx-auto self-center\">\r\n            <vx-card>\r\n                <div slot=\"no-body\" class=\"full-page-bg-color\">\r\n                    <div class=\"vx-row\">\r\n                        <div class=\"vx-col hidden sm:hidden md:hidden lg:block lg:w-1/2 mx-auto self-center\">\r\n                            <img src=\"@/assets/images/pages/register.jpg\" alt=\"register\" class=\"mx-auto\">\r\n                        </div>\r\n                        <div class=\"vx-col sm:w-full md:w-full lg:w-1/2 mx-auto self-center  d-theme-dark-bg\">\r\n                            <div class=\"p-8\">\r\n                                <div class=\"vx-card__title\">\r\n                                    <h4 class=\"mb-4\">Create Account</h4>\r\n                                    <p>Fill the below form to create a new account.</p>\r\n                                </div>\r\n                                <div class=\"clearfix\">\r\n                                    <vs-input\r\n                                        v-validate=\"'required|alpha_dash|min:3'\"\r\n                                        data-vv-validate-on=\"blur\"\r\n                                        label-placeholder=\"Username\"\r\n                                        name=\"username\"\r\n                                        placeholder=\"Username\"\r\n                                        v-model=\"username\"\r\n                                        class=\"w-full\" />\r\n                                    <span class=\"text-danger text-sm\">{{ errors.first('username') }}</span>\r\n\r\n                                    <vs-input\r\n                                        v-validate=\"'required|email'\"\r\n                                        data-vv-validate-on=\"blur\"\r\n                                        name=\"email\"\r\n                                        type=\"email\"\r\n                                        label-placeholder=\"Email\"\r\n                                        placeholder=\"Email\"\r\n                                        v-model=\"email\"\r\n                                        class=\"w-full mt-6\" />\r\n                                    <span class=\"text-danger text-sm\">{{ errors.first('email') }}</span>\r\n\r\n                                    <vs-input\r\n                                        ref=\"password\"\r\n                                        type=\"password\"\r\n                                        data-vv-validate-on=\"blur\"\r\n                                        v-validate=\"'required|min:6|max:10'\"\r\n                                        name=\"password\"\r\n                                        label-placeholder=\"Password\"\r\n                                        placeholder=\"Password\"\r\n                                        v-model=\"password\"\r\n                                        class=\"w-full mt-6\" />\r\n                                    <span class=\"text-danger text-sm\">{{ errors.first('password') }}</span>\r\n\r\n                                    <vs-input\r\n                                        type=\"password\"\r\n                                        v-validate=\"'min:6|max:10|confirmed:password'\"\r\n                                        data-vv-validate-on=\"blur\"\r\n                                        data-vv-as=\"password\"\r\n                                        name=\"confirm_password\"\r\n                                        label-placeholder=\"Confirm Password\"\r\n                                        placeholder=\"Confirm Password\"\r\n                                        v-model=\"confirm_password\"\r\n                                        class=\"w-full mt-6\" />\r\n                                    <span class=\"text-danger text-sm\">{{ errors.first('confirm_password') }}</span>\r\n\r\n                                    <vs-checkbox v-model=\"isTermsConditionAccepted\" class=\"mt-6\">I accept the terms & conditions.</vs-checkbox>\r\n                                    <vs-button  type=\"border\" to=\"/pages/login\" class=\"mt-6\">Login</vs-button>\r\n                                    <vs-button class=\"float-right mt-6\" @click=\"registerUser\" :disabled=\"!validateForm\">Register</vs-button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </vx-card>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport firebase from 'firebase/app'\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            username: '',\r\n            email: '',\r\n            password: '',\r\n            confirm_password: '',\r\n            isTermsConditionAccepted: true\r\n        }\r\n    },\r\n    computed: {\r\n        validateForm() {\r\n            return !this.errors.any() && this.username != '' && this.email != '' && this.password != '' && this.confirm_password != '' && this.isTermsConditionAccepted === true;\r\n        }\r\n    },\r\n    methods: {\r\n        registerUser() {\r\n            if (!this.validateForm) return false\r\n            if(this.$store.state.auth.isUserLoggedIn()) {\r\n              this.notifyAlreadyLogedIn();\r\n              return\r\n            }\r\n\r\n            // create user using firebase\r\n            firebase.auth().createUserWithEmailAndPassword(this.email, this.password)\r\n                .then(() => {\r\n                    this.$vs.notify({\r\n                        title: 'Account Created',\r\n                        text: 'You are successfully registered!',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-check',\r\n                        color: 'success'\r\n                    });\r\n                }, (error) => {\r\n                    this.$vs.notify({\r\n                        title: 'Error',\r\n                        text: error.message,\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-alert-circle',\r\n                        color: 'danger'\r\n                    });\r\n                })\r\n\r\n            // update user profile. In this case add username\r\n            const username = this.username;\r\n            const loginPayload = {\r\n                userDetails: {\r\n                    email: this.email,\r\n                    password: this.password\r\n                },\r\n                notify: this.$vs.notify\r\n            }\r\n            const store = this.$store;\r\n            firebase.auth().onAuthStateChanged(function(user) {\r\n                if (user) {\r\n                    user.updateProfile({\r\n                        displayName: username,\r\n                    }).then(function() {\r\n                        // Profile updated successfully!\r\n                        // Login user\r\n                        store.dispatch('auth/login', loginPayload)\r\n                    }, function(error) {\r\n                        this.$vs.notify({\r\n                            title: 'Error',\r\n                            text: error.message,\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-alert-circle',\r\n                            color: 'danger'\r\n                        });\r\n                    });\r\n\r\n                }\r\n            });\r\n        },\r\n        notifyAlreadyLogedIn() {\r\n            this.$vs.notify({\r\n                title: 'Login Attempt',\r\n                text: 'You are already logged in!',\r\n                iconPack: 'feather',\r\n                icon: 'icon-alert-circle',\r\n                color: 'warning'\r\n            });\r\n        },\r\n    }\r\n}\r\n</script>\r\n"]}]}