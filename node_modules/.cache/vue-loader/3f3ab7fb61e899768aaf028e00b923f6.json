{"remainingRequest":"C:\\Users\\Message Akunna\\Documents\\workspace\\vuejs\\sotire technology\\new\\server-side\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Message Akunna\\Documents\\workspace\\vuejs\\sotire technology\\new\\server-side\\src\\views\\churcha2z\\apps\\todo\\TodoEdit.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Message Akunna\\Documents\\workspace\\vuejs\\sotire technology\\new\\server-side\\src\\views\\churcha2z\\apps\\todo\\TodoEdit.vue","mtime":1567769939462},{"path":"C:\\Users\\Message Akunna\\Documents\\workspace\\vuejs\\sotire technology\\new\\server-side\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1567769201670},{"path":"C:\\Users\\Message Akunna\\Documents\\workspace\\vuejs\\sotire technology\\new\\server-side\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1567769166513},{"path":"C:\\Users\\Message Akunna\\Documents\\workspace\\vuejs\\sotire technology\\new\\server-side\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1567769201670},{"path":"C:\\Users\\Message Akunna\\Documents\\workspace\\vuejs\\sotire technology\\new\\server-side\\node_modules\\vue-loader\\lib\\index.js","mtime":1567769589298}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n    props: {\n        displayPrompt: {\n            type: Boolean,\n            required: true,\n        },\n        todoItemId: {\n            type: Number,\n            required: true,\n        }\n    },\n    data() {\n        return {\n            titleLocal: this.$store.state.todo.todoArray[this.todoItemId].title,\n            descLocal: this.$store.state.todo.todoArray[this.todoItemId].desc,\n            isDoneLocal: this.$store.state.todo.todoArray[this.todoItemId].isDone,\n            isImportantLocal: this.$store.state.todo.todoArray[this.todoItemId].isImportant,\n            isStarredLocal: this.$store.state.todo.todoArray[this.todoItemId].isStarred,\n            tagsLocal: this.$store.state.todo.todoArray[this.todoItemId].tags,\n        }\n    },\n    computed: {\n        activePrompt: {\n            get() {\n                return this.displayPrompt;\n            },\n            set(value) {\n                this.$emit('hideDisplayPrompt', value);\n            }\n        },\n        todoTags() {\n            return this.$store.state.todo.todoTags;\n        },\n        validateForm() {\n            return !this.errors.any() && this.titleLocal != '';\n        },\n        isTrashed: {\n            get() {\n                return this.$store.state.todo.todoArray[this.todoItemId].isTrashed;\n            },\n            set(value) {\n                this.$store.dispatch('todo/moveToTrash', { id: this.todoItemId, value: value})\n            }\n        },\n    },\n    methods: {\n        toggleIsImportant() {\n            this.isImportantLocal = !this.isImportantLocal;\n        },\n        toggleIsStarred() {\n            this.isStarredLocal = !this.isStarredLocal;\n        },\n        removeTodo() {\n            this.isTrashed = true;\n        },\n        init() {\n            this.titleLocal = this.$store.state.todo.todoArray[this.todoItemId].title;\n            this.descLocal = this.$store.state.todo.todoArray[this.todoItemId].desc;\n            this.isDoneLocal = this.$store.state.todo.todoArray[this.todoItemId].isDone;\n            this.isImportantLocal = this.$store.state.todo.todoArray[this.todoItemId].isImportant;\n            this.isStarredLocal = this.$store.state.todo.todoArray[this.todoItemId].isStarred;\n            this.tagsLocal = this.$store.state.todo.todoArray[this.todoItemId].tags;\n        },\n        submitTodo() {\n            this.$store.dispatch('todo/setTodoTitle', { id: this.todoItemId, title: this.titleLocal})\n            this.$store.dispatch('todo/setTodoDesc', { id: this.todoItemId, desc: this.descLocal})\n            this.$store.dispatch('todo/toggleIsImportant', { id: this.todoItemId, value: this.isImportantLocal})\n            this.$store.dispatch('todo/toggleIsStarred', { id: this.todoItemId, value: this.isStarredLocal})\n            this.$store.dispatch('todo/updateTags', { id: this.todoItemId, newTags: this.tagsLocal})\n            this.$store.dispatch('todo/toggleIsDone', { id: this.todoItemId, value: this.isDoneLocal})\n        }\n    },\n}\n",{"version":3,"sources":["TodoEdit.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"TodoEdit.vue","sourceRoot":"src/views/churcha2z/apps/todo","sourcesContent":["<!-- =========================================================================================\n    File Name: TodoEdit.vue\n    Description: Edit todo component\n    ----------------------------------------------------------------------------------------\n    Item Name: Vuesax Admin - VueJS Dashboard Admin Template\n      Author: Pixinvent\n    Author URL: http://www.themeforest.net/user/pixinvent\n========================================================================================== -->\n\n\n<template>\n    <vs-prompt\n        vs-title=\"Edit Task\"\n        vs-accept-text= \"Submit\"\n        vs-cancel-text = \"Remove\"\n        vs-button-cancel = \"border\"\n        @vs-cancel=\"removeTodo\"\n        @vs-accept=\"submitTodo\"\n        @vs-close=\"init\"\n        :vs-is-valid=\"validateForm\"\n        :vs-active.sync=\"activePrompt\">\n        <div>\n            <form>\n                <div class=\"vx-row\">\n                    <div class=\"vx-col w-1/6 self-center\">\n                        <vs-checkbox v-model=\"isDoneLocal\" class=\"w-8\"></vs-checkbox>\n                    </div>\n\n                    <div class=\"vx-col ml-auto flex\">\n                        <feather-icon icon=\"InfoIcon\" class=\"cursor-pointer\" :svgClasses=\"[{'text-success stroke-current': isImportantLocal}, 'w-5', 'h-5 mr-4']\" @click.prevent=\"toggleIsImportant\"></feather-icon>\n\n                        <feather-icon icon=\"StarIcon\" class=\"cursor-pointer\" :svgClasses=\"[{'text-warning stroke-current': isStarredLocal}, 'w-5', 'h-5 mr-4']\" @click.prevent=\"toggleIsStarred\"></feather-icon>\n\n                        <vs-dropdown vs-custom-content>\n\n                            <feather-icon icon=\"TagIcon\" svgClasses=\"h-5 w-5\" @click.prevent></feather-icon>\n\n                            <vs-dropdown-menu style=\"z-index: 200001\">\n                                    <vs-dropdown-item v-for=\"(tag, index) in todoTags\" :key=\"index\">\n                                        <vs-checkbox @click.stop :vs-value=\"tag.value\" v-model=\"tagsLocal\">{{ tag.text }}</vs-checkbox>\n                                    </vs-dropdown-item>\n                            </vs-dropdown-menu>\n                        </vs-dropdown>\n                    </div>\n                </div>\n\n                <div class=\"vx-row\">\n                    <div class=\"vx-col w-full\">\n                        <vs-input v-validate=\"'required'\" name=\"title\" class=\"w-full mb-4 mt-5\" placeholder=\"Title\" v-model=\"titleLocal\" />\n                        <vs-textarea rows=\"5\" label=\"Add description\" v-model=\"descLocal\" />\n                    </div>  \n                </div>\n\n            </form>\n        </div>\n    </vs-prompt>\n</template>\n\n<script>\nexport default {\n    props: {\n        displayPrompt: {\n            type: Boolean,\n            required: true,\n        },\n        todoItemId: {\n            type: Number,\n            required: true,\n        }\n    },\n    data() {\n        return {\n            titleLocal: this.$store.state.todo.todoArray[this.todoItemId].title,\n            descLocal: this.$store.state.todo.todoArray[this.todoItemId].desc,\n            isDoneLocal: this.$store.state.todo.todoArray[this.todoItemId].isDone,\n            isImportantLocal: this.$store.state.todo.todoArray[this.todoItemId].isImportant,\n            isStarredLocal: this.$store.state.todo.todoArray[this.todoItemId].isStarred,\n            tagsLocal: this.$store.state.todo.todoArray[this.todoItemId].tags,\n        }\n    },\n    computed: {\n        activePrompt: {\n            get() {\n                return this.displayPrompt;\n            },\n            set(value) {\n                this.$emit('hideDisplayPrompt', value);\n            }\n        },\n        todoTags() {\n            return this.$store.state.todo.todoTags;\n        },\n        validateForm() {\n            return !this.errors.any() && this.titleLocal != '';\n        },\n        isTrashed: {\n            get() {\n                return this.$store.state.todo.todoArray[this.todoItemId].isTrashed;\n            },\n            set(value) {\n                this.$store.dispatch('todo/moveToTrash', { id: this.todoItemId, value: value})\n            }\n        },\n    },\n    methods: {\n        toggleIsImportant() {\n            this.isImportantLocal = !this.isImportantLocal;\n        },\n        toggleIsStarred() {\n            this.isStarredLocal = !this.isStarredLocal;\n        },\n        removeTodo() {\n            this.isTrashed = true;\n        },\n        init() {\n            this.titleLocal = this.$store.state.todo.todoArray[this.todoItemId].title;\n            this.descLocal = this.$store.state.todo.todoArray[this.todoItemId].desc;\n            this.isDoneLocal = this.$store.state.todo.todoArray[this.todoItemId].isDone;\n            this.isImportantLocal = this.$store.state.todo.todoArray[this.todoItemId].isImportant;\n            this.isStarredLocal = this.$store.state.todo.todoArray[this.todoItemId].isStarred;\n            this.tagsLocal = this.$store.state.todo.todoArray[this.todoItemId].tags;\n        },\n        submitTodo() {\n            this.$store.dispatch('todo/setTodoTitle', { id: this.todoItemId, title: this.titleLocal})\n            this.$store.dispatch('todo/setTodoDesc', { id: this.todoItemId, desc: this.descLocal})\n            this.$store.dispatch('todo/toggleIsImportant', { id: this.todoItemId, value: this.isImportantLocal})\n            this.$store.dispatch('todo/toggleIsStarred', { id: this.todoItemId, value: this.isStarredLocal})\n            this.$store.dispatch('todo/updateTags', { id: this.todoItemId, newTags: this.tagsLocal})\n            this.$store.dispatch('todo/toggleIsDone', { id: this.todoItemId, value: this.isDoneLocal})\n        }\n    },\n}\n</script>"]}]}