{"remainingRequest":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xampp\\htdocs\\GIT\\server-side\\src\\views\\charts-and-maps\\maps\\google-map\\GoogleMapInfoWindow.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\src\\views\\charts-and-maps\\maps\\google-map\\GoogleMapInfoWindow.vue","mtime":1567376724983},{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            center: { lat: 47.376332, lng: 8.547511 },\r\n            infoContent: '',\r\n            infoWindowPos: null,\r\n            infoWinOpen: false,\r\n            currentMidx: null,\r\n            //optional: offset infowindow so it visually sits nicely on top of our marker\r\n            infoOptions: {\r\n            pixelOffset: { width: 0, height: -35 }\r\n            },\r\n            markers: [\r\n                { position: { lat: 47.376332, lng: 8.547511 }, infoText: 'Marker 1' },\r\n                { position: { lat: 47.374592, lng: 8.548867 }, infoText: 'Marker 2' },\r\n                { position: { lat: 47.379592, lng: 8.549867 }, infoText: 'Marker 3' }\r\n            ]\r\n        }\r\n    },\r\n    methods: {\r\n        toggleInfoWindow: function(marker, idx) {\r\n            this.infoWindowPos = marker.position;\r\n            this.infoContent = marker.infoText;\r\n            //check if its the same marker that was selected if yes toggle\r\n            if (this.currentMidx == idx) {\r\n                this.infoWinOpen = !this.infoWinOpen;\r\n            }\r\n            //if different marker set infowindow to open and reset current marker index\r\n            else {\r\n                this.infoWinOpen = true;\r\n                this.currentMidx = idx;\r\n            }\r\n        }\r\n    }\r\n}\r\n",{"version":3,"sources":["GoogleMapInfoWindow.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"GoogleMapInfoWindow.vue","sourceRoot":"src/views/charts-and-maps/maps/google-map","sourcesContent":["<!-- =========================================================================================\r\n    File Name: GoogleMapInfoWindow.vue\r\n    Description: Google map Basicwith info window\r\n    ----------------------------------------------------------------------------------------\r\n    Item Name: Vuesax Admin - VueJS Dashboard Admin Template\r\n      Author: Pixinvent\r\n    Author URL: http://www.themeforest.net/user/pixinvent\r\n========================================================================================== -->\r\n\r\n\r\n<template>\r\n    <vx-card title=\"Info Window\" code-toggler>\r\n\r\n        <p>A basic example of using a single infowindow for 3 markers</p>\r\n\r\n        <div class=\"mt-5\">\r\n            <gmap-map :center=\"center\" :zoom=\"15\" style=\"width: 100%; height: 500px\">\r\n                <gmap-info-window :options=\"infoOptions\" :position=\"infoWindowPos\" :opened=\"infoWinOpen\" @closeclick=\"infoWinOpen=false\">\r\n                    {{infoContent}}\r\n                </gmap-info-window>\r\n                <gmap-marker :key=\"i\" v-for=\"(m,i) in markers\" :position=\"m.position\" :clickable=\"true\" @click=\"toggleInfoWindow(m,i)\"></gmap-marker>\r\n            </gmap-map>\r\n        </div>\r\n\r\n        <template slot=\"codeContainer\">\r\n&lt;template&gt;\r\n  &lt;gmap-map :center=&quot;center&quot; :zoom=&quot;15&quot; style=&quot;width: 100%; height: 500px&quot;&gt;\r\n    &lt;gmap-info-window :options=&quot;infoOptions&quot; :position=&quot;infoWindowPos&quot; :opened=&quot;infoWinOpen&quot; @closeclick=&quot;infoWinOpen=false&quot;&gt;\r\n      {{infoContent}}\r\n    &lt;/gmap-info-window&gt;\r\n    &lt;gmap-marker :key=&quot;i&quot; v-for=&quot;(m,i) in markers&quot; :position=&quot;m.position&quot; :clickable=&quot;true&quot; @click=&quot;toggleInfoWindow(m,i)&quot;&gt;&lt;/gmap-marker&gt;\r\n  &lt;/gmap-map&gt;\r\n&lt;/template&gt;\r\n\r\n&lt;script&gt;\r\nexport default {\r\n  data() {\r\n    return {\r\n      center: { lat: 47.376332, lng: 8.547511 },\r\n      infoContent: '',\r\n      infoWindowPos: null,\r\n      infoWinOpen: false,\r\n      currentMidx: null,\r\n      //optional: offset infowindow so it visually sits nicely on top of our marker\r\n      infoOptions: {\r\n      pixelOffset: { width: 0, height: -35 }\r\n      },\r\n      markers: [\r\n        { position: { lat: 47.376332, lng: 8.547511 }, infoText: 'Marker 1' },\r\n        { position: { lat: 47.374592, lng: 8.548867 }, infoText: 'Marker 2' },\r\n        { position: { lat: 47.379592, lng: 8.549867 }, infoText: 'Marker 3' }\r\n      ]\r\n    }\r\n  },\r\n  methods: {\r\n    toggleInfoWindow: function(marker, idx) {\r\n      this.infoWindowPos = marker.position;\r\n      this.infoContent = marker.infoText;\r\n      //check if its the same marker that was selected if yes toggle\r\n      if (this.currentMidx == idx) {\r\n        this.infoWinOpen = !this.infoWinOpen;\r\n      }\r\n      //if different marker set infowindow to open and reset current marker index\r\n      else {\r\n        this.infoWinOpen = true;\r\n        this.currentMidx = idx;\r\n      }\r\n    }\r\n  }\r\n}\r\n&lt;/script&gt;\r\n        </template>\r\n    </vx-card>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    data() {\r\n        return {\r\n            center: { lat: 47.376332, lng: 8.547511 },\r\n            infoContent: '',\r\n            infoWindowPos: null,\r\n            infoWinOpen: false,\r\n            currentMidx: null,\r\n            //optional: offset infowindow so it visually sits nicely on top of our marker\r\n            infoOptions: {\r\n            pixelOffset: { width: 0, height: -35 }\r\n            },\r\n            markers: [\r\n                { position: { lat: 47.376332, lng: 8.547511 }, infoText: 'Marker 1' },\r\n                { position: { lat: 47.374592, lng: 8.548867 }, infoText: 'Marker 2' },\r\n                { position: { lat: 47.379592, lng: 8.549867 }, infoText: 'Marker 3' }\r\n            ]\r\n        }\r\n    },\r\n    methods: {\r\n        toggleInfoWindow: function(marker, idx) {\r\n            this.infoWindowPos = marker.position;\r\n            this.infoContent = marker.infoText;\r\n            //check if its the same marker that was selected if yes toggle\r\n            if (this.currentMidx == idx) {\r\n                this.infoWinOpen = !this.infoWinOpen;\r\n            }\r\n            //if different marker set infowindow to open and reset current marker index\r\n            else {\r\n                this.infoWinOpen = true;\r\n                this.currentMidx = idx;\r\n            }\r\n        }\r\n    }\r\n}\r\n</script>"]}]}