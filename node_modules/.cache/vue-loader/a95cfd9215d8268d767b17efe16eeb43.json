{"remainingRequest":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xampp\\htdocs\\GIT\\server-side\\src\\layouts\\churcha2z\\components\\vx-sidebar\\VxSidebarItem.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\src\\layouts\\churcha2z\\components\\vx-sidebar\\VxSidebarItem.vue","mtime":1567523036386},{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1567428497170},{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1567428476521},{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1567428497170},{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\vue-loader\\lib\\index.js","mtime":1567428708565}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nexport default {\r\n    name: 'VxSidebarItem',\r\n    props: {\r\n        icon: {\r\n            default: \"\",\r\n            type: String\r\n        },\r\n        iconSmall: {\r\n            default: false,\r\n            type: Boolean,\r\n        },\r\n        iconPack: {\r\n            default: 'material-icons',\r\n            type: String\r\n        },\r\n        href: {\r\n            default: '#',\r\n            type: String\r\n        },\r\n        to: {\r\n            default: null,\r\n            type: String\r\n        },\r\n        index: {\r\n            default: null,\r\n            type: [String, Number]\r\n        },\r\n        featherIcon: {\r\n            default: true,\r\n            type: Boolean,\r\n        },\r\n        target: {\r\n            default: '_self',\r\n            type: String,\r\n        },\r\n        isDisabled: {\r\n            default: false,\r\n            type: Boolean\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            activeLink: false,\r\n        }\r\n    },\r\n    watch: {\r\n        '$route'() {\r\n            this.CheckIsActive()\r\n        }\r\n    },\r\n    methods: {\r\n        CheckIsActive() {\r\n            if (this.to) {\r\n                if (this.$route.path.slice(1).includes(this.to.slice(1)) && this.to.slice(1)) this.activeLink = true\r\n                else this.activeLink = false\r\n            }\r\n        }\r\n    },\r\n    computed: {\r\n        canSee() {\r\n            this.$acl.check(this.$store.state.userRole);\r\n            if(this.to) {\r\n                return this.$acl.check(this.$router.match(this.to).meta.rule)\r\n            }\r\n            return true\r\n        }\r\n    },\r\n    updated() {\r\n        this.CheckIsActive();\r\n    }\r\n}\r\n",{"version":3,"sources":["VxSidebarItem.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"VxSidebarItem.vue","sourceRoot":"src/layouts/churcha2z/components/vx-sidebar","sourcesContent":["<!-- =========================================================================================\r\n    File Name: VxSidebarItem.vue\r\n    Description: Sidebar item component. Extends vuesax framework's 'vs-sidebar-item' component\r\n    Component Name: VxSidebarItem\r\n    ----------------------------------------------------------------------------------------\r\n    Item Name: Vuesax Admin - VueJS Dashboard Admin Template\r\n      Author: Pixinvent\r\n    Author URL: http://www.themeforest.net/user/pixinvent\r\n========================================================================================== -->\r\n\r\n<template>\r\n    <div :class=\"[{'vs-sidebar-item-active':activeLink}, {'disabled-item pointer-events-none': isDisabled}]\" class=\"vs-sidebar--item\" v-if=\"canSee\">\r\n        <router-link v-if=\"to\" :to=\"to\" :class=\"[{'router-link-active': activeLink}]\" :target=\"target\" exact>\r\n            <vs-icon v-if=\"!featherIcon\" :icon-pack=\"iconPack\" :icon=\"icon\">\r\n            </vs-icon>\r\n            <feather-icon :icon=\"icon\" :class=\"{'w-3 h-3': iconSmall}\" v-else></feather-icon>\r\n            <slot></slot>\r\n        </router-link>\r\n        <a v-else :target=\"target\" :href=\"href\">\r\n            <vs-icon v-if=\"!featherIcon\" :icon-pack=\"iconPack\" :icon=\"icon\">\r\n            </vs-icon>\r\n            <feather-icon :icon=\"icon\" :class=\"{'w-3 h-3': iconSmall}\" v-else></feather-icon>\r\n            <slot></slot>\r\n        </a>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    name: 'VxSidebarItem',\r\n    props: {\r\n        icon: {\r\n            default: \"\",\r\n            type: String\r\n        },\r\n        iconSmall: {\r\n            default: false,\r\n            type: Boolean,\r\n        },\r\n        iconPack: {\r\n            default: 'material-icons',\r\n            type: String\r\n        },\r\n        href: {\r\n            default: '#',\r\n            type: String\r\n        },\r\n        to: {\r\n            default: null,\r\n            type: String\r\n        },\r\n        index: {\r\n            default: null,\r\n            type: [String, Number]\r\n        },\r\n        featherIcon: {\r\n            default: true,\r\n            type: Boolean,\r\n        },\r\n        target: {\r\n            default: '_self',\r\n            type: String,\r\n        },\r\n        isDisabled: {\r\n            default: false,\r\n            type: Boolean\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            activeLink: false,\r\n        }\r\n    },\r\n    watch: {\r\n        '$route'() {\r\n            this.CheckIsActive()\r\n        }\r\n    },\r\n    methods: {\r\n        CheckIsActive() {\r\n            if (this.to) {\r\n                if (this.$route.path.slice(1).includes(this.to.slice(1)) && this.to.slice(1)) this.activeLink = true\r\n                else this.activeLink = false\r\n            }\r\n        }\r\n    },\r\n    computed: {\r\n        canSee() {\r\n            this.$acl.check(this.$store.state.userRole);\r\n            if(this.to) {\r\n                return this.$acl.check(this.$router.match(this.to).meta.rule)\r\n            }\r\n            return true\r\n        }\r\n    },\r\n    updated() {\r\n        this.CheckIsActive();\r\n    }\r\n}\r\n</script>"]}]}