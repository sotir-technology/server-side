{"remainingRequest":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xampp\\htdocs\\GIT\\server-side\\src\\views\\apps\\chat\\ChatLog.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\src\\views\\apps\\chat\\ChatLog.vue","mtime":1567376724794},{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport contacts from './contacts'\r\n\r\nexport default{\r\n    props: {\r\n        userId: {\r\n            type: Number,\r\n            required: true,\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            contacts: contacts,\r\n        }\r\n    },\r\n    computed: {\r\n        chatData() {\r\n            return this.$store.getters['chat/chatDataOfUser'](this.userId);\r\n        },\r\n        contactIndex() {\r\n            return contacts.findIndex(contact => contact.id == this.userId);\r\n        },\r\n        userImg() {\r\n            if(this.contactIndex !== -1) return this.contacts[this.contactIndex].img;\r\n        },\r\n        activeUserImg() {\r\n            return this.$store.state.AppActiveUser.img;\r\n        },\r\n        senderImg() {\r\n            return (isSentByActiveUser) => {\r\n                if (isSentByActiveUser) return require(`@/assets/images/portrait/small/${this.$store.state.AppActiveUser.img}`);\r\n                else return require(`@/assets/images/portrait/small/${this.contacts[this.contactIndex].img}`);\r\n            }\r\n        },\r\n        hasSentPreviousMsg() {\r\n            return (last_sender, current_sender) => last_sender == current_sender\r\n        },\r\n    },\r\n    methods: {\r\n        isSameDay(time_to, time_from) {\r\n            const date_time_to = new Date(Date.parse(time_to))\r\n            const date_time_from = new Date(Date.parse(time_from));\r\n            return date_time_to.getFullYear() === date_time_from.getFullYear() &&\r\n                date_time_to.getMonth() === date_time_from.getMonth() &&\r\n                date_time_to.getDate() === date_time_from.getDate();\r\n        },\r\n        toDate(time) {\r\n            const locale = \"en-us\";\r\n            const date_obj = new Date(Date.parse(time));\r\n            const monthName= date_obj.toLocaleString(locale, {\r\n                month: 'short'\r\n            });\r\n            return date_obj.getDate() + ' '  + monthName;\r\n        },\r\n        scrollToBottom() {\r\n            this.$nextTick(() => {\r\n                this.$parent.$el.scrollTop = this.$parent.$el.scrollHeight\r\n            });\r\n        }\r\n    },\r\n    updated() {\r\n        this.scrollToBottom();\r\n    },\r\n    mounted() {\r\n        this.scrollToBottom();\r\n    }\r\n}\r\n",{"version":3,"sources":["ChatLog.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ChatLog.vue","sourceRoot":"src/views/apps/chat","sourcesContent":["<!-- =========================================================================================\r\n    File Name: ChatLog.vue\r\n    Description: Chat Application - Log of chat\r\n    ----------------------------------------------------------------------------------------\r\n    Item Name: Vuesax Admin - VueJS Dashboard Admin Template\r\n      Author: Pixinvent\r\n    Author URL: http://www.themeforest.net/user/pixinvent\r\n========================================================================================== -->\r\n<!-- hasSentPreviousMsg -->\r\n<template>\r\n    <div id=\"component-chat-log\" class=\"m-8\" v-if=\"chatData\">\r\n        <div v-for=\"(msg, index) in chatData.msg\" class=\"msg-grp-container\" :key=\"index\">\r\n\r\n            <!-- If previouse msg is older than current time -->\r\n            <template v-if=\"chatData.msg[index-1]\">\r\n                <vs-divider v-if=\"!isSameDay(msg.time, chatData.msg[index-1].time)\">\r\n                    <span>{{ toDate(msg.time) }}</span>\r\n                </vs-divider>\r\n                <div class=\"spacer mt-8\" v-if=\"!hasSentPreviousMsg(chatData.msg[index-1].isSent, msg.isSent)\"></div>\r\n            </template>\r\n\r\n            <div class=\"flex items-start\" :class=\"[{'flex-row-reverse' : msg.isSent}]\">\r\n\r\n                <template v-if=\"chatData.msg[index-1]\">\r\n                    <template v-if=\"(!hasSentPreviousMsg(chatData.msg[index-1].isSent, msg.isSent) || !isSameDay(msg.time, chatData.msg[index-1].time))\">\r\n                        <vs-avatar size=\"40px\" class=\"m-0 flex-no-shrink\" :class=\"msg.isSent ? 'sm:ml-5 ml-3' : 'sm:mr-5 mr-3'\" :src=\"senderImg(msg.isSent)\"></vs-avatar>\r\n                    </template>\r\n                </template>\r\n\r\n                <template v-if=\"index == 0\">\r\n                    <vs-avatar size=\"40px\" class=\"m-0 flex-no-shrink\" :class=\"msg.isSent ? 'sm:ml-5 ml-3' : 'sm:mr-5 mr-3'\" :src=\"senderImg(msg.isSent)\"></vs-avatar>\r\n                </template>\r\n\r\n                <template v-if=\"chatData.msg[index-1]\">\r\n                    <div class=\"mr-16\" v-if=\"!(!hasSentPreviousMsg(chatData.msg[index-1].isSent, msg.isSent) || !isSameDay(msg.time, chatData.msg[index-1].time))\"></div>\r\n                </template>\r\n\r\n                <div class=\"msg break-words relative shadow-md rounded py-3 px-4 mb-2 rounded-lg max-w-sm\" :class=\"{'bg-primary-gradient text-white': msg.isSent, 'border border-solid border-grey-light bg-white': !msg.isSent}\">\r\n                    <span>{{ msg.textContent }}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport contacts from './contacts'\r\n\r\nexport default{\r\n    props: {\r\n        userId: {\r\n            type: Number,\r\n            required: true,\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            contacts: contacts,\r\n        }\r\n    },\r\n    computed: {\r\n        chatData() {\r\n            return this.$store.getters['chat/chatDataOfUser'](this.userId);\r\n        },\r\n        contactIndex() {\r\n            return contacts.findIndex(contact => contact.id == this.userId);\r\n        },\r\n        userImg() {\r\n            if(this.contactIndex !== -1) return this.contacts[this.contactIndex].img;\r\n        },\r\n        activeUserImg() {\r\n            return this.$store.state.AppActiveUser.img;\r\n        },\r\n        senderImg() {\r\n            return (isSentByActiveUser) => {\r\n                if (isSentByActiveUser) return require(`@/assets/images/portrait/small/${this.$store.state.AppActiveUser.img}`);\r\n                else return require(`@/assets/images/portrait/small/${this.contacts[this.contactIndex].img}`);\r\n            }\r\n        },\r\n        hasSentPreviousMsg() {\r\n            return (last_sender, current_sender) => last_sender == current_sender\r\n        },\r\n    },\r\n    methods: {\r\n        isSameDay(time_to, time_from) {\r\n            const date_time_to = new Date(Date.parse(time_to))\r\n            const date_time_from = new Date(Date.parse(time_from));\r\n            return date_time_to.getFullYear() === date_time_from.getFullYear() &&\r\n                date_time_to.getMonth() === date_time_from.getMonth() &&\r\n                date_time_to.getDate() === date_time_from.getDate();\r\n        },\r\n        toDate(time) {\r\n            const locale = \"en-us\";\r\n            const date_obj = new Date(Date.parse(time));\r\n            const monthName= date_obj.toLocaleString(locale, {\r\n                month: 'short'\r\n            });\r\n            return date_obj.getDate() + ' '  + monthName;\r\n        },\r\n        scrollToBottom() {\r\n            this.$nextTick(() => {\r\n                this.$parent.$el.scrollTop = this.$parent.$el.scrollHeight\r\n            });\r\n        }\r\n    },\r\n    updated() {\r\n        this.scrollToBottom();\r\n    },\r\n    mounted() {\r\n        this.scrollToBottom();\r\n    }\r\n}\r\n</script>\r\n"]}]}