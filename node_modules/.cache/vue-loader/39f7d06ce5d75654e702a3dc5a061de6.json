{"remainingRequest":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xampp\\htdocs\\GIT\\server-side\\src\\components\\vx-card\\VxCard.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\src\\components\\vx-card\\VxCard.vue","mtime":1567376724487},{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\css-loader\\index.js","mtime":1567378874965},{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\postcss-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\sass-loader\\lib\\loader.js","mtime":1533139052000},{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n@import \"@/assets/scss/vuesax/components/vxCard.scss\";\r\n",{"version":3,"sources":["VxCard.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+MA","file":"VxCard.vue","sourceRoot":"src/components/vx-card","sourcesContent":["<!-- =========================================================================================\r\n    File Name: VxCard.vue\r\n    Description: Card Component\r\n    Component Name: VxCard\r\n    ----------------------------------------------------------------------------------------\r\n    Item Name: Vuesax Admin - VueJS Dashboard Admin Template\r\n      Author: Pixinvent\r\n    Author URL: http://www.themeforest.net/user/pixinvent\r\n========================================================================================== -->\r\n\r\n <template>\r\n    <div class=\"vx-card\" ref=\"card\" :class=\"[\r\n        {'overflow-hidden': tempHidden},\r\n        {'no-shadow': noShadow},\r\n        {'rounded-none': noRadius},\r\n        {'card-border': cardBorder} ]\" :style=\"cardStyles\">\r\n        <div class=\"vx-card__header\" v-if=\"hasHeader\">\r\n\r\n            <!-- card title -->\r\n            <div class=\"vx-card__title\">\r\n                <h4 v-if=\"this.$props.title\">{{ title }}</h4>\r\n                <h6 v-if=\"this.$props.subtitle\" class=\"text-grey\">{{ subtitle }}</h6>\r\n            </div>\r\n\r\n            <!-- card actions -->\r\n            <div class=\"vx-card__actions\" v-if=\"hasAction\">\r\n                <slot name=\"actions\">\r\n                    <div class=\"vx-card__action-buttons\" v-if=\"(actionButtons || collapseAction || refreshContentAction || removeCardAction) && !codeToggler\">\r\n                        <feather-icon @click=\"toggleContent\" icon=\"ChevronUpIcon\" :class=\"{rotate180: !isContentCollapsed}\" class=\"ml-4\" v-if=\"actionButtons || collapseAction\" />\r\n                        <feather-icon @click=\"refreshcard\" icon=\"RotateCwIcon\" class=\"ml-4\" v-if=\"actionButtons || refreshContentAction\" />\r\n                        <feather-icon @click=\"removeCard\" icon=\"XIcon\" class=\"ml-4\" v-if=\"actionButtons || removeCardAction\" />\r\n                    </div>\r\n                    <div class=\"vx-card__code-toggler sm:block hidden\" v-if=\"codeToggler && !actionButtons\">\r\n                        <feather-icon icon=\"CodeIcon\" :class=\"{'border border-solid border-primary border-t-0 border-r-0 border-l-0': showCode}\" @click=\"toggleCode\"></feather-icon>\r\n                    </div>\r\n                </slot>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"vx-card__collapsible-content vs-con-loading__container\" ref=\"content\" :class=\"[{collapsed: isContentCollapsed}, {'overflow-hidden': tempHidden}]\" :style=\"StyleItems\">\r\n\r\n            <!-- content with no body(no padding) -->\r\n            <slot name=\"no-body\"></slot>\r\n\r\n            <!-- content inside body(with padding) -->\r\n            <div class=\"vx-card__body\" v-if=\"this.$slots.default\">\r\n                <slot></slot>\r\n            </div>\r\n\r\n            <!-- content with no body(no padding) -->\r\n            <slot name=\"no-body-bottom\"></slot>\r\n\r\n            <div class=\"vx-card__footer\" v-if=\"this.$slots.footer\">\r\n                <slot name=\"footer\"></slot>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"vx-card__code-container\" ref=\"codeContainer\" v-show=\"this.$slots.codeContainer\" :style=\"codeContainerStyles\" :class=\"{collapsed: !showCode}\">\r\n            <div class=\"code-content\">\r\n                <prism :language=\"codeLanguage\">\r\n                        <slot name=\"codeContainer\"></slot>\r\n                </prism>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport Prism from 'vue-prism-component'\r\n\r\nexport default{\r\n    name: 'vx-card',\r\n    props: {\r\n        title: String,\r\n        subtitle: String,\r\n        actionButtons: {\r\n            type: Boolean,\r\n            default: false,\r\n        },\r\n        actionButtonsColor: {\r\n            type: String,\r\n            default: \"success\",\r\n        },\r\n        codeToggler: {\r\n            type: Boolean,\r\n            default: false,\r\n        },\r\n        noShadow: {\r\n            default: false,\r\n            type: Boolean,\r\n        },\r\n        noRadius: {\r\n            default: false,\r\n            type: Boolean,\r\n        },\r\n        cardBorder: {\r\n            default: false,\r\n            type: Boolean,\r\n        },\r\n        codeLanguage: {\r\n            default: \"markup\",\r\n            type: String,\r\n        },\r\n        collapseAction: {\r\n            default: false,\r\n            type: Boolean\r\n        },\r\n        refreshContentAction: {\r\n            default: false,\r\n            type: Boolean\r\n        },\r\n        removeCardAction: {\r\n            default: false,\r\n            type: Boolean\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            isContentCollapsed: false,\r\n            showCode: false,\r\n            maxHeight: null,\r\n            cardMaxHeight: null,\r\n            codeContainerMaxHeight: '0px',\r\n            tempHidden: false,\r\n        }\r\n    },\r\n    computed: {\r\n        hasAction() {\r\n            return this.$slots.actions || (this.actionButtons || this.collapseAction || this.refreshContentAction || this.removeCardAction || this.codeToggler)\r\n        },\r\n        hasHeader() {\r\n            return this.hasAction || (this.title || this.subtitle)\r\n        },\r\n        StyleItems() {\r\n            return { maxHeight: this.maxHeight }\r\n        },\r\n        cardStyles() {\r\n            return { maxHeight: this.cardMaxHeight }\r\n        },\r\n        codeContainerStyles() {\r\n            return { maxHeight: this.codeContainerMaxHeight }\r\n        }\r\n    },\r\n    methods: {\r\n        toggleContent() {\r\n            this.$refs.content.style.overflow = \"hidden\";\r\n            let scrollHeight = this.$refs.content.scrollHeight\r\n            if (this.maxHeight == '1.5rem') {\r\n                this.maxHeight = `${scrollHeight}px`\r\n                setTimeout(() => {\r\n                    this.maxHeight = 'none';\r\n                    this.$refs.content.style.overflow = \"hidden\";\r\n                }, 300)\r\n            } else {\r\n                this.maxHeight = `${scrollHeight}px`\r\n                setTimeout(() => {\r\n                    this.maxHeight = `1.5rem`;\r\n                    this.$refs.content.style.overflow = \"hidden\";\r\n                }, 50)\r\n            }\r\n            this.isContentCollapsed = !this.isContentCollapsed;\r\n        },\r\n        refreshcard() {\r\n            this.tempHidden = true;\r\n            this.$vs.loading({\r\n                container: this.$refs.content,\r\n                scale: 0.5,\r\n            });\r\n            setTimeout( ()=> {\r\n                this.$vs.loading.close(this.$refs.content)\r\n                this.tempHidden = false;\r\n            }, 3000)\r\n        },\r\n        removeCard() {\r\n            let scrollHeight = this.$refs.card.scrollHeight\r\n            this.cardMaxHeight = `${scrollHeight}px`\r\n            this.$el.style.overflow = \"hidden\";\r\n            setTimeout(() => {\r\n                this.cardMaxHeight = `0px`\r\n            }, 50)\r\n        },\r\n        toggleCode() {\r\n            this.tempHidden = true;\r\n            this.showCode = !this.showCode;\r\n            let scrollHeight = this.$refs.codeContainer.scrollHeight\r\n            if (this.codeContainerMaxHeight == '0px') {\r\n                this.codeContainerMaxHeight = `${scrollHeight}px`\r\n                setTimeout(() => {\r\n                    this.codeContainerMaxHeight = 'none'\r\n                    this.tempHidden = false;\r\n                }, 300)\r\n            } else {\r\n                this.codeContainerMaxHeight = `${scrollHeight}px`\r\n                setTimeout(() => {\r\n                    this.codeContainerMaxHeight = `0px`\r\n                    this.tempHidden = false;\r\n                }, 150)\r\n            }\r\n        },\r\n    },\r\n    components: {\r\n        Prism,\r\n    }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import \"@/assets/scss/vuesax/components/vxCard.scss\";\r\n</style>"]}]}