{"remainingRequest":"C:\\Users\\Message Akunna\\Documents\\workspace\\vuejs\\sotire technology\\new\\server-side\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Message Akunna\\Documents\\workspace\\vuejs\\sotire technology\\new\\server-side\\src\\views\\apps\\email\\MailItem.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Message Akunna\\Documents\\workspace\\vuejs\\sotire technology\\new\\server-side\\src\\views\\apps\\email\\MailItem.vue","mtime":1567769643061},{"path":"C:\\Users\\Message Akunna\\Documents\\workspace\\vuejs\\sotire technology\\new\\server-side\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1567769201670},{"path":"C:\\Users\\Message Akunna\\Documents\\workspace\\vuejs\\sotire technology\\new\\server-side\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1567769166513},{"path":"C:\\Users\\Message Akunna\\Documents\\workspace\\vuejs\\sotire technology\\new\\server-side\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1567769201670},{"path":"C:\\Users\\Message Akunna\\Documents\\workspace\\vuejs\\sotire technology\\new\\server-side\\node_modules\\vue-loader\\lib\\index.js","mtime":1567769589298}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nexport default{\r\n    props: {\r\n        mail: {\r\n            type: Object,\r\n            required: true,\r\n        },\r\n        isMailOpen: {\r\n            type: Boolean,\r\n        },\r\n        isSelected: {\r\n            type: Boolean,\r\n            required: true,\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            isSelectedMail: this.isSelected,\r\n        }\r\n    },\r\n    watch: {\r\n        isSelected(value) {\r\n            this.isSelectedMail = value\r\n        },\r\n        isSelectedMail(val) {\r\n          if(val) this.$emit('addToSelected', this.mail.id)\r\n          else this.$emit('removeSelected', this.mail.id)\r\n        }\r\n    },\r\n    computed: {\r\n        labelColor() {\r\n            return (label) => {\r\n                const tags = this.$store.state.email.mailTags;\r\n                return tags.find((tag) => {\r\n                    return tag.value == label\r\n                }).color\r\n            }\r\n        },\r\n    },\r\n    methods: {\r\n        toggleIsStarred() {\r\n            const payload = {mailId: this.mail.id, value : !this.mail.isStarred}\r\n            this.$store.dispatch('email/toggleIsMailStarred', payload)\r\n        }\r\n    }\r\n}\r\n",{"version":3,"sources":["MailItem.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"MailItem.vue","sourceRoot":"src/views/apps/email","sourcesContent":["<!-- =========================================================================================\r\n    File Name: MailItem.vue\r\n    Description: Mail Item - Displays mail item\r\n    ----------------------------------------------------------------------------------------\r\n    Item Name: Vuesax Admin - VueJS Dashboard Admin Template\r\n      Author: Pixinvent\r\n    Author URL: http://www.themeforest.net/user/pixinvent\r\n========================================================================================== -->\r\n\r\n<template>\r\n    <div class=\"mail__mail-item sm:px-4 px-2 py-6\" :class=\"{'mail__opened-mail': !mail.unread}\">\r\n\r\n        <!-- MAIL ROW 1 : META -->\r\n        <div class=\"flex w-full\">\r\n            <vs-avatar class=\"sender__avatar flex-no-shrink mr-3 border-2 border-solid border-white\" :src=\"require(`@/assets/images/portrait/small/${mail.img}`)\" size=\"40px\"></vs-avatar>\r\n\r\n            <div class=\"flex w-full justify-between items-start\">\r\n                <div class=\"mail__details\">\r\n                    <h5 class=\"mb-1\" :class=\"{'font-semibold': mail.unread}\">{{ mail.sender_name }}</h5>\r\n                    <span v-if=\"mail.subject\">{{ mail.subject }}</span>\r\n                    <span v-else>(no subject)</span>\r\n                </div>\r\n\r\n                <div class=\"mail-item__meta flex items-center\">\r\n                    <div class=\"email__labels hidden sm:flex items-center\">\r\n                        <div class=\"h-3 w-3 rounded-full mr-2\" :class=\"'bg-' + labelColor(label)\" v-for=\"(label, index) in mail.labels\" :key=\"index\"></div>\r\n                    </div>\r\n                    <span>{{ mail.time | date }}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <!-- /MAIL ROW 1 -->\r\n\r\n        <!-- MAIL ROW 2 : MSG & ACTIONS -->\r\n        <div class=\"flex w-full\">\r\n            <div class=\"flex items-center ml-1\">\r\n                <vs-checkbox v-model=\"isSelectedMail\" @click.stop class=\"vs-checkbox-small ml-0 mr-1\"></vs-checkbox>\r\n                <feather-icon icon=\"StarIcon\" class=\"cursor-pointer\" :svgClasses=\"[{'text-warning fill-current stroke-current': mail.isStarred}, 'w-5', 'h-5']\" @click.stop=\"toggleIsStarred\"></feather-icon>\r\n            </div>\r\n            <div class=\"mail__message truncate ml-3\">\r\n                <span>{{ mail.message | filter_tags }}</span>\r\n            </div>\r\n        </div>\r\n        <!-- /MAIL ROW 2 -->\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default{\r\n    props: {\r\n        mail: {\r\n            type: Object,\r\n            required: true,\r\n        },\r\n        isMailOpen: {\r\n            type: Boolean,\r\n        },\r\n        isSelected: {\r\n            type: Boolean,\r\n            required: true,\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            isSelectedMail: this.isSelected,\r\n        }\r\n    },\r\n    watch: {\r\n        isSelected(value) {\r\n            this.isSelectedMail = value\r\n        },\r\n        isSelectedMail(val) {\r\n          if(val) this.$emit('addToSelected', this.mail.id)\r\n          else this.$emit('removeSelected', this.mail.id)\r\n        }\r\n    },\r\n    computed: {\r\n        labelColor() {\r\n            return (label) => {\r\n                const tags = this.$store.state.email.mailTags;\r\n                return tags.find((tag) => {\r\n                    return tag.value == label\r\n                }).color\r\n            }\r\n        },\r\n    },\r\n    methods: {\r\n        toggleIsStarred() {\r\n            const payload = {mailId: this.mail.id, value : !this.mail.isStarred}\r\n            this.$store.dispatch('email/toggleIsMailStarred', payload)\r\n        }\r\n    }\r\n}\r\n</script>\r\n"]}]}