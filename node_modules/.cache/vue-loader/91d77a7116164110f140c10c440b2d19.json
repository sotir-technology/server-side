{"remainingRequest":"/Users/revelation/VueJS/WnC_Apps/wc_admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/revelation/VueJS/WnC_Apps/wc_admin/src/views/ui-elements/colors/ColorsChangeColor.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/revelation/VueJS/WnC_Apps/wc_admin/src/views/ui-elements/colors/ColorsChangeColor.vue","mtime":1557525828000},{"path":"/Users/revelation/VueJS/WnC_Apps/wc_admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/revelation/VueJS/WnC_Apps/wc_admin/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/revelation/VueJS/WnC_Apps/wc_admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/revelation/VueJS/WnC_Apps/wc_admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport Prism from 'vue-prism-component'\r\n\r\nexport default {\r\n    components: {\r\n        Prism\r\n    },\r\n    methods: {\r\n        changeColor(colorx, whatColor) {\r\n            this.$vs.theme({\r\n                [whatColor]: colorx\r\n            })\r\n        }\r\n    }\r\n}\r\n",{"version":3,"sources":["ColorsChangeColor.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiHA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ColorsChangeColor.vue","sourceRoot":"src/views/ui-elements/colors","sourcesContent":["<!-- =========================================================================================\r\n    File Name: ColorsChangeColor.vue\r\n    Description: Change theme's main colors - During execution\r\n    ----------------------------------------------------------------------------------------\r\n    Item Name: Vuesax Admin - VueJS Dashboard Admin Template\r\n      Author: Pixinvent\r\n    Author URL: http://www.themeforest.net/user/pixinvent\r\n========================================================================================== -->\r\n\r\n\r\n<template>\r\n    <vx-card title=\"Change Color\" code-toggler>\r\n        \r\n        <p>You can change the color of the application in process of execution with the function $vs.theme which as a parameter requires a json with the colors to change</p>\r\n\r\n        <p>Imagine that in the middle of the application we want the primary color change would be something like this:</p>\r\n\r\n        <prism language=\"js\" class=\"rounded-lg\">\r\nthis.$vs.theme({\r\n  primary:'rgb(5, 173, 88)' // my new color\r\n})\r\n        </prism>\r\n\r\n        <p class=\"mt-5\">By doing this, all <strong>Vuesax</strong> components in the application that use a primary color with change. Select one of the colors to change it and that all the components of this documentation have that color.</p>\r\n\r\n        <ul class=\"demo-alignment text-white\">\r\n            <li class=\"bg-primary\">\r\n                <input class=\"absolute w-full h-full cursor-pointer opacity-0\" @change=\"changeColor($event.target.value,'primary')\" type=\"color\" name=\"\" value=\"\">\r\n                primary\r\n            </li>\r\n            <li class=\"bg-success\">\r\n                <input class=\"absolute w-full h-full cursor-pointer opacity-0\" @change=\"changeColor($event.target.value,'success')\" type=\"color\" name=\"\" value=\"\">\r\n                success\r\n            </li>\r\n            <li class=\"bg-danger\">\r\n                <input class=\"absolute w-full h-full cursor-pointer opacity-0\" @change=\"changeColor($event.target.value,'danger')\" type=\"color\" name=\"\" value=\"\">\r\n                danger\r\n            </li>\r\n            <li class=\"bg-warning\">\r\n                <input class=\"absolute w-full h-full cursor-pointer opacity-0\" @change=\"changeColor($event.target.value,'warning')\" type=\"color\" name=\"\" value=\"\">\r\n                warning\r\n            </li>\r\n            <li class=\"bg-dark\">\r\n                <input class=\"absolute w-full h-full cursor-pointer opacity-0\" @change=\"changeColor($event.target.value,'dark')\" type=\"color\" name=\"\" value=\"\">\r\n                dark\r\n            </li>\r\n        </ul>\r\n\r\n        <template slot=\"codeContainer\">\r\n&lt;template&gt;\r\n  &lt;ul class=&quot;demo-alignment text-white&quot;&gt;\r\n    &lt;li class=&quot;colorprimaryx&quot;&gt;\r\n      &lt;input @change=&quot;changeColor($event.target.value,&apos;primary&apos;)&quot; type=&quot;color&quot; name=&quot;&quot; value=&quot;&quot;&gt;\r\n      primary\r\n    &lt;/li&gt;\r\n    &lt;li class=&quot;colorsuccessx&quot;&gt;\r\n      &lt;input @change=&quot;changeColor($event.target.value,&apos;success&apos;)&quot; type=&quot;color&quot; name=&quot;&quot; value=&quot;&quot;&gt;\r\n      success\r\n    &lt;/li&gt;\r\n    &lt;li class=&quot;colordangerx&quot;&gt;\r\n      &lt;input @change=&quot;changeColor($event.target.value,&apos;danger&apos;)&quot; type=&quot;color&quot; name=&quot;&quot; value=&quot;&quot;&gt;\r\n      danger\r\n    &lt;/li&gt;\r\n    &lt;li class=&quot;colorwarningx&quot;&gt;\r\n      &lt;input @change=&quot;changeColor($event.target.value,&apos;warning&apos;)&quot; type=&quot;color&quot; name=&quot;&quot; value=&quot;&quot;&gt;\r\n      warning\r\n    &lt;/li&gt;\r\n    &lt;li class=&quot;colordarkx&quot;&gt;\r\n      &lt;input @change=&quot;changeColor($event.target.value,&apos;dark&apos;)&quot; type=&quot;color&quot; name=&quot;&quot; value=&quot;&quot;&gt;\r\n      dark\r\n    &lt;/li&gt;\r\n  &lt;/ul&gt;\r\n&lt;/template&gt;\r\n\r\n&lt;script&gt;\r\nexport default {\r\n  methods: {\r\n    changeColor(colorx, whatColor) {\r\n      this.$vs.theme({\r\n        [whatColor]: colorx\r\n      })\r\n    }\r\n  }\r\n}\r\n&lt;/script&gt;\r\n\r\n&lt;style lang=&quot;css&quot; scoped&gt;\r\n.colorprimaryx {\r\n  background: rgb(var(--vs-primary)) !important;\r\n}\r\n\r\n.colorsuccessx {\r\n  background: rgb(var(--vs-success)) !important;\r\n}\r\n\r\n.colordangerx {\r\n  background: rgb(var(--vs-danger)) !important;\r\n}\r\n\r\n.colorwarningx {\r\n  background: rgb(var(--vs-warning)) !important;\r\n}\r\n\r\n.colordarkx {\r\n  background: rgb(var(--vs-dark)) !important;\r\n}\r\n&lt;/style&gt;\r\n        </template>\r\n\r\n    </vx-card>\r\n</template>\r\n\r\n<script>\r\nimport Prism from 'vue-prism-component'\r\n\r\nexport default {\r\n    components: {\r\n        Prism\r\n    },\r\n    methods: {\r\n        changeColor(colorx, whatColor) {\r\n            this.$vs.theme({\r\n                [whatColor]: colorx\r\n            })\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.demo-alignment li:hover {\r\n    transform: translate(0, 8px);\r\n    box-shadow: 0px 0px 40px -10px rgba(255, 255, 255, 0) !important;\r\n}\r\n</style>"]}]}