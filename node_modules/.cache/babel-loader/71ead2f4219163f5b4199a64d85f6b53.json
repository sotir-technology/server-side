{"remainingRequest":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js!C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xampp\\htdocs\\GIT\\server-side\\src\\views\\apps\\chat\\ChatNavbar.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\src\\views\\apps\\chat\\ChatNavbar.vue","mtime":1567376724796},{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.array.find-index\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport contacts from './contacts';\nexport default {\n  props: {\n    userId: {\n      type: Number,\n      required: true\n    },\n    isPinnedProp: {\n      type: Boolean,\n      required: true\n    },\n    isSidebarCollapsed: {\n      type: Boolean,\n      required: true\n    }\n  },\n  data: function data() {\n    return {\n      contacts: contacts,\n      isPinnedLocal: this.isPinnedProp\n    };\n  },\n  watch: {\n    isPinnedProp: function isPinnedProp(val) {\n      this.isPinnedLocal = val;\n    }\n  },\n  computed: {\n    contactIndex: function contactIndex() {\n      var _this = this;\n\n      return contacts.findIndex(function (contact) {\n        return contact.id == _this.userId;\n      });\n    },\n    userImg: function userImg() {\n      if (this.contactIndex === -1) {\n        return this.$store.state.AppActiveUser.img;\n      } else {\n        return this.contacts[this.contactIndex].img;\n      }\n    },\n    contactName: function contactName() {\n      if (this.contactIndex === -1) {\n        return this.$store.state.AppActiveUser.name;\n      } else {\n        return this.contacts[this.contactIndex].name;\n      }\n    },\n    getStatusColor: function getStatusColor() {\n      var _this2 = this;\n\n      return function (isActiveUser) {\n        var userStatus = _this2.getUserStatus(isActiveUser);\n\n        if (userStatus == \"online\") {\n          return \"success\";\n        } else if (userStatus == \"do not disturb\") {\n          return \"danger\";\n        } else if (userStatus == \"away\") {\n          return \"warning\";\n        } else {\n          return \"grey\";\n        }\n      };\n    }\n  },\n  methods: {\n    getUserStatus: function getUserStatus(isActiveUser) {\n      return isActiveUser ? this.$store.state.AppActiveUser.status : this.contacts[this.contactIndex].status;\n    },\n    toggleIsPinned: function toggleIsPinned() {\n      var chatData = this.$store.getters['chat/chatDataOfUser'](this.userId);\n\n      if (chatData) {\n        var payload = {\n          id: this.userId,\n          value: !this.isPinnedLocal\n        };\n        this.$store.dispatch('chat/toggleIsPinned', payload);\n      } else {\n        this.$emit('toggleIsChatPinned', !this.isPinnedLocal);\n      }\n\n      this.isPinnedLocal = !this.isPinnedLocal;\n    }\n  }\n};",{"version":3,"sources":["ChatNavbar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAyBA,OAAA,QAAA,MAAA,YAAA;AAEA,eAAA;AACA,EAAA,KAAA,EAAA;AACA,IAAA,MAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA;AAFA,KADA;AAKA,IAAA,YAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,QAAA,EAAA;AAFA,KALA;AASA,IAAA,kBAAA,EAAA;AACA,MAAA,IAAA,EAAA,OADA;AAEA,MAAA,QAAA,EAAA;AAFA;AATA,GADA;AAeA,EAAA,IAfA,kBAeA;AACA,WAAA;AACA,MAAA,QAAA,EAAA,QADA;AAEA,MAAA,aAAA,EAAA,KAAA;AAFA,KAAA;AAIA,GApBA;AAqBA,EAAA,KAAA,EAAA;AACA,IAAA,YADA,wBACA,GADA,EACA;AACA,WAAA,aAAA,GAAA,GAAA;AACA;AAHA,GArBA;AA0BA,EAAA,QAAA,EAAA;AACA,IAAA,YADA,0BACA;AAAA;;AACA,aAAA,QAAA,CAAA,SAAA,CAAA,UAAA,OAAA;AAAA,eAAA,OAAA,CAAA,EAAA,IAAA,KAAA,CAAA,MAAA;AAAA,OAAA,CAAA;AACA,KAHA;AAIA,IAAA,OAJA,qBAIA;AACA,UAAA,KAAA,YAAA,KAAA,CAAA,CAAA,EAAA;AACA,eAAA,KAAA,MAAA,CAAA,KAAA,CAAA,aAAA,CAAA,GAAA;AACA,OAFA,MAEA;AACA,eAAA,KAAA,QAAA,CAAA,KAAA,YAAA,EAAA,GAAA;AACA;AACA,KAVA;AAWA,IAAA,WAXA,yBAWA;AACA,UAAA,KAAA,YAAA,KAAA,CAAA,CAAA,EAAA;AACA,eAAA,KAAA,MAAA,CAAA,KAAA,CAAA,aAAA,CAAA,IAAA;AACA,OAFA,MAEA;AACA,eAAA,KAAA,QAAA,CAAA,KAAA,YAAA,EAAA,IAAA;AACA;AACA,KAjBA;AAkBA,IAAA,cAlBA,4BAkBA;AAAA;;AACA,aAAA,UAAA,YAAA,EAAA;AACA,YAAA,UAAA,GAAA,MAAA,CAAA,aAAA,CAAA,YAAA,CAAA;;AAEA,YAAA,UAAA,IAAA,QAAA,EAAA;AACA,iBAAA,SAAA;AACA,SAFA,MAEA,IAAA,UAAA,IAAA,gBAAA,EAAA;AACA,iBAAA,QAAA;AACA,SAFA,MAEA,IAAA,UAAA,IAAA,MAAA,EAAA;AACA,iBAAA,SAAA;AACA,SAFA,MAEA;AACA,iBAAA,MAAA;AACA;AACA,OAZA;AAaA;AAhCA,GA1BA;AA4DA,EAAA,OAAA,EAAA;AACA,IAAA,aADA,yBACA,YADA,EACA;AACA,aAAA,YAAA,GAAA,KAAA,MAAA,CAAA,KAAA,CAAA,aAAA,CAAA,MAAA,GAAA,KAAA,QAAA,CAAA,KAAA,YAAA,EAAA,MAAA;AACA,KAHA;AAIA,IAAA,cAJA,4BAIA;AACA,UAAA,QAAA,GAAA,KAAA,MAAA,CAAA,OAAA,CAAA,qBAAA,EAAA,KAAA,MAAA,CAAA;;AACA,UAAA,QAAA,EAAA;AACA,YAAA,OAAA,GAAA;AAAA,UAAA,EAAA,EAAA,KAAA,MAAA;AAAA,UAAA,KAAA,EAAA,CAAA,KAAA;AAAA,SAAA;AACA,aAAA,MAAA,CAAA,QAAA,CAAA,qBAAA,EAAA,OAAA;AACA,OAHA,MAGA;AACA,aAAA,KAAA,CAAA,oBAAA,EAAA,CAAA,KAAA,aAAA;AACA;;AACA,WAAA,aAAA,GAAA,CAAA,KAAA,aAAA;AACA;AAbA;AA5DA,CAAA","sourcesContent":["<!-- =========================================================================================\r\n    File Name: ChatNavbar.vue\r\n    Description: Chat Application - Chat navbar\r\n    ----------------------------------------------------------------------------------------\r\n    Item Name: Vuesax Admin - VueJS Dashboard Admin Template\r\n      Author: Pixinvent\r\n    Author URL: http://www.themeforest.net/user/pixinvent\r\n========================================================================================== -->\r\n\r\n<template>\r\n    <div v-if=\"userId != null\" class=\"chat__header\">\r\n        <vs-navbar class=\"p-4 flex navbar-custom\" color=\"white\" type=\"flat\">\r\n            <div class=\"relative flex mr-4\">\r\n                <feather-icon icon=\"MenuIcon\" class=\"mr-4 cursor-pointer\" v-if=\"isSidebarCollapsed\" @click.stop=\"$emit('openContactsSidebar')\"></feather-icon>\r\n                <vs-avatar class=\"m-0\" size=\"40px\" :src=\"require(`@/assets/images/portrait/small/${userImg}`)\" @click.stop=\"$emit('showProfileSidebar', userId)\" />\r\n                <div class=\"h-3 w-3 border-white border border-solid rounded-full absolute pin-r pin-b\" :class=\"'bg-' + getStatusColor(false)\"></div>\r\n            </div>\r\n            <h6>{{ contactName }}</h6>\r\n            <vs-spacer></vs-spacer>\r\n            <feather-icon icon=\"StarIcon\" class=\"cursor-pointer\" :svgClasses=\"[{'text-warning stroke-current': isPinnedLocal}, 'w-6', 'h-6']\" @click.stop=\"toggleIsPinned\"></feather-icon>\r\n        </vs-navbar>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport contacts from './contacts'\r\n\r\nexport default{\r\n    props: {\r\n        userId: {\r\n            type: Number,\r\n            required: true,\r\n        },\r\n        isPinnedProp: {\r\n            type: Boolean,\r\n            required: true,\r\n        },\r\n        isSidebarCollapsed: {\r\n            type: Boolean,\r\n            required: true,\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            contacts: contacts,\r\n            isPinnedLocal: this.isPinnedProp,\r\n        }\r\n    },\r\n    watch: {\r\n        isPinnedProp(val) {\r\n            this.isPinnedLocal = val;\r\n        }\r\n    },\r\n    computed: {\r\n        contactIndex() {\r\n            return contacts.findIndex(contact => contact.id == this.userId);\r\n        },\r\n        userImg() {\r\n            if(this.contactIndex === -1) {\r\n                return this.$store.state.AppActiveUser.img;\r\n            }else{\r\n                return this.contacts[this.contactIndex].img;\r\n            }\r\n        },\r\n        contactName() {\r\n            if(this.contactIndex === -1) {\r\n                return this.$store.state.AppActiveUser.name;\r\n            }else{\r\n                return this.contacts[this.contactIndex].name;\r\n            }\r\n        },\r\n        getStatusColor() {\r\n            return (isActiveUser) => {\r\n                const userStatus = this.getUserStatus(isActiveUser);\r\n\r\n                if(userStatus == \"online\"){\r\n                    return \"success\"\r\n                }else if(userStatus == \"do not disturb\"){\r\n                    return \"danger\"\r\n                }else if(userStatus == \"away\"){\r\n                    return \"warning\"\r\n                }else{\r\n                    return \"grey\"               \r\n                }\r\n            }\r\n        },\r\n    },\r\n    methods: {\r\n        getUserStatus(isActiveUser) {\r\n            return (isActiveUser) ? this.$store.state.AppActiveUser.status : this.contacts[this.contactIndex].status;\r\n        },\r\n        toggleIsPinned() {\r\n            const chatData = this.$store.getters['chat/chatDataOfUser'](this.userId);\r\n            if(chatData) {\r\n                const payload = {id: this.userId, value: !this.isPinnedLocal};\r\n                this.$store.dispatch('chat/toggleIsPinned', payload)\r\n            }else{\r\n                this.$emit('toggleIsChatPinned', !this.isPinnedLocal)\r\n            }\r\n            this.isPinnedLocal = !this.isPinnedLocal\r\n        }\r\n    },\r\n}\r\n</script>"],"sourceRoot":"src/views/apps/chat"}]}