{"remainingRequest":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js!C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xampp\\htdocs\\GIT\\server-side\\src\\views\\apps\\eCommerce\\ECommerceShop.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\src\\views\\apps\\eCommerce\\ECommerceShop.vue","mtime":1568069268175},{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1567428497170},{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1567428476521},{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1567428497170},{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\vue-loader\\lib\\index.js","mtime":1567428708565}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport algoliasearch from 'algoliasearch/lite';\nexport default {\n  components: {\n    ItemGridView: function ItemGridView() {\n      return import(\"./components/ItemGridView.vue\");\n    },\n    ItemListView: function ItemListView() {\n      return import(\"./components/ItemListView.vue\");\n    }\n  },\n  data: function data() {\n    return {\n      searchClient: algoliasearch('latency', '6be0576ff61c053d5f9a3225e2a90f76'),\n      // Filter Sidebar\n      isFilterSidebarActive: true,\n      clickNotClose: true,\n      windowWidth: window.innerWidth,\n      currentItemView: 'item-grid-view',\n      numericItems: [{\n        label: 'All'\n      }, {\n        label: '<= $10',\n        end: 10\n      }, {\n        label: '$10 - $100',\n        start: 10,\n        end: 100\n      }, {\n        label: '$100 - $500',\n        start: 100,\n        end: 500\n      }, {\n        label: '>= $500',\n        start: 500\n      }],\n      algoliaCategories: ['hierarchicalCategories.lvl0', 'hierarchicalCategories.lvl1', 'hierarchicalCategories.lvl2', 'hierarchicalCategories.lvl3']\n    };\n  },\n  computed: {\n    toValue: function toValue() {\n      return function (value, range) {\n        return [value.min !== null ? value.min : range.min, value.max !== null ? value.max : range.max];\n      };\n    },\n    // GRID VIEW\n    isInCart: function isInCart() {\n      var _this = this;\n\n      return function (itemId) {\n        return _this.$store.getters['eCommerce/isInCart'](itemId);\n      };\n    },\n    isInWishList: function isInWishList() {\n      var _this2 = this;\n\n      return function (itemId) {\n        return _this2.$store.getters['eCommerce/isInWishList'](itemId);\n      };\n    }\n  },\n  methods: {\n    handleWindowResize: function handleWindowResize(event) {\n      this.windowWidth = event.currentTarget.innerWidth;\n      this.setSidebarWidth();\n    },\n    setSidebarWidth: function setSidebarWidth() {\n      if (this.windowWidth < 992) {\n        this.isFilterSidebarActive = this.clickNotClose = false;\n      } else {\n        this.isFilterSidebarActive = this.clickNotClose = true;\n      }\n    },\n    // GRID VIEW - ACTIONS\n    toggleFilterSidebar: function toggleFilterSidebar() {\n      if (this.clickNotClose) return;\n      this.isFilterSidebarActive = !this.isFilterSidebarActive;\n    },\n    toggleItemInWishList: function toggleItemInWishList(item) {\n      this.$store.dispatch('eCommerce/toggleItemInWishList', item);\n    },\n    additemInCart: function additemInCart(item) {\n      this.$store.dispatch('eCommerce/additemInCart', item);\n    },\n    cartButtonClicked: function cartButtonClicked(item) {\n      if (this.isInCart(item.objectID)) this.$router.push('/apps/eCommerce/checkout');else this.additemInCart(item);\n    }\n  },\n  created: function created() {\n    var _this3 = this;\n\n    this.$nextTick(function () {\n      window.addEventListener('resize', _this3.handleWindowResize);\n    });\n    this.setSidebarWidth();\n  },\n  beforeDestroy: function beforeDestroy() {\n    window.removeEventListener('resize', this.handleWindowResize);\n  }\n};",{"version":3,"sources":["ECommerceShop.vue"],"names":[],"mappings":"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","sourcesContent":["<!-- =========================================================================================\r\n    File Name: ECommerceShop.vue\r\n    Description: eCommerce Shop Page\r\n    ----------------------------------------------------------------------------------------\r\n    Item Name: Vuesax Admin - VueJS Dashboard Admin Template\r\n      Author: Pixinvent\r\n    Author URL: http://www.themeforest.net/user/pixinvent\r\n========================================================================================== -->\r\n\r\n<template>\r\n    <div>\r\n        <ais-instant-search\r\n            :search-client=\"searchClient\"\r\n            index-name=\"instant_search\" id=\"algolia-instant-search-demo\">\r\n\r\n            <!-- AIS CONFIG -->\r\n            <ais-configure :hits-per-page.camel=\"9\" />\r\n\r\n            <div class=\"algolia-header mb-4\">\r\n                <div class=\"flex md:items-end items-center justify-between flex-wrap\">\r\n                    <!-- TOGGLE SIDEBAR BUTTON -->\r\n                    <feather-icon\r\n                        class=\"inline-flex lg:hidden cursor-pointer mr-4\"\r\n                        icon=\"MenuIcon\"\r\n                        @click.stop=\"toggleFilterSidebar\" />\r\n\r\n                    <p class=\"lg:inline-flex hidden font-semibold algolia-filters-label\">Filters</p>\r\n\r\n                    <div class=\"flex justify-between items-end flex-grow\">\r\n                        <!-- Stats -->\r\n                        <ais-stats>\r\n                            <p slot-scope=\"{ hitsPerPage, nbPages, nbHits, page, processingTimeMS, query }\" class=\"font-semibold md:block hidden\">\r\n                                {{ nbHits }} results found in {{ processingTimeMS }}ms\r\n                            </p>\r\n                        </ais-stats>\r\n\r\n                        <div class=\"flex flex-wrap\">\r\n\r\n                            <!-- SORTING -->\r\n                            <ais-sort-by :items=\"[\r\n                                { value: 'instant_search', label: 'Featured' },\r\n                                { value: 'instant_search_price_asc', label: 'Lowest Price' },\r\n                                { value: 'instant_search_price_desc', label: 'Highest Price' },\r\n                            ]\">\r\n                                <vs-select\r\n                                    :value=\"currentRefinement\"\r\n                                    slot-scope=\"{ items, currentRefinement, refine }\"\r\n                                    @input=\"(val) => refine(val)\"\r\n                                    class=\"mr-4 vs-input-shadow-drop vs-select-no-border d-theme-input-dark-bg w-48\">\r\n                                    <vs-select-item v-for=\"item in items\" :key=\"item.value\" :value=\"item.value\" :text=\"item.label\" />\r\n                                </vs-select>\r\n                            </ais-sort-by>\r\n\r\n                            <!-- ITEM VIEW - GRID/LIST -->\r\n                            <div>\r\n                                <feather-icon\r\n                                    icon=\"GridIcon\"\r\n                                    @click=\"currentItemView='item-grid-view'\"\r\n                                    class=\"p-2 shadow-drop rounded-lg d-theme-dark-bg cursor-pointer\"\r\n                                    :svgClasses=\"{'text-primary stroke-current': currentItemView == 'item-grid-view'}\" />\r\n                                <feather-icon\r\n                                    icon=\"ListIcon\"\r\n                                    @click=\"currentItemView='item-list-view'\"\r\n                                    class=\"p-2 ml-4 shadow-drop rounded-lg d-theme-dark-bg cursor-pointer hidden sm:inline-flex\"\r\n                                    :svgClasses=\"{'text-primary stroke-current': currentItemView == 'item-list-view'}\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div id=\"algolia-content-container\" class=\"relative clearfix\">\r\n                <vs-sidebar\r\n                    class=\"items-no-padding vs-sidebar-rounded background-absolute\"\r\n                    parent=\"#algolia-content-container\"\r\n                    :click-not-close=\"clickNotClose\"\r\n                    :hidden-background=\"clickNotClose\"\r\n                    v-model=\"isFilterSidebarActive\">\r\n\r\n                    <div class=\"p-6 filter-containesr\">\r\n\r\n                        <!-- MULTI RANGE -->\r\n                        <h6 class=\"font-bold mb-3\">Multi Range</h6>\r\n                        <ais-numeric-menu attribute=\"price\" :items=\"numericItems\">\r\n                            <ul slot-scope=\"{ items, refine, createURL }\">\r\n                                <li\r\n                                    v-for=\"item in items\"\r\n                                    :key=\"item.value\"\r\n                                    class=\"flex items-center cursor-pointer py-1\"\r\n                                    @click=\"refine(item.value)\">\r\n\r\n                                    <feather-icon icon=\"CircleIcon\" :svgClasses=\"[{ 'text-primary fill-current': item.isRefined}, 'h-5 w-5']\" />\r\n                                    <span class=\"ml-2\" :class=\"{'text-primary': item.isRefined}\">{{ item.label }}</span>\r\n                                </li>\r\n                            </ul>\r\n                        </ais-numeric-menu>\r\n\r\n                        <vs-divider />\r\n\r\n                        <!-- PRICE SLIDER -->\r\n                        <h6 class=\"font-bold mb-3\">Slider</h6>\r\n                        <ais-range-input attribute=\"price\">\r\n                            <div slot-scope=\"{ currentRefinement, range, refine }\">\r\n                                <vs-slider\r\n                                    class=\"algolia-price-slider\"\r\n                                    text-fixed=\"$\"\r\n                                    :min=\"range.min\"\r\n                                    :max=\"range.max\"\r\n                                    :value=\"toValue(currentRefinement, range)\"\r\n                                    @input=\"refine({min: $event[0], max: $event[1]})\" />\r\n                            </div>\r\n                        </ais-range-input>\r\n\r\n                        <vs-divider />\r\n\r\n                        <!-- CATEGORIES -->\r\n                        <h6 class=\"font-bold mb-4\">Category</h6>\r\n                        <ais-hierarchical-menu :attributes=\"algoliaCategories\">\r\n                            <div slot-scope=\"{\r\n                              items,\r\n                              refine,\r\n                            }\">\r\n                                <ul>\r\n                                    <li v-for=\"item in items\" :key=\"item.value\" class=\"flex items-center cursor-pointer py-1\" @click=\"refine(item.value)\">\r\n                                        <feather-icon icon=\"CircleIcon\" :svgClasses=\"[{ 'text-primary fill-current': item.isRefined}, 'h-5 w-5']\" />\r\n                                        <span class=\"ml-2\" :class=\"{'text-primary': item.isRefined}\">{{ item.label }}</span>\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                        </ais-hierarchical-menu>\r\n\r\n                        <vs-divider />\r\n\r\n                        <!-- Brands -->\r\n                        <h6 class=\"font-bold mb-4\">Brand</h6>\r\n                        <ais-refinement-list attribute=\"brand\">\r\n                            <div slot-scope=\"{\r\n                              items,\r\n                              isFromSearch,\r\n                              refine,\r\n                            }\">\r\n                                <ul>\r\n                                    <li v-if=\"isFromSearch && !items.length\">No results.</li>\r\n                                    <li v-for=\"item in items\" :key=\"item.value\" class=\"mb-2 flex items-center justify-between\">\r\n                                        <vs-checkbox v-model=\"item.isRefined\" class=\"ml-0\" @click=\"refine(item.value)\">{{ item.label }}</vs-checkbox>\r\n                                        <span>{{ item.count }}</span>\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                        </ais-refinement-list>\r\n                        <vs-divider />\r\n\r\n                        <!-- Rating -->\r\n                        <h6 class=\"font-bold mb-3\">Rating</h6>\r\n                        <ais-rating-menu attribute=\"rating\">\r\n                            <ul slot-scope=\"{ items, refine, createURL }\">\r\n                                <li v-for=\"item in items\" :key=\"item.value\" class=\"mb-2\">\r\n                                    <div @click.prevent=\"refine(item.value)\" class=\"flex justify-between items-center\">\r\n                                        <div class=\"flex items-center flex-wrap\">\r\n                                            <feather-icon icon=\"StarIcon\" :svgClasses=\"[{'text-warning': full, 'text-grey': !full, 'ml-1' : index}, 'cursor-pointer stroke-current h-6 w-6']\" v-for=\"(full, index) in item.stars\" :key=\"index\" />\r\n                                            <span class=\"ml-2\">&amp; up</span>\r\n                                        </div>\r\n                                        <span>({{ item.count }})</span>\r\n                                    </div>\r\n                                </li>\r\n                            </ul>\r\n                        </ais-rating-menu>\r\n\r\n                        <vs-divider />\r\n\r\n                        <ais-clear-refinements class=\"flex justify-center\">\r\n                            <vs-button slot-scope=\"{ canRefine, refine, createURL }\" @click.prevent=\"refine\" :disabled=\"!canRefine\">CLEAR ALL FILTERS</vs-button>\r\n                        </ais-clear-refinements>\r\n                    </div>\r\n                </vs-sidebar>\r\n\r\n                <!-- RIGHT COL -->\r\n                <div :class=\"{'sidebar-spacer-with-margin': clickNotClose}\">\r\n\r\n                    <!-- SEARCH BAR -->\r\n                    <ais-search-box>\r\n                        <div slot-scope=\"{ currentRefinement, isSearchStalled, refine }\">\r\n                            <div class=\"relative mb-8\">\r\n\r\n                                <!-- SEARCH INPUT -->\r\n                                <vs-input class=\"w-full vs-input-shadow-drop vs-input-no-border d-theme-input-dark-bg\" placeholder=\"Search here\" v-model=\"currentRefinement\" @input=\"refine($event)\" @keyup.esc=\"refine('')\" size=\"large\" />\r\n\r\n                                <!-- SEARCH LOADING -->\r\n                                <span :hidden=\"!isSearchStalled\">Loading...</span>\r\n\r\n                                <!-- SEARCH ICON -->\r\n                                <div slot=\"submit-icon\" class=\"absolute pin-t pin-r py-4 px-6\" v-show=\"!currentRefinement\">\r\n                                    <feather-icon icon=\"SearchIcon\" svgClasses=\"h-6 w-6\" />\r\n                                </div>\r\n\r\n                                <!-- CLEAR INPUT ICON -->\r\n                                <div slot=\"reset-icon\" class=\"absolute pin-t pin-r py-4 px-6\" v-show=\"currentRefinement\">\r\n                                    <feather-icon icon=\"XIcon\" svgClasses=\"h-6 w-6 cursor-pointer\" @click=\"refine('')\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </ais-search-box>\r\n\r\n                    <!-- SEARCH RESULT -->\r\n                    <ais-hits>\r\n                        <div slot-scope=\"{ items }\">\r\n\r\n                            <!-- GRID VIEW -->\r\n                            <template v-if=\"currentItemView == 'item-grid-view'\">\r\n                                <div class=\"items-grid-view vx-row match-height\">\r\n                                    <div class=\"vx-col lg:w-1/3 sm:w-1/2 w-full\" v-for=\"item in items\" :key=\"item.objectID\">\r\n\r\n                                        <item-grid-view :item=\"item\">\r\n\r\n                                            <!-- SLOT: ACTION BUTTONS -->\r\n                                            <template slot=\"action-buttons\">\r\n                                                <div class=\"flex flex-wrap\">\r\n\r\n                                                    <!-- PRIMARY BUTTON: ADD TO WISH LIST -->\r\n                                                    <div\r\n                                                        class=\"item-view-primary-action-btn p-3 flex flex-grow items-center justify-center cursor-pointer\"\r\n                                                        @click=\"toggleItemInWishList(item)\">\r\n                                                        <feather-icon icon=\"HeartIcon\" :svgClasses=\"[{'text-danger fill-current' : isInWishList(item.objectID)}, 'h-4 w-4']\" />\r\n\r\n                                                        <span class=\"text-sm font-semibold ml-2\">WISHLIST</span>\r\n                                                    </div>\r\n\r\n                                                    <!-- SECONDARY BUTTON: ADD-TO/VIEW-IN CART -->\r\n                                                    <div\r\n                                                        class=\"item-view-secondary-action-btn bg-primary p-3 flex flex-grow items-center justify-center text-white cursor-pointer\"\r\n                                                        @click=\"cartButtonClicked(item)\">\r\n                                                        <feather-icon icon=\"ShoppingBagIcon\" svgClasses=\"h-4 w-4\" />\r\n\r\n                                                        <span class=\"text-sm font-semibold ml-2\" v-if=\"isInCart(item.objectID)\">VIEW IN CART</span>\r\n                                                        <span class=\"text-sm font-semibold ml-2\" v-else>ADD TO CART</span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </template>\r\n                                        </item-grid-view>\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </template>\r\n\r\n                            <!-- LIST VIEW -->\r\n                            <template v-else>\r\n                                <div class=\"items-list-view\" v-for=\"item in items\" :key=\"item.objectID\">\r\n\r\n                                    <item-list-view :item=\"item\">\r\n\r\n                                        <!-- SLOT: ACTION BUTTONS -->\r\n                                        <template slot=\"action-buttons\">\r\n                                            <div\r\n                                                class=\"item-view-primary-action-btn p-3 rounded-lg flex flex-grow items-center justify-center cursor-pointer mb-3\"\r\n                                                @click=\"toggleItemInWishList(item)\">\r\n                                                <feather-icon icon=\"HeartIcon\" :svgClasses=\"[{'text-danger fill-current' : isInWishList(item.objectID)}, 'h-4 w-4']\" />\r\n                                                <span class=\"text-sm font-semibold ml-2\">WISHLIST</span>\r\n                                            </div>\r\n                                            <div\r\n                                                class=\"item-view-secondary-action-btn bg-primary p-3 rounded-lg flex flex-grow items-center justify-center text-white cursor-pointer\"\r\n                                                @click=\"cartButtonClicked(item)\">\r\n                                                <feather-icon icon=\"ShoppingBagIcon\" svgClasses=\"h-4 w-4\" />\r\n\r\n                                                <span class=\"text-sm font-semibold ml-2\" v-if=\"isInCart(item.objectID)\">VIEW IN CART</span>\r\n                                                <span class=\"text-sm font-semibold ml-2\" v-else>ADD TO CART</span>\r\n                                            </div>\r\n                                        </template>\r\n                                    </item-list-view>\r\n\r\n                                </div>\r\n                            </template>\r\n                        </div>\r\n                    </ais-hits>\r\n\r\n                    <!-- PAGINATION -->\r\n                    <ais-pagination>\r\n                        <div slot-scope=\"{\r\n                                currentRefinement,\r\n                                nbPages,\r\n                                pages,\r\n                                isFirstPage,\r\n                                isLastPage,\r\n                                refine,\r\n                                createURL\r\n                            }\"\r\n                        >\r\n\r\n                        <vs-pagination\r\n\r\n                            :total=\"nbPages\"\r\n                            :max=\"7\"\r\n                            :value=\"currentRefinement + 1\"\r\n                            @input=\"(val) => { refine(val - 1) }\" />\r\n                        </div>\r\n                    </ais-pagination>\r\n\r\n                    <!-- ALGOLIA LOGO -->\r\n                    <img class=\"flex mt-4 mx-auto h-8\" src=\"@/assets/images/pages/eCommerce/Algolia-logo.png\" alt=\"algolia-logo\">\r\n                </div>\r\n            </div>\r\n        </ais-instant-search>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport algoliasearch from 'algoliasearch/lite';\r\n\r\nexport default {\r\n    components: {\r\n        ItemGridView: () => import(\"./components/ItemGridView.vue\"),\r\n        ItemListView: () => import(\"./components/ItemListView.vue\")\r\n    },\r\n    data() {\r\n        return {\r\n            searchClient: algoliasearch(\r\n                'latency',\r\n                '6be0576ff61c053d5f9a3225e2a90f76'\r\n            ),\r\n            // Filter Sidebar\r\n            isFilterSidebarActive: true,\r\n            clickNotClose: true,\r\n            windowWidth: window.innerWidth,\r\n            currentItemView: 'item-grid-view',\r\n            numericItems: [\r\n              { label: 'All' },\r\n              { label: '<= $10', end: 10 },\r\n              { label: '$10 - $100', start: 10, end: 100 },\r\n              { label: '$100 - $500', start: 100, end: 500 },\r\n              { label: '>= $500', start: 500 },\r\n            ],\r\n            algoliaCategories: [\r\n              'hierarchicalCategories.lvl0',\r\n              'hierarchicalCategories.lvl1',\r\n              'hierarchicalCategories.lvl2',\r\n              'hierarchicalCategories.lvl3',\r\n            ]\r\n        };\r\n    },\r\n    computed: {\r\n        toValue() {\r\n            return (value, range) =>\r\n                [\r\n                    value.min !== null ? value.min : range.min,\r\n                    value.max !== null ? value.max : range.max,\r\n                ];\r\n        },\r\n\r\n        // GRID VIEW\r\n        isInCart() {\r\n            return (itemId) => this.$store.getters['eCommerce/isInCart'](itemId)\r\n        },\r\n        isInWishList() {\r\n            return (itemId) => this.$store.getters['eCommerce/isInWishList'](itemId)\r\n        },\r\n    },\r\n    methods: {\r\n        handleWindowResize(event) {\r\n            this.windowWidth = event.currentTarget.innerWidth;\r\n            this.setSidebarWidth();\r\n        },\r\n        setSidebarWidth() {\r\n            if(this.windowWidth < 992) {\r\n                this.isFilterSidebarActive = this.clickNotClose = false;\r\n            }else {\r\n                this.isFilterSidebarActive = this.clickNotClose = true;\r\n            }\r\n        },\r\n\r\n        // GRID VIEW - ACTIONS\r\n        toggleFilterSidebar() {\r\n            if(this.clickNotClose) return\r\n            this.isFilterSidebarActive = !this.isFilterSidebarActive;\r\n        },\r\n        toggleItemInWishList(item) {\r\n            this.$store.dispatch('eCommerce/toggleItemInWishList', item)\r\n        },\r\n        additemInCart(item) {\r\n            this.$store.dispatch('eCommerce/additemInCart', item)\r\n        },\r\n        cartButtonClicked(item) {\r\n            if(this.isInCart(item.objectID)) this.$router.push('/apps/eCommerce/checkout')\r\n            else this.additemInCart(item)\r\n        }\r\n    },\r\n    created() {\r\n        this.$nextTick(() => {\r\n            window.addEventListener('resize', this.handleWindowResize);\r\n        })\r\n        this.setSidebarWidth();\r\n    },\r\n    beforeDestroy: function() {\r\n        window.removeEventListener('resize', this.handleWindowResize)\r\n    },\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n#algolia-instant-search-demo {\r\n    .algolia-header {\r\n        .algolia-filters-label {\r\n            width: calc(260px + 2.4rem);\r\n        }\r\n    }\r\n\r\n    #algolia-content-container {\r\n\r\n        .vs-sidebar {\r\n          position: relative;\r\n          float: left;\r\n        }\r\n    }\r\n\r\n    .algolia-search-input-right-aligned-icon {\r\n        padding: 1rem 1.5rem;\r\n    }\r\n\r\n    .algolia-price-slider {\r\n        min-width: unset;\r\n    }\r\n\r\n    .item-list-view {\r\n        .algolia-result-img {\r\n\r\n        }\r\n    }\r\n\r\n    .item-view-primary-action-btn {\r\n        color: #2c2c2c !important;\r\n        background-color: #f6f6f6;\r\n        min-width: 50%;\r\n    }\r\n\r\n    .item-view-secondary-action-btn {\r\n        min-width: 50%;\r\n    }\r\n}\r\n\r\n.theme-dark {\r\n    #algolia-instant-search-demo {\r\n        #algolia-content-container {\r\n            .vs-sidebar {\r\n                background-color: #10163a;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n@media (min-width: 992px) {\r\n    .vs-sidebar-rounded {\r\n        .vs-sidebar { border-radius: .5rem; }\r\n        .vs-sidebar--items {border-radius: .5rem; }\r\n    }\r\n}\r\n\r\n@media (max-width: 992px) {\r\n    #algolia-content-container {\r\n      .vs-sidebar {\r\n        position: absolute !important;\r\n        float: none !important;\r\n      }\r\n    }\r\n}\r\n</style>\r\n"],"sourceRoot":"src/views/apps/eCommerce"}]}