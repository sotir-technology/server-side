{"remainingRequest":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js!C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xampp\\htdocs\\GIT\\server-side\\src\\views\\apps\\email\\EmailView.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\src\\views\\apps\\email\\EmailView.vue","mtime":1567376724888},{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1567428497170},{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1567428476521},{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1567428497170},{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\vue-loader\\lib\\index.js","mtime":1567428708565}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.is-array\";\nimport \"core-js/modules/es6.array.find\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport VuePerfectScrollbar from 'vue-perfect-scrollbar';\nexport default {\n  props: {\n    emailTags: {\n      type: Array,\n      required: true\n    },\n    openMailId: {\n      required: true,\n      validator: function validator(prop) {\n        return typeof prop === 'number' || prop === null;\n      }\n    },\n    isSidebarActive: {\n      type: Boolean,\n      required: true\n    }\n  },\n  data: function data() {\n    return {\n      showThread: false,\n      settings: {\n        maxScrollbarLength: 60,\n        wheelSpeed: 0.30\n      }\n    };\n  },\n  watch: {\n    isSidebarActive: function isSidebarActive(value) {\n      var _this = this;\n\n      if (!value) {\n        this.$emit('closeSidebar');\n        setTimeout(function () {\n          _this.showThread = false;\n        }, 500);\n      }\n    }\n  },\n  computed: {\n    currentMail: function currentMail() {\n      return this.$store.getters['email/getMail'](this.openMailId);\n    },\n    labelColor: function labelColor() {\n      var _this2 = this;\n\n      return function (label) {\n        var tags = _this2.$store.state.email.mailTags;\n        return tags.find(function (tag) {\n          return tag.value == label;\n        }).color;\n      };\n    },\n    currentMailLabels: {\n      get: function get() {\n        return this.$store.getters['email/getMail'](this.openMailId).labels;\n      },\n      set: function set(value) {\n        if (Array.isArray(value)) {\n          var payload = {\n            mailId: this.openMailId,\n            value: value\n          };\n          this.$store.dispatch('email/updateMailLabels', payload);\n        }\n      }\n    }\n  },\n  methods: {\n    toggleIsStarred: function toggleIsStarred() {\n      var payload = {\n        mailId: this.openMailId,\n        value: !this.currentMail.isStarred\n      };\n      this.$store.dispatch('email/toggleIsMailStarred', payload);\n    },\n    moveTo: function moveTo(to) {\n      this.$emit('closeSidebar');\n      this.$emit('moveTo', to);\n    }\n  },\n  components: {\n    VuePerfectScrollbar: VuePerfectScrollbar\n  },\n  updated: function updated() {\n    if (this.currentMail.unread && this.isSidebarActive) this.$store.dispatch('email/updateMailUnread', {\n      mails: [this.openMailId],\n      unread: false\n    });\n  }\n};",{"version":3,"sources":["EmailView.vue"],"names":[],"mappings":"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","sourcesContent":["<!-- =========================================================================================\r\n    File Name: EmailView.vue\r\n    Description: Email Application - Single Email View (Inbox)\r\n    ----------------------------------------------------------------------------------------\r\n    Item Name: Vuesax Admin - VueJS Dashboard Admin Template\r\n      Author: Pixinvent\r\n    Author URL: http://www.themeforest.net/user/pixinvent\r\n========================================================================================== -->\r\n\r\n\r\n<template>\r\n    <div>\r\n        <vs-sidebar click-not-close parent=\"#email-app\" :hidden-background=\"true\" class=\"full-vs-sidebar email-view-sidebar\" v-model=\"isSidebarActive\" position-right>\r\n            <div class=\"mail-sidebar-content px-0 sm:py-6 pt-2 h-full\" v-if=\"currentMail\">\r\n                <div class=\"flex flex-wrap items-center email-header justify-between md:px-8 px-6 sm:pb-2\">\r\n                    <div class=\"flex mb-4\">\r\n                        <div class=\"flex items-center\">\r\n                            <feather-icon icon=\"ArrowLeftIcon\" @click=\"$emit('closeSidebar')\" class=\"cursor-pointer mr-4\" svg-classes=\"w-6 h-6\"></feather-icon>\r\n                            <h3 v-if=\"currentMail.subject\">{{ currentMail.subject }}</h3>\r\n                            <h3 v-else>(no subject)</h3>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"ml-10 mb-4 mt-1\">\r\n                        <div class=\"email__actions--single flex items-baseline\">\r\n\r\n                            <feather-icon icon=\"StarIcon\" class=\"cursor-pointer\" :svgClasses=\"[{'text-warning stroke-current stroke-current': currentMail.isStarred}, 'h-6 w-6']\" @click=\"toggleIsStarred\" />\r\n\r\n                            <!-- MOVE TO DROPDOWN -->\r\n                            <vs-dropdown vs-custom-content vs-trigger-click class=\"cursor-pointer\">\r\n                                <feather-icon icon=\"FolderIcon\" svg-classes=\"h-6 w-6\" class=\"ml-4\"></feather-icon>\r\n                                <vs-dropdown-menu>\r\n                                    <ul class=\"my-2\">\r\n                                        <li class=\"px-4 mb-2 flex items-start cursor-pointer hover:text-primary\" @click=\"moveTo('inboxed')\" v-if=\"currentMail.mailType != 'inboxed'\">\r\n                                            <feather-icon icon=\"MailIcon\" svg-classes=\"h-5 w-5\" />\r\n                                            <span class=\"ml-3\">Inbox</span>\r\n                                        </li>\r\n                                        <li class=\"px-4 mb-2 flex items-start cursor-pointer hover:text-primary\" @click=\"moveTo('drafted')\" v-if=\"currentMail.mailType != 'drafted'\">\r\n                                            <feather-icon icon=\"Edit2Icon\" svg-classes=\"h-5 w-5\"></feather-icon>\r\n                                            <span class=\"ml-3\">Draft</span>\r\n                                        </li>\r\n                                        <li class=\"px-4 mb-2 flex items-start cursor-pointer hover:text-primary\" @click=\"moveTo('spam')\" v-if=\"currentMail.mailType != 'spam'\">\r\n                                            <feather-icon icon=\"InfoIcon\" svg-classes=\"h-5 w-5\"></feather-icon>\r\n                                            <span class=\"ml-3\">Spam</span>\r\n                                        </li>\r\n                                        <li class=\"px-4 flex items-start cursor-pointer hover:text-primary\" @click=\"moveTo('trashed')\" v-if=\"currentMail.mailType != 'trashed'\">\r\n                                            <feather-icon icon=\"TrashIcon\" svg-classes=\"h-5 w-5\"></feather-icon>\r\n                                            <span class=\"ml-3\">Trash</span>\r\n                                        </li>\r\n                                    </ul>\r\n                                </vs-dropdown-menu>\r\n                            </vs-dropdown>\r\n\r\n                            <!-- ADD LABEL DROPDOWN -->\r\n                            <vs-dropdown vs-custom-content vs-trigger-click class=\"cursor-pointer\">\r\n                                <feather-icon icon=\"TagIcon\" svg-classes=\"h-6 w-6\" class=\"cursor-pointer ml-4\"></feather-icon>\r\n                                <vs-dropdown-menu style=\"z-index: 40001\">\r\n                                        <vs-dropdown-item v-for=\"(label, index) in emailTags\" :key=\"index\">\r\n                                            <vs-checkbox @click.stop :vs-value=\"label.value\" v-model=\"currentMailLabels\">{{ label.text }}</vs-checkbox>\r\n                                        </vs-dropdown-item>\r\n                                </vs-dropdown-menu>\r\n                            </vs-dropdown>\r\n\r\n                            <feather-icon icon=\"MailIcon\" svg-classes=\"h-6 w-6\" class=\"cursor-pointer ml-4\" @click=\"$emit('markUnread')\"></feather-icon>\r\n                            <feather-icon icon=\"TrashIcon\" svg-classes=\"h-6 w-6\" class=\"cursor-pointer ml-4\" @click=\"$emit('removeMail')\"></feather-icon>\r\n                            <feather-icon icon=\"ChevronsLeftIcon\" svg-classes=\"h-6 w-6\" class=\"cursor-pointer ml-4 hidden sm:inline-flex\" @click=\"$emit('previousMail')\"></feather-icon>\r\n                            <feather-icon icon=\"ChevronsRightIcon\" svg-classes=\"h-6 w-6\" class=\"cursor-pointer ml-4 hidden sm:inline-flex\" @click=\"$emit('nextMail')\"></feather-icon>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <VuePerfectScrollbar class=\"scroll-area md:px-8 pt-4 px-6\" :settings=\"settings\">\r\n                <!-- LABEL ROW -->\r\n                <div class=\"vx-row\">\r\n                    <div class=\"vx-col w-full\">\r\n                        <div class=\"email__labels--single flex ml-10 items-center mt-2\">\r\n                            <transition-group name=\"list\" tag=\"div\" class=\"flex\">\r\n                                <div v-for=\"label in currentMail.labels\" :key=\"label\" class=\"open-mail-label flex items-center mr-4\">\r\n                                    <div class=\"h-3 w-3 rounded-full mr-1\" :class=\"'bg-' + labelColor(label)\"></div>\r\n                                    <span class=\"text-sm\">{{ label | capitalize }}</span>\r\n                                </div>\r\n                            </transition-group>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <!-- /LABEL ROW -->\r\n                <br>\r\n\r\n                <div class=\"vx-row\" v-if=\"currentMail.replies.length && !showThread\">\r\n                    <div class=\"vx-col w-full\">\r\n                        <span class=\"text-primary font-medium ml-10 cursor-pointer\" @click=\"showThread = true\">{{ currentMail.replies.length }} Earlier Messages</span>\r\n                    </div>\r\n                </div>\r\n                <div v-if=\"isSidebarActive\">\r\n\r\n                    <!-- ALL MESSAGES - THREAD -->\r\n                    <div class=\"vx-row\" v-for=\"threadMail in currentMail.replies.slice().reverse()\" :key=\"threadMail.id\" v-if=\"showThread\">\r\n                        <div class=\"vx-col w-full\">\r\n                            <vx-card class=\"px-4 mb-10\">\r\n\r\n                                <!-- MAIL META ROW -->\r\n                                <div class=\"vx-row\">\r\n                                    <div class=\"vx-col w-full border-b border-l-0 border-r-0 border-t-0 border-grey-light border-solid flex justify-between flex items-center\">\r\n                                        <div class=\"flex items-center\">\r\n                                            <div>\r\n                                                <vs-avatar class=\"sender__avatar--single flex-no-shrink mr-3 border-2 border-solid border-white\" :src=\"require(`@/assets/images/portrait/small/${threadMail.img}`)\" size=\"65px\"></vs-avatar>\r\n                                            </div>\r\n                                            <div class=\"flex flex-col\">\r\n                                                <h4 class=\"mb-1\">{{ threadMail.sender_name }}</h4>\r\n                                                <div class=\"flex items-center\">\r\n                                                    <span class=\"text-sm\">{{ threadMail.sender }}</span>\r\n\r\n                                                    <vs-dropdown vs-custom-content vs-trigger-click>\r\n                                                        <feather-icon icon=\"ChevronDownIcon\" style=\"width:1rem; height:1rem\" class=\"cursor-pointer\"></feather-icon>\r\n\r\n                                                        <vs-dropdown-menu style=\"z-index: 40001\">\r\n                                                            <div class=\"p-2\">\r\n                                                                <p class=\"text-sm mb-1\">From: <span class=\"font-semibold\"> {{ threadMail.sender }} </span></p>\r\n                                                                <p class=\"text-sm mb-1\">To: <span class=\"font-semibold\"> {{ threadMail.to | csv }} </span></p>\r\n                                                                <p class=\"text-sm mb-1\">Date: <span class=\"font-semibold\"> {{ threadMail.time | time }} {{ threadMail.time | date(true) }} </span></p>\r\n                                                                <p class=\"text-sm mb-1\" v-if=\"threadMail.cc.length\">cc: <span class=\"font-semibold\"> {{ threadMail.cc | csv }} </span></p>\r\n                                                            </div>\r\n                                                        </vs-dropdown-menu>\r\n                                                    </vs-dropdown>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"flex flex-col justify-end\">\r\n                                            <span class=\"text-right\">{{ threadMail.time | date(true) }}</span>\r\n                                            <div class=\"flex justify-end mt-2\">\r\n                                                <span class=\"text-right\">{{ threadMail.time | time }}</span>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <!-- MAIL CONTENT -->\r\n                                <div class=\"vx-row\">\r\n                                    <div class=\"vx-col w-full\">\r\n                                        <div class=\"mail__content break-words mt-8 mb-4\" v-html=\"threadMail.message\"></div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <!-- MAIL ATTACHMENTS -->\r\n                                <div class=\"vx-row\" v-if=\"threadMail.attachments.length\">\r\n                                    <div class=\"vx-col w-full border-b border-l-0 border-r-0 border-t-0 border-grey-light border-solid mb-6 flex\">\r\n                                        <feather-icon icon=\"PaperclipIcon\"></feather-icon>\r\n                                        <span class=\"block py-4\">ATTACHMENTS</span>\r\n                                    </div>\r\n                                    <div class=\"flex\">\r\n                                        <div class=\"mail__attachment\" v-for=\"(attachment, index) in threadMail.attachments\" :key=\"index\">\r\n                                            <vs-chip color=\"primary\" class=\"px-4 py-2 mr-3\">{{ attachment }}</vs-chip>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </vx-card>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <!-- LATEST MESSAGE -->\r\n                    <div class=\"vx-row\">\r\n                        <div class=\"vx-col w-full\">\r\n                            <vx-card class=\"px-4\">\r\n\r\n                                <!-- MAIL META ROW -->\r\n                                <div class=\"vx-row w-full border-b border-l-0 border-r-0 border-t-0 border-grey-light border-solid flex justify-between flex items-center\">\r\n                                    <div class=\"vx-col sm:w-4/5 w-full flex flex-wrap items-center mb-2\">\r\n                                        <vs-avatar class=\"sender__avatar--single flex-no-shrink mr-3 border-2 border-solid border-white\" :src=\"require(`@/assets/images/portrait/small/${currentMail.img}`)\" size=\"65px\"></vs-avatar>\r\n                                        <div class=\"flex flex-col my-2\">\r\n                                            <h4 class=\"mb-1\">{{ currentMail.sender_name }}</h4>\r\n                                            <div class=\"flex items-center\">\r\n                                                <span class=\"text-sm\">{{ currentMail.sender }}</span>\r\n\r\n                                                <vs-dropdown vs-custom-content vs-trigger-click class=\"inline-flex\">\r\n                                                    <feather-icon icon=\"ChevronDownIcon\" style=\"width:1rem; height:1rem\" class=\"cursor-pointer\"></feather-icon>\r\n\r\n                                                    <vs-dropdown-menu style=\"z-index: 40001\">\r\n                                                        <div class=\"p-2\">\r\n                                                            <p class=\"text-sm mb-1\">From: <span class=\"font-semibold\"> {{ currentMail.sender }} </span></p>\r\n                                                            <p class=\"text-sm mb-1\">To: <span class=\"font-semibold\"> {{ currentMail.to | csv }} </span></p>\r\n                                                            <p class=\"text-sm mb-1\">Date: <span class=\"font-semibold\"> {{ currentMail.time | time }} {{ currentMail.time | date(true) }} </span></p>\r\n                                                            <p class=\"text-sm mb-1\" v-if=\"currentMail.cc.length\">cc: <span class=\"font-semibold\"> {{ currentMail.cc | csv }} </span></p>\r\n                                                        </div>\r\n                                                    </vs-dropdown-menu>\r\n                                                </vs-dropdown>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"vx-col sm:w-1/5 w-full flex sm:flex-col items-center sm:justify-end mb-2\">\r\n                                            <span class=\"flex sm:mr-0 mr-2 self-end whitespace-no-wrap\">{{ currentMail.time | time }}</span>\r\n                                        <span class=\"flex self-end sm:mt-2 mt-0 whitespace-no-wrap\">{{ currentMail.time | date(true) }}</span>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <!-- MAIL CONTENT -->\r\n                                <div class=\"vx-row\">\r\n                                    <div class=\"vx-col w-full\">\r\n                                        <div class=\"mail__content break-words mt-8 mb-4\" v-html=\"currentMail.message\"></div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <!-- MAIL ATTACHMENTS -->\r\n                                <div class=\"vx-row\" v-if=\"currentMail.attachments.length\">\r\n                                    <div class=\"vx-col w-full border-b border-l-0 border-r-0 border-t-0 border-grey-light border-solid mb-6 flex\">\r\n                                        <feather-icon icon=\"PaperclipIcon\"></feather-icon>\r\n                                        <span class=\"block py-4\">ATTACHMENTS</span>\r\n                                    </div>\r\n                                    <div class=\"flex\">\r\n                                        <div class=\"mail__attachment\" v-for=\"(attachment, index) in currentMail.attachments\" :key=\"index\">\r\n                                            <vs-chip color=\"primary\" class=\"px-4 py-2 mr-3\">{{ attachment }}</vs-chip>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </vx-card>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"vx-row\" style=\"margin-top: 2.2rem\">\r\n                        <div class=\"vx-col w-full pb-10\">\r\n                            <vx-card>\r\n                                <div class=\"vx-row\">\r\n                                    <div class=\"vx-col w-full flex justify-between\">\r\n                                        <span class=\"text-lg\">Click here to <span class=\"text-primary font-semibold cursor-pointer\">Reply</span> or <span class=\"text-primary font-semibold cursor-pointer\">Forward</span></span>\r\n                                        <feather-icon icon=\"PaperclipIcon\"></feather-icon>\r\n                                    </div>\r\n                                </div>\r\n                            </vx-card>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                </VuePerfectScrollbar>\r\n            </div>\r\n        </vs-sidebar>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport VuePerfectScrollbar from 'vue-perfect-scrollbar'\r\n\r\nexport default{\r\n    props: {\r\n        emailTags: {\r\n            type: Array,\r\n            required: true,\r\n        },\r\n        openMailId: {\r\n            required: true,\r\n            validator: prop => typeof prop === 'number' || prop === null\r\n        },\r\n        isSidebarActive: {\r\n            type: Boolean,\r\n            required: true\r\n        },\r\n    },\r\n    data() {\r\n        return {\r\n            showThread: false,\r\n            settings: {\r\n                maxScrollbarLength: 60,\r\n                wheelSpeed: 0.30,\r\n            },\r\n        }\r\n    },\r\n    watch: {\r\n        isSidebarActive(value) {\r\n            if(!value) {\r\n                this.$emit('closeSidebar');\r\n                setTimeout(() => {\r\n                    this.showThread = false;\r\n                }, 500)\r\n            }\r\n        },\r\n    },\r\n    computed: {\r\n        currentMail() {\r\n            return this.$store.getters['email/getMail'](this.openMailId)\r\n        },\r\n        labelColor() {\r\n            return (label) => {\r\n                const tags = this.$store.state.email.mailTags;\r\n                return tags.find((tag) => {\r\n                    return tag.value == label\r\n                }).color\r\n            }\r\n        },\r\n        currentMailLabels: {\r\n            get() {\r\n                return this.$store.getters['email/getMail'](this.openMailId).labels;\r\n            },\r\n            set(value) {\r\n                if(Array.isArray(value)){\r\n                    const payload = { mailId: this.openMailId, value: value }\r\n                    this.$store.dispatch('email/updateMailLabels', payload)\r\n                }\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        toggleIsStarred() {\r\n            const payload = {mailId: this.openMailId, value : !this.currentMail.isStarred}\r\n            this.$store.dispatch('email/toggleIsMailStarred', payload)\r\n        },\r\n        moveTo(to) {\r\n            this.$emit('closeSidebar')\r\n            this.$emit('moveTo', to)\r\n        }\r\n    },\r\n    components: {\r\n        VuePerfectScrollbar\r\n    },\r\n    updated() {\r\n        if(this.currentMail.unread && this.isSidebarActive) this.$store.dispatch('email/updateMailUnread', {mails: [this.openMailId], unread: false});\r\n    },\r\n}\r\n</script>"],"sourceRoot":"src/views/apps/email"}]}