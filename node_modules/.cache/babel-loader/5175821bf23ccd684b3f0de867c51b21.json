{"remainingRequest":"/Users/revelation/Downloads/vue-template/wc_admin/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/Users/revelation/Downloads/vue-template/wc_admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/revelation/Downloads/vue-template/wc_admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/revelation/Downloads/vue-template/wc_admin/src/views/apps/chat/ChatLog.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/revelation/Downloads/vue-template/wc_admin/src/views/apps/chat/ChatLog.vue","mtime":1557525828000},{"path":"/Users/revelation/Downloads/vue-template/wc_admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/revelation/Downloads/vue-template/wc_admin/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/revelation/Downloads/vue-template/wc_admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/revelation/Downloads/vue-template/wc_admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find-index\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport contacts from './contacts';\nexport default {\n  props: {\n    userId: {\n      type: Number,\n      required: true\n    }\n  },\n  data: function data() {\n    return {\n      contacts: contacts\n    };\n  },\n  computed: {\n    chatData: function chatData() {\n      return this.$store.getters['chat/chatDataOfUser'](this.userId);\n    },\n    contactIndex: function contactIndex() {\n      var _this = this;\n\n      return contacts.findIndex(function (contact) {\n        return contact.id == _this.userId;\n      });\n    },\n    userImg: function userImg() {\n      if (this.contactIndex !== -1) return this.contacts[this.contactIndex].img;\n    },\n    activeUserImg: function activeUserImg() {\n      return this.$store.state.AppActiveUser.img;\n    },\n    senderImg: function senderImg() {\n      var _this2 = this;\n\n      return function (isSentByActiveUser) {\n        if (isSentByActiveUser) return require(\"@/assets/images/portrait/small/\".concat(_this2.$store.state.AppActiveUser.img));else return require(\"@/assets/images/portrait/small/\".concat(_this2.contacts[_this2.contactIndex].img));\n      };\n    },\n    hasSentPreviousMsg: function hasSentPreviousMsg() {\n      return function (last_sender, current_sender) {\n        return last_sender == current_sender;\n      };\n    }\n  },\n  methods: {\n    isSameDay: function isSameDay(time_to, time_from) {\n      var date_time_to = new Date(Date.parse(time_to));\n      var date_time_from = new Date(Date.parse(time_from));\n      return date_time_to.getFullYear() === date_time_from.getFullYear() && date_time_to.getMonth() === date_time_from.getMonth() && date_time_to.getDate() === date_time_from.getDate();\n    },\n    toDate: function toDate(time) {\n      var locale = \"en-us\";\n      var date_obj = new Date(Date.parse(time));\n      var monthName = date_obj.toLocaleString(locale, {\n        month: 'short'\n      });\n      return date_obj.getDate() + ' ' + monthName;\n    },\n    scrollToBottom: function scrollToBottom() {\n      var _this3 = this;\n\n      this.$nextTick(function () {\n        _this3.$parent.$el.scrollTop = _this3.$parent.$el.scrollHeight;\n      });\n    }\n  },\n  updated: function updated() {\n    this.scrollToBottom();\n  },\n  mounted: function mounted() {\n    this.scrollToBottom();\n  }\n};",{"version":3,"sources":["ChatLog.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CA,OAAA,QAAA,MAAA,YAAA;AAEA,eAAA;AACA,EAAA,KAAA,EAAA;AACA,IAAA,MAAA,EAAA;AACA,MAAA,IAAA,EAAA,MADA;AAEA,MAAA,QAAA,EAAA;AAFA;AADA,GADA;AAOA,EAAA,IAPA,kBAOA;AACA,WAAA;AACA,MAAA,QAAA,EAAA;AADA,KAAA;AAGA,GAXA;AAYA,EAAA,QAAA,EAAA;AACA,IAAA,QADA,sBACA;AACA,aAAA,KAAA,MAAA,CAAA,OAAA,CAAA,qBAAA,EAAA,KAAA,MAAA,CAAA;AACA,KAHA;AAIA,IAAA,YAJA,0BAIA;AAAA;;AACA,aAAA,QAAA,CAAA,SAAA,CAAA,UAAA,OAAA;AAAA,eAAA,OAAA,CAAA,EAAA,IAAA,KAAA,CAAA,MAAA;AAAA,OAAA,CAAA;AACA,KANA;AAOA,IAAA,OAPA,qBAOA;AACA,UAAA,KAAA,YAAA,KAAA,CAAA,CAAA,EAAA,OAAA,KAAA,QAAA,CAAA,KAAA,YAAA,EAAA,GAAA;AACA,KATA;AAUA,IAAA,aAVA,2BAUA;AACA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,aAAA,CAAA,GAAA;AACA,KAZA;AAaA,IAAA,SAbA,uBAaA;AAAA;;AACA,aAAA,UAAA,kBAAA,EAAA;AACA,YAAA,kBAAA,EAAA,OAAA,OAAA,0CAAA,MAAA,CAAA,MAAA,CAAA,KAAA,CAAA,aAAA,CAAA,GAAA,EAAA,CAAA,KACA,OAAA,OAAA,0CAAA,MAAA,CAAA,QAAA,CAAA,MAAA,CAAA,YAAA,EAAA,GAAA,EAAA;AACA,OAHA;AAIA,KAlBA;AAmBA,IAAA,kBAnBA,gCAmBA;AACA,aAAA,UAAA,WAAA,EAAA,cAAA;AAAA,eAAA,WAAA,IAAA,cAAA;AAAA,OAAA;AACA;AArBA,GAZA;AAmCA,EAAA,OAAA,EAAA;AACA,IAAA,SADA,qBACA,OADA,EACA,SADA,EACA;AACA,UAAA,YAAA,GAAA,IAAA,IAAA,CAAA,IAAA,CAAA,KAAA,CAAA,OAAA,CAAA,CAAA;AACA,UAAA,cAAA,GAAA,IAAA,IAAA,CAAA,IAAA,CAAA,KAAA,CAAA,SAAA,CAAA,CAAA;AACA,aAAA,YAAA,CAAA,WAAA,OAAA,cAAA,CAAA,WAAA,EAAA,IACA,YAAA,CAAA,QAAA,OAAA,cAAA,CAAA,QAAA,EADA,IAEA,YAAA,CAAA,OAAA,OAAA,cAAA,CAAA,OAAA,EAFA;AAGA,KAPA;AAQA,IAAA,MARA,kBAQA,IARA,EAQA;AACA,UAAA,MAAA,GAAA,OAAA;AACA,UAAA,QAAA,GAAA,IAAA,IAAA,CAAA,IAAA,CAAA,KAAA,CAAA,IAAA,CAAA,CAAA;AACA,UAAA,SAAA,GAAA,QAAA,CAAA,cAAA,CAAA,MAAA,EAAA;AACA,QAAA,KAAA,EAAA;AADA,OAAA,CAAA;AAGA,aAAA,QAAA,CAAA,OAAA,KAAA,GAAA,GAAA,SAAA;AACA,KAfA;AAgBA,IAAA,cAhBA,4BAgBA;AAAA;;AACA,WAAA,SAAA,CAAA,YAAA;AACA,QAAA,MAAA,CAAA,OAAA,CAAA,GAAA,CAAA,SAAA,GAAA,MAAA,CAAA,OAAA,CAAA,GAAA,CAAA,YAAA;AACA,OAFA;AAGA;AApBA,GAnCA;AAyDA,EAAA,OAzDA,qBAyDA;AACA,SAAA,cAAA;AACA,GA3DA;AA4DA,EAAA,OA5DA,qBA4DA;AACA,SAAA,cAAA;AACA;AA9DA,CAAA","sourcesContent":["<!-- =========================================================================================\n    File Name: ChatLog.vue\n    Description: Chat Application - Log of chat\n    ----------------------------------------------------------------------------------------\n    Item Name: Vuesax Admin - VueJS Dashboard Admin Template\n      Author: Pixinvent\n    Author URL: http://www.themeforest.net/user/pixinvent\n========================================================================================== -->\n<!-- hasSentPreviousMsg -->\n<template>\n    <div id=\"component-chat-log\" class=\"m-8\" v-if=\"chatData\">\n        <div v-for=\"(msg, index) in chatData.msg\" class=\"msg-grp-container\" :key=\"index\">\n\n            <!-- If previouse msg is older than current time -->\n            <template v-if=\"chatData.msg[index-1]\">\n                <vs-divider v-if=\"!isSameDay(msg.time, chatData.msg[index-1].time)\">\n                    <span>{{ toDate(msg.time) }}</span>\n                </vs-divider>\n                <div class=\"spacer mt-8\" v-if=\"!hasSentPreviousMsg(chatData.msg[index-1].isSent, msg.isSent)\"></div>\n            </template>\n\n            <div class=\"flex items-start\" :class=\"[{'flex-row-reverse' : msg.isSent}]\">\n\n                <template v-if=\"chatData.msg[index-1]\">\n                    <template v-if=\"(!hasSentPreviousMsg(chatData.msg[index-1].isSent, msg.isSent) || !isSameDay(msg.time, chatData.msg[index-1].time))\">\n                        <vs-avatar size=\"40px\" class=\"m-0 flex-no-shrink\" :class=\"msg.isSent ? 'sm:ml-5 ml-3' : 'sm:mr-5 mr-3'\" :src=\"senderImg(msg.isSent)\"></vs-avatar>\n                    </template>\n                </template>\n\n                <template v-if=\"index == 0\">\n                    <vs-avatar size=\"40px\" class=\"m-0 flex-no-shrink\" :class=\"msg.isSent ? 'sm:ml-5 ml-3' : 'sm:mr-5 mr-3'\" :src=\"senderImg(msg.isSent)\"></vs-avatar>\n                </template>\n\n                <template v-if=\"chatData.msg[index-1]\">\n                    <div class=\"mr-16\" v-if=\"!(!hasSentPreviousMsg(chatData.msg[index-1].isSent, msg.isSent) || !isSameDay(msg.time, chatData.msg[index-1].time))\"></div>\n                </template>\n\n                <div class=\"msg break-words relative shadow-md rounded py-3 px-4 mb-2 rounded-lg max-w-sm\" :class=\"{'bg-primary-gradient text-white': msg.isSent, 'border border-solid border-grey-light bg-white': !msg.isSent}\">\n                    <span>{{ msg.textContent }}</span>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport contacts from './contacts'\n\nexport default{\n    props: {\n        userId: {\n            type: Number,\n            required: true,\n        }\n    },\n    data() {\n        return {\n            contacts: contacts,\n        }\n    },\n    computed: {\n        chatData() {\n            return this.$store.getters['chat/chatDataOfUser'](this.userId);\n        },\n        contactIndex() {\n            return contacts.findIndex(contact => contact.id == this.userId);\n        },\n        userImg() {\n            if(this.contactIndex !== -1) return this.contacts[this.contactIndex].img;\n        },\n        activeUserImg() {\n            return this.$store.state.AppActiveUser.img;\n        },\n        senderImg() {\n            return (isSentByActiveUser) => {\n                if (isSentByActiveUser) return require(`@/assets/images/portrait/small/${this.$store.state.AppActiveUser.img}`);\n                else return require(`@/assets/images/portrait/small/${this.contacts[this.contactIndex].img}`);\n            }\n        },\n        hasSentPreviousMsg() {\n            return (last_sender, current_sender) => last_sender == current_sender\n        },\n    },\n    methods: {\n        isSameDay(time_to, time_from) {\n            const date_time_to = new Date(Date.parse(time_to))\n            const date_time_from = new Date(Date.parse(time_from));\n            return date_time_to.getFullYear() === date_time_from.getFullYear() &&\n                date_time_to.getMonth() === date_time_from.getMonth() &&\n                date_time_to.getDate() === date_time_from.getDate();\n        },\n        toDate(time) {\n            const locale = \"en-us\";\n            const date_obj = new Date(Date.parse(time));\n            const monthName= date_obj.toLocaleString(locale, {\n                month: 'short'\n            });\n            return date_obj.getDate() + ' '  + monthName;\n        },\n        scrollToBottom() {\n            this.$nextTick(() => {\n                this.$parent.$el.scrollTop = this.$parent.$el.scrollHeight\n            });\n        }\n    },\n    updated() {\n        this.scrollToBottom();\n    },\n    mounted() {\n        this.scrollToBottom();\n    }\n}\n</script>\n"],"sourceRoot":"src/views/apps/chat"}]}