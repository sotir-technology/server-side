{"remainingRequest":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js!C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xampp\\htdocs\\GIT\\server-side\\src\\views\\churcha2z\\pages\\Register.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\src\\views\\churcha2z\\pages\\Register.vue","mtime":1568385246167},{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1567428497170},{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1567428476521},{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1567428497170},{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\vue-loader\\lib\\index.js","mtime":1567428708565}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport _objectSpread from \"C:\\\\xampp\\\\htdocs\\\\GIT\\\\server-side\\\\node_modules\\\\@babel\\\\runtime/helpers/builtin/es6/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapActions, mapGetters, mapState } from 'vuex';\nexport default {\n  data: function data() {\n    return {\n      name: 'Account Name',\n      email: 'name@churcha2x.com',\n      phone: '08123456788',\n      country: 'Account Location/Country',\n      state: 'State',\n      street: 'address/home',\n      password: '12345',\n      confirm_password: '',\n      isTermsConditionAccepted: true,\n      backgroundLoading: 'primary',\n      colorLoading: '#fff'\n    };\n  },\n  computed: _objectSpread({\n    validateForm: function validateForm() {\n      return !this.errors.any() && this.name != '' && this.email != '' && this.password != '' && this.confirmpassword != '' && this.isTermsConditionAccepted === true;\n    }\n  }, mapState(['auth/isUserLoggedIn', 'msg', 'reg_status', 'status']), mapActions(['auth/registerAttempt'])),\n  methods: {\n    registerUser: function registerUser() {\n      //    if (!this.validateForm) return false\n      //The button loader starts showing\n      this.startLoading();\n\n      if (this.isUserLoggedIn) {\n        this.notifyAlreadyLogedIn();\n        return;\n      }\n      /** the userdetails, notify object and loading objeect is passed as a parameter object down to moduleAuthActions **/\n\n\n      var payload = {\n        userDetails: {\n          name: this.name,\n          email: this.email,\n          phone: this.phone,\n          founder: this.founder,\n          password: this.password,\n          country: this.country,\n          state: this.state,\n          street: this.street\n        },\n        notify: this.$vs.notify,\n        stopLoading: this.$vs.loading\n        /** create data on server by sending payload as parameter**/\n\n      };\n      this.$store.dispatch('auth/registerAttempt', payload); // // update user profile. In this case add username\n      // const username = this.username;\n      // const loginPayload = {\n      //     userDetails: {\n      //         email: this.email,\n      //         password: this.password\n      //     },\n      //     notify: this.$vs.notify\n      // }\n      // const store = this.$store;\n      // firebase.auth().onAuthStateChanged(function(user) {\n      //     if (user) {\n      //         user.updateProfile({\n      //             displayName: username,\n      //         }).then(function() {\n      //             // Profile updated successfully!\n      //             // Login user\n      //             store.dispatch('auth/login', loginPayload)\n      //         }, function(error) {\n      //             this.$vs.notify({\n      //                 title: 'Error',\n      //                 text: error.message,\n      //                 iconPack: 'feather',\n      //                 icon: 'icon-alert-circle',\n      //                 color: 'danger'\n      //             });\n      //         });\n      //\n      //     }\n      // });\n    },\n    notifyAlreadyLogedIn: function notifyAlreadyLogedIn() {\n      this.$vs.notify({\n        title: 'Login Attempt',\n        text: 'You are already logged in!',\n        iconPack: 'feather',\n        icon: 'icon-alert-circle',\n        color: 'warning'\n      });\n    },\n    startLoading: function startLoading() {\n      return this.$vs.loading({\n        background: this.backgroundLoading,\n        color: this.colorLoading,\n        container: \"#button-with-loading\",\n        scale: 0.45\n      });\n    },\n    stopLoading: function stopLoading() {\n      return this.$vs.loading.close(\"#button-with-loading > .con-vs-loading\");\n    },\n    login: function login() {\n      return this.$router.push('/login');\n    }\n  }\n};",{"version":3,"sources":["Register.vue"],"names":[],"mappings":"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","sourcesContent":["<!-- =========================================================================================\r\n    File Name: Register.vue\r\n    Description: Register Page\r\n    ----------------------------------------------------------------------------------------\r\n    Item Name: Vuesax Admin - VueJS Dashboard Admin Template\r\n      Author: Pixinvent\r\n    Author URL: http://www.themeforest.net/user/pixinvent\r\n========================================================================================== -->\r\n\r\n\r\n<template>\r\n    <div class=\"h-screen flex w-full bg-img\">\r\n        <div class=\"vx-col sm:w-1/2 md:w-1/2 lg:w-3/4 xl:w-3/5 mx-auto self-center\">\r\n            <vx-card>\r\n                <div slot=\"no-body\" class=\"full-page-bg-color\">\r\n                    <div class=\"vx-row\">\r\n                        <div class=\"vx-col hidden sm:hidden md:hidden lg:block lg:w-1/2 mx-auto self-center\">\r\n                            <img src=\"@/assets/images/pages/register.jpg\" alt=\"register\" class=\"mx-auto\">\r\n                        </div>\r\n                        <div class=\"vx-col sm:w-full md:w-full lg:w-1/2 mx-auto self-center  d-theme-dark-bg\">\r\n                            <div class=\"p-8\">\r\n                                <div class=\"vx-card__title\">\r\n                                    <h4 class=\"mb-4\">Create Account</h4>\r\n                                    <p>Fill the below form to create a new account.</p>\r\n                                </div>\r\n                                <div class=\"clearfix\">\r\n                                    <vs-input\r\n                                        v-validate=\"'required|min:3'\"\r\n                                        data-vv-validate-on=\"blur\"\r\n                                        label-placeholder=\"Full Name\"\r\n                                        name=\"name\"\r\n                                        placeholder=\"Full Name\"\r\n                                        v-model=\"name\"\r\n                                        class=\"w-full\" />\r\n                                    <span class=\"text-danger text-sm\">{{ errors.first('name') }}</span>\r\n\r\n                                    <vs-input\r\n                                        v-validate=\"'required|email'\"\r\n                                        data-vv-validate-on=\"blur\"\r\n                                        name=\"email\"\r\n                                        type=\"email\"\r\n                                        label-placeholder=\" Email\"\r\n                                        placeholder=\" Email\"\r\n                                        v-model=\"email\"\r\n                                        class=\"w-full mt-6\" />\r\n                                    <span class=\"text-danger text-sm\">{{ errors.first('email') }}</span>\r\n\r\n                                    <vs-input\r\n                                        v-validate=\"'required|min:3'\"\r\n                                        data-vv-validate-on=\"blur\"\r\n                                        name=\"phone\"\r\n                                        type=\"phone\"\r\n                                        label-placeholder=\" Phone\"\r\n                                        placeholder=\" Phone\"\r\n                                        v-model=\"phone\"\r\n                                        class=\"w-full mt-6\" />\r\n                                    <span class=\"text-danger text-sm\">{{ errors.first('phone') }}</span>\r\n\r\n                                    <vs-input\r\n                                        v-validate=\"'required|alpha_dash|min:3'\"\r\n                                        data-vv-validate-on=\"blur\"\r\n                                        name=\"country\"\r\n                                        label-placeholder=\"Country\"\r\n                                        placeholder=\"Country\"\r\n                                        v-model=\"country\"\r\n                                        class=\"w-full mt-6\" />\r\n                                    <span class=\"text-danger text-sm\">{{ errors.first('country') }}</span>\r\n                                    <vs-row vs-w=\"12\">\r\n                                        <vs-col vs-type=\"flex\"  vs-align=\"left\" vs-w=\"6\">\r\n                                            <vs-input\r\n                                                    v-validate=\"'required|min:3'\"\r\n                                                    data-vv-validate-on=\"blur\"\r\n                                                    name=\"state\"\r\n                                                    label-placeholder=\"state\"\r\n                                                    placeholder=\"State\"\r\n                                                    v-model=\"state\"\r\n                                                    class=\"mt-6\" />\r\n                                        </vs-col>\r\n                                        <vs-col vs-type=\"flex\"  vs-align=\"right\" vs-w=\"6\">\r\n                                            <vs-input\r\n                                                    v-validate=\"'required|min:3'\"\r\n                                                    data-vv-validate-on=\"blur\"\r\n                                                    name=\"street\"\r\n                                                    label-placeholder=\"state\"\r\n                                                    placeholder=\"Street\"\r\n                                                    v-model=\"street\"\r\n                                                    class=\"mt-6  \" />\r\n                                        </vs-col>\r\n                                    </vs-row>\r\n                                    <vs-input\r\n                                        ref=\"password\"\r\n                                        type=\"password\"\r\n                                        data-vv-validate-on=\"blur\"\r\n                                        v-validate=\"'required|min:6'\"\r\n                                        name=\"password\"\r\n                                        label-placeholder=\"Password\"\r\n                                        placeholder=\"Password\"\r\n                                        v-model=\"password\"\r\n                                        class=\"w-full mt-6\" />\r\n                                    <span class=\"text-danger text-sm\">{{ errors.first('password') }}</span>\r\n\r\n                                    <vs-input\r\n                                        type=\"password\"\r\n                                        v-validate=\"'min:6|confirmed:password'\"\r\n                                        data-vv-validate-on=\"blur\"\r\n                                        data-vv-as=\"password\"\r\n                                        name=\"confirm_password\"\r\n                                        label-placeholder=\"Confirm Password\"\r\n                                        placeholder=\"Confirm Password\"\r\n                                        v-model=\"confirm_password\"\r\n                                        class=\"w-full mt-6\" />\r\n                                    <span class=\"text-danger text-sm\">{{ errors.first('confirm_password') }}</span>\r\n\r\n\r\n                                    <vs-checkbox v-model=\"isTermsConditionAccepted\" class=\"mt-6\">I accept the terms & conditions.</vs-checkbox>\r\n                                    <vs-button  type=\"border\" @click=\"login\" class=\"mt-6\">Login</vs-button>\r\n                                    <vs-button class=\"float-right mt-6 vs-con-loading__container\" ref=\"loadableButton\" id=\"button-with-loading\"  type=\"relief\" @click=\"registerUser()\" :disabled=\"!validateForm\">Register</vs-button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </vx-card>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport {mapActions, mapGetters, mapState} from 'vuex'\r\nexport default {\r\n    data() {\r\n        return {\r\n            name: 'Account Name',\r\n            email: 'name@churcha2x.com',\r\n            phone: '08123456788',\r\n            country: 'Account Location/Country',\r\n            state: 'State',\r\n            street: 'address/home',\r\n            password: '12345',\r\n            confirm_password: '',\r\n            isTermsConditionAccepted: true,\r\n            backgroundLoading:'primary',\r\n            colorLoading:'#fff',\r\n        }\r\n    },\r\n    computed: {\r\n        validateForm() {\r\n            return !this.errors.any() && this.name != '' && this.email != '' && this.password != '' && this.confirmpassword != '' && this.isTermsConditionAccepted === true;\r\n        },\r\n        ...mapState(['auth/isUserLoggedIn','msg','reg_status', 'status']),\r\n        ...mapActions( ['auth/registerAttempt'] ),\r\n    },\r\n    methods: {\r\n\r\n\r\n\r\n        registerUser() {\r\n        //    if (!this.validateForm) return false\r\n            //The button loader starts showing\r\n            this.startLoading();\r\n            if(this.isUserLoggedIn) {\r\n              this.notifyAlreadyLogedIn();\r\n              return\r\n            }\r\n            /** the userdetails, notify object and loading objeect is passed as a parameter object down to moduleAuthActions **/\r\n            const payload =\r\n                {\r\n                userDetails:{   name: this.name,\r\n                email: this.email,\r\n                phone: this.phone,\r\n                founder: this.founder,\r\n                password: this.password,\r\n                country: this.country,\r\n                state: this.state,\r\n                street: this.street\r\n            },\r\n                 notify: this.$vs.notify,\r\n                stopLoading: this.$vs.loading\r\n                }\r\n\r\n            /** create data on server by sending payload as parameter**/\r\n            this.$store.dispatch('auth/registerAttempt', payload);\r\n\r\n\r\n\r\n            // // update user profile. In this case add username\r\n            // const username = this.username;\r\n            // const loginPayload = {\r\n            //     userDetails: {\r\n            //         email: this.email,\r\n            //         password: this.password\r\n            //     },\r\n            //     notify: this.$vs.notify\r\n            // }\r\n            // const store = this.$store;\r\n            // firebase.auth().onAuthStateChanged(function(user) {\r\n            //     if (user) {\r\n            //         user.updateProfile({\r\n            //             displayName: username,\r\n            //         }).then(function() {\r\n            //             // Profile updated successfully!\r\n            //             // Login user\r\n            //             store.dispatch('auth/login', loginPayload)\r\n            //         }, function(error) {\r\n            //             this.$vs.notify({\r\n            //                 title: 'Error',\r\n            //                 text: error.message,\r\n            //                 iconPack: 'feather',\r\n            //                 icon: 'icon-alert-circle',\r\n            //                 color: 'danger'\r\n            //             });\r\n            //         });\r\n            //\r\n            //     }\r\n            // });\r\n        },\r\n        notifyAlreadyLogedIn() {\r\n            this.$vs.notify({\r\n                title: 'Login Attempt',\r\n                text: 'You are already logged in!',\r\n                iconPack: 'feather',\r\n                icon: 'icon-alert-circle',\r\n                color: 'warning'\r\n            });\r\n        },\r\n        startLoading(){\r\n      return  this.$vs.loading({\r\n                background: this.backgroundLoading,\r\n                color: this.colorLoading,\r\n                container: \"#button-with-loading\",\r\n                scale: 0.45\r\n            }) },\r\n        stopLoading(){\r\n             return this.$vs.loading.close(\"#button-with-loading > .con-vs-loading\")\r\n            },\r\n        login(){\r\n            return this.$router.push('/login')\r\n        }\r\n        },\r\n\r\n}\r\n</script>\r\n"],"sourceRoot":"src/views/churcha2z/pages"}]}