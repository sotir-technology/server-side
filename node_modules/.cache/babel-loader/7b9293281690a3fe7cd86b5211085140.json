{"remainingRequest":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js!C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xampp\\htdocs\\GIT\\server-side\\src\\views\\churcha2z\\pages\\Register.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\src\\views\\churcha2z\\pages\\Register.vue","mtime":1567952265762},{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1567428497170},{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1567428476521},{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1567428497170},{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\vue-loader\\lib\\index.js","mtime":1567428708565}],"contextDependencies":[],"result":["import _objectSpread from \"C:\\\\xampp\\\\htdocs\\\\GIT\\\\server-side\\\\node_modules\\\\@babel\\\\runtime/helpers/builtin/es6/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapActions, mapGetters, mapState } from 'vuex';\nexport default {\n  data: function data() {\n    return {\n      church_name: '',\n      church_email: '',\n      church_phone: '',\n      founder: '',\n      country: '',\n      state: '',\n      street: '',\n      password: '',\n      confirm_password: '',\n      isTermsConditionAccepted: true,\n      backgroundLoading: 'primary',\n      colorLoading: '#fff'\n    };\n  },\n  computed: _objectSpread({\n    validateForm: function validateForm() {\n      return !this.errors.any() && this.church_name != '' && this.church_email != '' && this.password != '' && this.confirm_password != '' && this.isTermsConditionAccepted === true;\n    }\n  }, mapState(['msg', 'reg_status', 'status'])),\n  methods: _objectSpread({}, mapActions(['RegisterChurch']), {\n    registerUser: function registerUser() {\n      var _this = this;\n\n      //    if (!this.validateForm) return false\n      this.startLoading();\n\n      if (this.$store.state.auth.isUserLoggedIn()) {\n        this.notifyAlreadyLogedIn();\n        return;\n      }\n\n      var payload = {\n        name: this.church_name,\n        email: this.church_email,\n        phone: this.phone,\n        founder: this.founder,\n        password: this.password,\n        country: this.country,\n        state: this.state,\n        street: this.street // create church data on server\n\n      };\n      this.RegisterChurch(payload).then(function () {\n        //the registration was not successful\n        if (_this.reg_status === false) {\n          _this.$vs.notify({\n            title: _this.msg,\n            text: 'Something went wrong!',\n            iconPack: 'feather',\n            icon: 'icon-check',\n            color: 'warning'\n          });\n\n          return _this.stopLoading();\n        } //THe registration is successful\n\n\n        _this.$vs.notify({\n          title: _this.msg,\n          text: 'You are successfully registered!',\n          iconPack: 'feather',\n          icon: 'icon-check',\n          color: 'success'\n        });\n\n        _this.$route.push('/');\n\n        return _this.stopLoading();\n      }, function (error) {\n        _this.$vs.notify({\n          title: 'Error Here',\n          text: error.message,\n          iconPack: 'feather',\n          icon: 'icon-alert-circle',\n          color: 'danger'\n        });\n      }); // // update user profile. In this case add username\n      // const username = this.username;\n      // const loginPayload = {\n      //     userDetails: {\n      //         email: this.email,\n      //         password: this.password\n      //     },\n      //     notify: this.$vs.notify\n      // }\n      // const store = this.$store;\n      // firebase.auth().onAuthStateChanged(function(user) {\n      //     if (user) {\n      //         user.updateProfile({\n      //             displayName: username,\n      //         }).then(function() {\n      //             // Profile updated successfully!\n      //             // Login user\n      //             store.dispatch('auth/login', loginPayload)\n      //         }, function(error) {\n      //             this.$vs.notify({\n      //                 title: 'Error',\n      //                 text: error.message,\n      //                 iconPack: 'feather',\n      //                 icon: 'icon-alert-circle',\n      //                 color: 'danger'\n      //             });\n      //         });\n      //\n      //     }\n      // });\n    },\n    notifyAlreadyLogedIn: function notifyAlreadyLogedIn() {\n      this.$vs.notify({\n        title: 'Login Attempt',\n        text: 'You are already logged in!',\n        iconPack: 'feather',\n        icon: 'icon-alert-circle',\n        color: 'warning'\n      });\n    },\n    startLoading: function startLoading() {\n      return this.$vs.loading({\n        background: this.backgroundLoading,\n        color: this.colorLoading,\n        container: \"#button-with-loading\",\n        scale: 0.45\n      });\n    },\n    stopLoading: function stopLoading() {\n      return this.$vs.loading.close(\"#button-with-loading > .con-vs-loading\");\n    }\n  })\n};",{"version":3,"sources":["Register.vue"],"names":[],"mappings":"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","sourcesContent":["<!-- =========================================================================================\r\n    File Name: Register.vue\r\n    Description: Register Page\r\n    ----------------------------------------------------------------------------------------\r\n    Item Name: Vuesax Admin - VueJS Dashboard Admin Template\r\n      Author: Pixinvent\r\n    Author URL: http://www.themeforest.net/user/pixinvent\r\n========================================================================================== -->\r\n\r\n\r\n<template>\r\n    <div class=\"h-screen flex w-full bg-img\">\r\n        <div class=\"vx-col sm:w-1/2 md:w-1/2 lg:w-3/4 xl:w-3/5 mx-auto self-center\">\r\n            <vx-card>\r\n                <div slot=\"no-body\" class=\"full-page-bg-color\">\r\n                    <div class=\"vx-row\">\r\n                        <div class=\"vx-col hidden sm:hidden md:hidden lg:block lg:w-1/2 mx-auto self-center\">\r\n                            <img src=\"@/assets/images/pages/register.jpg\" alt=\"register\" class=\"mx-auto\">\r\n                        </div>\r\n                        <div class=\"vx-col sm:w-full md:w-full lg:w-1/2 mx-auto self-center  d-theme-dark-bg\">\r\n                            <div class=\"p-8\">\r\n                                <div class=\"vx-card__title\">\r\n                                    <h4 class=\"mb-4\">Create Account</h4>\r\n                                    <p>Fill the below form to create a new account.</p>\r\n                                </div>\r\n                                <div class=\"clearfix\">\r\n                                    <vs-input\r\n                                        v-validate=\"'required|min:3'\"\r\n                                        data-vv-validate-on=\"blur\"\r\n                                        label-placeholder=\"Church Name\"\r\n                                        name=\"church_name\"\r\n                                        placeholder=\"Church Name\"\r\n                                        v-model=\"church_name\"\r\n                                        class=\"w-full\" />\r\n                                    <span class=\"text-danger text-sm\">{{ errors.first('church_name') }}</span>\r\n\r\n                                    <vs-input\r\n                                        v-validate=\"'required|email'\"\r\n                                        data-vv-validate-on=\"blur\"\r\n                                        name=\"church_email\"\r\n                                        type=\"email\"\r\n                                        label-placeholder=\"Church Email\"\r\n                                        placeholder=\"Church Email\"\r\n                                        v-model=\"church_email\"\r\n                                        class=\"w-full mt-6\" />\r\n                                    <span class=\"text-danger text-sm\">{{ errors.first('church_email') }}</span>\r\n\r\n                                    <vs-input\r\n                                        v-validate=\"'required|min:3'\"\r\n                                        data-vv-validate-on=\"blur\"\r\n                                        name=\"phone\"\r\n                                        type=\"phone\"\r\n                                        label-placeholder=\"Church Phone\"\r\n                                        placeholder=\"Church Phone\"\r\n                                        v-model=\"church_phone\"\r\n                                        class=\"w-full mt-6\" />\r\n                                    <span class=\"text-danger text-sm\">{{ errors.first('church_phone') }}</span>\r\n\r\n                                    <vs-input\r\n                                        v-validate=\"'required|min:3'\"\r\n                                        data-vv-validate-on=\"blur\"\r\n                                        name=\"founder\"\r\n                                        label-placeholder=\"Founder\"\r\n                                        placeholder=\"Founder\"\r\n                                        v-model=\"founder\"\r\n                                        class=\"w-full mt-6\" />\r\n                                    <span class=\"text-danger text-sm\">{{ errors.first('founder') }}</span>\r\n\r\n                                    <vs-input\r\n                                        v-validate=\"'required|alpha_dash|min:3'\"\r\n                                        data-vv-validate-on=\"blur\"\r\n                                        name=\"country\"\r\n                                        label-placeholder=\"Country\"\r\n                                        placeholder=\"Country\"\r\n                                        v-model=\"country\"\r\n                                        class=\"w-full mt-6\" />\r\n                                    <span class=\"text-danger text-sm\">{{ errors.first('country') }}</span>\r\n                                    <vs-row vs-w=\"12\">\r\n                                        <vs-col vs-type=\"flex\"  vs-align=\"left\" vs-w=\"6\">\r\n                                            <vs-input\r\n                                                    v-validate=\"'required|min:3'\"\r\n                                                    data-vv-validate-on=\"blur\"\r\n                                                    name=\"state\"\r\n                                                    label-placeholder=\"state\"\r\n                                                    placeholder=\"State\"\r\n                                                    v-model=\"state\"\r\n                                                    class=\"mt-6\" />\r\n                                        </vs-col>\r\n                                        <vs-col vs-type=\"flex\"  vs-align=\"right\" vs-w=\"6\">\r\n                                            <vs-input\r\n                                                    v-validate=\"'required|min:3'\"\r\n                                                    data-vv-validate-on=\"blur\"\r\n                                                    name=\"street\"\r\n                                                    label-placeholder=\"state\"\r\n                                                    placeholder=\"Street\"\r\n                                                    v-model=\"street\"\r\n                                                    class=\"mt-6  \" />\r\n                                        </vs-col>\r\n                                    </vs-row>\r\n                                    <vs-input\r\n                                        ref=\"password\"\r\n                                        type=\"password\"\r\n                                        data-vv-validate-on=\"blur\"\r\n                                        v-validate=\"'required|min:6'\"\r\n                                        name=\"password\"\r\n                                        label-placeholder=\"Password\"\r\n                                        placeholder=\"Password\"\r\n                                        v-model=\"password\"\r\n                                        class=\"w-full mt-6\" />\r\n                                    <span class=\"text-danger text-sm\">{{ errors.first('password') }}</span>\r\n\r\n                                    <vs-input\r\n                                        type=\"password\"\r\n                                        v-validate=\"'min:6|confirmed:password'\"\r\n                                        data-vv-validate-on=\"blur\"\r\n                                        data-vv-as=\"password\"\r\n                                        name=\"confirm_password\"\r\n                                        label-placeholder=\"Confirm Password\"\r\n                                        placeholder=\"Confirm Password\"\r\n                                        v-model=\"confirm_password\"\r\n                                        class=\"w-full mt-6\" />\r\n                                    <span class=\"text-danger text-sm\">{{ errors.first('confirm_password') }}</span>\r\n\r\n\r\n                                    <vs-checkbox v-model=\"isTermsConditionAccepted\" class=\"mt-6\">I accept the terms & conditions.</vs-checkbox>\r\n                                    <vs-button  type=\"border\" to=\"/church/login\" class=\"mt-6\">Login</vs-button>\r\n                                    <vs-button class=\"float-right mt-6 vs-con-loading__container\" ref=\"loadableButton\" id=\"button-with-loading\"  type=\"relief\" @click=\"registerUser\" :disabled=\"!validateForm\">Register</vs-button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </vx-card>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport {mapActions, mapGetters, mapState} from 'vuex'\r\nexport default {\r\n    data() {\r\n        return {\r\n            church_name: '',\r\n            church_email: '',\r\n            church_phone: '',\r\n            founder: '',\r\n            country: '',\r\n            state: '',\r\n            street: '',\r\n            password: '',\r\n            confirm_password: '',\r\n            isTermsConditionAccepted: true,\r\n            backgroundLoading:'primary',\r\n            colorLoading:'#fff',\r\n        }\r\n    },\r\n    computed: {\r\n        validateForm() {\r\n            return !this.errors.any() && this.church_name != '' && this.church_email != '' && this.password != '' && this.confirm_password != '' && this.isTermsConditionAccepted === true;\r\n        },\r\n        ...mapState(['msg','reg_status', 'status']),\r\n    },\r\n    methods: {\r\n        ...mapActions( ['RegisterChurch'] ),\r\n\r\n\r\n        registerUser() {\r\n        //    if (!this.validateForm) return false\r\n            this.startLoading();\r\n            if(this.$store.state.auth.isUserLoggedIn()) {\r\n              this.notifyAlreadyLogedIn();\r\n              return\r\n            }\r\n\r\n            const payload = {\r\n                name: this.church_name,\r\n                email: this.church_email,\r\n                phone: this.phone,\r\n                founder: this.founder,\r\n                password: this.password,\r\n                country: this.country,\r\n                state: this.state,\r\n                street: this.street\r\n            }\r\n            // create church data on server\r\n          this.RegisterChurch(payload)\r\n                .then(() => {\r\n                    //the registration was not successful\r\n                    if(this.reg_status === false){\r\n                        this.$vs.notify({\r\n                            title: this.msg,\r\n                            text: 'Something went wrong!',\r\n                            iconPack: 'feather',\r\n                            icon: 'icon-check',\r\n                            color: 'warning'\r\n                        });\r\n                    return this.stopLoading();\r\n                    }\r\n                    //THe registration is successful\r\n                    this.$vs.notify({\r\n                        title: this.msg,\r\n                        text: 'You are successfully registered!',\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-check',\r\n                        color: 'success'\r\n                    });\r\n                    this.$route.push('/');\r\n                    return this.stopLoading();\r\n                }, (error) => {\r\n                    this.$vs.notify({\r\n                        title: 'Error Here',\r\n                        text: error.message,\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-alert-circle',\r\n                        color: 'danger'\r\n                    });\r\n                })\r\n\r\n            // // update user profile. In this case add username\r\n            // const username = this.username;\r\n            // const loginPayload = {\r\n            //     userDetails: {\r\n            //         email: this.email,\r\n            //         password: this.password\r\n            //     },\r\n            //     notify: this.$vs.notify\r\n            // }\r\n            // const store = this.$store;\r\n            // firebase.auth().onAuthStateChanged(function(user) {\r\n            //     if (user) {\r\n            //         user.updateProfile({\r\n            //             displayName: username,\r\n            //         }).then(function() {\r\n            //             // Profile updated successfully!\r\n            //             // Login user\r\n            //             store.dispatch('auth/login', loginPayload)\r\n            //         }, function(error) {\r\n            //             this.$vs.notify({\r\n            //                 title: 'Error',\r\n            //                 text: error.message,\r\n            //                 iconPack: 'feather',\r\n            //                 icon: 'icon-alert-circle',\r\n            //                 color: 'danger'\r\n            //             });\r\n            //         });\r\n            //\r\n            //     }\r\n            // });\r\n        },\r\n        notifyAlreadyLogedIn() {\r\n            this.$vs.notify({\r\n                title: 'Login Attempt',\r\n                text: 'You are already logged in!',\r\n                iconPack: 'feather',\r\n                icon: 'icon-alert-circle',\r\n                color: 'warning'\r\n            });\r\n        },\r\n        startLoading(){\r\n      return  this.$vs.loading({\r\n                background: this.backgroundLoading,\r\n                color: this.colorLoading,\r\n                container: \"#button-with-loading\",\r\n                scale: 0.45\r\n            }) },\r\n        stopLoading(){\r\n             return this.$vs.loading.close(\"#button-with-loading > .con-vs-loading\")\r\n            }\r\n        },\r\n\r\n}\r\n</script>\r\n"],"sourceRoot":"src/views/churcha2z/pages"}]}