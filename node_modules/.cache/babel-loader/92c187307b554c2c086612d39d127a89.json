{"remainingRequest":"/Users/revelation/Downloads/vue-template/wc_admin/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/Users/revelation/Downloads/vue-template/wc_admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/revelation/Downloads/vue-template/wc_admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/revelation/Downloads/vue-template/wc_admin/src/views/forms/form-validation/FormValidationTypes.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/revelation/Downloads/vue-template/wc_admin/src/views/forms/form-validation/FormValidationTypes.vue","mtime":1557525828000},{"path":"/Users/revelation/Downloads/vue-template/wc_admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/revelation/Downloads/vue-template/wc_admin/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/revelation/Downloads/vue-template/wc_admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/revelation/Downloads/vue-template/wc_admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      required: \"\",\n      alpha: \"\",\n      alpha_dash: \"\",\n      alpha_num: \"\",\n      numeric: \"\",\n      alpha_spaces: \"\",\n      email: \"\",\n      url: \"\",\n      min: \"\",\n      max: \"\",\n      password: \"\",\n      confirm_password: \"\",\n      date_format: \"\",\n      between: \"\",\n      credit_card: \"\",\n      date_between: \"\",\n      digits: \"\",\n      select1: \"\",\n      options1: [{\n        text: \"One\",\n        value: 1\n      }, {\n        text: \"Two\",\n        value: 2\n      }, {\n        text: \"Three\",\n        value: 3\n      }, {\n        text: \"Four\",\n        value: 4\n      }, {\n        text: \"Five\",\n        value: 5\n      }],\n      max_value: \"\",\n      min_value: \"\",\n      regex: \"\"\n    };\n  },\n  methods: {\n    submitForm: function submitForm() {\n      this.$validator.validateAll().then(function (result) {\n        if (result) {\n          // if form have no errors\n          alert(\"form submitted!\");\n        } else {// form have errors\n        }\n      });\n    }\n  }\n};",{"version":3,"sources":["FormValidationTypes.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiUA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,QAAA,EAAA,EADA;AAEA,MAAA,KAAA,EAAA,EAFA;AAGA,MAAA,UAAA,EAAA,EAHA;AAIA,MAAA,SAAA,EAAA,EAJA;AAKA,MAAA,OAAA,EAAA,EALA;AAMA,MAAA,YAAA,EAAA,EANA;AAOA,MAAA,KAAA,EAAA,EAPA;AAQA,MAAA,GAAA,EAAA,EARA;AASA,MAAA,GAAA,EAAA,EATA;AAUA,MAAA,GAAA,EAAA,EAVA;AAWA,MAAA,QAAA,EAAA,EAXA;AAYA,MAAA,gBAAA,EAAA,EAZA;AAaA,MAAA,WAAA,EAAA,EAbA;AAcA,MAAA,OAAA,EAAA,EAdA;AAeA,MAAA,WAAA,EAAA,EAfA;AAgBA,MAAA,YAAA,EAAA,EAhBA;AAiBA,MAAA,MAAA,EAAA,EAjBA;AAkBA,MAAA,OAAA,EAAA,EAlBA;AAmBA,MAAA,QAAA,EAAA,CACA;AAAA,QAAA,IAAA,EAAA,KAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OADA,EAEA;AAAA,QAAA,IAAA,EAAA,KAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAFA,EAGA;AAAA,QAAA,IAAA,EAAA,OAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAHA,EAIA;AAAA,QAAA,IAAA,EAAA,MAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OAJA,EAKA;AAAA,QAAA,IAAA,EAAA,MAAA;AAAA,QAAA,KAAA,EAAA;AAAA,OALA,CAnBA;AA0BA,MAAA,SAAA,EAAA,EA1BA;AA2BA,MAAA,SAAA,EAAA,EA3BA;AA4BA,MAAA,KAAA,EAAA;AA5BA,KAAA;AA8BA,GAhCA;AAiCA,EAAA,OAAA,EAAA;AACA,IAAA,UADA,wBACA;AACA,WAAA,UAAA,CAAA,WAAA,GAAA,IAAA,CAAA,UAAA,MAAA,EAAA;AACA,YAAA,MAAA,EAAA;AACA;AACA,UAAA,KAAA,CAAA,iBAAA,CAAA;AACA,SAHA,MAGA,CACA;AACA;AACA,OAPA;AAQA;AAVA;AAjCA,CAAA","sourcesContent":["<!-- =========================================================================================\r\n    File Name: FormValidationTypes.vue\r\n    Description: Validation types\r\n    ----------------------------------------------------------------------------------------\r\n    Item Name: Vuesax Admin - VueJS Dashboard Admin Template\r\n      Author: Pixinvent\r\n    Author URL: http://www.themeforest.net/user/pixinvent\r\n========================================================================================== -->\r\n\r\n\r\n<template>\r\n    <vx-card title=\"Validation types\" code-toggler>\r\n\r\n        <p>VeeValidate comes with a bunch of validation rules out of the box and cover most validation needs</p>\r\n        <div class=\"mt-5\">\r\n            <form>\r\n                <div class=\"vx-row\">\r\n                    <div class=\"vx-col w-1/2\">\r\n                        <vs-input v-validate=\"'required'\" label=\"This field is required\" name=\"required\" v-model=\"required\" class=\"mt-5 w-full\" />\r\n                        <span class=\"text-danger text-sm\" v-show=\"errors.has('required')\">{{ errors.first('required') }}</span>\r\n                    </div>\r\n\r\n                    <div class=\"vx-col w-1/2\">\r\n                        <vs-input v-validate=\"'alpha'\" label=\"Only alphabetic characters\" name=\"alpha\" v-model=\"alpha\" class=\"mt-5 w-full\" />\r\n                        <span class=\"text-danger text-sm\" v-show=\"errors.has('alpha')\">{{ errors.first('alpha') }}</span>\r\n                    </div>\r\n\r\n                    <div class=\"vx-col w-1/2\">\r\n                        <vs-input v-validate=\"'alpha_dash'\" label=\"Only alphabetic characters, numbers, dashes or underscores\" name=\"alpha_dash\" v-model=\"alpha_dash\" class=\"mt-5 w-full\" />\r\n                        <span class=\"text-danger text-sm\" v-show=\"errors.has('alpha_dash')\">{{ errors.first('alpha_dash') }}</span>\r\n                    </div>\r\n\r\n                    <div class=\"vx-col w-1/2\">\r\n                        <vs-input v-validate=\"'alpha_num'\" label=\"May contain alphabetic characters or numbers\" name=\"alpha_num\" v-model=\"alpha_num\" class=\"mt-5 w-full\" />\r\n                        <span class=\"text-danger text-sm\" v-show=\"errors.has('alpha_num')\">{{ errors.first('alpha_num') }}</span>\r\n                    </div>\r\n\r\n                    <div class=\"vx-col w-1/2\">\r\n                        <vs-input v-validate=\"'numeric'\" label=\"Must only consist of numbers\" name=\"numeric\" v-model=\"numeric\" class=\"mt-5 w-full\" />\r\n                        <span class=\"text-danger text-sm\" v-show=\"errors.has('numeric')\">{{ errors.first('numeric') }}</span>\r\n                    </div>\r\n\r\n                    <div class=\"vx-col w-1/2\">\r\n                        <vs-input v-validate=\"'alpha_spaces'\" label=\"Only alphabetic characters or spaces\" name=\"alpha_spaces\" v-model=\"alpha_spaces\" class=\"mt-5 w-full\" />\r\n                        <span class=\"text-danger text-sm\" v-show=\"errors.has('alpha_spaces')\">{{ errors.first('alpha_spaces') }}</span>\r\n                    </div>\r\n\r\n                    <div class=\"vx-col w-1/2\">\r\n                        <vs-input v-validate=\"'email'\" label=\"Must be a valid email\" name=\"email\" v-model=\"email\" class=\"mt-5 w-full\" />\r\n                        <span class=\"text-danger text-sm\" v-show=\"errors.has('email')\">{{ errors.first('email') }}</span>\r\n                    </div>\r\n\r\n                    <div class=\"vx-col w-1/2\">\r\n                        <vs-input v-validate=\"'url:require_protocol'\" data-vv-as=\"field\" label=\"Must be a valid url\" name=\"url\" v-model=\"url\" class=\"mt-5 w-full\" />\r\n                        <span class=\"text-danger text-sm\" v-show=\"errors.has('url')\">{{ errors.first('url') }}</span>\r\n                    </div>\r\n\r\n                    <div class=\"vx-col w-1/2\">\r\n                        <vs-input v-validate=\"'min:3'\" label=\"Length should not be less than the specified length : 3\" name=\"min\" v-model=\"min\" class=\"mt-5 w-full\" />\r\n                        <span class=\"text-danger text-sm\" v-show=\"errors.has('min')\">{{ errors.first('min') }}</span>\r\n                    </div>\r\n\r\n                    <div class=\"vx-col w-1/2\">\r\n                        <vs-input v-validate=\"'max:6'\" label=\"Length may not exceed the specified length : 6\" name=\"max\" v-model=\"max\" class=\"mt-5 w-full\" />\r\n                        <span class=\"text-danger text-sm\" v-show=\"errors.has('max')\">{{ errors.first('max') }}</span>\r\n                    </div>\r\n\r\n                    <div class=\"vx-col w-1/2\">\r\n                        <vs-input type=\"password\" v-validate=\"'min:6|max:10'\" label=\"Password 1\" name=\"password\" v-model=\"password\" class=\"mt-5 w-full\" ref=\"password\" />\r\n                        <span class=\"text-danger text-sm\" v-show=\"errors.has('password')\">{{ errors.first('password') }}</span>\r\n                    </div>\r\n\r\n                    <div class=\"vx-col w-1/2\">\r\n                        <vs-input type=\"password\" v-validate=\"'min:6|max:10|confirmed:password'\" label=\"Confirm Password\" name=\"confirm_password\" v-model=\"confirm_password\" class=\"mt-5 w-full\" data-vv-as=\"password\" />\r\n                        <span class=\"text-danger text-sm\" v-show=\"errors.has('confirm_password')\">{{ errors.first('confirm_password') }}</span>\r\n                    </div>\r\n\r\n                    <div class=\"vx-col w-1/2\">\r\n                        <vs-input v-validate=\"'date_format:dd/MM/yyyy'\" label=\"Date Format: dd/MM/yyyy\" name=\"date_format\" v-model=\"date_format\" class=\"mt-5 w-full\" />\r\n                        <span class=\"text-danger text-sm\" v-show=\"errors.has('date_format')\">{{ errors.first('date_format') }}</span>\r\n                    </div>\r\n\r\n                    <div class=\"vx-col w-1/2\">\r\n                        <vs-input v-validate=\"'between:1,11'\" label=\"Numeric value between minimum value and a maximum value : 1 and 11\" name=\"between\" v-model=\"between\" class=\"mt-5 w-full\" />\r\n                        <span class=\"text-danger text-sm\" v-show=\"errors.has('between')\">{{ errors.first('between') }}</span>\r\n                    </div>\r\n\r\n                    <div class=\"vx-col w-1/2\">\r\n                        <vs-input v-validate=\"'credit_card'\" label=\"Valid credit card\" name=\"credit_card\" v-model=\"credit_card\" class=\"mt-5 w-full\" />\r\n                        <span class=\"text-danger text-sm\" v-show=\"errors.has('credit_card')\">{{ errors.first('credit_card') }}</span>\r\n                    </div>\r\n\r\n                    <div class=\"vx-col w-1/2\">\r\n                        <vs-input v-validate=\"'date_format:dd/MM/yyyy|date_between:10/09/2016,20/09/2016'\" label=\"Must be a valid date between the two dates specified : 10/09/2016 - 20/09/2016\" name=\"date_between\" v-model=\"date_between\" class=\"mt-5 w-full\" />\r\n                        <span class=\"text-danger text-sm\" v-show=\"errors.has('date_between')\">{{ errors.first('date_between') }}</span>\r\n                    </div>\r\n\r\n                    <div class=\"vx-col w-1/2\">\r\n                        <vs-input v-validate=\"'digits:3'\" label=\"Must be numeric and have the specified number of digits : 3\" name=\"digits\" v-model=\"digits\" class=\"mt-5 w-full\" />\r\n                        <span class=\"text-danger text-sm\" v-show=\"errors.has('digits')\">{{ errors.first('digits') }}</span>\r\n                    </div>\r\n\r\n                    <div class=\"vx-col w-1/2\">\r\n                        <vs-select  v-validate=\"'included:1,3'\" v-model=\"select1\" name=\"included\" label=\"Must have a value that is in the specified list : 1 or 3\" class=\"select-large mt-5 w-full\">\r\n                            <vs-select-item :key=\"index\" :value=\"item.value\" :text=\"item.text\" v-for=\"(item,index) in options1\" />\r\n                        </vs-select>\r\n                        <span class=\"text-danger text-sm\" v-show=\"errors.has('included')\">{{ errors.first('included') }}</span>\r\n                    </div>\r\n\r\n                    <div class=\"vx-col w-1/2\">\r\n                        <vs-input v-validate=\"'max_value:100'\" label=\"Numeric value and must not be greater than the specified value : 100\" name=\"max_value\" v-model=\"max_value\" class=\"mt-5 w-full\" />\r\n                        <span class=\"text-danger text-sm\" v-show=\"errors.has('max_value')\">{{ errors.first('max_value') }}</span>\r\n                    </div>\r\n\r\n                    <div class=\"vx-col w-1/2\">\r\n                        <vs-input v-validate=\"'min_value:10'\" label=\"Numeric value and must not be less than the specified value : 10\" name=\"min_value\" v-model=\"min_value\" class=\"mt-5 w-full\" />\r\n                        <span class=\"text-danger text-sm\" v-show=\"errors.has('min_value')\">{{ errors.first('min_value') }}</span>\r\n                    </div>\r\n\r\n                    <div class=\"vx-col w-full\">\r\n                        <vs-input v-validate=\"{regex: '^([0-9]+)$' }\" label=\"Must match the specified regular expression : ^([0-9]+)$ - numbers only\" name=\"regex\" v-model=\"regex\" class=\"mt-5 w-full\" />\r\n                        <span class=\"text-danger text-sm\" v-show=\"errors.has('regex')\">{{ errors.first('regex') }}</span>\r\n                    </div>\r\n\r\n\r\n\r\n                </div>\r\n                <vs-button type=\"filled\" @click.prevent=\"submitForm\" class=\"mt-5 block\">Submit</vs-button>\r\n            </form>\r\n        </div>\r\n\r\n        <template slot=\"codeContainer\">\r\n&lt;template&gt;\r\n  &lt;form&gt;\r\n    &lt;div class=&quot;vx-row&quot;&gt;\r\n\r\n      &lt;!-- required --&gt;\r\n      &lt;div class=&quot;vx-col w-1/2&quot;&gt;\r\n        &lt;vs-input size=&quot;large&quot; v-validate=&quot;'required'&quot; label=&quot;This field is required&quot; name=&quot;required&quot; v-model=&quot;required&quot; class=&quot;mt-5 w-full&quot; /&gt;\r\n        &lt;span class=&quot;text-danger text-sm&quot; v-show=&quot;errors.has('required')&quot;&gt;{{ \"\\{\\{ errors.first('required') \\}\\}\" }}&lt;/span&gt;\r\n      &lt;/div&gt;\r\n\r\n      &lt;!-- Only alphabetic characters --&gt;\r\n      &lt;div class=&quot;vx-col w-1/2&quot;&gt;\r\n        &lt;vs-input size=&quot;large&quot; v-validate=&quot;'alpha'&quot; label=&quot;Only alphabetic characters&quot; name=&quot;alpha&quot; v-model=&quot;alpha&quot; class=&quot;mt-5 w-full&quot; /&gt;\r\n        &lt;span class=&quot;text-danger text-sm&quot; v-show=&quot;errors.has('alpha')&quot;&gt;{{ \"\\{\\{ errors.first('alpha') \\}\\}\" }}&lt;/span&gt;\r\n      &lt;/div&gt;\r\n\r\n      &lt;!-- Only alphabetic characters, numbers, dashes or underscores --&gt;\r\n      &lt;div class=&quot;vx-col w-1/2&quot;&gt;\r\n        &lt;vs-input size=&quot;large&quot; v-validate=&quot;'alpha_dash'&quot; label=&quot;Only alphabetic characters, numbers, dashes or underscores&quot; name=&quot;alpha_dash&quot; v-model=&quot;alpha_dash&quot; class=&quot;mt-5 w-full&quot; /&gt;\r\n        &lt;span class=&quot;text-danger text-sm&quot; v-show=&quot;errors.has('alpha_dash')&quot;&gt;{{ \"\\{\\{ errors.first('alpha_dash') \\}\\}\" }}&lt;/span&gt;\r\n      &lt;/div&gt;\r\n\r\n      &lt;!-- May contain alphabetic characters or numbers --&gt;\r\n      &lt;div class=&quot;vx-col w-1/2&quot;&gt;\r\n        &lt;vs-input size=&quot;large&quot; v-validate=&quot;'alpha_num'&quot; label=&quot;May contain alphabetic characters or numbers&quot; name=&quot;alpha_num&quot; v-model=&quot;alpha_num&quot; class=&quot;mt-5 w-full&quot; /&gt;\r\n        &lt;span class=&quot;text-danger text-sm&quot; v-show=&quot;errors.has('alpha_num')&quot;&gt;{{ \"\\{\\{ errors.first('alpha_num') \\}\\}\" }}&lt;/span&gt;\r\n      &lt;/div&gt;\r\n\r\n      &lt;!-- Must only consist of numbers --&gt;\r\n      &lt;div class=&quot;vx-col w-1/2&quot;&gt;\r\n        &lt;vs-input size=&quot;large&quot; v-validate=&quot;'numeric'&quot; label=&quot;Must only consist of numbers&quot; name=&quot;numeric&quot; v-model=&quot;numeric&quot; class=&quot;mt-5 w-full&quot; /&gt;\r\n        &lt;span class=&quot;text-danger text-sm&quot; v-show=&quot;errors.has('numeric')&quot;&gt;{{ \"\\{\\{ errors.first('numeric') \\}\\}\" }}&lt;/span&gt;\r\n      &lt;/div&gt;\r\n\r\n      &lt;!-- Only alphabetic characters or spaces --&gt;\r\n      &lt;div class=&quot;vx-col w-1/2&quot;&gt;\r\n        &lt;vs-input size=&quot;large&quot; v-validate=&quot;'alpha_spaces'&quot; label=&quot;Only alphabetic characters or spaces&quot; name=&quot;alpha_spaces&quot; v-model=&quot;alpha_spaces&quot; class=&quot;mt-5 w-full&quot; /&gt;\r\n        &lt;span class=&quot;text-danger text-sm&quot; v-show=&quot;errors.has('alpha_spaces')&quot;&gt;{{ \"\\{\\{ errors.first('alpha_spaces') \\}\\}\" }}&lt;/span&gt;\r\n      &lt;/div&gt;\r\n\r\n      &lt;!-- Must be a valid email --&gt;\r\n      &lt;div class=&quot;vx-col w-1/2&quot;&gt;\r\n        &lt;vs-input size=&quot;large&quot; v-validate=&quot;'email'&quot; label=&quot;Must be a valid email&quot; name=&quot;email&quot; v-model=&quot;email&quot; class=&quot;mt-5 w-full&quot; /&gt;\r\n        &lt;span class=&quot;text-danger text-sm&quot; v-show=&quot;errors.has('email')&quot;&gt;{{ \"\\{\\{ errors.first('email') \\}\\}\" }}&lt;/span&gt;\r\n      &lt;/div&gt;\r\n\r\n      &lt;!-- Must be a valid url --&gt;\r\n      &lt;div class=&quot;vx-col w-1/2&quot;&gt;\r\n        &lt;vs-input size=&quot;large&quot; v-validate=&quot;'url:require_protocol'&quot; data-vv-as=&quot;field&quot; label=&quot;Must be a valid url&quot; name=&quot;url&quot; v-model=&quot;url&quot; class=&quot;mt-5 w-full&quot; /&gt;\r\n        &lt;span class=&quot;text-danger text-sm&quot; v-show=&quot;errors.has('url')&quot;&gt;{{ \"\\{\\{ errors.first('url') \\}\\}\" }}&lt;/span&gt;\r\n      &lt;/div&gt;\r\n\r\n      &lt;!-- Length should not be less than the specified length : 3 --&gt;\r\n      &lt;div class=&quot;vx-col w-1/2&quot;&gt;\r\n        &lt;vs-input size=&quot;large&quot; v-validate=&quot;'min:3'&quot; label=&quot;Length should not be less than the specified length : 3&quot; name=&quot;min&quot; v-model=&quot;min&quot; class=&quot;mt-5 w-full&quot; /&gt;\r\n        &lt;span class=&quot;text-danger text-sm&quot; v-show=&quot;errors.has('min')&quot;&gt;{{ \"\\{\\{ errors.first('min') \\}\\}\" }}&lt;/span&gt;\r\n      &lt;/div&gt;\r\n\r\n      &lt;!-- Length may not exceed the specified length : 6 --&gt;\r\n      &lt;div class=&quot;vx-col w-1/2&quot;&gt;\r\n        &lt;vs-input size=&quot;large&quot; v-validate=&quot;'max:6'&quot; label=&quot;Length may not exceed the specified length : 6&quot; name=&quot;max&quot; v-model=&quot;max&quot; class=&quot;mt-5 w-full&quot; /&gt;\r\n        &lt;span class=&quot;text-danger text-sm&quot; v-show=&quot;errors.has('max')&quot;&gt;{{ \"\\{\\{ errors.first('max') \\}\\}\" }}&lt;/span&gt;\r\n      &lt;/div&gt;\r\n\r\n      &lt;!-- Password 1 --&gt;\r\n      &lt;div class=&quot;vx-col w-1/2&quot;&gt;\r\n        &lt;vs-input type=&quot;password&quot; size=&quot;large&quot; v-validate=&quot;'min:6|max:10'&quot; label=&quot;Password 1&quot; name=&quot;password&quot; v-model=&quot;password&quot; class=&quot;mt-5 w-full&quot; /&gt;\r\n        &lt;span class=&quot;text-danger text-sm&quot; v-show=&quot;errors.has('password')&quot;&gt;{{ \"\\{\\{ errors.first('password') \\}\\}\" }}&lt;/span&gt;\r\n      &lt;/div&gt;\r\n\r\n      &lt;!-- Confirm Password --&gt;\r\n      &lt;div class=&quot;vx-col w-1/2&quot;&gt;\r\n        &lt;vs-input size=&quot;large&quot; v-validate=&quot;'min:6|max:10|confirmed:password'&quot; label=&quot;Confirm Password&quot; name=&quot;confirm_password&quot; v-model=&quot;confirm_password&quot; class=&quot;mt-5 w-full&quot; data-vv-as=&quot;password&quot; /&gt;\r\n        &lt;span class=&quot;text-danger text-sm&quot; v-show=&quot;errors.has('confirm_password')&quot;&gt;{{ \"\\{\\{ errors.first('confirm_password') \\}\\}\" }}&lt;/span&gt;\r\n      &lt;/div&gt;\r\n\r\n      &lt;!-- Date Format: dd/MM/yyyy --&gt;\r\n      &lt;div class=&quot;vx-col w-1/2&quot;&gt;\r\n        &lt;vs-input size=&quot;large&quot; v-validate=&quot;'date_format:dd/MM/yyyy'&quot; label=&quot;Date Format: dd/MM/yyyy&quot; name=&quot;date_format&quot; v-model=&quot;date_format&quot; class=&quot;mt-5 w-full&quot; /&gt;\r\n        &lt;span class=&quot;text-danger text-sm&quot; v-show=&quot;errors.has('date_format')&quot;&gt;{{ \"\\{\\{ errors.first('date_format') \\}\\}\" }}&lt;/span&gt;\r\n      &lt;/div&gt;\r\n\r\n      &lt;!-- Numeric value between minimum value and a maximum value : 1 and 11 --&gt;\r\n      &lt;div class=&quot;vx-col w-1/2&quot;&gt;\r\n        &lt;vs-input size=&quot;large&quot; v-validate=&quot;'between:1,11'&quot; label=&quot;Numeric value between minimum value and a maximum value : 1 and 11&quot; name=&quot;between&quot; v-model=&quot;between&quot; class=&quot;mt-5 w-full&quot; /&gt;\r\n        &lt;span class=&quot;text-danger text-sm&quot; v-show=&quot;errors.has('between')&quot;&gt;{{ \"\\{\\{ errors.first('between') \\}\\}\" }}&lt;/span&gt;\r\n      &lt;/div&gt;\r\n\r\n      &lt;!-- Valid credit card --&gt;\r\n      &lt;div class=&quot;vx-col w-1/2&quot;&gt;\r\n        &lt;vs-input size=&quot;large&quot; v-validate=&quot;'credit_card'&quot; label=&quot;Valid credit card&quot; name=&quot;credit_card&quot; v-model=&quot;credit_card&quot; class=&quot;mt-5 w-full&quot; /&gt;\r\n        &lt;span class=&quot;text-danger text-sm&quot; v-show=&quot;errors.has('credit_card')&quot;&gt;{{ \"\\{\\{ errors.first('credit_card') \\}\\}\" }}&lt;/span&gt;\r\n      &lt;/div&gt;\r\n\r\n      &lt;!-- Must be a valid date between the two dates specified : 10/09/2016 - 20/09/2016 --&gt;\r\n      &lt;div class=&quot;vx-col w-1/2&quot;&gt;\r\n        &lt;vs-input size=&quot;large&quot; v-validate=&quot;'date_format:dd/MM/yyyy|date_between:10/09/2016,20/09/2016'&quot; label=&quot;Must be a valid date between the two dates specified : 10/09/2016 - 20/09/2016&quot; name=&quot;date_between&quot; v-model=&quot;date_between&quot; class=&quot;mt-5 w-full&quot; /&gt;\r\n        &lt;span class=&quot;text-danger text-sm&quot; v-show=&quot;errors.has('date_between')&quot;&gt;{{ \"\\{\\{ errors.first('date_between') \\}\\}\" }}&lt;/span&gt;\r\n      &lt;/div&gt;\r\n\r\n      &lt;!-- Must be numeric and have the specified number of digits : 3 --&gt;\r\n      &lt;div class=&quot;vx-col w-1/2&quot;&gt;\r\n        &lt;vs-input size=&quot;large&quot; v-validate=&quot;'digits:3'&quot; label=&quot;Must be numeric and have the specified number of digits : 3&quot; name=&quot;digits&quot; v-model=&quot;digits&quot; class=&quot;mt-5 w-full&quot; /&gt;\r\n        &lt;span class=&quot;text-danger text-sm&quot; v-show=&quot;errors.has('digits')&quot;&gt;{{ \"\\{\\{ errors.first('digits') \\}\\}\" }}&lt;/span&gt;\r\n      &lt;/div&gt;\r\n\r\n      &lt;!-- Must have a value that is in the specified list : 1 or 3 --&gt;\r\n      &lt;div class=&quot;vx-col w-1/2&quot;&gt;\r\n        &lt;vs-select v-validate=&quot;'included:1,3'&quot; v-model=&quot;select1&quot; name=&quot;included&quot; label=&quot;Must have a value that is in the specified list : 1 or 3&quot; class=&quot;select-large mt-5 w-full&quot;&gt;\r\n          &lt;vs-select-item :key=&quot;index&quot; :value=&quot;item.value&quot; :text=&quot;item.text&quot; v-for=&quot;(item,index) in options1&quot; /&gt;\r\n        &lt;/vs-select&gt;\r\n        &lt;span class=&quot;text-danger text-sm&quot; v-show=&quot;errors.has('included')&quot;&gt;{{ \"\\{\\{ errors.first('included') \\}\\}\" }}&lt;/span&gt;\r\n      &lt;/div&gt;\r\n\r\n      &lt;!-- Numeric value and must not be greater than the specified value : 100 --&gt;\r\n      &lt;div class=&quot;vx-col w-1/2&quot;&gt;\r\n        &lt;vs-input size=&quot;large&quot; v-validate=&quot;'max_value:100'&quot; label=&quot;Numeric value and must not be greater than the specified value : 100&quot; name=&quot;max_value&quot; v-model=&quot;max_value&quot; class=&quot;mt-5 w-full&quot; /&gt;\r\n        &lt;span class=&quot;text-danger text-sm&quot; v-show=&quot;errors.has('max_value')&quot;&gt;{{ \"\\{\\{ errors.first('max_value') \\}\\}\" }}&lt;/span&gt;\r\n      &lt;/div&gt;\r\n\r\n      &lt;!-- Numeric value and must not be less than the specified value : 10 --&gt;\r\n      &lt;div class=&quot;vx-col w-1/2&quot;&gt;\r\n        &lt;vs-input size=&quot;large&quot; v-validate=&quot;'min_value:10'&quot; label=&quot;Numeric value and must not be less than the specified value : 10&quot; name=&quot;min_value&quot; v-model=&quot;min_value&quot; class=&quot;mt-5 w-full&quot; /&gt;\r\n        &lt;span class=&quot;text-danger text-sm&quot; v-show=&quot;errors.has('min_value')&quot;&gt;{{ \"\\{\\{ errors.first('min_value') \\}\\}\" }}&lt;/span&gt;\r\n      &lt;/div&gt;\r\n\r\n      &lt;!-- Must match the specified regular expression : ^([0-9]+)$ - numbers only --&gt;\r\n      &lt;div class=&quot;vx-col w-full&quot;&gt;\r\n        &lt;vs-input size=&quot;large&quot; v-validate=&quot;{regex: '^([0-9]+)$' }&quot; label=&quot;Must match the specified regular expression : ^([0-9]+)$ - numbers only&quot; name=&quot;regex&quot; v-model=&quot;regex&quot; class=&quot;mt-5 w-full&quot; /&gt;\r\n        &lt;span class=&quot;text-danger text-sm&quot; v-show=&quot;errors.has('regex')&quot;&gt;{{ \"\\{\\{ errors.first('regex') \\}\\}\" }}&lt;/span&gt;\r\n      &lt;/div&gt;\r\n    &lt;/div&gt;\r\n    &lt;vs-button type=&quot;filled&quot; @click.prevent=&quot;submitForm&quot; class=&quot;mt-5 block&quot;&gt;Submit&lt;/vs-button&gt;\r\n  &lt;/form&gt;\r\n&lt;/template&gt;\r\n\r\n&lt;script&gt;\r\nexport default {\r\n  data() {\r\n    return {\r\n      required: &quot;&quot;,\r\n      alpha: &quot;&quot;,\r\n      alpha_dash: &quot;&quot;,\r\n      alpha_num: &quot;&quot;,\r\n      numeric: &quot;&quot;,\r\n      alpha_spaces: &quot;&quot;,\r\n      email: &quot;&quot;,\r\n      url: &quot;&quot;,\r\n      min: &quot;&quot;,\r\n      max: &quot;&quot;,\r\n      password: &quot;&quot;,\r\n      confirm_password: &quot;&quot;,\r\n      date_format: &quot;&quot;,\r\n      between: &quot;&quot;,\r\n      credit_card: &quot;&quot;,\r\n      date_between: &quot;&quot;,\r\n      digits: &quot;&quot;,\r\n      select1: &quot;&quot;,\r\n      options1: [\r\n        { text: &quot;One&quot;, value: 1 },\r\n        { text: &quot;Two&quot;, value: 2 },\r\n        { text: &quot;Three&quot;, value: 3 },\r\n        { text: &quot;Four&quot;, value: 4 },\r\n        { text: &quot;Five&quot;, value: 5 },\r\n      ],\r\n      max_value: &quot;&quot;,\r\n      min_value: &quot;&quot;,\r\n      regex: &quot;&quot;,\r\n    }\r\n  },\r\n  methods: {\r\n    submitForm() {\r\n      this.$validator.validateAll().then(result =&gt; {\r\n        if (result) {\r\n          // if form have no errors\r\n          alert(&quot;form submitted!&quot;);\r\n        } else {\r\n          // form have errors\r\n        }\r\n      })\r\n    }\r\n  },\r\n}\r\n&lt;/script&gt;\r\n        </template>\r\n    </vx-card>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    data() {\r\n        return {\r\n            required: \"\",\r\n            alpha: \"\",\r\n            alpha_dash: \"\",\r\n            alpha_num: \"\",\r\n            numeric: \"\",\r\n            alpha_spaces: \"\",\r\n            email: \"\",\r\n            url: \"\",\r\n            min: \"\",\r\n            max: \"\",\r\n            password: \"\",\r\n            confirm_password: \"\",\r\n            date_format: \"\",\r\n            between: \"\",\r\n            credit_card: \"\",\r\n            date_between: \"\",\r\n            digits: \"\",\r\n            select1: \"\",\r\n            options1: [\r\n                {text: \"One\", value: 1},\r\n                {text: \"Two\", value: 2},\r\n                {text: \"Three\", value: 3},\r\n                {text: \"Four\", value: 4},\r\n                {text: \"Five\", value: 5},\r\n            ],\r\n            max_value: \"\",\r\n            min_value: \"\",\r\n            regex: \"\",\r\n        }\r\n    },\r\n    methods: {\r\n        submitForm() {\r\n            this.$validator.validateAll().then(result => {\r\n                if(result) {\r\n                    // if form have no errors\r\n                    alert(\"form submitted!\");\r\n                }else{\r\n                    // form have errors\r\n                }\r\n            })\r\n        }\r\n    },\r\n}\r\n</script>\r\n"],"sourceRoot":"src/views/forms/form-validation"}]}