{"remainingRequest":"/Users/revelation/VueJS/WnC_Apps/wc_admin/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/Users/revelation/VueJS/WnC_Apps/wc_admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/revelation/VueJS/WnC_Apps/wc_admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/revelation/VueJS/WnC_Apps/wc_admin/src/views/forms/form-elements/select/SelectApi.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/revelation/VueJS/WnC_Apps/wc_admin/src/views/forms/form-elements/select/SelectApi.vue","mtime":1557525828000},{"path":"/Users/revelation/VueJS/WnC_Apps/wc_admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/revelation/VueJS/WnC_Apps/wc_admin/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/revelation/VueJS/WnC_Apps/wc_admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/revelation/VueJS/WnC_Apps/wc_admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      api: [{\n        'name': 'options',\n        'type': 'Array',\n        'params': '{ \"text:\\'Example\\'\": null, \"value:\\'1\\'\": null }',\n        'desc': 'Options to select.',\n        'default': ''\n      }, {\n        'name': 'color',\n        'type': 'String',\n        'params': '',\n        'desc': 'Change the color of the button.',\n        'default': 'primary'\n      }, {\n        'name': 'autocomplete',\n        'type': 'Boolean',\n        'params': '',\n        'desc': 'Enables the use of autocomplete in the select.',\n        'default': 'false'\n      }, {\n        'name': 'multiple',\n        'type': 'Boolean',\n        'params': '',\n        'desc': 'Determines whether the selection is of multiple selection.',\n        'default': 'false'\n      }, {\n        'name': 'max-selected',\n        'type': 'Number',\n        'params': '',\n        'desc': 'Determine the number of maximum options to be able to select (only for active multiple).',\n        'default': 'All options'\n      }, {\n        'name': 'label',\n        'type': 'String',\n        'params': '',\n        'desc': 'Label for the input element.',\n        'default': ''\n      }, {\n        'name': 'success',\n        'type': 'Boolean',\n        'params': 'boolean bind',\n        'desc': 'Activate the status of success in the input.',\n        'default': 'false'\n      }, {\n        'name': 'danger',\n        'type': 'Boolean',\n        'params': 'boolean bind',\n        'desc': 'Activate the status of danger in the input.',\n        'default': 'false'\n      }, {\n        'name': 'warning',\n        'type': 'Boolean',\n        'params': 'boolean bind',\n        'desc': 'Activate the status of warning in the input.',\n        'default': 'false'\n      }, {\n        'name': 'description-text',\n        'type': 'String',\n        'params': '',\n        'desc': 'Add a description text to the input.',\n        'default': 'false'\n      }, {\n        'name': 'danger-text',\n        'type': 'String',\n        'params': '',\n        'desc': 'Text to show when the item is invalid.',\n        'default': ''\n      }, {\n        'name': 'success-text',\n        'type': 'String',\n        'params': '',\n        'desc': 'Text to show when the item is valid.',\n        'default': ''\n      }, {\n        'name': 'warning-text',\n        'type': 'String',\n        'params': '',\n        'desc': 'Text that is displayed in the warning state.',\n        'default': ''\n      }, {\n        'name': 'is-selected.sync',\n        'type': 'Boolean sync',\n        'params': '',\n        'desc': 'Determines if the option is selected.',\n        'default': ''\n      }, {\n        'name': 'input-changed',\n        'type': 'Event',\n        'params': 'event (optional)',\n        'desc': 'Triggers method when input of select is changed (requires autocomplete prop)',\n        'default': ''\n      }, {\n        'name': 'icon',\n        'type': 'String',\n        'params': 'icon name',\n        'desc': 'Element icon.',\n        'default': 'keyboard_arrow_down'\n      }, {\n        'name': 'icon-pack',\n        'type': 'String',\n        'params': 'Icon Pack Class Name',\n        'desc': 'Icon Pack to be used. If not set, icon will default to Material Icons. ex. FA4 uses fa or fas, FA5 uses fas, far, or fal.',\n        'default': 'material-icons'\n      }]\n    };\n  }\n};",{"version":3,"sources":["SelectApi.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsDA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,GAAA,EAAA,CACA;AACA,gBAAA,SADA;AAEA,gBAAA,OAFA;AAGA,kBAAA,mDAHA;AAIA,gBAAA,oBAJA;AAKA,mBAAA;AALA,OADA,EAQA;AACA,gBAAA,OADA;AAEA,gBAAA,QAFA;AAGA,kBAAA,EAHA;AAIA,gBAAA,iCAJA;AAKA,mBAAA;AALA,OARA,EAeA;AACA,gBAAA,cADA;AAEA,gBAAA,SAFA;AAGA,kBAAA,EAHA;AAIA,gBAAA,gDAJA;AAKA,mBAAA;AALA,OAfA,EAsBA;AACA,gBAAA,UADA;AAEA,gBAAA,SAFA;AAGA,kBAAA,EAHA;AAIA,gBAAA,4DAJA;AAKA,mBAAA;AALA,OAtBA,EA6BA;AACA,gBAAA,cADA;AAEA,gBAAA,QAFA;AAGA,kBAAA,EAHA;AAIA,gBAAA,0FAJA;AAKA,mBAAA;AALA,OA7BA,EAoCA;AACA,gBAAA,OADA;AAEA,gBAAA,QAFA;AAGA,kBAAA,EAHA;AAIA,gBAAA,8BAJA;AAKA,mBAAA;AALA,OApCA,EA2CA;AACA,gBAAA,SADA;AAEA,gBAAA,SAFA;AAGA,kBAAA,cAHA;AAIA,gBAAA,8CAJA;AAKA,mBAAA;AALA,OA3CA,EAkDA;AACA,gBAAA,QADA;AAEA,gBAAA,SAFA;AAGA,kBAAA,cAHA;AAIA,gBAAA,6CAJA;AAKA,mBAAA;AALA,OAlDA,EAyDA;AACA,gBAAA,SADA;AAEA,gBAAA,SAFA;AAGA,kBAAA,cAHA;AAIA,gBAAA,8CAJA;AAKA,mBAAA;AALA,OAzDA,EAgEA;AACA,gBAAA,kBADA;AAEA,gBAAA,QAFA;AAGA,kBAAA,EAHA;AAIA,gBAAA,sCAJA;AAKA,mBAAA;AALA,OAhEA,EAuEA;AACA,gBAAA,aADA;AAEA,gBAAA,QAFA;AAGA,kBAAA,EAHA;AAIA,gBAAA,wCAJA;AAKA,mBAAA;AALA,OAvEA,EA8EA;AACA,gBAAA,cADA;AAEA,gBAAA,QAFA;AAGA,kBAAA,EAHA;AAIA,gBAAA,sCAJA;AAKA,mBAAA;AALA,OA9EA,EAqFA;AACA,gBAAA,cADA;AAEA,gBAAA,QAFA;AAGA,kBAAA,EAHA;AAIA,gBAAA,8CAJA;AAKA,mBAAA;AALA,OArFA,EA4FA;AACA,gBAAA,kBADA;AAEA,gBAAA,cAFA;AAGA,kBAAA,EAHA;AAIA,gBAAA,uCAJA;AAKA,mBAAA;AALA,OA5FA,EAmGA;AACA,gBAAA,eADA;AAEA,gBAAA,OAFA;AAGA,kBAAA,kBAHA;AAIA,gBAAA,8EAJA;AAKA,mBAAA;AALA,OAnGA,EA0GA;AACA,gBAAA,MADA;AAEA,gBAAA,QAFA;AAGA,kBAAA,WAHA;AAIA,gBAAA,eAJA;AAKA,mBAAA;AALA,OA1GA,EAiHA;AACA,gBAAA,WADA;AAEA,gBAAA,QAFA;AAGA,kBAAA,sBAHA;AAIA,gBAAA,2HAJA;AAKA,mBAAA;AALA,OAjHA;AADA,KAAA;AA2HA;AA7HA,CAAA","sourcesContent":["<!-- =========================================================================================\r\n    File Name: SelectApi.vue\r\n    Description: API of select component\r\n    ----------------------------------------------------------------------------------------\r\n    Item Name: Vuesax Admin - VueJS Dashboard Admin Template\r\n      Author: Pixinvent\r\n    Author URL: http://www.themeforest.net/user/pixinvent\r\n========================================================================================== -->\r\n\r\n\r\n<template>\r\n    <vx-card title=\"API\">\r\n\r\n        <vs-table stripe :data=\"api\">\r\n\r\n            <template slot=\"thead\">\r\n                <vs-th>Name</vs-th>\r\n                <vs-th>Type</vs-th>\r\n                <vs-th>Parametres</vs-th>\r\n                <vs-th>Description</vs-th>\r\n                <vs-th>Default</vs-th>\r\n            </template>\r\n\r\n            <template slot-scope=\"{data}\">\r\n                <vs-tr :key=\"indextr\" v-for=\"(tr, indextr) in data\">\r\n\r\n                    <vs-td>\r\n                        {{data[indextr].name}}\r\n                    </vs-td>\r\n\r\n                    <vs-td>\r\n                        {{data[indextr].type}}\r\n                    </vs-td>\r\n\r\n                    <vs-td>\r\n                        {{data[indextr].params}}\r\n                    </vs-td>\r\n\r\n                    <vs-td>\r\n                        {{data[indextr].desc}}\r\n                    </vs-td>\r\n\r\n                    <vs-td>\r\n                        {{data[indextr].default}}\r\n                    </vs-td>\r\n\r\n                </vs-tr>\r\n            </template>\r\n        </vs-table>\r\n\r\n    </vx-card>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    data() {\r\n        return {\r\n            api: [\r\n                {\r\n                    'name': 'options',\r\n                    'type': 'Array',\r\n                    'params': '{ \"text:\\'Example\\'\": null, \"value:\\'1\\'\": null }',\r\n                    'desc': 'Options to select.',\r\n                    'default': '',\r\n                },\r\n                {\r\n                    'name': 'color',\r\n                    'type': 'String',\r\n                    'params': '',\r\n                    'desc': 'Change the color of the button.',\r\n                    'default': 'primary',\r\n                },\r\n                {\r\n                    'name': 'autocomplete',\r\n                    'type': 'Boolean',\r\n                    'params': '',\r\n                    'desc': 'Enables the use of autocomplete in the select.',\r\n                    'default': 'false',\r\n                },\r\n                {\r\n                    'name': 'multiple',\r\n                    'type': 'Boolean',\r\n                    'params': '',\r\n                    'desc': 'Determines whether the selection is of multiple selection.',\r\n                    'default': 'false',\r\n                },\r\n                {\r\n                    'name': 'max-selected',\r\n                    'type': 'Number',\r\n                    'params': '',\r\n                    'desc': 'Determine the number of maximum options to be able to select (only for active multiple).',\r\n                    'default': 'All options',\r\n                },\r\n                {\r\n                    'name': 'label',\r\n                    'type': 'String',\r\n                    'params': '',\r\n                    'desc': 'Label for the input element.',\r\n                    'default': '',\r\n                },\r\n                {\r\n                    'name': 'success',\r\n                    'type': 'Boolean',\r\n                    'params': 'boolean bind',\r\n                    'desc': 'Activate the status of success in the input.',\r\n                    'default': 'false',\r\n                },\r\n                {\r\n                    'name': 'danger',\r\n                    'type': 'Boolean',\r\n                    'params': 'boolean bind',\r\n                    'desc': 'Activate the status of danger in the input.',\r\n                    'default': 'false',\r\n                },\r\n                {\r\n                    'name': 'warning',\r\n                    'type': 'Boolean',\r\n                    'params': 'boolean bind',\r\n                    'desc': 'Activate the status of warning in the input.',\r\n                    'default': 'false',\r\n                },\r\n                {\r\n                    'name': 'description-text',\r\n                    'type': 'String',\r\n                    'params': '',\r\n                    'desc': 'Add a description text to the input.',\r\n                    'default': 'false',\r\n                },\r\n                {\r\n                    'name': 'danger-text',\r\n                    'type': 'String',\r\n                    'params': '',\r\n                    'desc': 'Text to show when the item is invalid.',\r\n                    'default': '',\r\n                },\r\n                {\r\n                    'name': 'success-text',\r\n                    'type': 'String',\r\n                    'params': '',\r\n                    'desc': 'Text to show when the item is valid.',\r\n                    'default': '',\r\n                },\r\n                {\r\n                    'name': 'warning-text',\r\n                    'type': 'String',\r\n                    'params': '',\r\n                    'desc': 'Text that is displayed in the warning state.',\r\n                    'default': '',\r\n                },\r\n                {\r\n                    'name': 'is-selected.sync',\r\n                    'type': 'Boolean sync',\r\n                    'params': '',\r\n                    'desc': 'Determines if the option is selected.',\r\n                    'default': '',\r\n                },\r\n                {\r\n                    'name': 'input-changed',\r\n                    'type': 'Event',\r\n                    'params': 'event (optional)',\r\n                    'desc': 'Triggers method when input of select is changed (requires autocomplete prop)',\r\n                    'default': '',\r\n                },\r\n                {\r\n                    'name': 'icon',\r\n                    'type': 'String',\r\n                    'params': 'icon name',\r\n                    'desc': 'Element icon.',\r\n                    'default': 'keyboard_arrow_down',\r\n                },\r\n                {\r\n                    'name': 'icon-pack',\r\n                    'type': 'String',\r\n                    'params': 'Icon Pack Class Name',\r\n                    'desc': 'Icon Pack to be used. If not set, icon will default to Material Icons. ex. FA4 uses fa or fas, FA5 uses fas, far, or fal.',\r\n                    'default': 'material-icons',\r\n                },\r\n            ]\r\n        }\r\n    },\r\n}\r\n</script>"],"sourceRoot":"src/views/forms/form-elements/select"}]}