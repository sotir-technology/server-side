{"remainingRequest":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js!C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xampp\\htdocs\\GIT\\server-side\\src\\views\\churcha2z\\apps\\todo\\TodoEdit.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\src\\views\\churcha2z\\apps\\todo\\TodoEdit.vue","mtime":1567523036866},{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1567428497170},{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1567428476521},{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1567428497170},{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\vue-loader\\lib\\index.js","mtime":1567428708565}],"contextDependencies":[],"result":["import \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  props: {\n    displayPrompt: {\n      type: Boolean,\n      required: true\n    },\n    todoItemId: {\n      type: Number,\n      required: true\n    }\n  },\n  data: function data() {\n    return {\n      titleLocal: this.$store.state.todo.todoArray[this.todoItemId].title,\n      descLocal: this.$store.state.todo.todoArray[this.todoItemId].desc,\n      isDoneLocal: this.$store.state.todo.todoArray[this.todoItemId].isDone,\n      isImportantLocal: this.$store.state.todo.todoArray[this.todoItemId].isImportant,\n      isStarredLocal: this.$store.state.todo.todoArray[this.todoItemId].isStarred,\n      tagsLocal: this.$store.state.todo.todoArray[this.todoItemId].tags\n    };\n  },\n  computed: {\n    activePrompt: {\n      get: function get() {\n        return this.displayPrompt;\n      },\n      set: function set(value) {\n        this.$emit('hideDisplayPrompt', value);\n      }\n    },\n    todoTags: function todoTags() {\n      return this.$store.state.todo.todoTags;\n    },\n    validateForm: function validateForm() {\n      return !this.errors.any() && this.titleLocal != '';\n    },\n    isTrashed: {\n      get: function get() {\n        return this.$store.state.todo.todoArray[this.todoItemId].isTrashed;\n      },\n      set: function set(value) {\n        this.$store.dispatch('todo/moveToTrash', {\n          id: this.todoItemId,\n          value: value\n        });\n      }\n    }\n  },\n  methods: {\n    toggleIsImportant: function toggleIsImportant() {\n      this.isImportantLocal = !this.isImportantLocal;\n    },\n    toggleIsStarred: function toggleIsStarred() {\n      this.isStarredLocal = !this.isStarredLocal;\n    },\n    removeTodo: function removeTodo() {\n      this.isTrashed = true;\n    },\n    init: function init() {\n      this.titleLocal = this.$store.state.todo.todoArray[this.todoItemId].title;\n      this.descLocal = this.$store.state.todo.todoArray[this.todoItemId].desc;\n      this.isDoneLocal = this.$store.state.todo.todoArray[this.todoItemId].isDone;\n      this.isImportantLocal = this.$store.state.todo.todoArray[this.todoItemId].isImportant;\n      this.isStarredLocal = this.$store.state.todo.todoArray[this.todoItemId].isStarred;\n      this.tagsLocal = this.$store.state.todo.todoArray[this.todoItemId].tags;\n    },\n    submitTodo: function submitTodo() {\n      this.$store.dispatch('todo/setTodoTitle', {\n        id: this.todoItemId,\n        title: this.titleLocal\n      });\n      this.$store.dispatch('todo/setTodoDesc', {\n        id: this.todoItemId,\n        desc: this.descLocal\n      });\n      this.$store.dispatch('todo/toggleIsImportant', {\n        id: this.todoItemId,\n        value: this.isImportantLocal\n      });\n      this.$store.dispatch('todo/toggleIsStarred', {\n        id: this.todoItemId,\n        value: this.isStarredLocal\n      });\n      this.$store.dispatch('todo/updateTags', {\n        id: this.todoItemId,\n        newTags: this.tagsLocal\n      });\n      this.$store.dispatch('todo/toggleIsDone', {\n        id: this.todoItemId,\n        value: this.isDoneLocal\n      });\n    }\n  }\n};",{"version":3,"sources":["TodoEdit.vue"],"names":[],"mappings":"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","sourcesContent":["<!-- =========================================================================================\r\n    File Name: TodoEdit.vue\r\n    Description: Edit todo component\r\n    ----------------------------------------------------------------------------------------\r\n    Item Name: Vuesax Admin - VueJS Dashboard Admin Template\r\n      Author: Pixinvent\r\n    Author URL: http://www.themeforest.net/user/pixinvent\r\n========================================================================================== -->\r\n\r\n\r\n<template>\r\n    <vs-prompt\r\n        vs-title=\"Edit Task\"\r\n        vs-accept-text= \"Submit\"\r\n        vs-cancel-text = \"Remove\"\r\n        vs-button-cancel = \"border\"\r\n        @vs-cancel=\"removeTodo\"\r\n        @vs-accept=\"submitTodo\"\r\n        @vs-close=\"init\"\r\n        :vs-is-valid=\"validateForm\"\r\n        :vs-active.sync=\"activePrompt\">\r\n        <div>\r\n            <form>\r\n                <div class=\"vx-row\">\r\n                    <div class=\"vx-col w-1/6 self-center\">\r\n                        <vs-checkbox v-model=\"isDoneLocal\" class=\"w-8\"></vs-checkbox>\r\n                    </div>\r\n\r\n                    <div class=\"vx-col ml-auto flex\">\r\n                        <feather-icon icon=\"InfoIcon\" class=\"cursor-pointer\" :svgClasses=\"[{'text-success stroke-current': isImportantLocal}, 'w-5', 'h-5 mr-4']\" @click.prevent=\"toggleIsImportant\"></feather-icon>\r\n\r\n                        <feather-icon icon=\"StarIcon\" class=\"cursor-pointer\" :svgClasses=\"[{'text-warning stroke-current': isStarredLocal}, 'w-5', 'h-5 mr-4']\" @click.prevent=\"toggleIsStarred\"></feather-icon>\r\n\r\n                        <vs-dropdown vs-custom-content>\r\n\r\n                            <feather-icon icon=\"TagIcon\" svgClasses=\"h-5 w-5\" @click.prevent></feather-icon>\r\n\r\n                            <vs-dropdown-menu style=\"z-index: 200001\">\r\n                                    <vs-dropdown-item v-for=\"(tag, index) in todoTags\" :key=\"index\">\r\n                                        <vs-checkbox @click.stop :vs-value=\"tag.value\" v-model=\"tagsLocal\">{{ tag.text }}</vs-checkbox>\r\n                                    </vs-dropdown-item>\r\n                            </vs-dropdown-menu>\r\n                        </vs-dropdown>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"vx-row\">\r\n                    <div class=\"vx-col w-full\">\r\n                        <vs-input v-validate=\"'required'\" name=\"title\" class=\"w-full mb-4 mt-5\" placeholder=\"Title\" v-model=\"titleLocal\" />\r\n                        <vs-textarea rows=\"5\" label=\"Add description\" v-model=\"descLocal\" />\r\n                    </div>  \r\n                </div>\r\n\r\n            </form>\r\n        </div>\r\n    </vs-prompt>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    props: {\r\n        displayPrompt: {\r\n            type: Boolean,\r\n            required: true,\r\n        },\r\n        todoItemId: {\r\n            type: Number,\r\n            required: true,\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            titleLocal: this.$store.state.todo.todoArray[this.todoItemId].title,\r\n            descLocal: this.$store.state.todo.todoArray[this.todoItemId].desc,\r\n            isDoneLocal: this.$store.state.todo.todoArray[this.todoItemId].isDone,\r\n            isImportantLocal: this.$store.state.todo.todoArray[this.todoItemId].isImportant,\r\n            isStarredLocal: this.$store.state.todo.todoArray[this.todoItemId].isStarred,\r\n            tagsLocal: this.$store.state.todo.todoArray[this.todoItemId].tags,\r\n        }\r\n    },\r\n    computed: {\r\n        activePrompt: {\r\n            get() {\r\n                return this.displayPrompt;\r\n            },\r\n            set(value) {\r\n                this.$emit('hideDisplayPrompt', value);\r\n            }\r\n        },\r\n        todoTags() {\r\n            return this.$store.state.todo.todoTags;\r\n        },\r\n        validateForm() {\r\n            return !this.errors.any() && this.titleLocal != '';\r\n        },\r\n        isTrashed: {\r\n            get() {\r\n                return this.$store.state.todo.todoArray[this.todoItemId].isTrashed;\r\n            },\r\n            set(value) {\r\n                this.$store.dispatch('todo/moveToTrash', { id: this.todoItemId, value: value})\r\n            }\r\n        },\r\n    },\r\n    methods: {\r\n        toggleIsImportant() {\r\n            this.isImportantLocal = !this.isImportantLocal;\r\n        },\r\n        toggleIsStarred() {\r\n            this.isStarredLocal = !this.isStarredLocal;\r\n        },\r\n        removeTodo() {\r\n            this.isTrashed = true;\r\n        },\r\n        init() {\r\n            this.titleLocal = this.$store.state.todo.todoArray[this.todoItemId].title;\r\n            this.descLocal = this.$store.state.todo.todoArray[this.todoItemId].desc;\r\n            this.isDoneLocal = this.$store.state.todo.todoArray[this.todoItemId].isDone;\r\n            this.isImportantLocal = this.$store.state.todo.todoArray[this.todoItemId].isImportant;\r\n            this.isStarredLocal = this.$store.state.todo.todoArray[this.todoItemId].isStarred;\r\n            this.tagsLocal = this.$store.state.todo.todoArray[this.todoItemId].tags;\r\n        },\r\n        submitTodo() {\r\n            this.$store.dispatch('todo/setTodoTitle', { id: this.todoItemId, title: this.titleLocal})\r\n            this.$store.dispatch('todo/setTodoDesc', { id: this.todoItemId, desc: this.descLocal})\r\n            this.$store.dispatch('todo/toggleIsImportant', { id: this.todoItemId, value: this.isImportantLocal})\r\n            this.$store.dispatch('todo/toggleIsStarred', { id: this.todoItemId, value: this.isStarredLocal})\r\n            this.$store.dispatch('todo/updateTags', { id: this.todoItemId, newTags: this.tagsLocal})\r\n            this.$store.dispatch('todo/toggleIsDone', { id: this.todoItemId, value: this.isDoneLocal})\r\n        }\r\n    },\r\n}\r\n</script>"],"sourceRoot":"src/views/churcha2z/apps/todo"}]}