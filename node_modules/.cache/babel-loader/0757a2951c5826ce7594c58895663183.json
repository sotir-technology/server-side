{"remainingRequest":"/Users/revelation/VueJS/WnC_Apps/wc_admin/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/Users/revelation/VueJS/WnC_Apps/wc_admin/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/revelation/VueJS/WnC_Apps/wc_admin/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/revelation/VueJS/WnC_Apps/wc_admin/src/views/apps/email/Email.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/revelation/VueJS/WnC_Apps/wc_admin/src/views/apps/email/Email.vue","mtime":1557525828000},{"path":"/Users/revelation/VueJS/WnC_Apps/wc_admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/revelation/VueJS/WnC_Apps/wc_admin/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/revelation/VueJS/WnC_Apps/wc_admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/revelation/VueJS/WnC_Apps/wc_admin/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find-index\";\nimport \"core-js/modules/es6.array.index-of\";\nimport \"core-js/modules/es6.array.map\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport EmailSidebar from './EmailSidebar.vue';\nimport MailItem from './MailItem.vue';\nimport EmailView from './EmailView.vue';\nimport VuePerfectScrollbar from 'vue-perfect-scrollbar';\nexport default {\n  data: function data() {\n    return {\n      openMailId: null,\n      selectedMails: [],\n      isSidebarActive: false,\n      showThread: false,\n      clickNotClose: true,\n      isEmailSidebarActive: true,\n      windowWidth: window.innerWidth,\n      settings: {\n        maxScrollbarLength: 60,\n        wheelSpeed: 0.30\n      }\n    };\n  },\n  watch: {\n    isSidebarActive: function isSidebarActive(value) {\n      if (!value) this.showThread = false;\n    },\n    mailFilter: function mailFilter() {\n      this.selectedMails = [];\n      this.$refs.mailListPS.$el.scrollTop = 0;\n    }\n  },\n  computed: {\n    mailFilter: function mailFilter() {\n      return this.$store.state.email.mail_filter;\n    },\n    emailTags: function emailTags() {\n      return this.$store.state.email.mailTags;\n    },\n    searchQuery: {\n      get: function get() {\n        return this.$store.state.email.mailSearchQuery;\n      },\n      set: function set(val) {\n        this.$store.dispatch('email/setMailSearchQuery', val);\n      }\n    },\n    selectAllCheckBox: {\n      get: function get() {\n        return this.selectedMails.length;\n      },\n      set: function set(value) {\n        if (value) this.selectedMails = this.mails.map(function (mail) {\n          return mail.id;\n        });else this.selectedMails = [];\n      }\n    },\n    mails: function mails() {\n      return this.$store.getters['email/filteredMails'];\n    },\n    isMailOpen: function isMailOpen() {\n      var _this = this;\n\n      return function (mailId) {\n        return mailId == _this.openMailId;\n      };\n    },\n    selectAllIcon: function selectAllIcon() {\n      if (this.selectedMails.length == this.mails.length) return 'icon-check';else return 'icon-minus';\n    },\n    isMailSelected: function isMailSelected() {\n      var _this2 = this;\n\n      return function (mailId) {\n        return _this2.selectedMails.indexOf(mailId) == -1 ? false : true;\n      };\n    }\n  },\n  methods: {\n    updateOpenMail: function updateOpenMail(mailId) {\n      this.openMailId = mailId;\n      var payload = {\n        mails: [mailId],\n        unread: false\n      };\n      this.$store.dispatch('email/updateMailUnread', payload);\n      this.isSidebarActive = true;\n    },\n    addToSelectedMails: function addToSelectedMails(mailId) {\n      this.selectedMails.push(mailId);\n    },\n    removeSelectedMail: function removeSelectedMail(mailId) {\n      var mailIndex = this.selectedMails.indexOf(mailId);\n\n      if (mailIndex > -1) {\n        this.selectedMails.splice(mailIndex, 1);\n      }\n    },\n    moveTo: function moveTo(to) {\n      var payload = {\n        mails: this.selectedMails,\n        to: to\n      };\n      this.$store.dispatch('email/moveMailsTo', payload);\n      this.selectedMails = [];\n    },\n    moveCurrentTo: function moveCurrentTo(to) {\n      this.selectedMails = [this.openMailId];\n      this.moveTo(to);\n    },\n    updateMarkUnread: function updateMarkUnread() {\n      var payload = {\n        mails: this.selectedMails,\n        unread: true\n      };\n      this.$store.dispatch('email/updateMailUnread', payload);\n      this.selectedMails = [];\n    },\n    removeOpenMail: function removeOpenMail() {\n      this.selectedMails = [this.openMailId];\n      this.moveTo('trashed');\n      this.isSidebarActive = false;\n    },\n    toggleIsStarred: function toggleIsStarred() {\n      var payload = {\n        mailId: this.currentMail.id,\n        value: !this.currentMail.isStarred\n      };\n      this.$store.dispatch('email/toggleIsMailStarred', payload);\n    },\n    nextMail: function nextMail() {\n      var _this3 = this;\n\n      var currentMailIndex = this.mails.findIndex(function (mail) {\n        return mail.id == _this3.openMailId;\n      });\n      if (this.mails[currentMailIndex + 1]) this.openMailId = this.mails[currentMailIndex + 1].id;\n    },\n    previousMail: function previousMail() {\n      var _this4 = this;\n\n      var currentMailIndex = this.mails.findIndex(function (mail) {\n        return mail.id == _this4.openMailId;\n      });\n      if (this.mails[currentMailIndex - 1]) this.openMailId = this.mails[currentMailIndex - 1].id;\n    },\n    updateSingleMarkUnread: function updateSingleMarkUnread() {\n      this.selectedMails = [this.openMailId];\n      this.updateMarkUnread();\n      this.isSidebarActive = false;\n    },\n    addLabelToMails: function addLabelToMails(label) {\n      var payload = {\n        mails: this.selectedMails,\n        label: label\n      };\n      this.$store.dispatch('email/addLabelToMails', payload);\n      this.selectedMails = [];\n    },\n    closeMailViewSidebar: function closeMailViewSidebar() {\n      this.isSidebarActive = false;\n    },\n    handleWindowResize: function handleWindowResize(event) {\n      this.windowWidth = event.currentTarget.innerWidth;\n      this.setSidebarWidth();\n    },\n    setSidebarWidth: function setSidebarWidth() {\n      if (this.windowWidth < 992) {\n        this.isEmailSidebarActive = this.clickNotClose = false;\n      } else {\n        this.isEmailSidebarActive = this.clickNotClose = true;\n      }\n    },\n    toggleEmailSidebar: function toggleEmailSidebar() {\n      var value = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      if (!value) {\n        this.closeMailViewSidebar();\n\n        if (this.clickNotClose) {\n          return;\n        }\n      }\n\n      this.isEmailSidebarActive = value;\n    }\n  },\n  components: {\n    MailItem: MailItem,\n    EmailSidebar: EmailSidebar,\n    EmailView: EmailView,\n    VuePerfectScrollbar: VuePerfectScrollbar\n  },\n  created: function created() {\n    var _this5 = this;\n\n    this.$nextTick(function () {\n      window.addEventListener('resize', _this5.handleWindowResize);\n    });\n    this.setSidebarWidth();\n  },\n  beforeDestroy: function beforeDestroy() {\n    window.removeEventListener('resize', this.handleWindowResize);\n  }\n};",{"version":3,"sources":["Email.vue"],"names":[],"mappings":"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","sourcesContent":["<!-- =========================================================================================\r\n    File Name: Email.vue\r\n    Description: Email Application (Inbox)\r\n    ----------------------------------------------------------------------------------------\r\n    Item Name: Vuesax Admin - VueJS Dashboard Admin Template\r\n      Author: Pixinvent\r\n    Author URL: http://www.themeforest.net/user/pixinvent\r\n========================================================================================== -->\r\n\r\n\r\n<template>\r\n    <div id=\"email-app\" class=\"border border-solid border-grey-light rounded relative overflow-hidden\">\r\n\r\n        <vs-sidebar class=\"items-no-padding\" parent=\"#email-app\" :click-not-close=\"clickNotClose\" :hidden-background=\"clickNotClose\" v-model=\"isEmailSidebarActive\">\r\n            <email-sidebar :emailTags=\"emailTags\" @closeSidebar=\"toggleEmailSidebar\" :mailFilter=\"mailFilter\"></email-sidebar>\r\n        </vs-sidebar>\r\n\r\n        <div :class=\"{'sidebar-spacer': clickNotClose}\" class=\"app-fixed-height border border-solid border-grey-light border-r-0 border-t-0 border-b-0\">\r\n\r\n            <!-- SEARCH BAR -->\r\n            <div class=\"flex border items-center app-search-container\">\r\n                <feather-icon class=\"md:inline-flex lg:hidden ml-4 mr-4 cursor-pointer\" icon=\"MenuIcon\" @click.stop=\"toggleEmailSidebar(true)\"></feather-icon>\r\n                <vs-input icon=\"icon-search\" size=\"large\" icon-pack=\"feather\" placeholder=\"Search Mail\" v-model=\"searchQuery\" class=\"vs-input-no-border vs-input-no-shdow-focus w-full no-icon-border\" />\r\n            </div>\r\n\r\n            <!-- EMAIL ACTION BAR -->\r\n            <div class=\"email__actions flex flex-wrap justify-between p-4 border border-r-0 border-l-0 border-solid border-grey-light\">\r\n                <div>\r\n                    <vs-checkbox v-model=\"selectAllCheckBox\" icon-pack=\"feather\" :icon=\"selectAllIcon\" class=\"select-all-chexkbox ml-0\">Select All</vs-checkbox>\r\n                </div>\r\n                <div class=\"flex\">\r\n\r\n                    <vs-dropdown vs-custom-content vs-trigger-click class=\"cursor-pointer\">\r\n\r\n                        <feather-icon icon=\"FolderIcon\" class=\"cursor-pointer\" svg-classes=\"h-6 w-6\"></feather-icon>\r\n\r\n                        <vs-dropdown-menu>\r\n                            <ul class=\"my-2\">\r\n                                <li class=\"px-4 mb-2 flex items-start cursor-pointer hover:text-primary\" @click=\"moveTo('inboxed')\" v-if=\"mailFilter != 'inbox'\">\r\n                                    <feather-icon icon=\"MailIcon\" svg-classes=\"h-5 w-5\" />\r\n                                    <span class=\"ml-3\">Inbox</span>\r\n                                </li>\r\n                                <li class=\"px-4 mb-2 flex items-start cursor-pointer hover:text-primary\" @click=\"moveTo('drafted')\" v-if=\"mailFilter != 'draft'\">\r\n                                    <feather-icon icon=\"Edit2Icon\" svg-classes=\"h-5 w-5\"></feather-icon>\r\n                                    <span class=\"ml-3\">Draft</span>\r\n                                </li>\r\n                                <li class=\"px-4 mb-2 flex items-start cursor-pointer hover:text-primary\" @click=\"moveTo('spam')\" v-if=\"mailFilter != 'spam'\">\r\n                                    <feather-icon icon=\"InfoIcon\" svg-classes=\"h-5 w-5\"></feather-icon>\r\n                                    <span class=\"ml-3\">Spam</span>\r\n                                </li>\r\n                                <li class=\"px-4 flex items-start cursor-pointer hover:text-primary\" @click=\"moveTo('trashed')\" v-if=\"mailFilter != 'trash'\">\r\n                                    <feather-icon icon=\"TrashIcon\" svg-classes=\"h-5 w-5\"></feather-icon>\r\n                                    <span class=\"ml-3\">Trash</span>\r\n                                </li>\r\n                            </ul>\r\n                        </vs-dropdown-menu>\r\n                    </vs-dropdown>\r\n\r\n                    <vs-dropdown vs-custom-content vs-trigger-click class=\"cursor-pointer\">\r\n\r\n                        <feather-icon icon=\"TagIcon\" class=\"cursor-pointer ml-5\" svg-classes=\"h-6 w-6\"></feather-icon>\r\n\r\n                        <vs-dropdown-menu >\r\n                                <ul>\r\n                                    <li v-for=\"(label, index) in emailTags\" :key=\"index\" class=\"px-2 py-1 cursor-pointer\" @click=\"addLabelToMails(label.value)\">\r\n                                        <div class=\"h-3 w-3 inline-block rounded-full mr-3\" :class=\"'bg-' + label.color\"></div>\r\n                                        <span>{{ label.text }}</span>\r\n                                    </li>\r\n                                </ul>\r\n                        </vs-dropdown-menu>\r\n                    </vs-dropdown>\r\n\r\n                    <feather-icon icon=\"MailIcon\" class=\"ml-5 cursor-pointer\" svg-classes=\"h-6 w-6\" @click=\"updateMarkUnread\"></feather-icon>\r\n\r\n                    <feather-icon icon=\"TrashIcon\" class=\"cursor-pointer ml-5\" svg-classes=\"h-6 w-6\" @click=\"moveTo('trashed')\"></feather-icon>\r\n                </div>\r\n            </div>\r\n\r\n            <!-- EMAILS LIST -->\r\n            <VuePerfectScrollbar class=\"email-content-scroll-area\" :settings=\"settings\" ref=\"mailListPS\">\r\n                <transition-group name=\"list-enter-up\" class=\"email__mails\" tag=\"ul\" appear>\r\n                    <li class=\"cursor-pointer email__mail-item\" v-for=\"(mail, index) in mails\" :key=\"String(mailFilter) + String(mail.id)\" @click.stop=\"updateOpenMail(mail.id)\" :style=\"{transitionDelay: (index * 0.1) + 's'}\">\r\n                        <mail-item :mail=\"mail\" :isMailOpen=\"isMailOpen(mail.id)\" :isSelected=\"isMailSelected(mail.id)\" @addToSelected=\"addToSelectedMails\" @removeSelected=\"removeSelectedMail\"></mail-item>\r\n                    </li>\r\n                </transition-group>\r\n            </VuePerfectScrollbar>\r\n        </div>\r\n\r\n        <!-- EMAIL VIEW SIDEBAR -->\r\n        <email-view\r\n            :emailTags = \"emailTags\"\r\n            :openMailId = \"openMailId\"\r\n            :isSidebarActive = \"isSidebarActive\"\r\n            @markUnread = \"updateSingleMarkUnread\"\r\n            @removeMail = \"removeOpenMail\"\r\n            @previousMail = \"previousMail\"\r\n            @nextMail = \"nextMail\"\r\n            @moveTo = \"moveCurrentTo\"\r\n            @closeSidebar = \"closeMailViewSidebar\">\r\n        </email-view>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport EmailSidebar from './EmailSidebar.vue'\r\nimport MailItem from './MailItem.vue'\r\nimport EmailView from './EmailView.vue'\r\nimport VuePerfectScrollbar from 'vue-perfect-scrollbar'\r\n\r\nexport default{\r\n    data() {\r\n        return {\r\n            openMailId: null,\r\n            selectedMails: [],\r\n            isSidebarActive: false,\r\n            showThread: false,\r\n            clickNotClose: true,\r\n            isEmailSidebarActive: true,\r\n            windowWidth: window.innerWidth,\r\n            settings: {\r\n                maxScrollbarLength: 60,\r\n                wheelSpeed: 0.30,\r\n            },\r\n        }\r\n    },\r\n    watch: {\r\n        isSidebarActive(value) {\r\n            if(!value) this.showThread = false\r\n        },\r\n        mailFilter() {\r\n            this.selectedMails = [];\r\n            this.$refs.mailListPS.$el.scrollTop = 0;\r\n        }\r\n    },\r\n    computed: {\r\n        mailFilter() {\r\n            return this.$store.state.email.mail_filter;\r\n        },\r\n        emailTags() {\r\n            return this.$store.state.email.mailTags;\r\n        },\r\n        searchQuery: {\r\n            get() {\r\n                return this.$store.state.email.mailSearchQuery;\r\n            },\r\n            set(val) {\r\n                this.$store.dispatch('email/setMailSearchQuery', val);\r\n            }\r\n        },\r\n        selectAllCheckBox: {\r\n            get() {\r\n                return this.selectedMails.length;\r\n            },\r\n            set(value) {\r\n                if(value) this.selectedMails = this.mails.map(mail => mail.id)\r\n                else this.selectedMails = [];\r\n            }\r\n        },\r\n        mails() {\r\n            return this.$store.getters['email/filteredMails'];\r\n        },\r\n        isMailOpen() {\r\n            return (mailId) => mailId == this.openMailId;\r\n        },\r\n        selectAllIcon() {\r\n            if(this.selectedMails.length == this.mails.length) return 'icon-check'\r\n            else return 'icon-minus'\r\n        },\r\n        isMailSelected() {\r\n            return (mailId) => this.selectedMails.indexOf(mailId) == -1 ? false : true;\r\n        },\r\n    },\r\n    methods: {\r\n        updateOpenMail(mailId) {\r\n            this.openMailId = mailId;\r\n            const payload = {mails: [mailId], unread: false};\r\n            this.$store.dispatch('email/updateMailUnread', payload);\r\n            this.isSidebarActive = true;\r\n        },\r\n        addToSelectedMails(mailId) {\r\n            this.selectedMails.push(mailId)\r\n        },\r\n        removeSelectedMail(mailId) {\r\n            const mailIndex = this.selectedMails.indexOf(mailId);\r\n            if(mailIndex > -1) {\r\n                this.selectedMails.splice(mailIndex, 1)\r\n            }\r\n        },\r\n        moveTo(to) {\r\n            const payload = {mails: this.selectedMails, to: to}\r\n            this.$store.dispatch('email/moveMailsTo', payload)\r\n            this.selectedMails = [];\r\n        },\r\n        moveCurrentTo(to) {\r\n            this.selectedMails = [this.openMailId];\r\n            this.moveTo(to)\r\n        },\r\n        updateMarkUnread() {\r\n            const payload = {mails: this.selectedMails, unread: true}\r\n            this.$store.dispatch('email/updateMailUnread', payload)\r\n            this.selectedMails = [];\r\n        },\r\n        removeOpenMail() {\r\n            this.selectedMails = [this.openMailId];\r\n            this.moveTo('trashed');\r\n            this.isSidebarActive = false;\r\n        },\r\n        toggleIsStarred() {\r\n            const payload = {mailId: this.currentMail.id, value : !this.currentMail.isStarred}\r\n            this.$store.dispatch('email/toggleIsMailStarred', payload)\r\n        },\r\n        nextMail() {\r\n            const currentMailIndex = this.mails.findIndex((mail) => mail.id == this.openMailId)\r\n            if(this.mails[currentMailIndex + 1]) this.openMailId = this.mails[currentMailIndex + 1].id\r\n        },\r\n        previousMail() {\r\n            const currentMailIndex = this.mails.findIndex((mail) => mail.id == this.openMailId)\r\n            if(this.mails[currentMailIndex - 1]) this.openMailId = this.mails[currentMailIndex - 1].id\r\n        },\r\n        updateSingleMarkUnread() {\r\n            this.selectedMails = [this.openMailId];\r\n            this.updateMarkUnread();\r\n            this.isSidebarActive = false;\r\n        },\r\n        addLabelToMails(label) {\r\n            const payload = {mails: this.selectedMails, label: label}\r\n            this.$store.dispatch('email/addLabelToMails', payload);\r\n            this.selectedMails = [];\r\n        },\r\n        closeMailViewSidebar() {\r\n            this.isSidebarActive = false;\r\n        },\r\n        handleWindowResize(event) {\r\n            this.windowWidth = event.currentTarget.innerWidth;\r\n            this.setSidebarWidth();\r\n        },\r\n        setSidebarWidth() {\r\n            if(this.windowWidth < 992) {\r\n                this.isEmailSidebarActive = this.clickNotClose = false;\r\n            }else {\r\n                this.isEmailSidebarActive = this.clickNotClose = true;\r\n            }\r\n        },\r\n        toggleEmailSidebar(value = false) {\r\n            if(!value) {\r\n                this.closeMailViewSidebar()\r\n                if(this.clickNotClose) {\r\n                    return\r\n                }\r\n            }\r\n            this.isEmailSidebarActive = value;\r\n        },\r\n    },\r\n    components: {\r\n        MailItem,\r\n        EmailSidebar,\r\n        EmailView,\r\n        VuePerfectScrollbar\r\n    },\r\n    created() {\r\n        this.$nextTick(() => {\r\n            window.addEventListener('resize', this.handleWindowResize);\r\n        })\r\n        this.setSidebarWidth();\r\n    },\r\n    beforeDestroy: function () {\r\n        window.removeEventListener('resize', this.handleWindowResize)\r\n    },\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n@import \"@/assets/scss/vuesax/apps/email.scss\";\r\n</style>\r\n"],"sourceRoot":"src/views/apps/email"}]}