{"remainingRequest":"/Users/revelation/VueJS/WnC_Apps/wc_admin/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/Users/revelation/VueJS/WnC_Apps/wc_admin/node_modules/eslint-loader/index.js??ref--13-0!/Users/revelation/VueJS/WnC_Apps/wc_admin/src/router.js","dependencies":[{"path":"/Users/revelation/VueJS/WnC_Apps/wc_admin/src/router.js","mtime":1565191384889},{"path":"/Users/revelation/VueJS/WnC_Apps/wc_admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/revelation/VueJS/WnC_Apps/wc_admin/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/revelation/VueJS/WnC_Apps/wc_admin/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["/*=========================================================================================\r\n  File Name: router.js\r\n  Description: Routes for vue-router. Lazy loading is enabled.\r\n  Object Structure:\r\n                    path => router path\r\n                    name => router name\r\n                    component(lazy loading) => component to load\r\n                    meta : {\r\n                      rule => which user can have access (ACL)\r\n                      breadcrumb => Add breadcrumb to specific page\r\n                      pageTitle => Display title besides breadcrumb\r\n                    }\r\n==========================================================================================*/\nimport Vue from 'vue';\nimport Router from 'vue-router';\nimport { AuthCheck } from \"./auth/authService\";\nVue.use(Router);\nvar router = new Router({\n  mode: 'history',\n  base: process.env.BASE_URL,\n  scrollBehavior: function scrollBehavior() {\n    return {\n      x: 0,\n      y: 0\n    };\n  },\n  routes: [{\n    // =============================================================================\n    // MAIN LAYOUT ROUTES\n    // =============================================================================\n    path: '/',\n    component: function component() {\n      return import('./layouts/main/Main.vue');\n    },\n    redirect: '/dashboard',\n    children: [{\n      name: 'dashboard',\n      path: '/dashboard',\n      component: null\n    }]\n  }, // =============================================================================\n  // FULL PAGE LAYOUTS\n  // =============================================================================\n  // Redirect to 404 page, if no match found\n  {\n    path: '*',\n    redirect: '/error-404'\n  }, //LOGIN LAYOUTS\n  {\n    // =============================================================================\n    // MAIN LAYOUT ROUTES\n    // =============================================================================\n    path: '/',\n    component: function component() {\n      return import('./layouts/full-page/FullPage.vue');\n    },\n    children: [{\n      name: 'login',\n      path: '/login',\n      component: function component() {\n        return import('./views/pages/Login.vue');\n      }\n    }]\n  }]\n}); //router to check after\n\nrouter.afterEach(function () {\n  // Remove initial loading\n  var appLoading = document.getElementById('loading-bg');\n\n  if (appLoading) {\n    appLoading.style.display = \"none\";\n  }\n}); //router to check before\n\nrouter.beforeEach(function (to, from, next) {\n  // get logged user current user\n  if (to.path === \"/login\" || to.path === \"/statistic\" || AuthCheck != null) {\n    return next();\n  }\n\n  router.push({\n    path: '/login',\n    query: {\n      to: to.path\n    }\n  }); //router.push({path: '/login', query: {to: to.path}})\n  // Specify the current path as the customState parameter, meaning it\n  // will be returned to the application after auth\n  // auth.login({ target: to.path });\n\n  next();\n});\nexport default router;",{"version":3,"sources":["/Users/revelation/VueJS/WnC_Apps/wc_admin/src/router.js"],"names":["Vue","Router","AuthCheck","use","router","mode","base","process","env","BASE_URL","scrollBehavior","x","y","routes","path","component","redirect","children","name","afterEach","appLoading","document","getElementById","style","display","beforeEach","to","from","next","push","query"],"mappings":"AAAA;;;;;;;;;;;;;AAeA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,MAAP,MAAmB,YAAnB;AACA,SAAQC,SAAR,QAAwB,oBAAxB;AAEAF,GAAG,CAACG,GAAJ,CAAQF,MAAR;AAEA,IAAMG,MAAM,GAAG,IAAIH,MAAJ,CAAW;AACtBI,EAAAA,IAAI,EAAE,SADgB;AAEtBC,EAAAA,IAAI,EAAEC,OAAO,CAACC,GAAR,CAAYC,QAFI;AAGtBC,EAAAA,cAHsB,4BAGL;AACb,WAAO;AAACC,MAAAA,CAAC,EAAE,CAAJ;AAAOC,MAAAA,CAAC,EAAE;AAAV,KAAP;AACH,GALqB;AAMtBC,EAAAA,MAAM,EAAE,CAEJ;AACI;AACA;AACA;AACAC,IAAAA,IAAI,EAAE,GAJV;AAKIC,IAAAA,SAAS,EAAE;AAAA,aAAM,OAAO,yBAAP,CAAN;AAAA,KALf;AAMIC,IAAAA,QAAQ,EAAE,YANd;AAOIC,IAAAA,QAAQ,EAAE,CACN;AAACC,MAAAA,IAAI,EAAE,WAAP;AAAoBJ,MAAAA,IAAI,EAAE,YAA1B;AAAwCC,MAAAA,SAAS,EAAE;AAAnD,KADM;AAPd,GAFI,EAaJ;AACA;AACA;AACA;AACA;AACID,IAAAA,IAAI,EAAE,GADV;AAEIE,IAAAA,QAAQ,EAAE;AAFd,GAjBI,EAqBJ;AACA;AACI;AACA;AACA;AACAF,IAAAA,IAAI,EAAE,GAJV;AAKIC,IAAAA,SAAS,EAAE;AAAA,aAAM,OAAO,kCAAP,CAAN;AAAA,KALf;AAMIE,IAAAA,QAAQ,EAAE,CACN;AAACC,MAAAA,IAAI,EAAE,OAAP;AAAgBJ,MAAAA,IAAI,EAAE,QAAtB;AAAgCC,MAAAA,SAAS,EAAE;AAAA,eAAM,OAAO,yBAAP,CAAN;AAAA;AAA3C,KADM;AANd,GAtBI;AANc,CAAX,CAAf,C,CAyCA;;AACAX,MAAM,CAACe,SAAP,CAAiB,YAAM;AACnB;AACA,MAAMC,UAAU,GAAGC,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAAnB;;AACA,MAAIF,UAAJ,EAAgB;AACZA,IAAAA,UAAU,CAACG,KAAX,CAAiBC,OAAjB,GAA2B,MAA3B;AACH;AACJ,CAND,E,CAQA;;AACApB,MAAM,CAACqB,UAAP,CAAkB,UAACC,EAAD,EAAKC,IAAL,EAAWC,IAAX,EAAoB;AAClC;AACA,MACIF,EAAE,CAACZ,IAAH,KAAY,QAAZ,IACAY,EAAE,CAACZ,IAAH,KAAY,YADZ,IAEAZ,SAAS,IAAE,IAHf,EAIE;AACE,WAAO0B,IAAI,EAAX;AACH;;AACDxB,EAAAA,MAAM,CAACyB,IAAP,CAAY;AAACf,IAAAA,IAAI,EAAE,QAAP;AAAiBgB,IAAAA,KAAK,EAAE;AAACJ,MAAAA,EAAE,EAAEA,EAAE,CAACZ;AAAR;AAAxB,GAAZ,EATkC,CAUlC;AACA;AACA;AACA;;AACAc,EAAAA,IAAI;AACP,CAfD;AAiBA,eAAexB,MAAf","sourcesContent":["/*=========================================================================================\r\n  File Name: router.js\r\n  Description: Routes for vue-router. Lazy loading is enabled.\r\n  Object Structure:\r\n                    path => router path\r\n                    name => router name\r\n                    component(lazy loading) => component to load\r\n                    meta : {\r\n                      rule => which user can have access (ACL)\r\n                      breadcrumb => Add breadcrumb to specific page\r\n                      pageTitle => Display title besides breadcrumb\r\n                    }\r\n==========================================================================================*/\r\n\r\n\r\nimport Vue from 'vue'\r\nimport Router from 'vue-router'\r\nimport {AuthCheck} from \"./auth/authService\";\r\n\r\nVue.use(Router)\r\n\r\nconst router = new Router({\r\n    mode: 'history',\r\n    base: process.env.BASE_URL,\r\n    scrollBehavior() {\r\n        return {x: 0, y: 0}\r\n    },\r\n    routes: [\r\n\r\n        {\r\n            // =============================================================================\r\n            // MAIN LAYOUT ROUTES\r\n            // =============================================================================\r\n            path: '/',\r\n            component: () => import('./layouts/main/Main.vue'),\r\n            redirect: '/dashboard',\r\n            children: [\r\n                {name: 'dashboard', path: '/dashboard', component: null}\r\n            ],\r\n        },\r\n        // =============================================================================\r\n        // FULL PAGE LAYOUTS\r\n        // =============================================================================\r\n        // Redirect to 404 page, if no match found\r\n        {\r\n            path: '*',\r\n            redirect: '/error-404'\r\n        },\r\n        //LOGIN LAYOUTS\r\n        {\r\n            // =============================================================================\r\n            // MAIN LAYOUT ROUTES\r\n            // =============================================================================\r\n            path: '/',\r\n            component: () => import('./layouts/full-page/FullPage.vue'),\r\n            children: [\r\n                {name: 'login', path: '/login', component: () => import('./views/pages/Login.vue')}\r\n            ],\r\n        },\r\n    ],\r\n});\r\n\r\n//router to check after\r\nrouter.afterEach(() => {\r\n    // Remove initial loading\r\n    const appLoading = document.getElementById('loading-bg');\r\n    if (appLoading) {\r\n        appLoading.style.display = \"none\";\r\n    }\r\n});\r\n\r\n//router to check before\r\nrouter.beforeEach((to, from, next) => {\r\n    // get logged user current user\r\n    if (\r\n        to.path === \"/login\" ||\r\n        to.path === \"/statistic\" ||\r\n        AuthCheck!=null\r\n    ) {\r\n        return next();\r\n    }\r\n    router.push({path: '/login', query: {to: to.path}});\r\n    //router.push({path: '/login', query: {to: to.path}})\r\n    // Specify the current path as the customState parameter, meaning it\r\n    // will be returned to the application after auth\r\n    // auth.login({ target: to.path });\r\n    next();\r\n});\r\n\r\nexport default router\r\n"]}]}