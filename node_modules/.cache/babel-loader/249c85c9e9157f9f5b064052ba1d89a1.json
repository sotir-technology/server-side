{"remainingRequest":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js!C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xampp\\htdocs\\GIT\\server-side\\src\\views\\forms\\form-wizard\\FormWizardValidation.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\src\\views\\forms\\form-wizard\\FormWizardValidation.vue","mtime":1567376725615},{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { FormWizard, TabContent } from 'vue-form-wizard';\nimport 'vue-form-wizard/dist/vue-form-wizard.min.css'; // For custom error message\n\nimport { Validator } from 'vee-validate';\nvar dict = {\n  custom: {\n    first_name: {\n      required: 'First name is required',\n      alpha: \"First name may only contain alphabetic characters\"\n    },\n    last_name: {\n      required: 'Last name is required',\n      alpha: \"Last name may only contain alphabetic characters\"\n    },\n    email: {\n      required: 'Email is required',\n      email: \"Please enter valid email\"\n    },\n    job_title: {\n      required: 'Job title name is required',\n      alpha: \"Job title may only contain alphabetic characters\"\n    },\n    proposal_title: {\n      required: 'Proposal title name is required',\n      alpha: \"Proposal title may only contain alphabetic characters\"\n    },\n    event_name: {\n      required: 'Event name is required',\n      alpha: \"Event name may only contain alphabetic characters\"\n    }\n  }\n}; // register custom messages\n\nValidator.localize('en', dict);\nexport default {\n  data: function data() {\n    return {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      city: \"new-york\",\n      proposalTitle: \"\",\n      jobTitle: \"\",\n      textarea: \"\",\n      eventName: \"\",\n      eventLocation: \"san-francisco\",\n      status: \"plannning\",\n      cityOptions: [{\n        text: \"New York\",\n        value: \"new-york\"\n      }, {\n        text: \"Chicago\",\n        value: \"chicago\"\n      }, {\n        text: \"San Francisco\",\n        value: \"san-francisco\"\n      }, {\n        text: \"Boston\",\n        value: \"boston\"\n      }],\n      statusOptions: [{\n        text: \"Plannning\",\n        value: \"plannning\"\n      }, {\n        text: \"In Progress\",\n        value: \"in progress\"\n      }, {\n        text: \"Finished\",\n        value: \"finished\"\n      }],\n      LocationOptions: [{\n        text: \"New York\",\n        value: \"new-york\"\n      }, {\n        text: \"Chicago\",\n        value: \"chicago\"\n      }, {\n        text: \"San Francisco\",\n        value: \"san-francisco\"\n      }, {\n        text: \"Boston\",\n        value: \"boston\"\n      }]\n    };\n  },\n  methods: {\n    validateStep1: function validateStep1() {\n      var _this = this;\n\n      return new Promise(function (resolve, reject) {\n        _this.$validator.validateAll('step-1').then(function (result) {\n          if (result) {\n            resolve(true);\n          } else {\n            reject(\"correct all values\");\n          }\n        });\n      });\n    },\n    validateStep2: function validateStep2() {\n      var _this2 = this;\n\n      return new Promise(function (resolve, reject) {\n        _this2.$validator.validateAll(\"step-2\").then(function (result) {\n          if (result) {\n            resolve(true);\n          } else {\n            reject(\"correct all values\");\n          }\n        });\n      });\n    },\n    validateStep3: function validateStep3() {\n      var _this3 = this;\n\n      return new Promise(function (resolve, reject) {\n        _this3.$validator.validateAll(\"step-3\").then(function (result) {\n          if (result) {\n            alert(\"Form submitted!\");\n            resolve(true);\n          } else {\n            reject(\"correct all values\");\n          }\n        });\n      });\n    }\n  },\n  components: {\n    FormWizard: FormWizard,\n    TabContent: TabContent\n  }\n};",{"version":3,"sources":["FormWizardValidation.vue"],"names":[],"mappings":"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","sourcesContent":["<!-- =========================================================================================\r\n\tFile Name: FormWizardValidation.vue\r\n\tDescription: Form wizard with validation\r\n\t----------------------------------------------------------------------------------------\r\n\tItem Name: Vuesax Admin - VueJS Dashboard Admin Template\r\n\tAuthor: Pixinvent\r\n\tAuthor URL: http://www.themeforest.net/user/pixinvent\r\n========================================================================================== -->\r\n\r\n\r\n<template>\r\n\t<vx-card title=\"Form wizard with validation\" code-toggler>\r\n\r\n\t\t<p>Implement Form validation with form wizard using popular <strong> <router-link to=\"/forms/form-validation\">VeeValidate</router-link></strong></p>\r\n\r\n\t\t<div class=\"mt-5\">\r\n\t\t\t<form-wizard color=\"rgba(var(--vs-primary), 1)\" errorColor=\"rgba(var(--vs-danger), 1)\" :title=\"null\" :subtitle=\"null\" finishButtonText=\"Submit\">\r\n\t\t\t\t<tab-content title=\"Step 1\" class=\"mb-5\" icon=\"feather icon-home\" :before-change=\"validateStep1\">\r\n\r\n\t\t\t\t\t<!-- tab 1 content -->\r\n\t\t\t\t\t<form data-vv-scope=\"step-1\">\r\n\t\t\t\t\t<div class=\"vx-row\">\r\n\t\t\t\t\t\t<div class=\"vx-col w-1/2 mt-5\">\r\n\t\t\t\t\t\t\t<vs-input label=\"First Name\" v-model=\"firstName\" class=\"w-full\" name=\"first_name\" v-validate=\"'required|alpha'\" />\r\n\t\t\t\t\t\t\t<span class=\"text-danger\">{{ errors.first('step-1.first_name') }}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"vx-col w-1/2 mt-5\">\r\n\t\t\t\t\t\t\t<vs-input label=\"Last Name\"  v-model=\"lastName\" class=\"w-full\" name=\"last_name\" v-validate=\"'required|alpha'\" />\r\n\t\t\t\t\t\t\t<span class=\"text-danger\">{{ errors.first('step-1.last_name') }}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"vx-col w-1/2 mt-5\">\r\n\t\t\t\t\t\t\t<vs-input type=\"email\" label=\"Email\"  v-model=\"email\" class=\"w-full\" name=\"email\" v-validate=\"'required|email'\" />\r\n\t\t\t\t\t\t\t<span class=\"text-danger\">{{ errors.first('step-1.email') }}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"vx-col w-1/2 mt-5\">\r\n\t\t\t\t\t\t\t<vs-select v-model=\"city\" class=\"w-full select-large\" label=\"City\">\r\n\t\t\t\t\t\t\t\t<vs-select-item :key=\"index\" :value=\"item.value\" :text=\"item.text\" v-for=\"(item,index) in cityOptions\" class=\"w-full\" />\r\n\t\t\t\t\t\t\t</vs-select>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</tab-content>\r\n\r\n\t\t\t\t<!-- tab 2 content -->\r\n\t\t\t\t<tab-content title=\"Step 2\" class=\"mb-5\" icon=\"feather icon-briefcase\" :before-change=\"validateStep2\">\r\n\t\t\t\t\t<form data-vv-scope=\"step-2\">\r\n\t\t\t\t\t<div class=\"vx-row\">\r\n\t\t\t\t\t\t<div class=\"vx-col w-1/2\">\r\n\t\t\t\t\t\t\t<vs-input label=\"Proposal Title\" v-model=\"proposalTitle\" class=\"w-full mt-4\" name=\"proposal_title\" v-validate=\"'required|alpha_spaces'\" />\r\n\t\t\t\t\t\t\t<span class=\"text-danger\">{{ errors.first('step-2.proposal_title') }}</span>\r\n\r\n\t\t\t\t\t\t\t<vs-input label=\"Job Title\"  v-model=\"jobTitle\" class=\"w-full mt-4\" name=\"job_title\" v-validate=\"'required|alpha_spaces'\" />\r\n\t\t\t\t\t\t\t<span class=\"text-danger\">{{ errors.first('step-2.job_title') }}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"vx-col w-1/2\">\r\n\t\t\t\t\t\t\t<vs-textarea v-model=\"textarea\" label=\"Short discription\" class=\"mt-10 mb-0\" rows=\"3\" />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</tab-content>\r\n\r\n\t\t\t\t<!-- tab 3 content -->\r\n\t\t\t\t<tab-content title=\"Step 3\" class=\"mb-5\" icon=\"feather icon-image\" :before-change=\"validateStep3\">\r\n\t\t\t\t\t<form data-vv-scope=\"step-3\">\r\n\t\t\t\t\t<div class=\"vx-row\">\r\n\t\t\t\t\t\t<div class=\"vx-col w-1/2\">\r\n\t\t\t\t\t\t\t<vs-input label=\"Event Name\" v-model=\"eventName\" class=\"w-full mt-5\" name=\"event_name\" v-validate=\"'required|alpha_spaces'\" />\r\n\t\t\t\t\t\t\t<span class=\"text-danger\">{{ errors.first('step-3.event_name') }}</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"vx-col w-1/2\">\r\n\t\t\t\t\t\t\t<vs-select v-model=\"city\" class=\"w-full select-large mt-5\" label=\"Event Location\">\r\n\t\t\t\t\t\t\t\t<vs-select-item :key=\"index\" :value=\"item.value\" :text=\"item.text\" v-for=\"(item,index) in cityOptions\" class=\"w-full\" />\r\n\t\t\t\t\t\t\t</vs-select>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"vx-col w-1/2 mt-5\">\r\n\t\t\t\t\t\t\t<vs-select v-model=\"status\" class=\"w-full select-large\" label=\"Event Status\">\r\n\t\t\t\t\t\t\t\t<vs-select-item :key=\"index\" :value=\"item.value\" :text=\"item.text\" v-for=\"(item,index) in statusOptions\" class=\"w-full\" />\r\n\t\t\t\t\t\t\t</vs-select>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div class=\"vx-col w-1/2 mt-8\">\r\n\t\t\t\t\t\t\t<div class=\"demo-alignment\">\r\n\t\t\t\t\t\t\t\t<span>Requirements:</span>\r\n\t\t\t\t\t\t\t\t<vs-checkbox>Staffing</vs-checkbox>\r\n\t\t\t\t\t\t\t\t<vs-checkbox>Catering</vs-checkbox>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</tab-content>\r\n\t\t\t</form-wizard>\r\n\t\t</div>\r\n\r\n\t\t<template slot=\"codeContainer\">\r\n&lt;template&gt;\r\n  &lt;form-wizard color=&quot;rgba(var(--vs-primary), 1)&quot; errorColor=&quot;rgba(var(--vs-danger), 1)&quot; :title=&quot;null&quot; :subtitle=&quot;null&quot; finishButtonText=&quot;Submit&quot;&gt;\r\n    &lt;tab-content title=&quot;Step 1&quot; class=&quot;mb-5&quot; icon=&quot;feather icon-home&quot; :before-change=&quot;validateStep1&quot;&gt;\r\n\r\n      &lt;!-- tab 1 content --&gt;\r\n      &lt;form data-vv-scope=&quot;step-1&quot;&gt;\r\n      &lt;div class=&quot;vx-row&quot;&gt;\r\n        &lt;div class=&quot;vx-col w-1/2 mt-5&quot;&gt;\r\n          &lt;vs-input size=&quot;large&quot; label=&quot;First Name&quot; v-model=&quot;firstName&quot; class=&quot;w-full&quot; name=&quot;first_name&quot; v-validate=&quot;'required|alpha'&quot; /&gt;\r\n          &lt;span class=&quot;text-danger&quot;&gt;{{ \"\\{\\{ errors.first('step-1.first_name') \\}\\}\" }}&lt;/span&gt;\r\n        &lt;/div&gt;\r\n        &lt;div class=&quot;vx-col w-1/2 mt-5&quot;&gt;\r\n          &lt;vs-input size=&quot;large&quot; label=&quot;Last Name&quot;  v-model=&quot;lastName&quot; class=&quot;w-full&quot; name=&quot;last_name&quot; v-validate=&quot;'required|alpha'&quot; /&gt;\r\n          &lt;span class=&quot;text-danger&quot;&gt;{{ \"\\{\\{ errors.first('step-1.last_name') \\}\\}\" }}&lt;/span&gt;\r\n        &lt;/div&gt;\r\n        &lt;div class=&quot;vx-col w-1/2 mt-5&quot;&gt;\r\n          &lt;vs-input type=&quot;email&quot; size=&quot;large&quot; label=&quot;Email&quot;  v-model=&quot;email&quot; class=&quot;w-full&quot; name=&quot;email&quot; v-validate=&quot;'required|email'&quot; /&gt;\r\n          &lt;span class=&quot;text-danger&quot;&gt;{{ \"\\{\\{ errors.first('step-1.email') \\}\\}\" }}&lt;/span&gt;\r\n        &lt;/div&gt;\r\n        &lt;div class=&quot;vx-col w-1/2 mt-5&quot;&gt;\r\n          &lt;vs-select v-model=&quot;city&quot; class=&quot;w-full select-large&quot; label=&quot;City&quot;&gt;\r\n            &lt;vs-select-item :key=&quot;index&quot; :value=&quot;item.value&quot; :text=&quot;item.text&quot; v-for=&quot;(item,index) in cityOptions&quot; class=&quot;w-full&quot; /&gt;\r\n          &lt;/vs-select&gt;\r\n        &lt;/div&gt;\r\n      &lt;/div&gt;\r\n      &lt;/form&gt;\r\n    &lt;/tab-content&gt;\r\n\r\n    &lt;!-- tab 2 content --&gt;\r\n    &lt;tab-content title=&quot;Step 2&quot; class=&quot;mb-5&quot; icon=&quot;feather icon-briefcase&quot; :before-change=&quot;validateStep2&quot;&gt;\r\n      &lt;form data-vv-scope=&quot;step-2&quot;&gt;\r\n      &lt;div class=&quot;vx-row&quot;&gt;\r\n        &lt;div class=&quot;vx-col w-1/2&quot;&gt;\r\n          &lt;vs-input size=&quot;large&quot; label=&quot;Proposal Title&quot; v-model=&quot;proposalTitle&quot; class=&quot;w-full mt-5&quot; name=&quot;proposal_title&quot; v-validate=&quot;'required|alpha'&quot; /&gt;\r\n          &lt;span class=&quot;text-danger&quot;&gt;{{ \"\\{\\{ errors.first('step-2.proposal_title') \\}\\}\" }}&lt;/span&gt;\r\n\r\n          &lt;vs-input size=&quot;large&quot; label=&quot;Job Title&quot;  v-model=&quot;jobTitle&quot; class=&quot;w-full mt-5&quot; name=&quot;job_title&quot; v-validate=&quot;'required|alpha'&quot; /&gt;\r\n          &lt;span class=&quot;text-danger&quot;&gt;{{ \"\\{\\{ errors.first('step-2.job_title') \\}\\}\" }}&lt;/span&gt;\r\n        &lt;/div&gt;\r\n        &lt;div class=&quot;vx-col w-1/2 mt-10&quot;&gt;\r\n          &lt;vs-textarea v-model=&quot;textarea&quot; label=&quot;Short discription&quot; class=&quot;h-full&quot; /&gt;\r\n        &lt;/div&gt;\r\n      &lt;/div&gt;\r\n      &lt;/form&gt;\r\n    &lt;/tab-content&gt;\r\n\r\n    &lt;!-- tab 3 content --&gt;\r\n    &lt;tab-content title=&quot;Step 3&quot; class=&quot;mb-5&quot; icon=&quot;feather icon-image&quot; :before-change=&quot;validateStep3&quot;&gt;\r\n      &lt;form data-vv-scope=&quot;step-3&quot;&gt;\r\n      &lt;div class=&quot;vx-row&quot;&gt;\r\n        &lt;div class=&quot;vx-col w-1/2&quot;&gt;\r\n          &lt;vs-input size=&quot;large&quot; label=&quot;Event Name&quot; v-model=&quot;eventName&quot; class=&quot;w-full mt-5&quot; name=&quot;event_name&quot; v-validate=&quot;'required|alpha'&quot; /&gt;\r\n          &lt;span class=&quot;text-danger&quot;&gt;{{ \"\\{\\{ errors.first('step-3.event_name') \\}\\}\" }}&lt;/span&gt;\r\n        &lt;/div&gt;\r\n        &lt;div class=&quot;vx-col w-1/2&quot;&gt;\r\n          &lt;vs-select v-model=&quot;city&quot; class=&quot;w-full select-large mt-5&quot; label=&quot;Event Location&quot;&gt;\r\n            &lt;vs-select-item :key=&quot;index&quot; :value=&quot;item.value&quot; :text=&quot;item.text&quot; v-for=&quot;(item,index) in cityOptions&quot; class=&quot;w-full&quot; /&gt;\r\n          &lt;/vs-select&gt;\r\n        &lt;/div&gt;\r\n        &lt;div class=&quot;vx-col w-1/2 mt-5&quot;&gt;\r\n          &lt;vs-select v-model=&quot;status&quot; class=&quot;w-full select-large&quot; label=&quot;Event Status&quot;&gt;\r\n            &lt;vs-select-item :key=&quot;index&quot; :value=&quot;item.value&quot; :text=&quot;item.text&quot; v-for=&quot;(item,index) in statusOptions&quot; class=&quot;w-full&quot; /&gt;\r\n          &lt;/vs-select&gt;\r\n        &lt;/div&gt;\r\n        &lt;div class=&quot;vx-col w-1/2 mt-8&quot;&gt;\r\n          &lt;div class=&quot;demo-alignment&quot;&gt;\r\n            &lt;span&gt;Requirements:&lt;/span&gt;\r\n            &lt;vs-checkbox&gt;Staffing&lt;/vs-checkbox&gt;\r\n            &lt;vs-checkbox&gt;Catering&lt;/vs-checkbox&gt;\r\n          &lt;/div&gt;\r\n        &lt;/div&gt;\r\n      &lt;/div&gt;\r\n      &lt;/form&gt;\r\n    &lt;/tab-content&gt;\r\n  &lt;/form-wizard&gt;\r\n&lt;/template&gt;\r\n\r\n&lt;script&gt;\r\nimport { FormWizard, TabContent } from 'vue-form-wizard'\r\nimport 'vue-form-wizard/dist/vue-form-wizard.min.css'\r\n\r\n// For custom error message\r\nimport { Validator } from 'vee-validate';\r\nconst dict = {\r\n  custom: {\r\n    first_name: {\r\n      required: 'First name is required',\r\n      alpha: &quot;First name may only contain alphabetic characters&quot;\r\n    },\r\n    last_name: {\r\n      required: 'Last name is required',\r\n      alpha: &quot;Last name may only contain alphabetic characters&quot;\r\n    },\r\n    email: {\r\n      required: 'Email is required',\r\n      email: &quot;Please enter valid email&quot;\r\n    },\r\n    job_title: {\r\n      required: 'Job title name is required',\r\n      alpha: &quot;Job title may only contain alphabetic characters&quot;\r\n    },\r\n    proposal_title: {\r\n      required: 'Proposal title name is required',\r\n      alpha: &quot;Proposal title may only contain alphabetic characters&quot;\r\n    },\r\n    event_name: {\r\n      required: 'Event name is required',\r\n      alpha: &quot;Event name may only contain alphabetic characters&quot;\r\n    },\r\n  }\r\n};\r\n\r\n// register custom messages\r\nValidator.localize('en', dict);\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      firstName: &quot;&quot;,\r\n      lastName: &quot;&quot;,\r\n      email: &quot;&quot;,\r\n      city: &quot;new-york&quot;,\r\n      proposalTitle: &quot;&quot;,\r\n      jobTitle: &quot;&quot;,\r\n      textarea: &quot;&quot;,\r\n      eventName: &quot;&quot;,\r\n      eventLocation: &quot;san-francisco&quot;,\r\n      status: &quot;plannning&quot;,\r\n      cityOptions: [\r\n        { text: &quot;New York&quot;, value: &quot;new-york&quot; },\r\n        { text: &quot;Chicago&quot;, value: &quot;chicago&quot; },\r\n        { text: &quot;San Francisco&quot;, value: &quot;san-francisco&quot; },\r\n        { text: &quot;Boston&quot;, value: &quot;boston&quot; },\r\n      ],\r\n      statusOptions: [\r\n        { text: &quot;Plannning&quot;, value: &quot;plannning&quot; },\r\n        { text: &quot;In Progress&quot;, value: &quot;in progress&quot; },\r\n        { text: &quot;Finished&quot;, value: &quot;finished&quot; },\r\n      ],\r\n      LocationOptions: [\r\n        { text: &quot;New York&quot;, value: &quot;new-york&quot; },\r\n        { text: &quot;Chicago&quot;, value: &quot;chicago&quot; },\r\n        { text: &quot;San Francisco&quot;, value: &quot;san-francisco&quot; },\r\n        { text: &quot;Boston&quot;, value: &quot;boston&quot; },\r\n      ],\r\n    }\r\n  },\r\n  methods: {\r\n    validateStep1() {\r\n      return new Promise((resolve, reject) =&gt; {\r\n        this.$validator.validateAll('step-1').then(result =&gt; {\r\n          if (result) {\r\n            resolve(true)\r\n          } else {\r\n            reject(&quot;correct all values&quot;);\r\n          }\r\n        })\r\n      })\r\n    },\r\n    validateStep2() {\r\n      return new Promise((resolve, reject) =&gt; {\r\n        this.$validator.validateAll(&quot;step-2&quot;).then(result =&gt; {\r\n          if (result) {\r\n            resolve(true)\r\n          } else {\r\n            reject(&quot;correct all values&quot;);\r\n          }\r\n        })\r\n      })\r\n    },\r\n    validateStep3() {\r\n      return new Promise((resolve, reject) =&gt; {\r\n        this.$validator.validateAll(&quot;step-3&quot;).then(result =&gt; {\r\n          if (result) {\r\n            alert(&quot;Form submitted!&quot;);\r\n            resolve(true)\r\n          } else {\r\n            reject(&quot;correct all values&quot;);\r\n          }\r\n        })\r\n      })\r\n    }\r\n  },\r\n  components: {\r\n    FormWizard,\r\n    TabContent\r\n  }\r\n}\r\n&lt;/script&gt;\r\n\t\t</template>\r\n\t</vx-card>\r\n</template>\r\n\r\n<script>\r\nimport { FormWizard, TabContent } from 'vue-form-wizard'\r\nimport 'vue-form-wizard/dist/vue-form-wizard.min.css'\r\n\r\n// For custom error message\r\nimport { Validator } from 'vee-validate';\r\nconst dict = {\r\n    custom: {\r\n        first_name: {\r\n            required: 'First name is required',\r\n            alpha: \"First name may only contain alphabetic characters\"\r\n        },\r\n        last_name: {\r\n            required: 'Last name is required',\r\n            alpha: \"Last name may only contain alphabetic characters\"\r\n        },\r\n        email: {\r\n            required: 'Email is required',\r\n            email: \"Please enter valid email\"\r\n        },\r\n        job_title: {\r\n            required: 'Job title name is required',\r\n            alpha: \"Job title may only contain alphabetic characters\"\r\n        },\r\n        proposal_title: {\r\n            required: 'Proposal title name is required',\r\n            alpha: \"Proposal title may only contain alphabetic characters\"\r\n        },\r\n        event_name: {\r\n            required: 'Event name is required',\r\n            alpha: \"Event name may only contain alphabetic characters\"\r\n        },\r\n    }\r\n};\r\n\r\n// register custom messages\r\nValidator.localize('en', dict);\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            email: \"\",\r\n            city: \"new-york\",\r\n            proposalTitle: \"\",\r\n            jobTitle: \"\",\r\n            textarea: \"\",\r\n            eventName: \"\",\r\n            eventLocation: \"san-francisco\",\r\n            status: \"plannning\",\r\n            cityOptions: [\r\n                { text: \"New York\", value: \"new-york\" },\r\n                { text: \"Chicago\", value: \"chicago\" },\r\n                { text: \"San Francisco\", value: \"san-francisco\" },\r\n                { text: \"Boston\", value: \"boston\" },\r\n            ],\r\n            statusOptions: [\r\n                { text: \"Plannning\", value: \"plannning\" },\r\n                { text: \"In Progress\", value: \"in progress\" },\r\n                { text: \"Finished\", value: \"finished\" },\r\n            ],\r\n            LocationOptions: [\r\n                { text: \"New York\", value: \"new-york\" },\r\n                { text: \"Chicago\", value: \"chicago\" },\r\n                { text: \"San Francisco\", value: \"san-francisco\" },\r\n                { text: \"Boston\", value: \"boston\" },\r\n            ],\r\n        }\r\n    },\r\n    methods: {\r\n        validateStep1() {\r\n            return new Promise((resolve, reject) => {\r\n                this.$validator.validateAll('step-1').then(result => {\r\n                    if (result) {\r\n                        resolve(true)\r\n                    } else {\r\n                        reject(\"correct all values\");\r\n                    }\r\n                })\r\n            })\r\n        },\r\n        validateStep2() {\r\n            return new Promise((resolve, reject) => {\r\n                this.$validator.validateAll(\"step-2\").then(result => {\r\n                    if (result) {\r\n                        resolve(true)\r\n                    } else {\r\n                        reject(\"correct all values\");\r\n                    }\r\n                })\r\n            })\r\n        },\r\n        validateStep3() {\r\n            return new Promise((resolve, reject) => {\r\n                this.$validator.validateAll(\"step-3\").then(result => {\r\n                    if (result) {\r\n                        alert(\"Form submitted!\");\r\n                        resolve(true)\r\n                    } else {\r\n                        reject(\"correct all values\");\r\n                    }\r\n                })\r\n            })\r\n        }\r\n    },\r\n    components: {\r\n        FormWizard,\r\n        TabContent\r\n    }\r\n}\r\n</script>\r\n"],"sourceRoot":"src/views/forms/form-wizard"}]}