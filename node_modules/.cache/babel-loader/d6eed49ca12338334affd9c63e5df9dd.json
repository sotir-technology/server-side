{"remainingRequest":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js!C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\xampp\\htdocs\\GIT\\server-side\\src\\store\\chat\\moduleChatGetters.js","dependencies":[{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\src\\store\\chat\\moduleChatGetters.js","mtime":1567376724584},{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1567428497170},{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1567428476521},{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\eslint-loader\\index.js","mtime":1567522965794}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.map\";\nimport \"core-js/modules/es6.array.sort\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/es6.array.find\";\n\n/*=========================================================================================\r\n  File Name: moduleChatGetters.js\r\n  Description: Chat Module Getters\r\n  ----------------------------------------------------------------------------------------\r\n  Item Name: Vuesax Admin - VueJS Dashboard Admin Template\r\n  Author: Pixinvent\r\n  Author URL: http://www.themeforest.net/user/pixinvent\r\n==========================================================================================*/\nimport contacts from '@/views/apps/chat/contacts';\nexport default {\n  chatDataOfUser: function chatDataOfUser(state) {\n    return function (id) {\n      return state.chats[Object.keys(state.chats).find(function (key) {\n        return key == id;\n      })];\n    };\n  },\n  chats: function chats(state, getters) {\n    var chatArray = contacts.filter(function (contact) {\n      if (getters.chatDataOfUser(contact.id)) return contact.name.toLowerCase().includes(state.chatSearchQuery.toLowerCase()) && getters.chatDataOfUser(contact.id).msg.length > 0;\n    });\n    return chatArray.sort(function (x, y) {\n      var timeX = getters.chatLastMessaged(x.id).time;\n      var timeY = getters.chatLastMessaged(y.id).time;\n      return new Date(timeY) - new Date(timeX);\n    });\n  },\n  chatcontacts: function chatcontacts(state) {\n    return contacts.filter(function (contact) {\n      return contact.name.toLowerCase().includes(state.chatSearchQuery.toLowerCase());\n    });\n  },\n  chatLastMessaged: function chatLastMessaged(state, getters) {\n    return function (id) {\n      if (getters.chatDataOfUser(id)) return getters.chatDataOfUser(id).msg.slice(-1)[0];else return false;\n    };\n  },\n  chatUnseenMessages: function chatUnseenMessages(state, getters) {\n    return function (id) {\n      var unseenMsg = 0;\n      var chatData = getters.chatDataOfUser(id);\n\n      if (chatData) {\n        chatData.msg.map(function (msg) {\n          if (!msg.isSeen && !msg.isSent) unseenMsg++;\n        });\n      }\n\n      return unseenMsg;\n    };\n  }\n};",{"version":3,"sources":["C:\\xampp\\htdocs\\GIT\\server-side\\src\\store\\chat\\moduleChatGetters.js"],"names":["contacts","chatDataOfUser","state","id","chats","Object","keys","find","key","getters","chatArray","filter","contact","name","toLowerCase","includes","chatSearchQuery","msg","length","sort","x","y","timeX","chatLastMessaged","time","timeY","Date","chatcontacts","slice","chatUnseenMessages","unseenMsg","chatData","map","isSeen","isSent"],"mappings":";;;;;;;;;;;AAAA;;;;;;;;AAUA,OAAOA,QAAP,MAAqB,4BAArB;AAEA,eAAe;AACXC,EAAAA,cAAc,EAAE,wBAAAC,KAAK;AAAA,WAAI,UAAAC,EAAE,EAAI;AAC3B,aAAOD,KAAK,CAACE,KAAN,CAAYC,MAAM,CAACC,IAAP,CAAYJ,KAAK,CAACE,KAAlB,EAAyBG,IAAzB,CAA8B,UAAAC,GAAG;AAAA,eAAIA,GAAG,IAAIL,EAAX;AAAA,OAAjC,CAAZ,CAAP;AACH,KAFoB;AAAA,GADV;AAIXC,EAAAA,KAAK,EAAE,eAACF,KAAD,EAAQO,OAAR,EAAoB;AACvB,QAAMC,SAAS,GAAGV,QAAQ,CAACW,MAAT,CAAgB,UAACC,OAAD,EAAa;AAC3C,UAAGH,OAAO,CAACR,cAAR,CAAuBW,OAAO,CAACT,EAA/B,CAAH,EAAuC,OAAQS,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,CAAoCb,KAAK,CAACc,eAAN,CAAsBF,WAAtB,EAApC,KAA6EL,OAAO,CAACR,cAAR,CAAuBW,OAAO,CAACT,EAA/B,EAAmCc,GAAnC,CAAuCC,MAAvC,GAAgD,CAArI;AAC1C,KAFiB,CAAlB;AAGA,WAAOR,SAAS,CAACS,IAAV,CAAe,UAACC,CAAD,EAAGC,CAAH,EAAS;AAC3B,UAAIC,KAAK,GAAGb,OAAO,CAACc,gBAAR,CAAyBH,CAAC,CAACjB,EAA3B,EAA+BqB,IAA3C;AACA,UAAIC,KAAK,GAAGhB,OAAO,CAACc,gBAAR,CAAyBF,CAAC,CAAClB,EAA3B,EAA+BqB,IAA3C;AACA,aAAQ,IAAIE,IAAJ,CAASD,KAAT,IAAkB,IAAIC,IAAJ,CAASJ,KAAT,CAA1B;AACH,KAJM,CAAP;AAKH,GAbU;AAcXK,EAAAA,YAAY,EAAE,sBAACzB,KAAD;AAAA,WAAWF,QAAQ,CAACW,MAAT,CAAgB,UAACC,OAAD,EAAa;AAClD,aAAOA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,CAAoCb,KAAK,CAACc,eAAN,CAAsBF,WAAtB,EAApC,CAAP;AACH,KAFwB,CAAX;AAAA,GAdH;AAiBXS,EAAAA,gBAAgB,EAAE,0BAACrB,KAAD,EAAQO,OAAR;AAAA,WAAoB,UAAAN,EAAE,EAAI;AACxC,UAAGM,OAAO,CAACR,cAAR,CAAuBE,EAAvB,CAAH,EAA+B,OAAOM,OAAO,CAACR,cAAR,CAAuBE,EAAvB,EAA2Bc,GAA3B,CAA+BW,KAA/B,CAAqC,CAAC,CAAtC,EAAyC,CAAzC,CAAP,CAA/B,KACK,OAAO,KAAP;AACR,KAHiB;AAAA,GAjBP;AAqBXC,EAAAA,kBAAkB,EAAE,4BAAC3B,KAAD,EAAQO,OAAR;AAAA,WAAoB,UAAAN,EAAE,EAAI;AAC1C,UAAI2B,SAAS,GAAG,CAAhB;AACA,UAAMC,QAAQ,GAAGtB,OAAO,CAACR,cAAR,CAAuBE,EAAvB,CAAjB;;AACA,UAAG4B,QAAH,EAAa;AACTA,QAAAA,QAAQ,CAACd,GAAT,CAAae,GAAb,CAAiB,UAACf,GAAD,EAAS;AACtB,cAAG,CAACA,GAAG,CAACgB,MAAL,IAAe,CAAChB,GAAG,CAACiB,MAAvB,EAA+BJ,SAAS;AAC3C,SAFD;AAGH;;AACD,aAAOA,SAAP;AACH,KATmB;AAAA;AArBT,CAAf","sourcesContent":["/*=========================================================================================\r\n  File Name: moduleChatGetters.js\r\n  Description: Chat Module Getters\r\n  ----------------------------------------------------------------------------------------\r\n  Item Name: Vuesax Admin - VueJS Dashboard Admin Template\r\n  Author: Pixinvent\r\n  Author URL: http://www.themeforest.net/user/pixinvent\r\n==========================================================================================*/\r\n\r\n\r\nimport contacts from '@/views/apps/chat/contacts'\r\n\r\nexport default {\r\n    chatDataOfUser: state => id => {\r\n        return state.chats[Object.keys(state.chats).find(key => key == id)]\r\n    },\r\n    chats: (state, getters) => {\r\n        const chatArray = contacts.filter((contact) => {\r\n            if(getters.chatDataOfUser(contact.id)) return (contact.name.toLowerCase().includes(state.chatSearchQuery.toLowerCase()) && (getters.chatDataOfUser(contact.id).msg.length > 0));\r\n        });\r\n        return chatArray.sort((x,y) => {\r\n            let timeX = getters.chatLastMessaged(x.id).time\r\n            let timeY = getters.chatLastMessaged(y.id).time\r\n            return (new Date(timeY) - new Date(timeX))\r\n        });\r\n    },\r\n    chatcontacts: (state) => contacts.filter((contact) => {\r\n        return contact.name.toLowerCase().includes(state.chatSearchQuery.toLowerCase())\r\n    }),\r\n    chatLastMessaged: (state, getters) => id => {\r\n        if(getters.chatDataOfUser(id)) return getters.chatDataOfUser(id).msg.slice(-1)[0];\r\n        else return false\r\n    },\r\n    chatUnseenMessages: (state, getters) => id => {\r\n        let unseenMsg = 0;\r\n        const chatData = getters.chatDataOfUser(id);\r\n        if(chatData) {\r\n            chatData.msg.map((msg) => {\r\n                if(!msg.isSeen && !msg.isSent) unseenMsg++;\r\n            })\r\n        }\r\n        return unseenMsg;\r\n    },\r\n}"]}]}