{"remainingRequest":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js!C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\xampp\\htdocs\\GIT\\server-side\\src\\store\\auth\\moduleAuthActions.js","dependencies":[{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\src\\store\\auth\\moduleAuthActions.js","mtime":1568385669024},{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1567428497170},{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1567428476521},{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\eslint-loader\\index.js","mtime":1567522965794}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\n\n/*=========================================================================================\r\n  File Name: moduleAuthActions.js\r\n  Description: Auth Module Actions\r\n  ----------------------------------------------------------------------------------------\r\n  Item Name: Vuesax Admin - VueJS Dashboard Admin Template\r\n  Author: Pixinvent\r\n  Author URL: http://www.themeforest.net/user/pixinvent\r\n==========================================================================================*/\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport router from '@/router';\nimport axios from 'axios';\nexport default {\n  registerAttempt: function registerAttempt(_ref, payload) {\n    var dispatch = _ref.dispatch;\n    var newPayload = {\n      userDetails: payload.userDetails,\n      notify: payload.notify,\n      stop: payload.stopLoading\n    };\n    dispatch('register', newPayload);\n  },\n  register: function register(_ref2, payload) {\n    var commit = _ref2.commit,\n        state = _ref2.state;\n\n    if (state.isUserLoggedIn) {\n      payload.notify({\n        title: 'Registration Attempt',\n        text: 'You are already Registered!',\n        iconPack: 'feather',\n        icon: 'icon-alert-circle',\n        color: 'warning'\n      });\n      return false;\n    }\n\n    axios({\n      url: 'http://api.churcha2z.org/user/create/?ssk=801fe414298dc26cbd0f7f52cca001fc928142bd',\n      method: 'post',\n      data: {\n        name: payload.userDetails.name,\n        phone: payload.userDetails.phone,\n        password: payload.userDetails.password,\n        country: payload.userDetails.password,\n        state: payload.userDetails.state,\n        street: payload.userDetails.street,\n        email: payload.userDetails.email\n      }\n    }, {\n      header: {\n        'content-length': \"86\",\n        'content-type': \"application/json\"\n      }\n    }).then(function (result) {\n      if (result.data.status) {\n        var userDetails = result.data.data;\n        console.log(userDetails);\n        commit('UPDATE_AUTHENTICATED_USER', userDetails); // router.push(router.currentRoute.query.to || '/');\n      }\n\n      payload.stop.close(\"#button-with-loading > .con-vs-loading\");\n    }, function (err) {\n      payload.notify({\n        time: 2500,\n        title: 'Error',\n        text: err.message,\n        iconPack: 'feather',\n        icon: 'icon-alert-circle',\n        color: 'danger'\n      });\n      payload.stop.close(\"#button-with-loading > .con-vs-loading\");\n    });\n  },\n  loginAttempt: function loginAttempt(_ref3, payload) {\n    var dispatch = _ref3.dispatch;\n    var newPayload = {\n      userDetails: payload.userDetails,\n      notify: payload.notify,\n      stop: payload.stopLoading\n    };\n\n    if (!payload.checkbox_remember_me) {\n      localStorage.setItem('remember_me', false);\n      dispatch('login', newPayload);\n    } else {\n      // localStorage.setItem('remember_me', true);\n      dispatch('login', newPayload);\n    }\n  },\n  login: function login(_ref4, payload) {\n    var commit = _ref4.commit,\n        state = _ref4.state;\n\n    if (state.isUserLoggedIn) {\n      payload.notify({\n        title: 'Login Attempt',\n        text: 'You are already logged in!',\n        iconPack: 'feather',\n        icon: 'icon-alert-circle',\n        color: 'warning'\n      });\n      return false;\n    }\n\n    axios({\n      url: 'http://api.churcha2z.org/user/login/?ssk=801fe414298dc26cbd0f7f52cca001fc928142bd',\n      method: 'post',\n      data: {\n        email: payload.userDetails.email,\n        password: payload.userDetails.password\n      }\n    }, {\n      header: {\n        'content-length': \"86\",\n        'content-type': \"application/json\"\n      }\n    }).then(function (result) {\n      var userDetails = result.data.data;\n      console.log(userDetails);\n      commit('UPDATE_AUTHENTICATED_USER', userDetails); // router.push(router.currentRoute.query.to || '/');\n      //\n\n      payload.stop.close(\"#button-with-loading > .con-vs-loading\");\n    }, function (err) {\n      payload.notify({\n        time: 2500,\n        title: 'Error',\n        text: err.message,\n        iconPack: 'feather',\n        icon: 'icon-alert-circle',\n        color: 'danger'\n      });\n      payload.stop.close(\"#button-with-loading > .con-vs-loading\");\n    });\n  },\n  // Google Login\n  loginWithGoogle: function loginWithGoogle(_ref5, payload) {\n    var commit = _ref5.commit,\n        state = _ref5.state;\n\n    if (state.isUserLoggedIn()) {\n      payload.notify({\n        title: 'Login Attempt',\n        text: 'You are already logged in!',\n        iconPack: 'feather',\n        icon: 'icon-alert-circle',\n        color: 'warning'\n      });\n      return false;\n    }\n\n    var provider = new firebase.auth.GoogleAuthProvider();\n    firebase.auth().signInWithPopup(provider).then(function (result) {\n      router.push(router.currentRoute.query.to || '/');\n      commit('UPDATE_AUTHENTICATED_USER', result.user.providerData[0]);\n    }).catch(function (err) {\n      payload.notify({\n        time: 2500,\n        title: 'Error',\n        text: err.message,\n        iconPack: 'feather',\n        icon: 'icon-alert-circle',\n        color: 'danger'\n      });\n    });\n    firebase.auth().onAuthStateChanged(function (user) {\n      if (user) {\n        user.updateProfile({\n          roles: ['admin']\n        }).then(function () {\n          // Profile updated successfully!\n          // Login user\n          console.log('success'); // this.$vs.notify({\n          //     title: 'Success',\n          //     text: \"done\",\n          //     iconPack: 'feather',\n          //     icon: 'icon-check',\n          //     color: 'success'\n          // });\n        }, function (error) {\n          console.log(\"uiiiiiiiii\");\n          console.log(error.message); // this.$vs.notify({\n          //     title: 'Error',\n          //     text: error.message,\n          //     iconPack: 'feather',\n          //     icon: 'icon-alert-circle',\n          //     color: 'danger'\n          // });\n        });\n      }\n    });\n  },\n  // Facebook Login\n  loginWithFacebook: function loginWithFacebook(_ref6, payload) {\n    var commit = _ref6.commit,\n        state = _ref6.state;\n\n    if (state.isUserLoggedIn()) {\n      payload.notify({\n        title: 'Login Attempt',\n        text: 'You are already logged in!',\n        iconPack: 'feather',\n        icon: 'icon-alert-circle',\n        color: 'warning'\n      });\n      return false;\n    }\n\n    var provider = new firebase.auth.FacebookAuthProvider();\n    firebase.auth().signInWithPopup(provider).then(function (result) {\n      router.push(router.currentRoute.query.to || '/');\n      commit('UPDATE_AUTHENTICATED_USER', result.user.providerData[0]);\n    }).catch(function (err) {\n      payload.notify({\n        time: 2500,\n        title: 'Error',\n        text: err.message,\n        iconPack: 'feather',\n        icon: 'icon-alert-circle',\n        color: 'danger'\n      });\n    });\n  },\n  // Twitter Login\n  loginWithTwitter: function loginWithTwitter(_ref7, payload) {\n    var commit = _ref7.commit,\n        state = _ref7.state;\n\n    if (state.isUserLoggedIn()) {\n      payload.notify({\n        title: 'Login Attempt',\n        text: 'You are already logged in!',\n        iconPack: 'feather',\n        icon: 'icon-alert-circle',\n        color: 'warning'\n      });\n      return false;\n    }\n\n    var provider = new firebase.auth.TwitterAuthProvider();\n    firebase.auth().signInWithPopup(provider).then(function (result) {\n      router.push(router.currentRoute.query.to || '/');\n      commit('UPDATE_AUTHENTICATED_USER', result.user.providerData[0]);\n    }).catch(function (err) {\n      payload.notify({\n        time: 2500,\n        title: 'Error',\n        text: err.message,\n        iconPack: 'feather',\n        icon: 'icon-alert-circle',\n        color: 'danger'\n      });\n    });\n  },\n  // Github Login\n  loginWithGithub: function loginWithGithub(_ref8, payload) {\n    var commit = _ref8.commit,\n        state = _ref8.state;\n\n    if (state.isUserLoggedIn()) {\n      payload.notify({\n        title: 'Login Attempt',\n        text: 'You are already logged in!',\n        iconPack: 'feather',\n        icon: 'icon-alert-circle',\n        color: 'warning'\n      });\n      return false;\n    }\n\n    var provider = new firebase.auth.GithubAuthProvider();\n    firebase.auth().signInWithPopup(provider).then(function (result) {\n      router.push(router.currentRoute.query.to || '/');\n      commit('UPDATE_AUTHENTICATED_USER', result.user.providerData[0]);\n    }).catch(function (err) {\n      payload.notify({\n        time: 2500,\n        title: 'Error',\n        text: err.message,\n        iconPack: 'feather',\n        icon: 'icon-alert-circle',\n        color: 'danger'\n      });\n    });\n  },\n  updateAuthenticatedUser: function updateAuthenticatedUser(_ref9, payload) {\n    var commit = _ref9.commit;\n    commit('UPDATE_AUTHENTICATED_USER', payload);\n  }\n};",{"version":3,"sources":["C:\\xampp\\htdocs\\GIT\\server-side\\src\\store\\auth\\moduleAuthActions.js"],"names":["firebase","router","axios","registerAttempt","payload","dispatch","newPayload","userDetails","notify","stop","stopLoading","register","commit","state","isUserLoggedIn","title","text","iconPack","icon","color","url","method","data","name","phone","password","country","street","email","header","then","result","status","console","log","close","err","time","message","loginAttempt","checkbox_remember_me","localStorage","setItem","login","loginWithGoogle","provider","auth","GoogleAuthProvider","signInWithPopup","push","currentRoute","query","to","user","providerData","catch","onAuthStateChanged","updateProfile","roles","error","loginWithFacebook","FacebookAuthProvider","loginWithTwitter","TwitterAuthProvider","loginWithGithub","GithubAuthProvider","updateAuthenticatedUser"],"mappings":"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","sourcesContent":["/*=========================================================================================\r\n  File Name: moduleAuthActions.js\r\n  Description: Auth Module Actions\r\n  ----------------------------------------------------------------------------------------\r\n  Item Name: Vuesax Admin - VueJS Dashboard Admin Template\r\n  Author: Pixinvent\r\n  Author URL: http://www.themeforest.net/user/pixinvent\r\n==========================================================================================*/\r\n\r\n\r\nimport firebase from 'firebase/app'\r\nimport 'firebase/auth'\r\nimport router from '@/router'\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n\r\n    registerAttempt({ dispatch }, payload) {\r\n        const newPayload = {\r\n            userDetails: payload.userDetails,\r\n            notify: payload.notify,\r\n            stop: payload.stopLoading\r\n        }\r\n        dispatch('register', newPayload);\r\n\r\n    },\r\n    register({ commit, state }, payload) {\r\n        if (state.isUserLoggedIn) {\r\n            payload.notify({\r\n                title: 'Registration Attempt',\r\n                text: 'You are already Registered!',\r\n                iconPack: 'feather',\r\n                icon: 'icon-alert-circle',\r\n                color: 'warning'\r\n            });\r\n            return false\r\n        }\r\n\r\n        axios({\r\n                url: 'http://api.churcha2z.org/user/create/?ssk=801fe414298dc26cbd0f7f52cca001fc928142bd',\r\n                method:'post',\r\n                data:{\r\n                    name: payload.userDetails.name,\r\n                    phone: payload.userDetails.phone,\r\n                    password: payload.userDetails.password,\r\n                    country: payload.userDetails.password,\r\n                    state: payload.userDetails.state,\r\n                    street: payload.userDetails.street,\r\n                    email:   payload.userDetails.email\r\n                }\r\n            },\r\n            {\r\n                header: {\r\n                    'content-length': \"86\",\r\n                    'content-type': \"application/json\",\r\n\r\n                }\r\n            })\r\n            .then((result) => {\r\n            if(result.data.status) {\r\n                const userDetails = result.data.data\r\n                console.log(userDetails);\r\n                commit('UPDATE_AUTHENTICATED_USER', userDetails)\r\n                // router.push(router.currentRoute.query.to || '/');\r\n            }\r\n                payload.stop.close(\"#button-with-loading > .con-vs-loading\");\r\n                },\r\n                (err) => {\r\n                    payload.notify({\r\n                        time: 2500,\r\n                        title: 'Error',\r\n                        text: err.message,\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-alert-circle',\r\n                        color: 'danger'\r\n                    });\r\n                    payload.stop.close(\"#button-with-loading > .con-vs-loading\");\r\n                }\r\n\r\n        )\r\n    },\r\n    loginAttempt({ dispatch }, payload) {\r\n        const newPayload = {\r\n            userDetails: payload.userDetails,\r\n            notify: payload.notify,\r\n            stop: payload.stopLoading\r\n        }\r\n        if (!payload.checkbox_remember_me) {\r\n             localStorage.setItem('remember_me', false);\r\n                    dispatch('login', newPayload)\r\n        }\r\n        else {\r\n            // localStorage.setItem('remember_me', true);\r\n            dispatch('login', newPayload)\r\n        }\r\n    },\r\n\r\n    login({ commit, state }, payload) {\r\n        if (state.isUserLoggedIn) {\r\n            payload.notify({\r\n                title: 'Login Attempt',\r\n                text: 'You are already logged in!',\r\n                iconPack: 'feather',\r\n                icon: 'icon-alert-circle',\r\n                color: 'warning'\r\n            });\r\n            return false\r\n        }\r\n\r\n        axios({\r\n                url: 'http://api.churcha2z.org/user/login/?ssk=801fe414298dc26cbd0f7f52cca001fc928142bd',\r\n                method:'post',\r\n                data:{\r\n                email:   payload.userDetails.email,\r\n                password: payload.userDetails.password\r\n                }\r\n            },\r\n                {\r\n                    header: {\r\n                        'content-length': \"86\",\r\n                        'content-type': \"application/json\",\r\n\r\n                    }\r\n                })\r\n            .then((result) => {\r\n           const userDetails = result.data.data\r\n            console.log(userDetails);\r\n            commit('UPDATE_AUTHENTICATED_USER', userDetails)\r\n            // router.push(router.currentRoute.query.to || '/');\r\n                //\r\n                    payload.stop.close(\"#button-with-loading > .con-vs-loading\");\r\n\r\n            },\r\n                (err) => {\r\n                payload.notify({\r\n                    time: 2500,\r\n                    title: 'Error',\r\n                    text: err.message,\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-alert-circle',\r\n                    color: 'danger'\r\n                });\r\n                    payload.stop.close(\"#button-with-loading > .con-vs-loading\");\r\n            })\r\n    },\r\n\r\n    // Google Login\r\n    loginWithGoogle({commit, state}, payload) {\r\n        if (state.isUserLoggedIn()) {\r\n            payload.notify({\r\n                title: 'Login Attempt',\r\n                text: 'You are already logged in!',\r\n                iconPack: 'feather',\r\n                icon: 'icon-alert-circle',\r\n                color: 'warning'\r\n            });\r\n            return false\r\n        }\r\n        const provider = new firebase.auth.GoogleAuthProvider();\r\n\r\n        firebase.auth().signInWithPopup(provider)\r\n            .then((result) => {\r\n                router.push(router.currentRoute.query.to || '/');\r\n                commit('UPDATE_AUTHENTICATED_USER', result.user.providerData[0])\r\n            }).catch((err) => {\r\n                payload.notify({\r\n                    time: 2500,\r\n                    title: 'Error',\r\n                    text: err.message,\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-alert-circle',\r\n                    color: 'danger'\r\n                });\r\n            })\r\n        firebase.auth().onAuthStateChanged(function(user) {\r\n            if (user) {\r\n                user.updateProfile({\r\n                    roles: ['admin'],\r\n                }).then(function() {\r\n                    // Profile updated successfully!\r\n                    // Login user\r\n                    console.log('success');\r\n                    // this.$vs.notify({\r\n                    //     title: 'Success',\r\n                    //     text: \"done\",\r\n                    //     iconPack: 'feather',\r\n                    //     icon: 'icon-check',\r\n                    //     color: 'success'\r\n                    // });\r\n                }, function(error) {\r\n                    console.log(\"uiiiiiiiii\");\r\n                    console.log(error.message);\r\n                    // this.$vs.notify({\r\n                    //     title: 'Error',\r\n                    //     text: error.message,\r\n                    //     iconPack: 'feather',\r\n                    //     icon: 'icon-alert-circle',\r\n                    //     color: 'danger'\r\n                    // });\r\n                });\r\n\r\n            }\r\n        });\r\n    },\r\n\r\n    // Facebook Login\r\n    loginWithFacebook({commit, state}, payload) {\r\n        if (state.isUserLoggedIn()) {\r\n            payload.notify({\r\n                title: 'Login Attempt',\r\n                text: 'You are already logged in!',\r\n                iconPack: 'feather',\r\n                icon: 'icon-alert-circle',\r\n                color: 'warning'\r\n            });\r\n            return false\r\n        }\r\n        const provider = new firebase.auth.FacebookAuthProvider();\r\n\r\n        firebase.auth().signInWithPopup(provider)\r\n            .then((result) => {\r\n                router.push(router.currentRoute.query.to || '/');\r\n                commit('UPDATE_AUTHENTICATED_USER', result.user.providerData[0])\r\n            }).catch((err) => {\r\n                payload.notify({\r\n                    time: 2500,\r\n                    title: 'Error',\r\n                    text: err.message,\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-alert-circle',\r\n                    color: 'danger'\r\n                });\r\n            })\r\n    },\r\n\r\n    // Twitter Login\r\n    loginWithTwitter({commit, state}, payload) {\r\n        if (state.isUserLoggedIn()) {\r\n            payload.notify({\r\n                title: 'Login Attempt',\r\n                text: 'You are already logged in!',\r\n                iconPack: 'feather',\r\n                icon: 'icon-alert-circle',\r\n                color: 'warning'\r\n            });\r\n            return false\r\n        }\r\n        const provider = new firebase.auth.TwitterAuthProvider();\r\n\r\n        firebase.auth().signInWithPopup(provider)\r\n            .then((result) => {\r\n                router.push(router.currentRoute.query.to || '/');\r\n                commit('UPDATE_AUTHENTICATED_USER', result.user.providerData[0])\r\n            }).catch((err) => {\r\n                payload.notify({\r\n                    time: 2500,\r\n                    title: 'Error',\r\n                    text: err.message,\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-alert-circle',\r\n                    color: 'danger'\r\n                });\r\n            })\r\n    },\r\n\r\n    // Github Login\r\n    loginWithGithub({commit, state}, payload) {\r\n        if (state.isUserLoggedIn()) {\r\n            payload.notify({\r\n                title: 'Login Attempt',\r\n                text: 'You are already logged in!',\r\n                iconPack: 'feather',\r\n                icon: 'icon-alert-circle',\r\n                color: 'warning'\r\n            });\r\n            return false\r\n        }\r\n        const provider = new firebase.auth.GithubAuthProvider();\r\n\r\n        firebase.auth().signInWithPopup(provider)\r\n            .then((result) => {\r\n                router.push(router.currentRoute.query.to || '/');\r\n                commit('UPDATE_AUTHENTICATED_USER', result.user.providerData[0])\r\n            }).catch((err) => {\r\n                payload.notify({\r\n                    time: 2500,\r\n                    title: 'Error',\r\n                    text: err.message,\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-alert-circle',\r\n                    color: 'danger'\r\n                });\r\n            })\r\n    },\r\n    updateAuthenticatedUser({ commit }, payload) {\r\n        commit('UPDATE_AUTHENTICATED_USER', payload)\r\n    }\r\n}\r\n"]}]}