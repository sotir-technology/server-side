{"remainingRequest":"C:\\Users\\Message Akunna\\Documents\\workspace\\vuejs\\sotire technology\\new\\server-side\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Message Akunna\\Documents\\workspace\\vuejs\\sotire technology\\new\\server-side\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Message Akunna\\Documents\\workspace\\vuejs\\sotire technology\\new\\server-side\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Message Akunna\\Documents\\workspace\\vuejs\\sotire technology\\new\\server-side\\src\\layouts\\churcha2z\\components\\vx-sidebar\\VxSidebar.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Message Akunna\\Documents\\workspace\\vuejs\\sotire technology\\new\\server-side\\src\\layouts\\churcha2z\\components\\vx-sidebar\\VxSidebar.vue","mtime":1567769939387},{"path":"C:\\Users\\Message Akunna\\Documents\\workspace\\vuejs\\sotire technology\\new\\server-side\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1567769201670},{"path":"C:\\Users\\Message Akunna\\Documents\\workspace\\vuejs\\sotire technology\\new\\server-side\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1567769166513},{"path":"C:\\Users\\Message Akunna\\Documents\\workspace\\vuejs\\sotire technology\\new\\server-side\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1567769201670},{"path":"C:\\Users\\Message Akunna\\Documents\\workspace\\vuejs\\sotire technology\\new\\server-side\\node_modules\\vue-loader\\lib\\index.js","mtime":1567769589298}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.array.reduce\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport VuePerfectScrollbar from 'vue-perfect-scrollbar';\nimport VxSidebarGroup from './VxSidebarGroup.vue';\nimport VxSidebarItem from './VxSidebarItem.vue';\nexport default {\n  name: 'vx-sidebar',\n  props: {\n    sidebarItems: {\n      type: Array,\n      required: true\n    },\n    title: {\n      type: String\n    },\n    logo: {\n      type: String\n    },\n    parent: {\n      type: String\n    },\n    openGroupHover: {\n      type: Boolean,\n      default: false\n    },\n    reduceNotRebound: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data: function data() {\n    return {\n      clickNotClose: false,\n      // disable close sidebar on outside click\n      reduce: false,\n      // determines if sidebar is reduce - component property\n      showCloseButton: false,\n      // show close button in smaller devices\n      isMouseEnter: false,\n      settings: {\n        // perfectscrollbar settings\n        maxScrollbarLength: 60,\n        wheelSpeed: 1,\n        swipeEasing: true\n      },\n      windowWidth: window.innerWidth,\n      //width of windows\n      showShadowBottom: false\n    };\n  },\n  computed: {\n    isSidebarActive: {\n      get: function get() {\n        return this.$store.state.isSidebarActive;\n      },\n      set: function set(val) {\n        this.$store.commit('TOGGLE_IS_SIDEBAR_ACTIVE', val);\n      }\n    },\n    reduceSidebar: function reduceSidebar() {\n      return Boolean(this.reduce && this.reduceButton);\n    },\n    reduceButton: {\n      get: function get() {\n        return this.$store.state.reduceButton;\n      },\n      set: function set(val) {\n        this.$store.commit('TOGGLE_REDUCE_BUTTON', val);\n      }\n    },\n    sidebarItemsMin: function sidebarItemsMin() {\n      return this.$store.state.sidebarItemsMin;\n    },\n    isGroupActive: function isGroupActive() {\n      var _this = this;\n\n      return function (sidebarItem) {\n        var path = _this.$route.fullPath;\n        var open = false;\n\n        var func = function func(sidebarItem) {\n          if (sidebarItem.submenu) {\n            sidebarItem.submenu.forEach(function (item) {\n              if (path == item.url) {\n                open = true;\n              } else if (item.submenu) {\n                func(item);\n              }\n            });\n          }\n        };\n\n        func(sidebarItem);\n        return open;\n      };\n    }\n  },\n  watch: {\n    reduce: function reduce(val) {\n      if (val == true) {\n        this.$store.dispatch('updateSidebarWidth', 'reduced');\n      } else {\n        this.$store.dispatch('updateSidebarWidth', 'default');\n      }\n\n      setTimeout(function () {\n        window.dispatchEvent(new Event('resize'));\n      }, 100);\n    },\n    reduceButton: function reduceButton() {\n      this.setSidebarWidth();\n    },\n    '$route': function $route() {\n      if (this.isSidebarActive && this.showCloseButton) this.$store.commit('TOGGLE_IS_SIDEBAR_ACTIVE', false);\n    }\n  },\n  methods: {\n    sidebarMouseEntered: function sidebarMouseEntered() {\n      if (this.reduce) this.$store.commit('UPDATE_SIDEBAR_ITEMS_MIN', false);\n      this.isMouseEnter = true;\n    },\n    sidebarMouseLeave: function sidebarMouseLeave() {\n      if (this.reduce) {\n        this.$store.commit('UPDATE_SIDEBAR_ITEMS_MIN', true);\n      }\n\n      this.isMouseEnter = false;\n    },\n    toggleReduce: function toggleReduce(val) {\n      this.reduceButton = val;\n      this.setSidebarWidth();\n    },\n    handleWindowResize: function handleWindowResize(event) {\n      this.windowWidth = event.currentTarget.innerWidth;\n      this.setSidebarWidth();\n    },\n    setSidebarWidth: function setSidebarWidth() {\n      if (this.windowWidth < 1200) {\n        if (this.windowWidth < 992) this.$store.commit('UPDATE_WINDOW_BREAKPOINT', 'md');else this.$store.commit('UPDATE_WINDOW_BREAKPOINT', 'lg');\n        this.$store.commit('TOGGLE_IS_SIDEBAR_ACTIVE', false);\n        if (this.reduceButton) this.reduce = false; // this.reduceButton = false;\n\n        this.showCloseButton = true;\n        this.clickNotClose = false;\n        this.$store.dispatch('updateSidebarWidth', 'no-sidebar');\n        this.$store.commit('UPDATE_SIDEBAR_ITEMS_MIN', false);\n      } else {\n        this.$store.commit('UPDATE_WINDOW_BREAKPOINT', 'xl');\n        if (this.reduceButton) this.reduce = true;else this.reduce = false;\n        this.$store.commit('TOGGLE_IS_SIDEBAR_ACTIVE', true);\n        if (this.reduceButton && !this.isMouseEnter) this.$store.commit('UPDATE_SIDEBAR_ITEMS_MIN', true);else this.$store.commit('UPDATE_SIDEBAR_ITEMS_MIN', false);\n        this.clickNotClose = true;\n        this.showCloseButton = false;\n        if (this.reduceSidebar) this.$store.dispatch('updateSidebarWidth', 'reduced');else this.$store.dispatch('updateSidebarWidth', 'default');\n      }\n    },\n    psSectionScroll: function psSectionScroll() {\n      if (this.$refs.mainSidebarPs.$el.scrollTop > 0) this.showShadowBottom = true;else this.showShadowBottom = false;\n    }\n  },\n  components: {\n    VxSidebarGroup: VxSidebarGroup,\n    VxSidebarItem: VxSidebarItem,\n    VuePerfectScrollbar: VuePerfectScrollbar\n  },\n  mounted: function mounted() {\n    var _this2 = this;\n\n    this.$nextTick(function () {\n      window.addEventListener('resize', _this2.handleWindowResize);\n    });\n    this.setSidebarWidth();\n  },\n  beforeDestroy: function beforeDestroy() {\n    window.removeEventListener('resize', this.handleWindowResize);\n  }\n};",{"version":3,"sources":["VxSidebar.vue"],"names":[],"mappings":"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","sourcesContent":["<!-- =========================================================================================\n    File Name: VxSidebar.vue\n    Description: Sidebar Component\n    Component Name: VxSidebar\n    ----------------------------------------------------------------------------------------\n    Item Name: Vuesax Admin - VueJS Dashboard Admin Template\n      Author: Pixinvent\n    Author URL: http://www.themeforest.net/user/pixinvent\n========================================================================================== -->\n\n\n<template>\n    <div class=\"parentx\">\n        <vs-sidebar ref=\"mainSidebar\" :parent=\"parent\" :hiddenBackground=\"clickNotClose\" :reduce=\"reduce\" default-index=\"-1\" class=\"sidebarx main-menu-sidebar items-no-padding\" v-model=\"isSidebarActive\" :click-not-close=\"clickNotClose\" :reduce-not-rebound=\"reduceNotRebound\">\n            <div @mouseenter=\"sidebarMouseEntered\" @mouseleave=\"sidebarMouseLeave\">\n                <div class=\"header-sidebar flex items-end justify-between\" slot=\"header\">\n                    <div class=\"logo flex items-center\">\n                        <img :src=\"logo\" alt=\"logo\" class=\"w-10 mr-4\" v-if=\"logo\">\n                        <span class=\"logo-text\" v-show=\"isMouseEnter || !reduce\" v-if=\"title\">{{ title }}</span>\n                    </div>\n                    <div>\n                        <template v-if=\"showCloseButton\">\n                            <feather-icon icon=\"XIcon\" class=\"m-0 cursor-pointer\" @click=\"$store.commit('TOGGLE_IS_SIDEBAR_ACTIVE', false)\"></feather-icon>\n                        </template>\n                        <template v-else-if=\"!showCloseButton && !sidebarItemsMin\">\n                            <feather-icon icon=\"DiscIcon\" class=\"mr-0 cursor-pointer\" svg-classes=\"stroke-current\" v-show=\"!reduce\" @click=\"toggleReduce(true)\" id=\"btnSidebarToggler\"></feather-icon>\n                            <feather-icon icon=\"CircleIcon\" class=\"mr-0 cursor-pointer\" svg-classes=\"stroke-current\" v-show=\"reduce\" @click=\"toggleReduce(false)\" id=\"btnSidebarToggler\"></feather-icon>\n                        </template>\n                    </div>\n                </div>\n\n                <div class=\"shadow-bottom\" v-show=\"showShadowBottom\"></div>\n\n                <VuePerfectScrollbar ref=\"mainSidebarPs\" class=\"scroll-area--main-sidebar pt-2\" :settings=\"settings\" @ps-scroll-y=\"psSectionScroll\">\n                    <template v-for=\"(sidebarItem, index) in sidebarItems\">\n\n                        <!-- GROUP ITEM HEADER -->\n                        <span :key=\"`header-${index}`\" v-if=\"sidebarItem.header && !sidebarItemsMin\" class=\"navigation-header truncate\">{{ $t(sidebarItem.i18n) || sidebarItem.header }}</span>\n                        <template v-else-if=\"!sidebarItem.header\">\n\n                            <!-- IF IT'S SINGLE ITEM -->\n                            <vx-sidebar-item ref=\"sidebarLink\" :key=\"`sidebarItem-${index}`\" v-if=\"!sidebarItem.submenu\" :index=\"index\" :to=\"sidebarItem.slug != 'external' ? sidebarItem.url : ''\" :href=\"sidebarItem.slug == 'external' ? sidebarItem.url : ''\" :icon=\"sidebarItem.icon\" :target=\"sidebarItem.target\" :isDisabled=\"sidebarItem.isDisabled\">\n                                <span v-show=\"!sidebarItemsMin\" class=\"truncate\">{{ $t(sidebarItem.i18n) || sidebarItem.name }}</span>\n                                <vs-chip class=\"ml-auto\" :color=\"sidebarItem.tagColor\" v-if=\"sidebarItem.tag && (isMouseEnter || !reduce)\">{{ sidebarItem.tag }}</vs-chip>\n                            </vx-sidebar-item>\n\n                            <!-- IF HAVE SUBMENU / DROPDOWN -->\n                            <template v-else>\n                                <vx-sidebar-group ref=\"sidebarGrp\" :key=\"`group-${index}`\" :openHover=\"openGroupHover\" :group=\"sidebarItem\" :groupIndex=\"index\" :open=\"isGroupActive(sidebarItem)\"></vx-sidebar-group>\n                            </template>\n                        </template>\n                    </template>\n                </VuePerfectScrollbar>\n            </div>\n        </vs-sidebar>\n    </div>\n</template>\n\n<script>\nimport VuePerfectScrollbar from 'vue-perfect-scrollbar'\nimport VxSidebarGroup from './VxSidebarGroup.vue';\nimport VxSidebarItem  from './VxSidebarItem.vue';\n\nexport default {\n    name: 'vx-sidebar',\n    props: {\n        sidebarItems: {\n            type: Array,\n            required: true,\n        },\n        title: {\n            type: String,\n        },\n        logo: {\n            type: String\n        },\n        parent: {\n            type: String\n        },\n        openGroupHover: {\n            type: Boolean,\n            default: false\n        },\n        reduceNotRebound: {\n            type: Boolean,\n            default: true,\n        }\n    },\n    data: () => ({\n        clickNotClose: false, // disable close sidebar on outside click\n        reduce: false, // determines if sidebar is reduce - component property\n        showCloseButton: false, // show close button in smaller devices\n        isMouseEnter: false,\n        settings: { // perfectscrollbar settings\n            maxScrollbarLength: 60,\n            wheelSpeed: 1,\n            swipeEasing: true\n        },\n        windowWidth: window.innerWidth, //width of windows\n        showShadowBottom: false,\n    }),\n    computed: {\n        isSidebarActive: {\n            get() {\n                return this.$store.state.isSidebarActive\n            },\n            set(val) {\n              this.$store.commit('TOGGLE_IS_SIDEBAR_ACTIVE', val)\n            }\n        },\n        reduceSidebar() {\n            return Boolean(this.reduce && this.reduceButton)\n        },\n        reduceButton: {\n            get() {\n                return this.$store.state.reduceButton;\n            },\n            set(val) {\n                this.$store.commit('TOGGLE_REDUCE_BUTTON', val)\n            }\n        },\n        sidebarItemsMin() {\n            return this.$store.state.sidebarItemsMin;\n        },\n        isGroupActive() {\n            return (sidebarItem) => {\n                const path = this.$route.fullPath;\n                let open = false;\n                let func = function(sidebarItem) {\n                    if (sidebarItem.submenu) {\n                        sidebarItem.submenu.forEach((item) => {\n                            if (path == item.url) { open = true }\n                            else if (item.submenu) { func(item) }\n                        })\n                    }\n                }\n                func(sidebarItem)\n                return open\n            }\n        },\n    },\n    watch: {\n        reduce(val) {\n\n            if (val == true) {\n                this.$store.dispatch('updateSidebarWidth', 'reduced');\n\n            } else {\n                this.$store.dispatch('updateSidebarWidth', 'default');\n            }\n\n            setTimeout(function(){\n                window.dispatchEvent(new Event('resize'));\n            }, 100);\n        },\n        reduceButton() {\n            this.setSidebarWidth();\n        },\n        '$route'() {\n            if(this.isSidebarActive && this.showCloseButton) this.$store.commit('TOGGLE_IS_SIDEBAR_ACTIVE', false);\n        },\n    },\n    methods: {\n        sidebarMouseEntered() {\n            if (this.reduce) this.$store.commit('UPDATE_SIDEBAR_ITEMS_MIN', false)\n            this.isMouseEnter = true;\n        },\n        sidebarMouseLeave() {\n            if (this.reduce) {\n                this.$store.commit('UPDATE_SIDEBAR_ITEMS_MIN', true);\n            }\n            this.isMouseEnter = false;\n        },\n        toggleReduce(val) {\n            this.reduceButton = val;\n            this.setSidebarWidth();\n        },\n        handleWindowResize(event) {\n            this.windowWidth = event.currentTarget.innerWidth;\n            this.setSidebarWidth();\n        },\n        setSidebarWidth() {\n            if (this.windowWidth < 1200) {\n                if(this.windowWidth < 992) this.$store.commit('UPDATE_WINDOW_BREAKPOINT', 'md')\n                else this.$store.commit('UPDATE_WINDOW_BREAKPOINT', 'lg')\n\n                this.$store.commit('TOGGLE_IS_SIDEBAR_ACTIVE', false)\n                if (this.reduceButton) this.reduce = false;\n                // this.reduceButton = false;\n                this.showCloseButton = true;\n                this.clickNotClose = false;\n                this.$store.dispatch('updateSidebarWidth', 'no-sidebar')\n                this.$store.commit('UPDATE_SIDEBAR_ITEMS_MIN', false)\n            }\n            else {\n                this.$store.commit('UPDATE_WINDOW_BREAKPOINT', 'xl')\n                if (this.reduceButton) this.reduce = true;\n                else this.reduce = false;\n\n                this.$store.commit('TOGGLE_IS_SIDEBAR_ACTIVE', true)\n                if (this.reduceButton && !this.isMouseEnter) this.$store.commit('UPDATE_SIDEBAR_ITEMS_MIN', true)\n                else this.$store.commit('UPDATE_SIDEBAR_ITEMS_MIN', false)\n\n                this.clickNotClose = true;\n                this.showCloseButton = false;\n                if (this.reduceSidebar)\n                    this.$store.dispatch('updateSidebarWidth', 'reduced')\n                else\n                    this.$store.dispatch('updateSidebarWidth', 'default')\n            }\n        },\n        psSectionScroll() {\n            if(this.$refs.mainSidebarPs.$el.scrollTop > 0) this.showShadowBottom = true;\n            else this.showShadowBottom = false;\n        },\n    },\n    components: {\n        VxSidebarGroup,\n        VxSidebarItem,\n        VuePerfectScrollbar,\n    },\n    mounted() {\n        this.$nextTick(() => {\n            window.addEventListener('resize', this.handleWindowResize);\n        });\n        this.setSidebarWidth();\n    },\n    beforeDestroy() {\n        window.removeEventListener('resize', this.handleWindowResize);\n    },\n}\n</script>\n\n<style lang=\"scss\">\n@import \"@/assets/scss/vuesax/components/vxSidebar.scss\"\n</style>\n"],"sourceRoot":"src/layouts/churcha2z/components/vx-sidebar"}]}