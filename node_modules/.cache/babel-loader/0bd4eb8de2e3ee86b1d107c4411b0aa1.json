{"remainingRequest":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js!C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\xampp\\htdocs\\GIT\\server-side\\src\\store\\email\\moduleEmailGetters.js","dependencies":[{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\src\\store\\email\\moduleEmailGetters.js","mtime":1567376724671},{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1567428497170},{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1567428476521},{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\eslint-loader\\index.js","mtime":1567522965794}],"contextDependencies":[],"result":["import \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.array.filter\";\n\n/*=========================================================================================\r\n  File Name: moduleEmailGetters.js\r\n  Description: Email Module Getters\r\n  ----------------------------------------------------------------------------------------\r\n  Item Name: Vuesax Admin - VueJS Dashboard Admin Template\r\n  Author: Pixinvent\r\n  Author URL: http://www.themeforest.net/user/pixinvent\r\n==========================================================================================*/\nexport default {\n  filteredMails: function filteredMails(state) {\n    return state.mails.filter(function (mail) {\n      if (state.mail_filter == 'inbox') return mail.mailType == \"inboxed\" && (mail.sender_name.toLowerCase().includes(state.mailSearchQuery.toLowerCase()) || mail.sender.toLowerCase().includes(state.mailSearchQuery.toLowerCase()) || mail.subject.toLowerCase().includes(state.mailSearchQuery.toLowerCase()) || mail.message.toLowerCase().includes(state.mailSearchQuery.toLowerCase()));\n      if (state.mail_filter == 'sent') return mail.mailType == \"sent\" && (mail.sender_name.toLowerCase().includes(state.mailSearchQuery.toLowerCase()) || mail.sender.toLowerCase().includes(state.mailSearchQuery.toLowerCase()) || mail.subject.toLowerCase().includes(state.mailSearchQuery.toLowerCase()) || mail.message.toLowerCase().includes(state.mailSearchQuery.toLowerCase()));\n      if (state.mail_filter == 'draft') return mail.mailType == \"drafted\" && (mail.sender_name.toLowerCase().includes(state.mailSearchQuery.toLowerCase()) || mail.sender.toLowerCase().includes(state.mailSearchQuery.toLowerCase()) || mail.subject.toLowerCase().includes(state.mailSearchQuery.toLowerCase()) || mail.message.toLowerCase().includes(state.mailSearchQuery.toLowerCase()));\n      if (state.mail_filter == 'starred') return mail.isStarred && mail.mailType != \"trashed\" && (mail.sender_name.toLowerCase().includes(state.mailSearchQuery.toLowerCase()) || mail.sender.toLowerCase().includes(state.mailSearchQuery.toLowerCase()) || mail.subject.toLowerCase().includes(state.mailSearchQuery.toLowerCase()) || mail.message.toLowerCase().includes(state.mailSearchQuery.toLowerCase()));\n      if (state.mail_filter == 'trash') return mail.mailType == \"trashed\" && (mail.sender_name.toLowerCase().includes(state.mailSearchQuery.toLowerCase()) || mail.sender.toLowerCase().includes(state.mailSearchQuery.toLowerCase()) || mail.subject.toLowerCase().includes(state.mailSearchQuery.toLowerCase()) || mail.message.toLowerCase().includes(state.mailSearchQuery.toLowerCase()));\n      if (state.mail_filter == 'spam') return mail.mailType == \"spam\" && (mail.sender_name.toLowerCase().includes(state.mailSearchQuery.toLowerCase()) || mail.sender.toLowerCase().includes(state.mailSearchQuery.toLowerCase()) || mail.subject.toLowerCase().includes(state.mailSearchQuery.toLowerCase()) || mail.message.toLowerCase().includes(state.mailSearchQuery.toLowerCase()));\n      if (state.mail_filter == 'personal') return mail.mailType != \"trashed\" && mail.labels.includes('personal') && (mail.sender_name.toLowerCase().includes(state.mailSearchQuery.toLowerCase()) || mail.sender.toLowerCase().includes(state.mailSearchQuery.toLowerCase()) || mail.subject.toLowerCase().includes(state.mailSearchQuery.toLowerCase()) || mail.message.toLowerCase().includes(state.mailSearchQuery.toLowerCase()));\n      if (state.mail_filter == 'company') return mail.mailType != \"trashed\" && mail.labels.includes('company') && (mail.sender_name.toLowerCase().includes(state.mailSearchQuery.toLowerCase()) || mail.sender.toLowerCase().includes(state.mailSearchQuery.toLowerCase()) || mail.subject.toLowerCase().includes(state.mailSearchQuery.toLowerCase()) || mail.message.toLowerCase().includes(state.mailSearchQuery.toLowerCase()));\n      if (state.mail_filter == 'important') return mail.mailType != \"trashed\" && mail.labels.includes('important') && (mail.sender_name.toLowerCase().includes(state.mailSearchQuery.toLowerCase()) || mail.sender.toLowerCase().includes(state.mailSearchQuery.toLowerCase()) || mail.subject.toLowerCase().includes(state.mailSearchQuery.toLowerCase()) || mail.message.toLowerCase().includes(state.mailSearchQuery.toLowerCase()));\n      if (state.mail_filter == 'private') return mail.mailType != \"trashed\" && mail.labels.includes('private') && (mail.sender_name.toLowerCase().includes(state.mailSearchQuery.toLowerCase()) || mail.sender.toLowerCase().includes(state.mailSearchQuery.toLowerCase()) || mail.subject.toLowerCase().includes(state.mailSearchQuery.toLowerCase()) || mail.message.toLowerCase().includes(state.mailSearchQuery.toLowerCase()));\n    }).reverse();\n  },\n  unreadMails: function unreadMails(state) {\n    return function (mailType) {\n      return state.mails.filter(function (mail) {\n        return mail.mailType == mailType && mail.unread;\n      }).length;\n    };\n  },\n  NumdraftMails: function NumdraftMails(state) {\n    return state.mails.filter(function (mail) {\n      return mail.mailType == 'drafted';\n    }).length;\n  },\n  getMail: function getMail(state) {\n    return function (mailId) {\n      return state.mails.filter(function (mail) {\n        return mail.id == mailId;\n      })[0];\n    };\n  }\n};",{"version":3,"sources":["C:\\xampp\\htdocs\\GIT\\server-side\\src\\store\\email\\moduleEmailGetters.js"],"names":["filteredMails","state","mails","filter","mail","mail_filter","mailType","sender_name","toLowerCase","includes","mailSearchQuery","sender","subject","message","isStarred","labels","reverse","unreadMails","unread","length","NumdraftMails","getMail","mailId","id"],"mappings":"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","sourcesContent":["/*=========================================================================================\r\n  File Name: moduleEmailGetters.js\r\n  Description: Email Module Getters\r\n  ----------------------------------------------------------------------------------------\r\n  Item Name: Vuesax Admin - VueJS Dashboard Admin Template\r\n  Author: Pixinvent\r\n  Author URL: http://www.themeforest.net/user/pixinvent\r\n==========================================================================================*/\r\n\r\n\r\nexport default {\r\n    filteredMails: state => state.mails.filter((mail) => {\r\n        if (state.mail_filter == 'inbox') return mail.mailType == \"inboxed\" && ( mail.sender_name.toLowerCase().includes(state.mailSearchQuery.toLowerCase()) || mail.sender.toLowerCase().includes(state.mailSearchQuery.toLowerCase()) || mail.subject.toLowerCase().includes(state.mailSearchQuery.toLowerCase()) || mail.message.toLowerCase().includes(state.mailSearchQuery.toLowerCase()) );\r\n        if (state.mail_filter == 'sent') return mail.mailType == \"sent\" && ( mail.sender_name.toLowerCase().includes(state.mailSearchQuery.toLowerCase()) || mail.sender.toLowerCase().includes(state.mailSearchQuery.toLowerCase()) || mail.subject.toLowerCase().includes(state.mailSearchQuery.toLowerCase()) || mail.message.toLowerCase().includes(state.mailSearchQuery.toLowerCase()) );\r\n        if (state.mail_filter == 'draft') return mail.mailType == \"drafted\" && ( mail.sender_name.toLowerCase().includes(state.mailSearchQuery.toLowerCase()) || mail.sender.toLowerCase().includes(state.mailSearchQuery.toLowerCase()) || mail.subject.toLowerCase().includes(state.mailSearchQuery.toLowerCase()) || mail.message.toLowerCase().includes(state.mailSearchQuery.toLowerCase()) );\r\n        if (state.mail_filter == 'starred') return mail.isStarred && mail.mailType != \"trashed\" && ( mail.sender_name.toLowerCase().includes(state.mailSearchQuery.toLowerCase()) || mail.sender.toLowerCase().includes(state.mailSearchQuery.toLowerCase()) || mail.subject.toLowerCase().includes(state.mailSearchQuery.toLowerCase()) || mail.message.toLowerCase().includes(state.mailSearchQuery.toLowerCase()) );\r\n        if (state.mail_filter == 'trash') return mail.mailType == \"trashed\" && ( mail.sender_name.toLowerCase().includes(state.mailSearchQuery.toLowerCase()) || mail.sender.toLowerCase().includes(state.mailSearchQuery.toLowerCase()) || mail.subject.toLowerCase().includes(state.mailSearchQuery.toLowerCase()) || mail.message.toLowerCase().includes(state.mailSearchQuery.toLowerCase()) );\r\n        if (state.mail_filter == 'spam') return mail.mailType == \"spam\" && ( mail.sender_name.toLowerCase().includes(state.mailSearchQuery.toLowerCase()) || mail.sender.toLowerCase().includes(state.mailSearchQuery.toLowerCase()) || mail.subject.toLowerCase().includes(state.mailSearchQuery.toLowerCase()) || mail.message.toLowerCase().includes(state.mailSearchQuery.toLowerCase()) );\r\n        if (state.mail_filter == 'personal') return mail.mailType != \"trashed\" && mail.labels.includes('personal') && ( mail.sender_name.toLowerCase().includes(state.mailSearchQuery.toLowerCase()) || mail.sender.toLowerCase().includes(state.mailSearchQuery.toLowerCase()) || mail.subject.toLowerCase().includes(state.mailSearchQuery.toLowerCase()) || mail.message.toLowerCase().includes(state.mailSearchQuery.toLowerCase()) );\r\n        if (state.mail_filter == 'company') return mail.mailType != \"trashed\" && mail.labels.includes('company') && ( mail.sender_name.toLowerCase().includes(state.mailSearchQuery.toLowerCase()) || mail.sender.toLowerCase().includes(state.mailSearchQuery.toLowerCase()) || mail.subject.toLowerCase().includes(state.mailSearchQuery.toLowerCase()) || mail.message.toLowerCase().includes(state.mailSearchQuery.toLowerCase()) );\r\n        if (state.mail_filter == 'important') return mail.mailType != \"trashed\" && mail.labels.includes('important') && ( mail.sender_name.toLowerCase().includes(state.mailSearchQuery.toLowerCase()) || mail.sender.toLowerCase().includes(state.mailSearchQuery.toLowerCase()) || mail.subject.toLowerCase().includes(state.mailSearchQuery.toLowerCase()) || mail.message.toLowerCase().includes(state.mailSearchQuery.toLowerCase()) );\r\n        if (state.mail_filter == 'private') return mail.mailType != \"trashed\" && mail.labels.includes('private') && ( mail.sender_name.toLowerCase().includes(state.mailSearchQuery.toLowerCase()) || mail.sender.toLowerCase().includes(state.mailSearchQuery.toLowerCase()) || mail.subject.toLowerCase().includes(state.mailSearchQuery.toLowerCase()) || mail.message.toLowerCase().includes(state.mailSearchQuery.toLowerCase()) );\r\n    }).reverse(),\r\n    unreadMails: state => (mailType) => state.mails.filter((mail) => mail.mailType == mailType && mail.unread).length,\r\n    NumdraftMails: state => state.mails.filter((mail) => mail.mailType == 'drafted').length,\r\n    getMail: state => (mailId) => state.mails.filter((mail) => mail.id == mailId)[0],\r\n}"]}]}