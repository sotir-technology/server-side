{"remainingRequest":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js!C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xampp\\htdocs\\GIT\\server-side\\src\\views\\apps\\todo\\TodoAddNew.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\src\\views\\apps\\todo\\TodoAddNew.vue","mtime":1567376724908},{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1567428497170},{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1567428476521},{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1567428497170},{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\vue-loader\\lib\\index.js","mtime":1567428708565}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      activePrompt: false,\n      // task fields\n      title: '',\n      desc: '',\n      isDone: false,\n      isImportant: false,\n      isStarred: false,\n      tags: [],\n      // task obj\n      taskObj: {}\n    };\n  },\n  computed: {\n    todoArrayLength: function todoArrayLength() {\n      return this.$store.getters['todo/todoArrayLength'];\n    },\n    todoTags: function todoTags() {\n      return this.$store.state.todo.todoTags;\n    },\n    validateForm: function validateForm() {\n      return !this.errors.any() && this.title != '';\n    }\n  },\n  methods: {\n    addTodo: function addTodo() {\n      // update todo in store and clear all fields in dialog\n      var newId = this.todoArrayLength;\n      this.taskObj.id = newId;\n      this.taskObj.title = this.title;\n      this.taskObj.desc = this.desc;\n      this.taskObj.isDone = this.isDone;\n      this.taskObj.isImportant = this.isImportant;\n      this.taskObj.isStarred = this.isStarred;\n      this.taskObj.tags = this.tags;\n      this.taskObj.isTrashed = false;\n      this.$store.dispatch('todo/addTodo', this.taskObj);\n      this.clearFields();\n    },\n    clearFields: function clearFields() {\n      // clear all fileds in todo\n      this.title = \"\";\n      this.desc = \"\";\n      this.isDone = false;\n      this.isImportant = false;\n      this.isStarred = false;\n      this.tags = [];\n    },\n    submitTodo: function submitTodo() {\n      var _this = this;\n\n      this.$validator.validateAll().then(function (result) {\n        if (result) _this.addTodo();\n      });\n    }\n  }\n};",{"version":3,"sources":["TodoAddNew.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2DA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,YAAA,EAAA,KADA;AAGA;AACA,MAAA,KAAA,EAAA,EAJA;AAKA,MAAA,IAAA,EAAA,EALA;AAMA,MAAA,MAAA,EAAA,KANA;AAOA,MAAA,WAAA,EAAA,KAPA;AAQA,MAAA,SAAA,EAAA,KARA;AASA,MAAA,IAAA,EAAA,EATA;AAWA;AACA,MAAA,OAAA,EAAA;AAZA,KAAA;AAcA,GAhBA;AAiBA,EAAA,QAAA,EAAA;AACA,IAAA,eADA,6BACA;AACA,aAAA,KAAA,MAAA,CAAA,OAAA,CAAA,sBAAA,CAAA;AACA,KAHA;AAIA,IAAA,QAJA,sBAIA;AACA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,IAAA,CAAA,QAAA;AACA,KANA;AAOA,IAAA,YAPA,0BAOA;AACA,aAAA,CAAA,KAAA,MAAA,CAAA,GAAA,EAAA,IAAA,KAAA,KAAA,IAAA,EAAA;AACA;AATA,GAjBA;AA4BA,EAAA,OAAA,EAAA;AACA,IAAA,OADA,qBACA;AACA;AACA,UAAA,KAAA,GAAA,KAAA,eAAA;AACA,WAAA,OAAA,CAAA,EAAA,GAAA,KAAA;AACA,WAAA,OAAA,CAAA,KAAA,GAAA,KAAA,KAAA;AACA,WAAA,OAAA,CAAA,IAAA,GAAA,KAAA,IAAA;AACA,WAAA,OAAA,CAAA,MAAA,GAAA,KAAA,MAAA;AACA,WAAA,OAAA,CAAA,WAAA,GAAA,KAAA,WAAA;AACA,WAAA,OAAA,CAAA,SAAA,GAAA,KAAA,SAAA;AACA,WAAA,OAAA,CAAA,IAAA,GAAA,KAAA,IAAA;AACA,WAAA,OAAA,CAAA,SAAA,GAAA,KAAA;AAEA,WAAA,MAAA,CAAA,QAAA,CAAA,cAAA,EAAA,KAAA,OAAA;AACA,WAAA,WAAA;AACA,KAfA;AAgBA,IAAA,WAhBA,yBAgBA;AACA;AACA,WAAA,KAAA,GAAA,EAAA;AACA,WAAA,IAAA,GAAA,EAAA;AACA,WAAA,MAAA,GAAA,KAAA;AACA,WAAA,WAAA,GAAA,KAAA;AACA,WAAA,SAAA,GAAA,KAAA;AACA,WAAA,IAAA,GAAA,EAAA;AACA,KAxBA;AAyBA,IAAA,UAzBA,wBAyBA;AAAA;;AACA,WAAA,UAAA,CAAA,WAAA,GAAA,IAAA,CAAA,UAAA,MAAA,EAAA;AACA,YAAA,MAAA,EAAA,KAAA,CAAA,OAAA;AACA,OAFA;AAGA;AA7BA;AA5BA,CAAA","sourcesContent":["<!-- =========================================================================================\r\n    File Name: TodoAddNew.vue\r\n    Description: Add new todo component\r\n    ----------------------------------------------------------------------------------------\r\n    Item Name: Vuesax Admin - VueJS Dashboard Admin Template\r\n      Author: Pixinvent\r\n    Author URL: http://www.themeforest.net/user/pixinvent\r\n========================================================================================== -->\r\n\r\n\r\n<template>\r\n    <div class=\"px-6 pb-2 pt-6\">\r\n    <vs-button @click=\"activePrompt = true\" class=\"w-full\">Add Task</vs-button>\r\n    <vs-prompt\r\n        vs-title=\"Add Task\"\r\n        vs-accept-text= \"Add Task\"\r\n        vs-button-cancel = \"border\"\r\n        @vs-cancel=\"clearFields\"\r\n        @vs-accept=\"submitTodo\"\r\n        @vs-close=\"clearFields\"\r\n        :vs-is-valid=\"validateForm\"\r\n        :vs-active.sync=\"activePrompt\">\r\n        <div>\r\n            <form>\r\n                <div class=\"vx-row\">\r\n\r\n                    <div class=\"vx-col ml-auto flex\">\r\n                        <feather-icon icon=\"InfoIcon\" class=\"cursor-pointer\" :svgClasses=\"[{'text-success stroke-current': isImportant}, 'w-5', 'h-5 mr-4']\" @click.prevent=\"isImportant = !isImportant\"></feather-icon>\r\n\r\n                        <feather-icon icon=\"StarIcon\" class=\"cursor-pointer\" :svgClasses=\"[{'text-warning stroke-current': isStarred}, 'w-5', 'h-5 mr-4']\" @click.prevent=\"isStarred = !isStarred\"></feather-icon>\r\n\r\n                        <vs-dropdown vs-custom-content>\r\n\r\n                            <feather-icon icon=\"TagIcon\" svgClasses=\"h-5 w-5\" @click.prevent></feather-icon>\r\n                            <!-- <vs-button radius color=\"success\" type=\"flat\" iconPack=\"feather\" icon=\"icon-tag\" @click.prevent></vs-button> -->\r\n\r\n                            <vs-dropdown-menu style=\"z-index: 200001\">\r\n                                    <vs-dropdown-item v-for=\"(tag, index) in todoTags\" :key=\"index\">\r\n                                        <vs-checkbox @click.stop :vs-value=\"tag.value\" v-model=\"tags\">{{ tag.text }}</vs-checkbox>\r\n                                    </vs-dropdown-item>\r\n                            </vs-dropdown-menu>\r\n                        </vs-dropdown>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"vx-row\">\r\n                    <div class=\"vx-col w-full\">\r\n                        <vs-input v-validate=\"'required'\" name=\"title\" class=\"w-full mb-4 mt-5\" placeholder=\"Title\" v-model=\"title\" :color=\"validateForm ? 'success' : 'danger'\" />\r\n                        <vs-textarea rows=\"5\" label=\"Add description\" v-model=\"desc\" />\r\n                    </div>  \r\n                </div>\r\n\r\n            </form>\r\n        </div>\r\n    </vs-prompt>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    data() {\r\n        return {\r\n            activePrompt: false,\r\n\r\n            // task fields\r\n            title: '',\r\n            desc: '',\r\n            isDone: false,\r\n            isImportant: false,\r\n            isStarred: false,\r\n            tags: [],\r\n\r\n            // task obj\r\n            taskObj: {},\r\n        }\r\n    },\r\n    computed: {\r\n        todoArrayLength() {\r\n            return this.$store.getters['todo/todoArrayLength'];\r\n        },\r\n        todoTags() {\r\n            return this.$store.state.todo.todoTags;\r\n        },\r\n        validateForm() {\r\n            return !this.errors.any() && this.title != '';\r\n        }\r\n    },\r\n    methods: {\r\n        addTodo() {\r\n            // update todo in store and clear all fields in dialog\r\n            const newId = this.todoArrayLength;\r\n            this.taskObj.id = newId;\r\n            this.taskObj.title = this.title;\r\n            this.taskObj.desc = this.desc;\r\n            this.taskObj.isDone = this.isDone;\r\n            this.taskObj.isImportant = this.isImportant;\r\n            this.taskObj.isStarred = this.isStarred;\r\n            this.taskObj.tags = this.tags;\r\n            this.taskObj.isTrashed = false;\r\n\r\n            this.$store.dispatch('todo/addTodo', this.taskObj);\r\n            this.clearFields();\r\n        },\r\n        clearFields() {\r\n            // clear all fileds in todo\r\n            this.title = \"\";\r\n            this.desc = \"\";\r\n            this.isDone = false;\r\n            this.isImportant = false;\r\n            this.isStarred = false;\r\n            this.tags = [];\r\n        },\r\n        submitTodo() {\r\n            this.$validator.validateAll().then(result => {\r\n                if (result) this.addTodo();\r\n            })\r\n        }\r\n    },\r\n}\r\n</script>"],"sourceRoot":"src/views/apps/todo"}]}