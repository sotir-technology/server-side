{"remainingRequest":"/Users/revelation/VueJS/WnC_Apps/wc_admin/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!/Users/revelation/VueJS/WnC_Apps/wc_admin/node_modules/eslint-loader/index.js??ref--13-0!/Users/revelation/VueJS/WnC_Apps/wc_admin/src/store/auth/moduleAuthActions.js","dependencies":[{"path":"/Users/revelation/VueJS/WnC_Apps/wc_admin/src/store/auth/moduleAuthActions.js","mtime":1557525828000},{"path":"/Users/revelation/VueJS/WnC_Apps/wc_admin/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/revelation/VueJS/WnC_Apps/wc_admin/node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/revelation/VueJS/WnC_Apps/wc_admin/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["/*=========================================================================================\r\n  File Name: moduleAuthActions.js\r\n  Description: Auth Module Actions\r\n  ----------------------------------------------------------------------------------------\r\n  Item Name: Vuesax Admin - VueJS Dashboard Admin Template\r\n  Author: Pixinvent\r\n  Author URL: http://www.themeforest.net/user/pixinvent\r\n==========================================================================================*/\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport router from '@/router';\nexport default {\n  loginAttempt: function loginAttempt(_ref, payload) {\n    var dispatch = _ref.dispatch;\n    var newPayload = {\n      userDetails: payload.userDetails,\n      notify: payload.notify\n    };\n\n    if (!payload.checkbox_remember_me) {\n      // localStorage.setItem('remember_me', false);\n      firebase.auth().setPersistence(firebase.auth.Auth.Persistence.SESSION).then(function () {\n        dispatch('login', newPayload);\n      }).catch(function (err) {\n        payload.notify({\n          time: 2500,\n          title: 'Error',\n          text: err.message,\n          iconPack: 'feather',\n          icon: 'icon-alert-circle',\n          color: 'danger'\n        });\n      });\n    } else {\n      // localStorage.setItem('remember_me', true);\n      dispatch('login', newPayload);\n    }\n  },\n  login: function login(_ref2, payload) {\n    var commit = _ref2.commit,\n        state = _ref2.state;\n\n    if (state.isUserLoggedIn()) {\n      payload.notify({\n        title: 'Login Attempt',\n        text: 'You are already logged in!',\n        iconPack: 'feather',\n        icon: 'icon-alert-circle',\n        color: 'warning'\n      });\n      return false;\n    }\n\n    firebase.auth().signInWithEmailAndPassword(payload.userDetails.email, payload.userDetails.password).then(function (result) {\n      router.push(router.currentRoute.query.to || '/');\n      commit('UPDATE_AUTHENTICATED_USER', result.user.providerData[0]);\n    }, function (err) {\n      payload.notify({\n        time: 2500,\n        title: 'Error',\n        text: err.message,\n        iconPack: 'feather',\n        icon: 'icon-alert-circle',\n        color: 'danger'\n      });\n    });\n  },\n  // Google Login\n  loginWithGoogle: function loginWithGoogle(_ref3, payload) {\n    var commit = _ref3.commit,\n        state = _ref3.state;\n\n    if (state.isUserLoggedIn()) {\n      payload.notify({\n        title: 'Login Attempt',\n        text: 'You are already logged in!',\n        iconPack: 'feather',\n        icon: 'icon-alert-circle',\n        color: 'warning'\n      });\n      return false;\n    }\n\n    var provider = new firebase.auth.GoogleAuthProvider();\n    firebase.auth().signInWithPopup(provider).then(function (result) {\n      router.push(router.currentRoute.query.to || '/');\n      commit('UPDATE_AUTHENTICATED_USER', result.user.providerData[0]);\n    }).catch(function (err) {\n      payload.notify({\n        time: 2500,\n        title: 'Error',\n        text: err.message,\n        iconPack: 'feather',\n        icon: 'icon-alert-circle',\n        color: 'danger'\n      });\n    });\n    firebase.auth().onAuthStateChanged(function (user) {\n      if (user) {\n        user.updateProfile({\n          roles: ['admin']\n        }).then(function () {\n          // Profile updated successfully!\n          // Login user\n          console.log('success'); // this.$vs.notify({\n          //     title: 'Success',\n          //     text: \"done\",\n          //     iconPack: 'feather',\n          //     icon: 'icon-check',\n          //     color: 'success'\n          // });\n        }, function (error) {\n          console.log(\"uiiiiiiiii\");\n          console.log(error.message); // this.$vs.notify({\n          //     title: 'Error',\n          //     text: error.message,\n          //     iconPack: 'feather',\n          //     icon: 'icon-alert-circle',\n          //     color: 'danger'\n          // });\n        });\n      }\n    });\n  },\n  // Facebook Login\n  loginWithFacebook: function loginWithFacebook(_ref4, payload) {\n    var commit = _ref4.commit,\n        state = _ref4.state;\n\n    if (state.isUserLoggedIn()) {\n      payload.notify({\n        title: 'Login Attempt',\n        text: 'You are already logged in!',\n        iconPack: 'feather',\n        icon: 'icon-alert-circle',\n        color: 'warning'\n      });\n      return false;\n    }\n\n    var provider = new firebase.auth.FacebookAuthProvider();\n    firebase.auth().signInWithPopup(provider).then(function (result) {\n      router.push(router.currentRoute.query.to || '/');\n      commit('UPDATE_AUTHENTICATED_USER', result.user.providerData[0]);\n    }).catch(function (err) {\n      payload.notify({\n        time: 2500,\n        title: 'Error',\n        text: err.message,\n        iconPack: 'feather',\n        icon: 'icon-alert-circle',\n        color: 'danger'\n      });\n    });\n  },\n  // Twitter Login\n  loginWithTwitter: function loginWithTwitter(_ref5, payload) {\n    var commit = _ref5.commit,\n        state = _ref5.state;\n\n    if (state.isUserLoggedIn()) {\n      payload.notify({\n        title: 'Login Attempt',\n        text: 'You are already logged in!',\n        iconPack: 'feather',\n        icon: 'icon-alert-circle',\n        color: 'warning'\n      });\n      return false;\n    }\n\n    var provider = new firebase.auth.TwitterAuthProvider();\n    firebase.auth().signInWithPopup(provider).then(function (result) {\n      router.push(router.currentRoute.query.to || '/');\n      commit('UPDATE_AUTHENTICATED_USER', result.user.providerData[0]);\n    }).catch(function (err) {\n      payload.notify({\n        time: 2500,\n        title: 'Error',\n        text: err.message,\n        iconPack: 'feather',\n        icon: 'icon-alert-circle',\n        color: 'danger'\n      });\n    });\n  },\n  // Github Login\n  loginWithGithub: function loginWithGithub(_ref6, payload) {\n    var commit = _ref6.commit,\n        state = _ref6.state;\n\n    if (state.isUserLoggedIn()) {\n      payload.notify({\n        title: 'Login Attempt',\n        text: 'You are already logged in!',\n        iconPack: 'feather',\n        icon: 'icon-alert-circle',\n        color: 'warning'\n      });\n      return false;\n    }\n\n    var provider = new firebase.auth.GithubAuthProvider();\n    firebase.auth().signInWithPopup(provider).then(function (result) {\n      router.push(router.currentRoute.query.to || '/');\n      commit('UPDATE_AUTHENTICATED_USER', result.user.providerData[0]);\n    }).catch(function (err) {\n      payload.notify({\n        time: 2500,\n        title: 'Error',\n        text: err.message,\n        iconPack: 'feather',\n        icon: 'icon-alert-circle',\n        color: 'danger'\n      });\n    });\n  },\n  updateAuthenticatedUser: function updateAuthenticatedUser(_ref7, payload) {\n    var commit = _ref7.commit;\n    commit('UPDATE_AUTHENTICATED_USER', payload);\n  }\n};",{"version":3,"sources":["/Users/revelation/VueJS/WnC_Apps/wc_admin/src/store/auth/moduleAuthActions.js"],"names":["firebase","router","loginAttempt","payload","dispatch","newPayload","userDetails","notify","checkbox_remember_me","auth","setPersistence","Auth","Persistence","SESSION","then","catch","err","time","title","text","message","iconPack","icon","color","login","commit","state","isUserLoggedIn","signInWithEmailAndPassword","email","password","result","push","currentRoute","query","to","user","providerData","loginWithGoogle","provider","GoogleAuthProvider","signInWithPopup","onAuthStateChanged","updateProfile","roles","console","log","error","loginWithFacebook","FacebookAuthProvider","loginWithTwitter","TwitterAuthProvider","loginWithGithub","GithubAuthProvider","updateAuthenticatedUser"],"mappings":"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","sourcesContent":["/*=========================================================================================\r\n  File Name: moduleAuthActions.js\r\n  Description: Auth Module Actions\r\n  ----------------------------------------------------------------------------------------\r\n  Item Name: Vuesax Admin - VueJS Dashboard Admin Template\r\n  Author: Pixinvent\r\n  Author URL: http://www.themeforest.net/user/pixinvent\r\n==========================================================================================*/\r\n\r\n\r\nimport firebase from 'firebase/app'\r\nimport 'firebase/auth'\r\nimport router from '@/router'\r\n\r\nexport default {\r\n    loginAttempt({ dispatch }, payload) {\r\n        const newPayload = {\r\n            userDetails: payload.userDetails,\r\n            notify: payload.notify\r\n        }\r\n        if (!payload.checkbox_remember_me) {\r\n            // localStorage.setItem('remember_me', false);\r\n            firebase.auth().setPersistence(firebase.auth.Auth.Persistence.SESSION)\r\n                .then(function() {\r\n                    dispatch('login', newPayload)\r\n                })\r\n                .catch(function(err) {\r\n                    payload.notify({\r\n                        time: 2500,\r\n                        title: 'Error',\r\n                        text: err.message,\r\n                        iconPack: 'feather',\r\n                        icon: 'icon-alert-circle',\r\n                        color: 'danger'\r\n                    });\r\n                });\r\n        } else {\r\n            // localStorage.setItem('remember_me', true);\r\n            dispatch('login', newPayload)\r\n        }\r\n    },\r\n    login({ commit, state }, payload) {\r\n        if (state.isUserLoggedIn()) {\r\n            payload.notify({\r\n                title: 'Login Attempt',\r\n                text: 'You are already logged in!',\r\n                iconPack: 'feather',\r\n                icon: 'icon-alert-circle',\r\n                color: 'warning'\r\n            });\r\n            return false\r\n        }\r\n\r\n        firebase.auth().signInWithEmailAndPassword(payload.userDetails.email, payload.userDetails.password)\r\n            .then((result) => {\r\n                router.push(router.currentRoute.query.to || '/');\r\n                commit('UPDATE_AUTHENTICATED_USER', result.user.providerData[0])\r\n            }, (err) => {\r\n                payload.notify({\r\n                    time: 2500,\r\n                    title: 'Error',\r\n                    text: err.message,\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-alert-circle',\r\n                    color: 'danger'\r\n                });\r\n            })\r\n    },\r\n\r\n    // Google Login\r\n    loginWithGoogle({commit, state}, payload) {\r\n        if (state.isUserLoggedIn()) {\r\n            payload.notify({\r\n                title: 'Login Attempt',\r\n                text: 'You are already logged in!',\r\n                iconPack: 'feather',\r\n                icon: 'icon-alert-circle',\r\n                color: 'warning'\r\n            });\r\n            return false\r\n        }\r\n        const provider = new firebase.auth.GoogleAuthProvider();\r\n\r\n        firebase.auth().signInWithPopup(provider)\r\n            .then((result) => {\r\n                router.push(router.currentRoute.query.to || '/');\r\n                commit('UPDATE_AUTHENTICATED_USER', result.user.providerData[0])\r\n            }).catch((err) => {\r\n                payload.notify({\r\n                    time: 2500,\r\n                    title: 'Error',\r\n                    text: err.message,\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-alert-circle',\r\n                    color: 'danger'\r\n                });\r\n            })\r\n        firebase.auth().onAuthStateChanged(function(user) {\r\n            if (user) {\r\n                user.updateProfile({\r\n                    roles: ['admin'],\r\n                }).then(function() {\r\n                    // Profile updated successfully!\r\n                    // Login user\r\n                    console.log('success');\r\n                    // this.$vs.notify({\r\n                    //     title: 'Success',\r\n                    //     text: \"done\",\r\n                    //     iconPack: 'feather',\r\n                    //     icon: 'icon-check',\r\n                    //     color: 'success'\r\n                    // });\r\n                }, function(error) {\r\n                    console.log(\"uiiiiiiiii\");\r\n                    console.log(error.message);\r\n                    // this.$vs.notify({\r\n                    //     title: 'Error',\r\n                    //     text: error.message,\r\n                    //     iconPack: 'feather',\r\n                    //     icon: 'icon-alert-circle',\r\n                    //     color: 'danger'\r\n                    // });\r\n                });\r\n\r\n            }\r\n        });\r\n    },\r\n\r\n    // Facebook Login\r\n    loginWithFacebook({commit, state}, payload) {\r\n        if (state.isUserLoggedIn()) {\r\n            payload.notify({\r\n                title: 'Login Attempt',\r\n                text: 'You are already logged in!',\r\n                iconPack: 'feather',\r\n                icon: 'icon-alert-circle',\r\n                color: 'warning'\r\n            });\r\n            return false\r\n        }\r\n        const provider = new firebase.auth.FacebookAuthProvider();\r\n\r\n        firebase.auth().signInWithPopup(provider)\r\n            .then((result) => {\r\n                router.push(router.currentRoute.query.to || '/');\r\n                commit('UPDATE_AUTHENTICATED_USER', result.user.providerData[0])\r\n            }).catch((err) => {\r\n                payload.notify({\r\n                    time: 2500,\r\n                    title: 'Error',\r\n                    text: err.message,\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-alert-circle',\r\n                    color: 'danger'\r\n                });\r\n            })\r\n    },\r\n\r\n    // Twitter Login\r\n    loginWithTwitter({commit, state}, payload) {\r\n        if (state.isUserLoggedIn()) {\r\n            payload.notify({\r\n                title: 'Login Attempt',\r\n                text: 'You are already logged in!',\r\n                iconPack: 'feather',\r\n                icon: 'icon-alert-circle',\r\n                color: 'warning'\r\n            });\r\n            return false\r\n        }\r\n        const provider = new firebase.auth.TwitterAuthProvider();\r\n\r\n        firebase.auth().signInWithPopup(provider)\r\n            .then((result) => {\r\n                router.push(router.currentRoute.query.to || '/');\r\n                commit('UPDATE_AUTHENTICATED_USER', result.user.providerData[0])\r\n            }).catch((err) => {\r\n                payload.notify({\r\n                    time: 2500,\r\n                    title: 'Error',\r\n                    text: err.message,\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-alert-circle',\r\n                    color: 'danger'\r\n                });\r\n            })\r\n    },\r\n\r\n    // Github Login\r\n    loginWithGithub({commit, state}, payload) {\r\n        if (state.isUserLoggedIn()) {\r\n            payload.notify({\r\n                title: 'Login Attempt',\r\n                text: 'You are already logged in!',\r\n                iconPack: 'feather',\r\n                icon: 'icon-alert-circle',\r\n                color: 'warning'\r\n            });\r\n            return false\r\n        }\r\n        const provider = new firebase.auth.GithubAuthProvider();\r\n\r\n        firebase.auth().signInWithPopup(provider)\r\n            .then((result) => {\r\n                router.push(router.currentRoute.query.to || '/');\r\n                commit('UPDATE_AUTHENTICATED_USER', result.user.providerData[0])\r\n            }).catch((err) => {\r\n                payload.notify({\r\n                    time: 2500,\r\n                    title: 'Error',\r\n                    text: err.message,\r\n                    iconPack: 'feather',\r\n                    icon: 'icon-alert-circle',\r\n                    color: 'danger'\r\n                });\r\n            })\r\n    },\r\n    updateAuthenticatedUser({ commit }, payload) {\r\n        commit('UPDATE_AUTHENTICATED_USER', payload)\r\n    }\r\n}\r\n"]}]}