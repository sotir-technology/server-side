{"remainingRequest":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js!C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\xampp\\htdocs\\GIT\\server-side\\src\\views\\forms\\form-elements\\select\\SelectIsSelectedItem.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\src\\views\\forms\\form-elements\\select\\SelectIsSelectedItem.vue","mtime":1567376725587},{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\xampp\\htdocs\\GIT\\server-side\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      select1: 3,\n      options1: [{\n        value: 1,\n        label: 'label 1',\n        selectedText: 'show after select label 1',\n        isSelected: false\n      }, {\n        value: 2,\n        label: 'label 2',\n        selectedText: 'show after select label 2',\n        isSelected: false\n      }, {\n        value: 3,\n        label: 'label 3',\n        selectedText: 'show after select label 3',\n        isSelected: false\n      }]\n    };\n  }\n};",{"version":3,"sources":["SelectIsSelectedItem.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+EA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,OAAA,EAAA,CADA;AAEA,MAAA,QAAA,EAAA,CACA;AAAA,QAAA,KAAA,EAAA,CAAA;AAAA,QAAA,KAAA,EAAA,SAAA;AAAA,QAAA,YAAA,EAAA,2BAAA;AAAA,QAAA,UAAA,EAAA;AAAA,OADA,EAEA;AAAA,QAAA,KAAA,EAAA,CAAA;AAAA,QAAA,KAAA,EAAA,SAAA;AAAA,QAAA,YAAA,EAAA,2BAAA;AAAA,QAAA,UAAA,EAAA;AAAA,OAFA,EAGA;AAAA,QAAA,KAAA,EAAA,CAAA;AAAA,QAAA,KAAA,EAAA,SAAA;AAAA,QAAA,YAAA,EAAA,2BAAA;AAAA,QAAA,UAAA,EAAA;AAAA,OAHA;AAFA,KAAA;AAQA;AAVA,CAAA","sourcesContent":["<!-- =========================================================================================\r\n\tFile Name: SelectIsSelectedItem.vue\r\n\tDescription: Display/Validate on selecting option\r\n\t----------------------------------------------------------------------------------------\r\n\tItem Name: Vuesax Admin - VueJS Dashboard Admin Template\r\n\tAuthor: Pixinvent\r\n\tAuthor URL: http://www.themeforest.net/user/pixinvent\r\n========================================================================================== -->\r\n\r\n\r\n<template>\r\n\t<vx-card title=\"Is Selected Item\" code-toggler>\r\n\t\t\r\n\t\t<p>You can validate if an option is selected with the property <code>is-selected.sync</code> and do with it multiple variants with changing the text of the selected options</p>\r\n\r\n\t\t<div class=\"demo-alignment\">\r\n\t\t\t<vs-select class=\"selectExample\" v-model=\"select1\">\r\n\t\t\t\t<vs-select-item :is-selected.sync=\"item.isSelected\" :key=\"index\" :value=\"item.value\" :text=\"item.isSelected?item.selectedText:item.label\" v-for=\"(item,index) in options1\" />\r\n\t\t\t</vs-select>\r\n\t\t</div>\r\n\r\n\t\t<template slot=\"codeContainer\">\r\n&lt;template lang=&quot;html&quot;&gt;\r\n  &lt;div class=&quot;con-select-example&quot;&gt;\r\n\r\n    &lt;vs-select class=&quot;selectExample&quot; v-model=&quot;select1&quot; &gt;\r\n      &lt;vs-select-item\r\n        :is-selected.sync=&quot;item.isSelected&quot;\r\n        :key=&quot;index&quot;\r\n        :value=&quot;item.value&quot;\r\n        :text=&quot;item.isSelected?item.selectedText:item.label&quot;\r\n        v-for=&quot;(item,index) in options1&quot;\r\n        /&gt;\r\n    &lt;/vs-select&gt;\r\n\r\n  &lt;/div&gt;\r\n&lt;/template&gt;\r\n\r\n&lt;script&gt;\r\nexport default {\r\n  data(){\r\n    return {\r\n      select1:3,\r\n      options1:[\r\n        {value: 1, label: &apos;label 1&apos;, selectedText: &apos;show after select label 1&apos;, isSelected: false },\r\n        {value: 2, label: &apos;label 2&apos;, selectedText: &apos;show after select label 2&apos;, isSelected: false },\r\n        {value: 3, label: &apos;label 3&apos;, selectedText: &apos;show after select label 3&apos;, isSelected: false },\r\n      ],\r\n    }\r\n  }\r\n}\r\n&lt;/script&gt;\r\n\r\n&lt;style&gt;\r\n.selectExample {\r\n  margin: 10px;\r\n}\r\n.con-select-example {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n.con-select .vs-select {\r\n  width: 100%\r\n}\r\n@media (max-width: 550px) {\r\n  .con-select {\r\n    flex-direction: column;\r\n  }\r\n  .con-select .vs-select {\r\n    width: 100%\r\n  }\r\n}\r\n&lt;/style&gt;\r\n\t\t</template>\r\n\t</vx-card>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n\tdata() {\r\n\t\treturn {\r\n\t\t\tselect1: 3,\r\n\t\t\toptions1: [\r\n\t\t\t\t{ value: 1, label: 'label 1', selectedText: 'show after select label 1', isSelected: false },\r\n\t\t\t\t{ value: 2, label: 'label 2', selectedText: 'show after select label 2', isSelected: false },\r\n\t\t\t\t{ value: 3, label: 'label 3', selectedText: 'show after select label 3', isSelected: false },\r\n\t\t\t],\r\n\t\t}\r\n\t},\r\n}\r\n</script>"],"sourceRoot":"src/views/forms/form-elements/select"}]}