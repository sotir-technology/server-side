{"remainingRequest":"C:\\Users\\Message Akunna\\Documents\\workspace\\vuejs\\sotire technology\\new\\server-side\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Message Akunna\\Documents\\workspace\\vuejs\\sotire technology\\new\\server-side\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Message Akunna\\Documents\\workspace\\vuejs\\sotire technology\\new\\server-side\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Message Akunna\\Documents\\workspace\\vuejs\\sotire technology\\new\\server-side\\src\\views\\churcha2z\\apps\\chat\\UserProfile.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Message Akunna\\Documents\\workspace\\vuejs\\sotire technology\\new\\server-side\\src\\views\\churcha2z\\apps\\chat\\UserProfile.vue","mtime":1567769939445},{"path":"C:\\Users\\Message Akunna\\Documents\\workspace\\vuejs\\sotire technology\\new\\server-side\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1567769201670},{"path":"C:\\Users\\Message Akunna\\Documents\\workspace\\vuejs\\sotire technology\\new\\server-side\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1567769166513},{"path":"C:\\Users\\Message Akunna\\Documents\\workspace\\vuejs\\sotire technology\\new\\server-side\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1567769201670},{"path":"C:\\Users\\Message Akunna\\Documents\\workspace\\vuejs\\sotire technology\\new\\server-side\\node_modules\\vue-loader\\lib\\index.js","mtime":1567769589298}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.array.find-index\";\nimport \"core-js/modules/es6.number.constructor\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport VuePerfectScrollbar from 'vue-perfect-scrollbar';\nimport contacts from './contacts.js';\nexport default {\n  props: {\n    userId: {\n      type: Number,\n      required: true\n    },\n    active: {\n      type: Boolean,\n      required: true\n    }\n  },\n  data: function data() {\n    return {\n      contacts: contacts,\n      counterDanger: false,\n      settings: {\n        // perfectscrollbar settings\n        maxScrollbarLength: 60,\n        wheelSpeed: .60\n      }\n    };\n  },\n  computed: {\n    isActiveUser: function isActiveUser() {\n      return this.contactIndex === -1;\n    },\n    activeLocal: {\n      get: function get() {\n        return this.active;\n      },\n      set: function set(value) {\n        this.$emit('closeProfileSidebar', value);\n      }\n    },\n    about: {\n      get: function get() {\n        if (this.contactIndex === -1) {\n          return this.$store.state.AppActiveUser.about;\n        } else {\n          return this.contacts[this.contactIndex].about;\n        }\n      },\n      set: function set(value) {\n        if (value.length > 120) {\n          value = value.substring(0, 120);\n        }\n\n        this.$store.dispatch('chat/updateAboutChat', value);\n      }\n    },\n    contactIndex: function contactIndex() {\n      var _this = this;\n\n      return contacts.findIndex(function (contact) {\n        return contact.id == _this.userId;\n      });\n    },\n    status: {\n      get: function get() {\n        if (this.contactIndex === -1) {\n          return this.$store.state.AppActiveUser.status;\n        }\n      },\n      set: function set(value) {\n        if (this.contactIndex === -1) {\n          this.$store.dispatch('chat/updateStatusChat', value);\n        }\n      }\n    },\n    userImg: function userImg() {\n      if (this.contactIndex === -1) {\n        return this.$store.state.AppActiveUser.img;\n      } else {\n        return this.contacts[this.contactIndex].img;\n      }\n    },\n    userName: function userName() {\n      if (this.contactIndex === -1) {\n        return this.$store.state.AppActiveUser.name;\n      } else {\n        return this.contacts[this.contactIndex].name;\n      }\n    },\n    getStatusColor: function getStatusColor() {\n      var _this2 = this;\n\n      return function (isActiveUser) {\n        var userStatus = _this2.getUserStatus(isActiveUser);\n\n        if (userStatus == \"online\") {\n          return \"success\";\n        } else if (userStatus == \"do not disturb\") {\n          return \"danger\";\n        } else if (userStatus == \"away\") {\n          return \"warning\";\n        } else {\n          return \"grey\";\n        }\n      };\n    }\n  },\n  methods: {\n    getUserStatus: function getUserStatus(isActiveUser) {\n      return isActiveUser ? this.$store.state.AppActiveUser.status : this.contacts[this.contactIndex].status;\n    }\n  },\n  components: {\n    VuePerfectScrollbar: VuePerfectScrollbar\n  }\n};",{"version":3,"sources":["UserProfile.vue"],"names":[],"mappings":"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","sourcesContent":["<!-- =========================================================================================\n    File Name: UserProfile.vue\n    Description: user profile sidebar\n    ----------------------------------------------------------------------------------------\n    Item Name: Vuesax Admin - VueJS Dashboard Admin Template\n      Author: Pixinvent\n    Author URL: http://www.themeforest.net/user/pixinvent\n========================================================================================== -->\n\n<template>\n    <div id=\"parentx-demo-2\">\n\n        <vs-sidebar parent=\"#chat-app\" :position-right=\"!isActiveUser\" :hidden-background=\"false\" v-model=\"activeLocal\" id=\"chat-profile-sidebar\" class=\"items-no-padding\">\n\n            <div class=\"header-sidebar relative flex flex-col p-0\" slot=\"header\">\n                <feather-icon icon=\"XIcon\" svgClasses=\"m-2 cursor-pointer absolute pin-t pin-r\" @click=\"$emit('closeProfileSidebar', false)\"></feather-icon>\n\n\n                <div class=\"relative inline-flex mx-auto mb-5 mt-6\">\n                    <vs-avatar class=\"m-0\" :src=\"require(`@/assets/images/portrait/small/${userImg}`)\" size=\"70px\" />\n                    <div class=\"h-5 w-5 border-white border-2 border-solid rounded-full absolute pin-r pin-b\" :class=\"'bg-' + getStatusColor(isActiveUser)\"></div>\n                </div>\n                <h4 class=\"mr-2 self-center\">{{ userName }}</h4>\n            </div>\n\n            <VuePerfectScrollbar class=\"scroll-area\" :settings=\"settings\">\n            <div class=\"p-8\">\n\n                <h6 class=\"mb-2\" :class=\"{'ml-4': isActiveUser}\">About</h6>\n                <vs-textarea class=\"mb-10\" counter=\"120\" maxlength=\"120\" :counter-danger.sync=\"counterDanger\" v-model=\"about\" rows=\"5\" v-if=\"isActiveUser\" />\n                <p v-else>{{ about }}</p>\n\n                <div class=\"userProfile__status\" v-if=\"isActiveUser\">\n                    <h6 class=\"mb-4\">Status</h6>\n                    <ul>\n                        <li class=\"mb-2\">\n                            <vs-radio v-model=\"status\" vs-value=\"online\" color=\"success\">Active</vs-radio>\n                        </li>\n                        <li class=\"mb-2\">\n                            <vs-radio v-model=\"status\" vs-value=\"do not disturb\" color=\"danger\">Do Not Disturb</vs-radio>\n                        </li>\n                        <li class=\"mb-2\">\n                            <vs-radio v-model=\"status\" vs-value=\"away\" color=\"warning\">Away</vs-radio>\n                        </li>\n                        <li class=\"mb-2\">\n                            <vs-radio v-model=\"status\" vs-value=\"offline\" color=\"grey\">Offline</vs-radio>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n            </VuePerfectScrollbar>\n        </vs-sidebar>\n    </div>\n</template>\n\n<script>\nimport VuePerfectScrollbar from 'vue-perfect-scrollbar'\nimport contacts from './contacts.js'\n\nexport default{\n    props: {\n        userId: {\n            type: Number,\n            required: true,\n        },\n        active: {\n            type: Boolean,\n            required: true,\n        }\n    },\n    data() {\n        return {\n            contacts: contacts,\n            counterDanger: false,\n            settings: { // perfectscrollbar settings\n                maxScrollbarLength: 60,\n                wheelSpeed: .60,\n            },\n        }\n    },\n    computed: {\n        isActiveUser() {\n            return this.contactIndex === -1;\n        },\n        activeLocal: {\n            get() {\n                return this.active\n            },\n            set(value) {\n                this.$emit('closeProfileSidebar', value);\n            }\n        },\n        about: {\n            get() {\n                if(this.contactIndex === -1) {\n                    return this.$store.state.AppActiveUser.about;\n                }else{\n                    return this.contacts[this.contactIndex].about;\n                }\n            },\n            set(value) {\n                if(value.length > 120) {\n                    value = value.substring(0, 120)\n                }\n                this.$store.dispatch('chat/updateAboutChat', value);\n            }\n        },\n        contactIndex() {\n            return contacts.findIndex(contact => contact.id == this.userId);\n        },\n        status: {\n            get() {\n                if(this.contactIndex === -1) {\n                    return this.$store.state.AppActiveUser.status;\n                }\n            },\n            set(value) {\n                if(this.contactIndex === -1) {\n                    this.$store.dispatch('chat/updateStatusChat', value);\n                }\n            }\n        },\n        userImg() {\n            if(this.contactIndex === -1) {\n                return this.$store.state.AppActiveUser.img;\n            }else{\n                return this.contacts[this.contactIndex].img;\n            }\n        },\n        userName() {\n            if(this.contactIndex === -1){\n                return this.$store.state.AppActiveUser.name;\n            }else{\n                return this.contacts[this.contactIndex].name;\n            }\n        },\n        getStatusColor() {\n            return (isActiveUser) => {\n                const userStatus = this.getUserStatus(isActiveUser)\n\n                if(userStatus == \"online\"){\n                    return \"success\"\n                }else if(userStatus == \"do not disturb\"){\n                    return \"danger\"\n                }else if(userStatus == \"away\"){\n                    return \"warning\"\n                }else{\n                    return \"grey\"               \n                }\n            }\n        },\n    },\n    methods: {\n        getUserStatus(isActiveUser) {\n            return (isActiveUser) ? this.$store.state.AppActiveUser.status : this.contacts[this.contactIndex].status;\n        },\n    },\n    components:{\n        VuePerfectScrollbar,\n    }\n}\n</script>"],"sourceRoot":"src/views/churcha2z/apps/chat"}]}